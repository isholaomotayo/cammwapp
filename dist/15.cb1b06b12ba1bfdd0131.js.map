{"version":3,"sources":["webpack:///./components/password_reset_form/password_reset_form.jsx","webpack:///./components/password_reset_form/index.js"],"names":["PasswordResetForm","props","_this","_classCallCheck","this","_defineProperty","_assertThisInitialized","_possibleConstructorReturn","_getPrototypeOf","call","e","preventDefault","password","ReactDOM","findDOMNode","refs","value","length","Constants","MIN_PASSWORD_LENGTH","setState","error","react_default","a","createElement","index_es","id","defaultMessage","values","chars","resetPassword","URLSearchParams","location","search","get","err","message","state","React","Component","className","formClass","onSubmit","handlePasswordReset","siteName","type","name","ref","placeholder","Utils","spellCheck","propTypes","PropTypes","object","isRequired","string","connect","getConfig","SiteName"],"mappings":"y8BAYMA,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,gHAAAK,CAAAC,IACfJ,uEAAAK,CAAAH,KAAAI,EAAAR,GAAAS,KAAAL,KAAMH,MADS,sBAMG,SAACS,GACnBA,EAAEC,iBAEF,IAAMC,EAAWC,IAASC,YAAYZ,EAAKa,KAAKH,UAAUI,OACrDJ,GAAYA,EAASK,OAASC,IAAUC,oBACzCjB,EAAKkB,UACDC,MACIC,EAAAC,EAAAC,cAACC,EAAA,GACGC,GAAG,sBACHC,eAAe,4CACfC,QACIC,MAAOX,IAAUC,0BAQrCjB,EAAKkB,UACDC,MAAO,OAGXS,YACK,IAAIC,gBAAgB7B,EAAKD,MAAM+B,SAASC,QAASC,IAAI,SACtDtB,EACA,WACIV,EAAKkB,UAAUC,MAAO,QAE1B,SAACc,GACGjC,EAAKkB,UAAUC,MAAOc,EAAIC,eAjClClC,EAAKmC,SAHUnC,8OADSoC,IAAMC,4FA2C9B,IAAIlB,EAAQ,KACRjB,KAAKiC,MAAMhB,QACXA,EACIC,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,wBACXlB,EAAAC,EAAAC,cAAA,SAAOgB,UAAU,iBACZpC,KAAKiC,MAAMhB,SAM5B,IAAIoB,EAAY,aAKhB,OAJIpB,IACAoB,GAAa,cAIbnB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,aACXlB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,0BACXlB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACC,EAAA,GACGC,GAAG,sBACHC,eAAe,oBAGvBL,EAAAC,EAAAC,cAAA,QAAMkB,SAAUtC,KAAKuC,qBACjBrB,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACC,EAAA,GACGC,GAAG,sBACHC,eAAe,oDACfC,QACIgB,SAAUxC,KAAKH,MAAM2C,aAIjCtB,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,GACZnB,EAAAC,EAAAC,cAAA,SACIqB,KAAK,WACLL,UAAU,eACVM,KAAK,WACLC,IAAI,WACJC,YAAaC,kBACT,oBACA,YAEJC,WAAW,WAGlB7B,EACDC,EAAAC,EAAAC,cAAA,UACIqB,KAAK,SACLL,UAAU,mBAEVlB,EAAAC,EAAAC,cAACC,EAAA,GACGC,GAAG,uBACHC,eAAe,oCAU/C3B,EAAkBmD,WACdnB,SAAUoB,IAAUC,OAAOC,WAC3BV,SAAUQ,IAAUG,QAGTvD,QC5GAwD,4BATf,SAAyBnB,GAIrB,OACIO,SAJWa,oBAAUpB,GACDqB,WAObF,CAAyBxD","file":"15.cb1b06b12ba1bfdd0131.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {resetPassword} from 'actions/user_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nclass PasswordResetForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    handlePasswordReset = (e) => {\n        e.preventDefault();\n\n        const password = ReactDOM.findDOMNode(this.refs.password).value;\n        if (!password || password.length < Constants.MIN_PASSWORD_LENGTH) {\n            this.setState({\n                error: (\n                    <FormattedMessage\n                        id='password_form.error'\n                        defaultMessage='Please enter at least {chars} characters.'\n                        values={{\n                            chars: Constants.MIN_PASSWORD_LENGTH,\n                        }}\n                    />\n                ),\n            });\n            return;\n        }\n\n        this.setState({\n            error: null,\n        });\n\n        resetPassword(\n            (new URLSearchParams(this.props.location.search)).get('token'),\n            password,\n            () => {\n                this.setState({error: null});\n            },\n            (err) => {\n                this.setState({error: err.message});\n            }\n        );\n    }\n\n    render() {\n        var error = null;\n        if (this.state.error) {\n            error = (\n                <div className='form-group has-error'>\n                    <label className='control-label'>\n                        {this.state.error}\n                    </label>\n                </div>\n            );\n        }\n\n        var formClass = 'form-group';\n        if (error) {\n            formClass += ' has-error';\n        }\n\n        return (\n            <div className='col-sm-12'>\n                <div className='signup-team__container'>\n                    <h3>\n                        <FormattedMessage\n                            id='password_form.title'\n                            defaultMessage='Password Reset'\n                        />\n                    </h3>\n                    <form onSubmit={this.handlePasswordReset}>\n                        <p>\n                            <FormattedMessage\n                                id='password_form.enter'\n                                defaultMessage='Enter a new password for your {siteName} account.'\n                                values={{\n                                    siteName: this.props.siteName,\n                                }}\n                            />\n                        </p>\n                        <div className={formClass}>\n                            <input\n                                type='password'\n                                className='form-control'\n                                name='password'\n                                ref='password'\n                                placeholder={Utils.localizeMessage(\n                                    'password_form.pwd',\n                                    'Password'\n                                )}\n                                spellCheck='false'\n                            />\n                        </div>\n                        {error}\n                        <button\n                            type='submit'\n                            className='btn btn-primary'\n                        >\n                            <FormattedMessage\n                                id='password_form.change'\n                                defaultMessage='Change my password'\n                            />\n                        </button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nPasswordResetForm.propTypes = {\n    location: PropTypes.object.isRequired,\n    siteName: PropTypes.string,\n};\n\nexport default PasswordResetForm;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport PasswordResetForm from './password_reset_form.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const siteName = config.SiteName;\n\n    return {\n        siteName,\n    };\n}\n\nexport default connect(mapStateToProps)(PasswordResetForm);\n"],"sourceRoot":""}