{"version":3,"sources":["webpack:///./components/svg/team_info_icon.jsx","webpack:///./components/select_team/components/select_team_item.jsx","webpack:///./components/select_team/select_team.jsx","webpack:///./components/select_team/index.js","webpack:///./components/common/back_button.jsx","webpack:///./images/logo.png","webpack:///./components/common/site_name_and_description.jsx","webpack:///./utils/policy_roles_adapter.js"],"names":["TeamInfoIcon","React","PureComponent","react_default","a","createElement","this","props","width","height","viewBox","style","role","aria-label","localizeMessage","transform","d","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","SelectTeamItem","e","preventDefault","_this","onTeamClick","team","icon","loading","className","title","Utils","descriptionTooltip","showDescriptionTooltip","description","Tooltip","id","OverlayTrigger","trigger","delayShow","placement","overlay","ref","rootClose","container","team_info_icon_TeamInfoIcon","href","display_name","onClick","handleTeamClick","PropTypes","object","isRequired","func","bool","SelectTeam","select_team_classCallCheck","select_team_defineProperty","select_team_assertThisInitialized","select_team_possibleConstructorReturn","select_team_getPrototypeOf","call","roles","enableTeamCreation","mappingValueFromRoles","setState","loaded","loadingTeamId","addUserToTeamFromInvite","invite_id","history","push","concat","name","error","emitUserLoggedOutEvent","state","Component","actions","getTeams","_this$props","loadRolesIfNeeded","General","SYSTEM_ADMIN_ROLE","SYSTEM_USER_ROLE","system_admin","system_user","loadPoliciesIntoState","nextProps","openContent","_this2","_this$props2","currentUserRoles","customDescriptionText","isMemberOfTeam","joinableTeams","siteName","isSystemAdmin","loading_screen","message","openTeamContents","forEach","joinableTeam","select_team_item_SelectTeamItem","key","length","index_es","defaultMessage","system_permission_gate","permissions","Permissions","CREATE_TEAM","invert","teamHelp","adminConsoleLink","headerButton","teamSignUp","Link","to","UserAgent","MANAGE_SYSTEM","back_button","clearError","handleLogoutClick","announcement_bar","src","logoImage","site_name_and_description","string","array","shape","withRouter","connect","config","getConfig","currentUser","getCurrentUser","myTeamMemberships","Object","values","getTeamMemberships","CustomDescriptionText","getRoles","EnableTeamCreation","getSortedJoinableTeams","locale","SiteName","dispatch","bindActionCreators","BackButton","react__WEBPACK_IMPORTED_MODULE_3___default","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","url","react_intl__WEBPACK_IMPORTED_MODULE_4__","module","exports","__webpack_require__","p","SiteNameAndDescription","Fragment","mappingPartIterator","MAPPING","true","roleName","permission","shouldHave","false","editOthersPosts","EDIT_OTHERS_POSTS","enableOnlyAdminIntegrations","MANAGE_WEBHOOKS","MANAGE_SLASH_COMMANDS","MANAGE_OAUTH","rolesFromMapping","mappingValues","rolesClone","JSON","parse","stringify","pertinentRoleNames","roleNames","v1","v2","names","map","item","_toConsumableArray","Set","roleNamesInMapping","keys","includes","purgeNonPertinentRoles","mappingKey","value","roleRules","Error","addPermissionToRole","permissionIndex","indexOf","splice","removePermissionFromRole","mutateRolesBasedOnMapping","entries","_ref","_ref2","_slicedToArray","roleClone","originalPermissionSet","newPermissionSet","difference","filter","x","has","size","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","o","allConditionsAreMet","err","return","mappingPart","hasUnmetCondition","regeneratorRuntime","wrap","_context","prev","t0","t1","hasOwnProperty","some","stop","_marked"],"mappings":"osCAOqBA,sZAAqBC,IAAMC,gGAExC,OACIC,EAAAC,EAAAC,cAAA,OAAUC,KAAKC,MACXJ,EAAAC,EAAAC,cAAA,OACIG,MAAM,OACNC,OAAO,OACPC,QAAQ,YACRC,MAAOA,EACPC,KAAK,OACLC,aAAYC,0BAAgB,qBAAsB,cAElDX,EAAAC,EAAAC,cAAA,KAAGU,UAAU,yDACTZ,EAAAC,EAAAC,cAAA,QAAMW,EAAE,8VAQ1BL,GACFM,SAAU,UACVC,SAAU,UACVC,eAAgB,QAChBC,iBAAkB,w2BCtBDC,wWAOC,SAACC,GACfA,EAAEC,iBACFC,EAAKjB,MAAMkB,YAAYD,EAAKjB,MAAMmB,sPATEzB,IAAMC,gGAa1C,IAAIyB,EAEAA,EADArB,KAAKC,MAAMqB,QAEPzB,EAAAC,EAAAC,cAAA,QACIwB,UAAU,gDACVC,MAAOC,kBAAsB,wBAAyB,kBAK1D5B,EAAAC,EAAAC,cAAA,QACIwB,UAAU,4CACVC,MAAOC,kBAAsB,wBAAyB,oBAKlE,IAAIC,EAAqB,GACrBC,EAAyB,GAuB7B,OAtBI3B,KAAKC,MAAMmB,KAAKQ,cAChBF,EACI7B,EAAAC,EAAAC,cAAC8B,EAAA,GAAQC,GAAG,6BACP9B,KAAKC,MAAMmB,KAAKQ,aAIzBD,EACI9B,EAAAC,EAAAC,cAACgC,EAAA,GACGC,SAAU,QAAS,QAAS,SAC5BC,UAAW,IACXC,UAAU,MACVC,QAAST,EACTU,IAAI,qBACJC,WAAW,EACXC,UAAWtC,MAEXH,EAAAC,EAAAC,cAACwC,GAAahB,UAAU,sBAMhC1B,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,mBACVI,EACD9B,EAAAC,EAAAC,cAAA,KACIyC,KAAK,IACLV,GAAIL,eAAmBzB,KAAKC,MAAMmB,KAAKqB,cACvCC,QAAS1C,KAAK2C,iBAEd9C,EAAAC,EAAAC,cAAA,QAAMwB,UAAU,yBAAyBvB,KAAKC,MAAMmB,KAAKqB,cACxDpB,02BA/DAN,eAEbK,KAAMwB,IAAUC,OAAOC,WACvB3B,YAAayB,IAAUG,KAAKD,WAC5BxB,QAASsB,IAAUI,KAAKF,aCahC,IAEqBG,cAcjB,SAAAA,EAAYhD,GAAO,IAAAiB,EAAA,mGAAAgC,CAAAlD,KAAAiD,GAAAE,EAAAC,IACflC,uEAAAmC,CAAArD,KAAAsD,EAAAL,GAAAM,KAAAvD,KAAMC,MADS,wBAuCK,SAACuD,GAGrB,IAAMC,EAA6E,SAAvDC,YAAsB,qBAAsBF,GAExEtC,EAAKyC,UAAUF,qBAAoBG,QAAQ,MA5C5BT,EAAAC,IAAAlC,IAAA,kBA+CD,SAACE,GACfF,EAAKyC,UAAUE,cAAezC,EAAKU,KAEnCgC,YAAwB,GAAI1C,EAAK2C,UAC7B,WACI7C,EAAKjB,MAAM+D,QAAQC,KAAnB,IAAAC,OAA4B9C,EAAK+C,KAAjC,2BAEJ,SAACC,GACGlD,EAAKyC,UACDS,QACAP,cAAe,SAzDZV,EAAAC,IAAAlC,IAAA,oBA+DC,SAACF,GACjBA,EAAEC,iBACFoD,YAAuB,YAjERlB,EAAAC,IAAAlC,IAAA,aAoEN,SAACF,GACVA,EAAEC,iBAEFC,EAAKyC,UACDS,MAAO,SArEXlD,EAAKoD,OACDT,cAAe,GACfO,MAAO,MALIlD,8OAdiBvB,IAAM4E,uGAwBtCvE,KAAKC,MAAMuE,QAAQC,SAAS,EA1Bb,yDA6BS,IAAAC,EAIpB1E,KAAKC,MAFLuE,EAFoBE,EAEpBF,QACAhB,EAHoBkB,EAGpBlB,MAGJgB,EAAQG,mBAAmBC,UAAQC,kBAAmBD,UAAQE,mBAG1DtB,EAAMuB,cACNvB,EAAMwB,aAENhF,KAAKiF,sBAAsBzB,4DAIF0B,IAExBlF,KAAKsE,MAAMV,QACZsB,EAAU1B,MAAMuB,cAChBG,EAAU1B,MAAMwB,aAEhBhF,KAAKiF,sBAAsBC,EAAU1B,wCAyCpC,IAYD2B,EAZCC,EAAApF,KAAAqF,EAODrF,KAAKC,MALLqF,EAFCD,EAEDC,iBACAC,EAHCF,EAGDE,sBACAC,EAJCH,EAIDG,eACAC,EALCJ,EAKDI,cACAC,EANCL,EAMDK,SAEGjC,EAAsBzD,KAAKsE,MAA3Bb,mBAEDkC,EAAgBlE,gBAAoB6D,GAG1C,GAAItF,KAAKsE,MAAMT,cACXsB,EAActF,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,WACX,GAAI5F,KAAKsE,MAAMF,MAClBe,EACItF,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,mBACX1B,EAAAC,EAAAC,cAAA,OAAKwB,UAAW,wBACZ1B,EAAAC,EAAAC,cAAA,SAAOwB,UAAU,iBAAiBvB,KAAKsE,MAAMF,MAAMyB,eAI5D,CACH,IAAIC,KACJL,EAAcM,QAAQ,SAACC,GACnBF,EAAiB7B,KACbpE,EAAAC,EAAAC,cAACkG,GACGC,IAAK,QAAUF,EAAa7B,KAC5B/C,KAAM4E,EACN7E,YAAaiE,EAAKzC,gBAClBrB,QAAS8D,EAAKd,MAAMT,gBAAkBmC,EAAalE,QAK/B,IAA5BgE,EAAiBK,SAAiB1C,GAAsBkC,GACxDG,EACIjG,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,uBACX1B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqG,EAAA,GACGtE,GAAG,sCACHuE,eAAe,wGAKI,IAA5BP,EAAiBK,SACxBL,EACIjG,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,uBACX1B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuG,EAAA,GAAqBC,aAAcC,cAAYC,cAC5C5G,EAAAC,EAAAC,cAACqG,EAAA,GACGtE,GAAG,sCACHuE,eAAe,uGAGvBxG,EAAAC,EAAAC,cAACuG,EAAA,GACGC,aAAcC,cAAYC,aAC1BC,QAAQ,GAER7G,EAAAC,EAAAC,cAACqG,EAAA,GACGtE,GAAG,4BACHuE,eAAe,qFAQvClB,EACItF,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,mBACX1B,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACqG,EAAA,GACGtE,GAAG,wBACHuE,eAAe,0BAGvBxG,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,mBACVuE,IAMjB,IAAIa,EAAW,KACXhB,IAAkBlC,IAClBkD,EACI9G,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqG,EAAA,GACGtE,GAAG,4BACHuE,eAAe,qGAM/B,IAiBIO,EAmBAC,EApCEC,EACFjH,EAAAC,EAAAC,cAACuG,EAAA,GAAqBC,aAAcC,cAAYC,cAC5C5G,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,iBACX1B,EAAAC,EAAAC,cAACgH,EAAA,GACGC,GAAG,eACHzF,UAAU,qBAEV1B,EAAAC,EAAAC,cAACqG,EAAA,GACGtE,GAAG,mBACHuE,eAAe,wBAI1BM,GA+CT,OA1CKM,QACDL,EACI/G,EAAAC,EAAAC,cAACuG,EAAA,GAAqBC,aAAcC,cAAYU,gBAC5CrH,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,2BACX1B,EAAAC,EAAAC,cAACgH,EAAA,GACGC,GAAG,iBACHzF,UAAU,qBAEV1B,EAAAC,EAAAC,cAACqG,EAAA,GACGtE,GAAG,6BACHuE,eAAe,6BAUnCQ,EADA7G,KAAKsE,MAAMF,MACIvE,EAAAC,EAAAC,cAACoH,EAAA,GAAWzE,QAAS1C,KAAKoH,aAClC5B,EACQ3F,EAAAC,EAAAC,cAACoH,EAAA,EAAD,MAGXtH,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,iBACX1B,EAAAC,EAAAC,cAAA,KACIyC,KAAK,IACLE,QAAS1C,KAAKqH,mBAEdxH,EAAAC,EAAAC,cAAA,QACIwB,UAAU,qBACVC,MAAOC,kBAAsB,uBAAwB,iBAEzD5B,EAAAC,EAAAC,cAACqG,EAAA,GACGtE,GAAG,oBACHuE,eAAe,aAO/BxG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuH,EAAA,EAAD,MACCT,EACDhH,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,aACX1B,EAAAC,EAAAC,cAAA,OAAKwB,UAAW,0BACZ1B,EAAAC,EAAAC,cAAA,OACIwB,UAAU,mBACVgG,IAAKC,MAET3H,EAAAC,EAAAC,cAAC0H,EAAA,GACGlC,sBAAuBA,EACvBG,SAAUA,IAEbP,EACA2B,EACAF,gBAxQJ3D,eAEbqC,iBAAkB1C,IAAU8E,OAC5BnC,sBAAuB3C,IAAU8E,OACjClC,eAAgB5C,IAAUI,KAAKF,WAC/B2C,cAAe7C,IAAU+E,MACzBnE,MAAOZ,IAAUC,OAAOC,WACxB4C,SAAU9C,IAAU8E,OACpBlD,QAAS5B,IAAUgF,OACfnD,SAAU7B,IAAUG,KAAKD,WACzB6B,kBAAmB/B,IAAUG,KAAKD,aACnCA,aCCI+E,sBAAWC,kBAzB1B,SAAyBxD,GACrB,IAAMyD,EAASC,oBAAU1D,GACnB2D,EAAcC,yBAAe5D,GAC7B6D,EAAoBC,OAAOC,OAAOC,6BAAmBhE,IAE3D,OACIgB,iBAAkB2C,EAAYzE,OAAS,GACvC+B,sBAAuBwC,EAAOQ,sBAC9B/E,MAAOgF,mBAASlE,GAChBb,mBAAkD,SAA9BsE,EAAOU,mBAC3BjD,eAAgB2C,GAAqBA,EAAkBhC,OAAS,EAChEV,cAAeiD,iCAAuBpE,EAAO2D,EAAYU,QACzDjD,SAAUqC,EAAOa,WAIzB,SAA4BC,GACxB,OACIrE,QAASsE,8BACLrE,oBACAE,uCACDkE,KAIef,CAA6C7E,sjCC/BlD8F,sZAAmBpJ,IAAMC,gGAmBtC,OACIoJ,EAAAlJ,EAAAC,cAAA,OAAKwB,UAAU,iBACXyH,EAAAlJ,EAAAC,cAACkJ,EAAA,GACGvG,QAAS1C,KAAKC,MAAMyC,QACpBsE,GAAIhH,KAAKC,MAAMiJ,KAEfF,EAAAlJ,EAAAC,cAAA,QACIwB,UAAU,qBACVC,MAAOhB,0BAAgB,qBAAsB,eAEjDwI,EAAAlJ,EAAAC,cAACoJ,EAAA,GACGrH,GAAG,kBACHuE,eAAe,sBA/BlB0C,eAMbG,IAAKtG,IAAU8E,OAKfhF,QAASE,IAAUG,SAXNgG,kBAebG,IAAK,2BCzBbE,EAAAC,QAAiBC,EAAAC,EAAuB,4kCCOnBC,sZAA+B7J,IAAMC,gGAU7C,IAAA8E,EAID1E,KAAKC,MAFLsF,EAFCb,EAEDa,sBACAG,EAHChB,EAGDgB,SAEA9D,EAAc,KAYlB,OAVIA,EADA2D,GAIIyD,EAAAlJ,EAAAC,cAACoJ,EAAA,GACGrH,GAAG,uBACHuE,eAAe,4EAMvB2C,EAAAlJ,EAAAC,cAACiJ,EAAAlJ,EAAM2J,SAAP,KACIT,EAAAlJ,EAAAC,cAAA,UAAK2F,GACLsD,EAAAlJ,EAAAC,cAAA,MAAIwB,UAAU,gBACTK,eA/BA4H,eAEbjE,sBAAuB3C,IAAU8E,OACjChC,SAAU9C,IAAU8E,WAHP8B,kBAOb9D,SAAU,gPCiHRgE,0uBA1HV,IAAMC,GACFlG,oBACImG,OAAQC,SAAU,cAAeC,WAAYtD,cAAYC,YAAasD,YAAY,IAClFC,QAASH,SAAU,cAAeC,WAAYtD,cAAYC,YAAasD,YAAY,KAGvFE,iBACIL,OACKC,SAAU,eAAgBC,WAAYtD,cAAY0D,kBAAmBH,YAAY,IACjFF,SAAU,aAAcC,WAAYtD,cAAY0D,kBAAmBH,YAAY,IAEpFC,QACKH,SAAU,aAAcC,WAAYtD,cAAY0D,kBAAmBH,YAAY,IAC/EF,SAAU,eAAgBC,WAAYtD,cAAY0D,kBAAmBH,YAAY,KAI1FI,6BACIP,OACKC,SAAU,YAAaC,WAAYtD,cAAY4D,gBAAiBL,YAAY,IAC5EF,SAAU,YAAaC,WAAYtD,cAAY6D,sBAAuBN,YAAY,IAClFF,SAAU,cAAeC,WAAYtD,cAAY8D,aAAcP,YAAY,IAEhFC,QACKH,SAAU,YAAaC,WAAYtD,cAAY4D,gBAAiBL,YAAY,IAC5EF,SAAU,YAAaC,WAAYtD,cAAY6D,sBAAuBN,YAAY,IAClFF,SAAU,cAAeC,WAAYtD,cAAY8D,aAAcP,YAAY,MAYjF,SAASQ,EAAiBC,EAAehH,GAC5C,IAAMiH,EAAaC,KAAKC,MAAMD,KAAKE,UAAUpH,IAuB7C,OAmBJ,SAAgCA,GAC5B,IAAMqH,EA2BV,WACI,IAAIC,KASJ,OAPA1C,OAAOC,OAAOsB,GAAS5D,QAAQ,SAACgF,GAC5B3C,OAAOC,OAAO0C,GAAIhF,QAAQ,SAACiF,GACvB,IAAMC,EAAQD,EAAGE,IAAI,SAACC,GAAD,OAAUA,EAAKtB,WACpCiB,EAAYA,EAAU5G,OAAO+G,OAIrCG,EAAW,IAAIC,IAAIP,EAAUI,IAAI,SAACC,GAAD,OAAUA,MArChBG,GAE3BlD,OAAOmD,KAAK/H,GAAOuC,QAAQ,SAACG,GACnB2E,EAAmBW,SAAStF,WACtB1C,EAAM0C,KA5CrBuF,CAAuBhB,GAEvBrC,OAAOmD,KAAK5B,GAAS5D,QAAQ,SAAC2F,GAC1B,IAAMC,EAAQnB,EAAckB,GACxBC,GA6CZ,SAAmCD,EAAYC,EAAOnI,GAClD,IAAMoI,EAAYjC,EAAQ+B,GAAYC,GAEtC,QAAyB,IAAdC,EACP,MAAM,IAAIC,MAAJ,UAAA3H,OAAoByH,EAApB,sCAAAzH,OAA8DwH,EAA9D,OAGVE,EAAU7F,QAAQ,SAACoF,GACf,IAAM7K,EAAOkD,EAAM2H,EAAKtB,UACpBsB,EAAKpB,WAqCjB,SAA6BD,EAAYxJ,GAChCA,EAAKiG,YAAYiF,SAAS1B,IAC3BxJ,EAAKiG,YAAYtC,KAAK6F,GAtClBgC,CAAoBX,EAAKrB,WAAYxJ,GA0CjD,SAAkCwJ,EAAYxJ,GAC1C,IAAMyL,EAAkBzL,EAAKiG,YAAYyF,QAAQlC,IACxB,IAArBiC,GACAzL,EAAKiG,YAAY0F,OAAOF,EAAiB,GA3CrCG,CAAyBf,EAAKrB,WAAYxJ,KAxD1C6L,CAA0BT,EAAYC,EAAOlB,KAKrDrC,OAAOgE,QAAQ3B,GAAY1E,QAAQ,SAAAsG,GAA2B,IAAAC,EAAAC,EAAAF,EAAA,GAAzBxC,EAAyByC,EAAA,GAAfE,EAAeF,EAAA,GACpDG,EAAwB,IAAIpB,IAAI7H,EAAMqG,GAAUtD,aAChDmG,EAAmB,IAAIrB,IAAImB,EAAUjG,aACrCoG,EAAavB,EAAIsB,GAAkBE,OAAO,SAACC,GAAD,OAAQJ,EAAsBK,IAAID,KAE9EJ,EAAsBM,OAASL,EAAiBK,MAA8B,IAAtBJ,EAAWxG,eAC5DsE,EAAWZ,KAInBY,EAUJ,SAAS/G,EAAsBwC,EAAK1C,GAAO,IAAAwJ,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAC9C,QAAAC,EAAAC,EAAgB3D,EAAoBC,EAAQzD,GAAM1C,GAAlD8J,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA0D,KAA/CU,EAA+CN,EAAAzB,MACtD,GAAI+B,EAAEC,oBACF,OAAOD,EAAE/B,OAH6B,MAAAiC,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAZ,EAAA,MAAAC,GAM9C,MAAM,IAAIrB,MAAJ,4CAAA3H,OAAsDgC,EAAtD,4BA4CV,SAAUwD,EAAoBoE,EAAatK,GAA3C,IAAAmI,EAAAC,EAAAmC,EAAA,OAAAC,mBAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAV,MAAA,OAAAU,EAAAE,GAAAJ,mBAAAzC,KACwBuC,GADxB,WAAAI,EAAAG,GAAAH,EAAAE,MAAAX,KAAA,CAAAS,EAAAV,KAAA,YACe7B,EADfuC,EAAAG,GAAA1C,OAEYmC,EAAYQ,eAAe3C,GAFvC,CAAAuC,EAAAV,KAAA,QAUY,OAPM5B,EAAYkC,EAAYnC,GAExBoC,EAAoBnC,EAAU2C,KAAK,SAACpD,GACtC,IAAM7K,EAAOkD,EAAM2H,EAAKtB,UACxB,OAAQsB,EAAKpB,aAAezJ,EAAKiG,YAAYiF,SAASL,EAAKrB,cAAkBqB,EAAKpB,YAAczJ,EAAKiG,YAAYiF,SAASL,EAAKrB,cAP/IoE,EAAAV,KAAA,GAUmB7B,QAAOgC,qBAAsBI,GAVhD,OAAAG,EAAAV,KAAA,iCAAAU,EAAAM,SAAAC,EAAAzO","file":"25.d65f22808f3f72b6fb61.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class TeamInfoIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='100%'\n                    height='100%'\n                    viewBox='0 0 20 20'\n                    style={style}\n                    role='icon'\n                    aria-label={localizeMessage('generic_icons.info', 'Info Icon')}\n                >\n                    <g transform='matrix(1.17647,0,0,1.17647,-1.55431e-15,-1.00573e-14)'>\n                        <path d='M8.5,0C3.797,0 0,3.797 0,8.5C0,13.203 3.797,17 8.5,17C13.203,17 17,13.203 17,8.5C17,3.797 13.203,0 8.5,0ZM10,8.5C10,7.672 9.328,7 8.5,7C7.672,7 7,7.672 7,8.5L7,12.45C7,13.278 7.672,13.95 8.5,13.95C9.328,13.95 10,13.278 10,12.45L10,8.5ZM8.5,3C9.328,3 10,3.672 10,4.5C10,5.328 9.328,6 8.5,6C7.672,6 7,5.328 7,4.5C7,3.672 7.672,3 8.5,3Z'/>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n\nconst style = {\n    fillRule: 'evenodd',\n    clipRule: 'evenodd',\n    strokeLinejoin: 'round',\n    strokeMiterlimit: 1.41421,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\n\nimport TeamInfoIcon from 'components/svg/team_info_icon';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class SelectTeamItem extends React.PureComponent {\n    static propTypes = {\n        team: PropTypes.object.isRequired,\n        onTeamClick: PropTypes.func.isRequired,\n        loading: PropTypes.bool.isRequired,\n    };\n\n    handleTeamClick = (e) => {\n        e.preventDefault();\n        this.props.onTeamClick(this.props.team);\n    }\n\n    render() {\n        let icon;\n        if (this.props.loading) {\n            icon = (\n                <span\n                    className='fa fa-refresh fa-spin right signup-team__icon'\n                    title={Utils.localizeMessage('generic_icons.loading', 'Loading Icon')}\n                />\n            );\n        } else {\n            icon = (\n                <span\n                    className='fa fa-angle-right right signup-team__icon'\n                    title={Utils.localizeMessage('select_team.join.icon', 'Join Team Icon')}\n                />\n            );\n        }\n\n        var descriptionTooltip = '';\n        var showDescriptionTooltip = '';\n        if (this.props.team.description) {\n            descriptionTooltip = (\n                <Tooltip id='team-description__tooltip'>\n                    {this.props.team.description}\n                </Tooltip>\n            );\n\n            showDescriptionTooltip = (\n                <OverlayTrigger\n                    trigger={['hover', 'focus', 'click']}\n                    delayShow={1000}\n                    placement='top'\n                    overlay={descriptionTooltip}\n                    ref='descriptionOverlay'\n                    rootClose={true}\n                    container={this}\n                >\n                    <TeamInfoIcon className='icon icon--info'/>\n                </OverlayTrigger>\n            );\n        }\n\n        return (\n            <div className='signup-team-dir'>\n                {showDescriptionTooltip}\n                <a\n                    href='#'\n                    id={Utils.createSafeId(this.props.team.display_name)}\n                    onClick={this.handleTeamClick}\n                >\n                    <span className='signup-team-dir__name'>{this.props.team.display_name}</span>\n                    {icon}\n                </a>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {General, Permissions} from 'mattermost-redux/constants';\n\nimport {emitUserLoggedOutEvent} from 'actions/global_actions.jsx';\nimport {addUserToTeamFromInvite} from 'actions/team_actions.jsx';\n\nimport {mappingValueFromRoles} from 'utils/policy_roles_adapter';\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport logoImage from 'images/logo.png';\n\nimport AnnouncementBar from 'components/announcement_bar';\nimport BackButton from 'components/common/back_button.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport SiteNameAndDescription from 'components/common/site_name_and_description';\n\nimport SelectTeamItem from './components/select_team_item.jsx';\n\nconst TEAMS_PER_PAGE = 200;\n\nexport default class SelectTeam extends React.Component {\n    static propTypes = {\n        currentUserRoles: PropTypes.string,\n        customDescriptionText: PropTypes.string,\n        isMemberOfTeam: PropTypes.bool.isRequired,\n        joinableTeams: PropTypes.array,\n        roles: PropTypes.object.isRequired,\n        siteName: PropTypes.string,\n        actions: PropTypes.shape({\n            getTeams: PropTypes.func.isRequired,\n            loadRolesIfNeeded: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loadingTeamId: '',\n            error: null,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getTeams(0, TEAMS_PER_PAGE);\n    }\n\n    UNSAFE_componentWillMount() { // eslint-disable-line camelcase\n        const {\n            actions,\n            roles,\n        } = this.props;\n\n        actions.loadRolesIfNeeded([General.SYSTEM_ADMIN_ROLE, General.SYSTEM_USER_ROLE]);\n\n        if (\n            roles.system_admin &&\n            roles.system_user\n        ) {\n            this.loadPoliciesIntoState(roles);\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (\n            !this.state.loaded &&\n            nextProps.roles.system_admin &&\n            nextProps.roles.system_user\n        ) {\n            this.loadPoliciesIntoState(nextProps.roles);\n        }\n    }\n\n    loadPoliciesIntoState = (roles) => {\n        // Purposely parsing boolean from string 'true' or 'false'\n        // because the string comes from the policy roles adapter mapping.\n        const enableTeamCreation = (mappingValueFromRoles('enableTeamCreation', roles) === 'true');\n\n        this.setState({enableTeamCreation, loaded: true});\n    }\n\n    handleTeamClick = (team) => {\n        this.setState({loadingTeamId: team.id});\n\n        addUserToTeamFromInvite('', team.invite_id,\n            () => {\n                this.props.history.push(`/${team.name}/channels/town-square`);\n            },\n            (error) => {\n                this.setState({\n                    error,\n                    loadingTeamId: '',\n                });\n            }\n        );\n    };\n\n    handleLogoutClick = (e) => {\n        e.preventDefault();\n        emitUserLoggedOutEvent('/login');\n    }\n\n    clearError = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            error: null,\n        });\n    };\n\n    render() {\n        const {\n            currentUserRoles,\n            customDescriptionText,\n            isMemberOfTeam,\n            joinableTeams,\n            siteName,\n        } = this.props;\n        const {enableTeamCreation} = this.state;\n\n        const isSystemAdmin = Utils.isSystemAdmin(currentUserRoles);\n\n        let openContent;\n        if (this.state.loadingTeamId) {\n            openContent = <LoadingScreen/>;\n        } else if (this.state.error) {\n            openContent = (\n                <div className='signup__content'>\n                    <div className={'form-group has-error'}>\n                        <label className='control-label'>{this.state.error.message}</label>\n                    </div>\n                </div>\n            );\n        } else {\n            let openTeamContents = [];\n            joinableTeams.forEach((joinableTeam) => {\n                openTeamContents.push(\n                    <SelectTeamItem\n                        key={'team_' + joinableTeam.name}\n                        team={joinableTeam}\n                        onTeamClick={this.handleTeamClick}\n                        loading={this.state.loadingTeamId === joinableTeam.id}\n                    />\n                );\n            });\n\n            if (openTeamContents.length === 0 && (enableTeamCreation || isSystemAdmin)) {\n                openTeamContents = (\n                    <div className='signup-team-dir-err'>\n                        <div>\n                            <FormattedMessage\n                                id='signup_team.no_open_teams_canCreate'\n                                defaultMessage='No teams are available to join. Please create a new team or ask your administrator for an invite.'\n                            />\n                        </div>\n                    </div>\n                );\n            } else if (openTeamContents.length === 0) {\n                openTeamContents = (\n                    <div className='signup-team-dir-err'>\n                        <div>\n                            <SystemPermissionGate permissions={[Permissions.CREATE_TEAM]}>\n                                <FormattedMessage\n                                    id='signup_team.no_open_teams_canCreate'\n                                    defaultMessage='No teams are available to join. Please create a new team or ask your administrator for an invite.'\n                                />\n                            </SystemPermissionGate>\n                            <SystemPermissionGate\n                                permissions={[Permissions.CREATE_TEAM]}\n                                invert={true}\n                            >\n                                <FormattedMessage\n                                    id='signup_team.no_open_teams'\n                                    defaultMessage='No teams are available to join. Please ask your administrator for an invite.'\n                                />\n                            </SystemPermissionGate>\n                        </div>\n                    </div>\n                );\n            }\n\n            openContent = (\n                <div className='signup__content'>\n                    <h4>\n                        <FormattedMessage\n                            id='signup_team.join_open'\n                            defaultMessage='Teams you can join: '\n                        />\n                    </h4>\n                    <div className='signup-team-all'>\n                        {openTeamContents}\n                    </div>\n                </div>\n            );\n        }\n\n        let teamHelp = null;\n        if (isSystemAdmin && !enableTeamCreation) {\n            teamHelp = (\n                <div>\n                    <FormattedMessage\n                        id='login.createTeamAdminOnly'\n                        defaultMessage='This option is only available for System Administrators, and does not show up for other users.'\n                    />\n                </div>\n            );\n        }\n\n        const teamSignUp = (\n            <SystemPermissionGate permissions={[Permissions.CREATE_TEAM]}>\n                <div className='margin--extra'>\n                    <Link\n                        to='/create_team'\n                        className='signup-team-login'\n                    >\n                        <FormattedMessage\n                            id='login.createTeam'\n                            defaultMessage='Create a new team'\n                        />\n                    </Link>\n                </div>\n                {teamHelp}\n            </SystemPermissionGate>\n        );\n\n        let adminConsoleLink;\n        if (!UserAgent.isMobileApp()) {\n            adminConsoleLink = (\n                <SystemPermissionGate permissions={[Permissions.MANAGE_SYSTEM]}>\n                    <div className='margin--extra hidden-xs'>\n                        <Link\n                            to='/admin_console'\n                            className='signup-team-login'\n                        >\n                            <FormattedMessage\n                                id='signup_team_system_console'\n                                defaultMessage='Go to System Console'\n                            />\n                        </Link>\n                    </div>\n                </SystemPermissionGate>\n            );\n        }\n\n        let headerButton;\n        if (this.state.error) {\n            headerButton = <BackButton onClick={this.clearError}/>;\n        } else if (isMemberOfTeam) {\n            headerButton = <BackButton/>;\n        } else {\n            headerButton = (\n                <div className='signup-header'>\n                    <a\n                        href='#'\n                        onClick={this.handleLogoutClick}\n                    >\n                        <span\n                            className='fa fa-chevron-left'\n                            title={Utils.localizeMessage('generic_icons.logout', 'Logout Icon')}\n                        />\n                        <FormattedMessage\n                            id='web.header.logout'\n                            defaultMessage='Logout'\n                        />\n                    </a>\n                </div>\n            );\n        }\n        return (\n            <div>\n                <AnnouncementBar/>\n                {headerButton}\n                <div className='col-sm-12'>\n                    <div className={'signup-team__container'}>\n                        <img\n                            className='signup-team-logo'\n                            src={logoImage}\n                        />\n                        <SiteNameAndDescription\n                            customDescriptionText={customDescriptionText}\n                            siteName={siteName}\n                        />\n                        {openContent}\n                        {teamSignUp}\n                        {adminConsoleLink}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {withRouter} from 'react-router-dom';\n\nimport {getTeams} from 'mattermost-redux/actions/teams';\nimport {loadRolesIfNeeded} from 'mattermost-redux/actions/roles';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getRoles} from 'mattermost-redux/selectors/entities/roles';\nimport {getSortedJoinableTeams, getTeamMemberships} from 'mattermost-redux/selectors/entities/teams';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\n\nimport SelectTeam from './select_team.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const currentUser = getCurrentUser(state);\n    const myTeamMemberships = Object.values(getTeamMemberships(state));\n\n    return {\n        currentUserRoles: currentUser.roles || '',\n        customDescriptionText: config.CustomDescriptionText,\n        roles: getRoles(state),\n        enableTeamCreation: config.EnableTeamCreation === 'true',\n        isMemberOfTeam: myTeamMemberships && myTeamMemberships.length > 0,\n        joinableTeams: getSortedJoinableTeams(state, currentUser.locale),\n        siteName: config.SiteName,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getTeams,\n            loadRolesIfNeeded,\n        }, dispatch),\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SelectTeam));\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class BackButton extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * URL to return to\n         */\n        url: PropTypes.string,\n\n        /**\n         * An optional click handler that will trigger when the user clicks on the back button\n         */\n        onClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        url: '/',\n    };\n\n    render() {\n        return (\n            <div className='signup-header'>\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <span\n                        className='fa fa-chevron-left'\n                        title={localizeMessage('generic_icons.back', 'Back Icon')}\n                    />\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/dab14c86297d09799009bbaba4112d0e.png\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class SiteNameAndDescription extends React.PureComponent {\n    static propTypes = {\n        customDescriptionText: PropTypes.string,\n        siteName: PropTypes.string,\n    };\n\n    static defaultProps = {\n        siteName: 'Mattermost',\n    };\n\n    render() {\n        const {\n            customDescriptionText,\n            siteName,\n        } = this.props;\n        let description = null;\n        if (customDescriptionText) {\n            description = customDescriptionText;\n        } else {\n            description = (\n                <FormattedMessage\n                    id='web.root.signup_info'\n                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\n                />\n            );\n        }\n\n        return (\n            <React.Fragment>\n                <h1>{siteName}</h1>\n                <h4 className='color--light'>\n                    {description}\n                </h4>\n            </React.Fragment>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {Permissions} from 'mattermost-redux/constants/index';\n\nconst MAPPING = {\n    enableTeamCreation: {\n        true: [{roleName: 'system_user', permission: Permissions.CREATE_TEAM, shouldHave: true}],\n        false: [{roleName: 'system_user', permission: Permissions.CREATE_TEAM, shouldHave: false}],\n    },\n\n    editOthersPosts: {\n        true: [\n            {roleName: 'system_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: true},\n            {roleName: 'team_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: true},\n        ],\n        false: [\n            {roleName: 'team_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: false},\n            {roleName: 'system_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: false},\n        ],\n    },\n\n    enableOnlyAdminIntegrations: {\n        true: [\n            {roleName: 'team_user', permission: Permissions.MANAGE_WEBHOOKS, shouldHave: false},\n            {roleName: 'team_user', permission: Permissions.MANAGE_SLASH_COMMANDS, shouldHave: false},\n            {roleName: 'system_user', permission: Permissions.MANAGE_OAUTH, shouldHave: false},\n        ],\n        false: [\n            {roleName: 'team_user', permission: Permissions.MANAGE_WEBHOOKS, shouldHave: true},\n            {roleName: 'team_user', permission: Permissions.MANAGE_SLASH_COMMANDS, shouldHave: true},\n            {roleName: 'system_user', permission: Permissions.MANAGE_OAUTH, shouldHave: true},\n        ],\n    },\n};\n\n/**\n * Get the roles that were changed (but unsaved) for given mapping key/values.\n *\n * @param {object} mappingValues key/value to indicate which mapping items to use to update the roles.\n * @param {object} roles same structure as returned by mattermost-redux `getRoles`.\n * @return {object} the updated roles (only) in the same structure as returned by mattermost-redux `getRoles`.\n */\nexport function rolesFromMapping(mappingValues, roles) {\n    const rolesClone = JSON.parse(JSON.stringify(roles));\n\n    // Purge roles that aren't present in MAPPING, we don't care about them.\n    purgeNonPertinentRoles(rolesClone);\n\n    Object.keys(MAPPING).forEach((mappingKey) => {\n        const value = mappingValues[mappingKey];\n        if (value) {\n            mutateRolesBasedOnMapping(mappingKey, value, rolesClone);\n        }\n    });\n\n    // Purge roles that didn't have permissions changes, we don't care about them.\n    Object.entries(rolesClone).forEach(([roleName, roleClone]) => {\n        const originalPermissionSet = new Set(roles[roleName].permissions);\n        const newPermissionSet = new Set(roleClone.permissions);\n        const difference = [...newPermissionSet].filter((x) => !originalPermissionSet.has(x));\n\n        if (originalPermissionSet.size === newPermissionSet.size && difference.length === 0) {\n            delete rolesClone[roleName];\n        }\n    });\n\n    return rolesClone;\n}\n\n/**\n * Get the mapping value that matches for a given set of roles.\n *\n * @param {string} key to match under in the mapping.\n * @param {object} roles same structure as returned by mattermost-redux `getRoles`.\n * @return {string} the value that the roles/permissions assignment match in the mapping.\n */\nexport function mappingValueFromRoles(key, roles) {\n    for (const o of mappingPartIterator(MAPPING[key], roles)) {\n        if (o.allConditionsAreMet) {\n            return o.value;\n        }\n    }\n    throw new Error(`No matching mapping value found for key '${key}' with the given roles.`);\n}\n\nfunction purgeNonPertinentRoles(roles) {\n    const pertinentRoleNames = roleNamesInMapping();\n\n    Object.keys(roles).forEach((key) => {\n        if (!pertinentRoleNames.includes(key)) {\n            delete roles[key];\n        }\n    });\n}\n\nfunction mutateRolesBasedOnMapping(mappingKey, value, roles) {\n    const roleRules = MAPPING[mappingKey][value];\n\n    if (typeof roleRules === 'undefined') {\n        throw new Error(`Value '${value}' not present in MAPPING for key '${mappingKey}'.`);\n    }\n\n    roleRules.forEach((item) => {\n        const role = roles[item.roleName];\n        if (item.shouldHave) {\n            addPermissionToRole(item.permission, role);\n        } else {\n            removePermissionFromRole(item.permission, role);\n        }\n    });\n}\n\n// Returns a set of the role names present in MAPPING.\nfunction roleNamesInMapping() {\n    let roleNames = [];\n\n    Object.values(MAPPING).forEach((v1) => {\n        Object.values(v1).forEach((v2) => {\n            const names = v2.map((item) => item.roleName); // eslint-disable-line max-nested-callbacks\n            roleNames = roleNames.concat(names);\n        });\n    });\n\n    return [...new Set(roleNames.map((item) => item))];\n}\n\nfunction* mappingPartIterator(mappingPart, roles) {\n    for (const value in mappingPart) {\n        if (mappingPart.hasOwnProperty(value)) {\n            const roleRules = mappingPart[value];\n\n            const hasUnmetCondition = roleRules.some((item) => {\n                const role = roles[item.roleName];\n                return (item.shouldHave && !role.permissions.includes(item.permission)) || (!item.shouldHave && role.permissions.includes(item.permission));\n            });\n\n            yield {value, allConditionsAreMet: !hasUnmetCondition};\n        }\n    }\n}\n\nfunction addPermissionToRole(permission, role) {\n    if (!role.permissions.includes(permission)) {\n        role.permissions.push(permission);\n    }\n}\n\nfunction removePermissionFromRole(permission, role) {\n    const permissionIndex = role.permissions.indexOf(permission);\n    if (permissionIndex !== -1) {\n        role.permissions.splice(permissionIndex, 1);\n    }\n}\n"],"sourceRoot":""}