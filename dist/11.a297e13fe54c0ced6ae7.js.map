{"version":3,"sources":["webpack:///./components/error_page/error_title.jsx","webpack:///./components/error_page/error_link.jsx","webpack:///./components/error_page/error_message.jsx","webpack:///./components/error_page/error_page.jsx","webpack:///./components/error_page/index.jsx"],"names":["ErrorTitle","_ref","type","title","errorTitle","ErrorPageTypes","LOCAL_STORAGE","react_default","a","createElement","index_es","id","defaultMessage","PERMALINK_NOT_FOUND","OAUTH_ACCESS_DENIED","OAUTH_MISSING_CODE","TEAM_NOT_FOUND","CHANNEL_NOT_FOUND","PAGE_NOT_FOUND","Utils","propTypes","PropTypes","string","ErrorLink","url","messageId","href","rel","target","ErrorMessage","message","service","errorMessage","values","link","t","isRequired","defaultProps","ErrorPage","React","PureComponent","document","body","setAttribute","removeAttribute","params","URLSearchParams","this","props","location","search","signature","get","trustParams","delete","keyPEM","asymmetricSigningPublicKey","verify","crypto","createVerify","update","toString","backButton","returnTo","Link","to","siteName","defaultChannelName","Constants","DEFAULT_CHANNEL_UI_NAME","className","localizeMessage","object","connect","state","config","getConfig","SiteName","AsymmetricSigningPublicKey"],"mappings":"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","file":"11.a297e13fe54c0ced6ae7.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {ErrorPageTypes} from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default function ErrorTitle({type, title}) {\n    let errorTitle = null;\n    if (type) {\n        switch (type) {\n        case ErrorPageTypes.LOCAL_STORAGE:\n            errorTitle = (\n                <FormattedMessage\n                    id='error.local_storage.title'\n                    defaultMessage='Cannot Load Mattermost'\n                />\n            );\n            break;\n        case ErrorPageTypes.PERMALINK_NOT_FOUND:\n            errorTitle = (\n                <FormattedMessage\n                    id='permalink.error.title'\n                    defaultMessage='Message Not Found'\n                />\n            );\n            break;\n        case ErrorPageTypes.OAUTH_ACCESS_DENIED:\n            errorTitle = (\n                <FormattedMessage\n                    id='error.oauth_access_denied.title'\n                    defaultMessage='Authorization Error'\n                />\n            );\n            break;\n        case ErrorPageTypes.OAUTH_MISSING_CODE:\n            errorTitle = (\n                <FormattedMessage\n                    id='error.oauth_missing_code.title'\n                    defaultMessage='Mattermost needs your help'\n                />\n            );\n            break;\n        case ErrorPageTypes.TEAM_NOT_FOUND:\n            errorTitle = (\n                <FormattedMessage\n                    id='error.team_not_found.title'\n                    defaultMessage='Team Not Found'\n                />\n            );\n            break;\n        case ErrorPageTypes.CHANNEL_NOT_FOUND:\n            errorTitle = (\n                <FormattedMessage\n                    id='error.channel_not_found.title'\n                    defaultMessage='Channel Not Found'\n                />\n            );\n            break;\n        case ErrorPageTypes.PAGE_NOT_FOUND:\n        default:\n            errorTitle = (\n                <FormattedMessage\n                    id='error.not_found.title'\n                    defaultMessage='Page Not Found'\n                />\n            );\n        }\n    } else if (title) {\n        errorTitle = title;\n    } else {\n        errorTitle = Utils.localizeMessage('error.generic.title', 'Error');\n    }\n\n    return errorTitle;\n}\n\nErrorTitle.propTypes = {\n\n    /*\n    * Error type\n    */\n    type: PropTypes.string,\n\n    /*\n    * Error title\n    */\n    title: PropTypes.string,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default function ErrorLink({url, messageId, defaultMessage}) {\n    return (\n        <a\n            href={url}\n            rel='noopener noreferrer'\n            target='_blank'\n        >\n            <FormattedMessage\n                id={messageId}\n                defaultMessage={defaultMessage}\n            />\n        </a>\n    );\n}\n\nErrorLink.propTypes = {\n    url: PropTypes.string.isRequired,\n    messageId: PropTypes.string.isRequired,\n    defaultMessage: PropTypes.string.isRequired,\n};\n\nErrorLink.defaultProps = {\n    url: '',\n    messageId: '',\n    defaultMessage: '',\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {ErrorPageTypes} from 'utils/constants.jsx';\nimport {t} from 'utils/i18n';\n\nimport ErrorLink from './error_link.jsx';\n\nexport default function ErrorMessage({type, message, service}) {\n    let errorMessage = null;\n    if (type) {\n        switch (type) {\n        case ErrorPageTypes.LOCAL_STORAGE:\n            errorMessage = (\n                <div>\n                    <FormattedMessage\n                        id='error.local_storage.message'\n                        defaultMessage='Mattermost was unable to load because a setting in your browser prevents the use of its local storage features. To allow Mattermost to load, try the following actions:'\n                    />\n                    <ul>\n                        <li>\n                            <FormattedMessage\n                                id='error.local_storage.help1'\n                                defaultMessage='Enable cookies'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='error.local_storage.help2'\n                                defaultMessage='Turn off private browsing'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='error.local_storage.help3'\n                                defaultMessage='Use a supported browser (IE 11, Chrome 43+, Firefox 38+, Safari 9, Edge)'\n                            />\n                        </li>\n                    </ul>\n                </div>\n            );\n            break;\n        case ErrorPageTypes.PERMALINK_NOT_FOUND:\n            errorMessage = (\n                <p>\n                    <FormattedMessage\n                        id='permalink.error.access'\n                        defaultMessage='Permalink belongs to a deleted message or to a channel to which you do not have access.'\n                    />\n                </p>\n            );\n            break;\n        case ErrorPageTypes.TEAM_NOT_FOUND:\n            errorMessage = (\n                <p>\n                    <FormattedMessage\n                        id='error.team_not_found.message'\n                        defaultMessage=\"The team you're requesting is private or does not exist. Please contact your Administrator for an invitation.\"\n                    />\n                </p>\n            );\n            break;\n        case ErrorPageTypes.CHANNEL_NOT_FOUND:\n            errorMessage = (\n                <p>\n                    <FormattedMessage\n                        id='error.channel_not_found.message'\n                        defaultMessage=\"The team you're requesting is private or does not exist. Please contact your Administrator for an invitation.\"\n                    />\n                </p>\n            );\n            break;\n        case ErrorPageTypes.OAUTH_MISSING_CODE:\n            errorMessage = (\n                <div>\n                    <p>\n                        <FormattedMessage\n                            id='error.oauth_missing_code'\n                            defaultMessage='The service provider {service} did not provide an authorization code in the redirect URL.'\n                            values={{\n                                service,\n                            }}\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='error.oauth_missing_code.google'\n                            defaultMessage='For {link} make sure your administrator enabled the Google+ API.'\n                            values={{\n                                link: (\n                                    <ErrorLink\n                                        url={'https://docs.mattermost.com/deployment/sso-google.html'}\n                                        messageId={t('error.oauth_missing_code.google.link')}\n                                        defaultMessage={'Google Apps'}\n                                    />\n                                ),\n                            }}\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='error.oauth_missing_code.office365'\n                            defaultMessage='For {link} make sure the administrator of your Microsoft organization has enabled the Mattermost app.'\n                            values={{\n                                link: (\n                                    <ErrorLink\n                                        url={'https://docs.mattermost.com/deployment/sso-office.html'}\n                                        messageId={t('error.oauth_missing_code.office365.link')}\n                                        defaultMessage={'Office 365'}\n                                    />\n                                ),\n                            }}\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='error.oauth_missing_code.gitlab'\n                            defaultMessage='For {link} please make sure you followed the setup instructions.'\n                            values={{\n                                link: (\n                                    <ErrorLink\n                                        url={'https://docs.mattermost.com/deployment/sso-gitlab.html'}\n                                        messageId={t('error.oauth_missing_code.gitlab.link')}\n                                        defaultMessage={'GitLab'}\n                                    />\n                                ),\n                            }}\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='error.oauth_missing_code.forum'\n                            defaultMessage=\"If you reviewed the above and are still having trouble with configuration, you may post in our {link} where we'll be happy to help with issues during setup.\"\n                            values={{\n                                link: (\n                                    <ErrorLink\n                                        url={'https://forum.mattermost.org/c/trouble-shoot'}\n                                        messageId={t('error.oauth_missing_code.forum.link')}\n                                        defaultMessage={'Troubleshooting forum'}\n                                    />\n                                ),\n                            }}\n                        />\n                    </p>\n                </div>\n            );\n            break;\n        case ErrorPageTypes.OAUTH_ACCESS_DENIED:\n            errorMessage = (\n                <p>\n                    <FormattedMessage\n                        id='error.oauth_access_denied'\n                        defaultMessage='You must authorize Mattermost to log in with {service}.'\n                        values={{\n                            service,\n                        }}\n                    />\n                </p>\n            );\n            break;\n        case ErrorPageTypes.PAGE_NOT_FOUND:\n        default:\n            errorMessage = (\n                <p>\n                    <FormattedMessage\n                        id='error.not_found.message'\n                        defaultMessage='The page you were trying to reach does not exist'\n                    />\n                </p>\n            );\n        }\n    } else if (message) {\n        errorMessage = (\n            <p>\n                {message}\n            </p>\n        );\n    } else {\n        errorMessage = (\n            <p>\n                <FormattedMessage\n                    id='error.generic.message'\n                    defaultMessage='An error has occurred.'\n                />\n            </p>\n        );\n    }\n\n    return errorMessage;\n}\n\nErrorMessage.propTypes = {\n\n    /*\n    * Error type\n    */\n    type: PropTypes.string,\n\n    /*\n    * Error message\n    */\n    message: PropTypes.string,\n\n    /*\n    * Service provider\n    */\n    service: PropTypes.string,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport crypto from 'crypto';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {ErrorPageTypes, Constants} from 'utils/constants.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport ErrorTitle from './error_title.jsx';\nimport ErrorMessage from './error_message.jsx';\n\nexport default class ErrorPage extends React.PureComponent {\n    static propTypes = {\n        location: PropTypes.object.isRequired,\n        asymmetricSigningPublicKey: PropTypes.string,\n        siteName: PropTypes.string,\n    };\n\n    componentDidMount() {\n        document.body.setAttribute('class', 'sticky error');\n    }\n\n    componentWillUnmount() {\n        document.body.removeAttribute('class');\n    }\n\n    render() {\n        const params = new URLSearchParams(this.props.location.search);\n        const signature = params.get('s');\n\n        var trustParams = false;\n        if (signature) {\n            params.delete('s');\n\n            const key = this.props.asymmetricSigningPublicKey;\n            const keyPEM = '-----BEGIN PUBLIC KEY-----\\n' + key + '\\n-----END PUBLIC KEY-----';\n\n            const verify = crypto.createVerify('sha256');\n            verify.update('/error?' + params.toString());\n            trustParams = verify.verify(keyPEM, signature, 'base64');\n        }\n\n        const type = params.get('type');\n        const title = (trustParams && params.get('title')) || '';\n        const message = (trustParams && params.get('message')) || '';\n        const service = (trustParams && params.get('service')) || '';\n        const returnTo = (trustParams && params.get('returnTo')) || '';\n\n        let backButton;\n        if (type === ErrorPageTypes.PERMALINK_NOT_FOUND && returnTo) {\n            backButton = (\n                <Link to={returnTo}>\n                    <FormattedMessage\n                        id='error.generic.link'\n                        defaultMessage='Back to Mattermost'\n                    />\n                </Link>\n            );\n        } else if (type === ErrorPageTypes.TEAM_NOT_FOUND) {\n            backButton = (\n                <Link to='/'>\n                    <FormattedMessage\n                        id='error.generic.link'\n                        defaultMessage='Back to {siteName}'\n                        values={{\n                            siteName: this.props.siteName,\n                        }}\n                    />\n                </Link>\n            );\n        } else if (type === ErrorPageTypes.CHANNEL_NOT_FOUND) {\n            backButton = (\n                <Link to={params.get('returnTo')}>\n                    <FormattedMessage\n                        id='error.channelNotFound.link'\n                        defaultMessage='Back to {defaultChannelName}'\n                        values={{\n                            defaultChannelName: Constants.DEFAULT_CHANNEL_UI_NAME,\n                        }}\n                    />\n                </Link>\n            );\n        } else if (type === ErrorPageTypes.OAUTH_ACCESS_DENIED || type === ErrorPageTypes.OAUTH_MISSING_CODE) {\n            backButton = (\n                <Link to='/'>\n                    <FormattedMessage\n                        id='error.generic.link_login'\n                        defaultMessage='Back to login page'\n                    />\n                </Link>\n            );\n        } else {\n            backButton = (\n                <Link to='/'>\n                    <FormattedMessage\n                        id='error.generic.link'\n                        defaultMessage='Back to {siteName}'\n                        values={{\n                            siteName: this.props.siteName,\n                        }}\n                    />\n                </Link>\n            );\n        }\n\n        return (\n            <div className='container-fluid'>\n                <div className='error__container'>\n                    <div className='error__icon'>\n                        <i\n                            className='fa fa-exclamation-triangle'\n                            title={localizeMessage('generic_icons.warning', 'Warning Icon')}\n                        />\n                    </div>\n                    <h2>\n                        <ErrorTitle\n                            type={type}\n                            title={title}\n                        />\n                    </h2>\n                    <ErrorMessage\n                        type={type}\n                        message={message}\n                        service={service}\n                    />\n                    {backButton}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport ErrorPage from './error_page.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    return {\n        siteName: config.SiteName,\n        asymmetricSigningPublicKey: config.AsymmetricSigningPublicKey,\n    };\n}\n\nexport default connect(mapStateToProps)(ErrorPage);\n"],"sourceRoot":""}