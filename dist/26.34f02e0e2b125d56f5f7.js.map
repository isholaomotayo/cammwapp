{"version":3,"sources":["webpack:///./components/authorize.jsx"],"names":["Authorize","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","handleAllow","bind","_assertThisInitialized","handleDeny","state","React","Component","location","PropTypes","object","isRequired","params","_this2","clientId","URLSearchParams","search","get","test","getOAuthAppInfo","app","setState","blocker","document","getElementById","parentNode","removeChild","_this3","allowOAuth2","data","redirect","window","href","err","error","message","redirectUri","startsWith","browserHistory","replace","icon","icon_url","icon50","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","components_form_error_jsx__WEBPACK_IMPORTED_MODULE_11__","src","width","height","alt","components_formatted_markdown_message_jsx__WEBPACK_IMPORTED_MODULE_13__","id","defaultMessage","values","appName","name","type","onClick","react_intl__WEBPACK_IMPORTED_MODULE_8__"],"mappings":"ojCAcqBA,cAQjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACfE,uEAAAG,CAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KAEDO,YAAcN,EAAKM,YAAYC,KAAjBC,IAAAR,KACnBA,EAAKS,WAAaT,EAAKS,WAAWF,KAAhBC,IAAAR,KAElBA,EAAKU,SANUV,8OARgBW,IAAMC,qDAErC,OACIC,SAAUC,IAAUC,OAAOC,WAC3BC,OAAQH,IAAUC,OAAOC,uEAaL,IAAAE,EAAAhB,KAClBiB,EAAY,IAAIC,gBAAgBlB,KAAKH,MAAMc,SAASQ,QAASC,IAAI,aAChE,cAAeC,KAAKJ,IAI3BK,YACIL,EACA,SAACM,GACGP,EAAKQ,UAAUD,sDAOvB,IAAME,EAAUC,SAASC,eAAe,iBACpCF,GACAA,EAAQG,WAAWC,YAAYJ,yCAIzB,IAAAK,EAAA9B,KACJe,EAAS,IAAIG,gBAAgBlB,KAAKH,MAAMc,SAASQ,QAEvDY,YAAYhB,EACR,SAACiB,GACOA,EAAKC,WACLC,OAAOvB,SAASwB,KAAOH,EAAKC,WAGpC,SAACG,GACGN,EAAKN,UAAUa,MAAOD,EAAIE,iDAMlC,IAAMC,EAAe,IAAIrB,gBAAgBlB,KAAKH,MAAMc,SAASQ,QAASC,IAAI,gBACtEmB,EAAYC,WAAW,aAAeD,EAAYC,WAAW,WAC7DN,OAAOvB,SAASwB,KAAOI,EAAc,uBAIzCE,IAAeC,QAAQ,2CAIvB,IAKIC,EAOAN,EAZEd,EAAMvB,KAAKQ,MAAMe,IACvB,OAAKA,GAMDoB,EADApB,EAAIqB,SACGrB,EAAIqB,SAEJC,IAIP7C,KAAKQ,MAAM6B,QACXA,EACIS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAACE,EAAA,GAAUb,MAAOrC,KAAKQ,MAAM6B,UAMrCS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OACIG,IAAKR,EACLS,MAAM,KACNC,OAAO,KACPC,IAAI,MAGZR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACO,EAAA,GACGC,GAAG,kBACHC,eAAe,0EACfC,QACIC,QAASpC,EAAIqC,UAK7Bd,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACO,EAAA,GACGC,GAAG,gBACHC,eAAe,4FACfC,QACIC,QAASpC,EAAIqC,SAIzBd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACVH,EAAAC,EAAAC,cAACO,EAAA,GACGC,GAAG,mBACHC,eAAe,8BACfC,QACIC,QAASpC,EAAIqC,SAIzBd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,UACIa,KAAK,SACLZ,UAAU,6BACVa,QAAS9D,KAAKO,YAEduC,EAAAC,EAAAC,cAACe,EAAA,GACGP,GAAG,iBACHC,eAAe,UAGvBX,EAAAC,EAAAC,cAAA,UACIa,KAAK,SACLZ,UAAU,gCACVa,QAAS9D,KAAKI,aAEd0C,EAAAC,EAAAC,cAACe,EAAA,GACGP,GAAG,kBACHC,eAAe,YAI1BpB,KAjFF","file":"26.34f02e0e2b125d56f5f7.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {allowOAuth2, getOAuthAppInfo} from 'actions/admin_actions.jsx';\nimport icon50 from 'images/icon50x50.png';\nimport FormError from 'components/form_error.jsx';\nimport {browserHistory} from 'utils/browser_history';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nexport default class Authorize extends React.Component {\n    static get propTypes() {\n        return {\n            location: PropTypes.object.isRequired,\n            params: PropTypes.object.isRequired,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleAllow = this.handleAllow.bind(this);\n        this.handleDeny = this.handleDeny.bind(this);\n\n        this.state = {};\n    }\n\n    UNSAFE_componentWillMount() { // eslint-disable-line camelcase\n        const clientId = (new URLSearchParams(this.props.location.search)).get('client_id');\n        if (!((/^[a-z0-9]+$/).test(clientId))) {\n            return;\n        }\n\n        getOAuthAppInfo(\n            clientId,\n            (app) => {\n                this.setState({app});\n            }\n        );\n    }\n\n    componentDidMount() {\n        // if we get to this point remove the antiClickjack blocker\n        const blocker = document.getElementById('antiClickjack');\n        if (blocker) {\n            blocker.parentNode.removeChild(blocker);\n        }\n    }\n\n    handleAllow() {\n        const params = new URLSearchParams(this.props.location.search);\n\n        allowOAuth2(params,\n            (data) => {\n                if (data.redirect) {\n                    window.location.href = data.redirect;\n                }\n            },\n            (err) => {\n                this.setState({error: err.message});\n            }\n        );\n    }\n\n    handleDeny() {\n        const redirectUri = (new URLSearchParams(this.props.location.search)).get('redirect_uri');\n        if (redirectUri.startsWith('https://') || redirectUri.startsWith('http://')) {\n            window.location.href = redirectUri + '?error=access_denied';\n            return;\n        }\n\n        browserHistory.replace('/error');\n    }\n\n    render() {\n        const app = this.state.app;\n        if (!app) {\n            return null;\n        }\n\n        let icon;\n        if (app.icon_url) {\n            icon = app.icon_url;\n        } else {\n            icon = icon50;\n        }\n\n        let error;\n        if (this.state.error) {\n            error = (\n                <div className='prompt__error form-group'>\n                    <FormError error={this.state.error}/>\n                </div>\n            );\n        }\n\n        return (\n            <div className='container-fluid'>\n                <div className='prompt'>\n                    <div className='prompt__heading'>\n                        <div className='prompt__app-icon'>\n                            <img\n                                src={icon}\n                                width='50'\n                                height='50'\n                                alt=''\n                            />\n                        </div>\n                        <div className='text'>\n                            <FormattedMarkdownMessage\n                                id='authorize.title'\n                                defaultMessage='**{appName}** would like to connect to your **Mattermost** user account'\n                                values={{\n                                    appName: app.name,\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='authorize.app'\n                            defaultMessage='The app **{appName}** would like the ability to access and modify your basic information.'\n                            values={{\n                                appName: app.name,\n                            }}\n                        />\n                    </p>\n                    <h2 className='prompt__allow'>\n                        <FormattedMarkdownMessage\n                            id='authorize.access'\n                            defaultMessage='Allow **{appName}** access?'\n                            values={{\n                                appName: app.name,\n                            }}\n                        />\n                    </h2>\n                    <div className='prompt__buttons'>\n                        <button\n                            type='submit'\n                            className='btn btn-link authorize-btn'\n                            onClick={this.handleDeny}\n                        >\n                            <FormattedMessage\n                                id='authorize.deny'\n                                defaultMessage='Deny'\n                            />\n                        </button>\n                        <button\n                            type='submit'\n                            className='btn btn-primary authorize-btn'\n                            onClick={this.handleAllow}\n                        >\n                            <FormattedMessage\n                                id='authorize.allow'\n                                defaultMessage='Allow'\n                            />\n                        </button>\n                    </div>\n                    {error}\n                </div>\n            </div>\n        );\n    }\n}\n"],"sourceRoot":""}