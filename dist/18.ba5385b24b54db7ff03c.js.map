{"version":3,"sources":["webpack:///./components/terms_of_service/terms_of_service.jsx","webpack:///./components/terms_of_service/index.js"],"names":["TermsOfService","props","_this","_classCallCheck","this","_defineProperty","_assertThisInitialized","_possibleConstructorReturn","_getPrototypeOf","call","setState","customTermsOfServiceId","customTermsOfServiceText","loading","getTermsOfService","data","id","text","GlobalActions","concat","Constants","GET_TERMS_ERROR","e","preventDefault","loadingAgree","serverError","registerUserAction","redirectTo","URLSearchParams","location","search","get","match","browserHistory","push","loadingDisagree","TERMS_REJECTED","accepted","success","updateTermsOfServiceStatus","state","react_default","a","createElement","index_es","defaultMessage","formattedText","memoizeResult","formatText","React","PureComponent","termsEnabled","loading_screen","announcement_bar","className","href","onClick","handleLogoutClick","title","Utils","messageHtmlToComponent","mentions","ButtonGroup","Button","bsStyle","disabled","handleAcceptTerms","type","handleRejectTerms","Boolean","formatted_markdown_message","values","siteName","TermsOfServiceLink","termsOfServiceLink","PrivacyPolicyLink","privacyPolicyLink","PropTypes","string","isRequired","bool","connect","config","getConfig","CustomTermsOfServiceId","SiteName","EnableCustomTermsOfService"],"mappings":"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","file":"18.ba5385b24b54db7ff03c.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Button, ButtonGroup} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {memoizeResult} from 'mattermost-redux/utils/helpers';\n\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport {getTermsOfService, updateTermsOfServiceStatus} from 'actions/user_actions.jsx';\n\nimport AnnouncementBar from 'components/announcement_bar';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\n\nimport {browserHistory} from 'utils/browser_history';\nimport messageHtmlToComponent from 'utils/message_html_to_component';\nimport {formatText} from 'utils/text_formatting.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport {Constants} from 'utils/constants.jsx';\n\nexport default class TermsOfService extends React.PureComponent {\n    static propTypes = {\n        customTermsOfServiceId: PropTypes.string.isRequired,\n        privacyPolicyLink: PropTypes.string,\n        siteName: PropTypes.string,\n        termsEnabled: PropTypes.bool,\n        termsOfServiceLink: PropTypes.string,\n    };\n\n    static defaultProps = {\n        privacyPolicyLink: 'https://about.mattermost.com/default-privacy-policy/',\n        siteName: 'Mattermost',\n        termsEnabled: true,\n        termsOfServiceLink: 'https://about.mattermost.com/default-terms/',\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            customTermsOfServiceId: '',\n            customTermsOfServiceText: '',\n            loading: true,\n            loadingAgree: false,\n            loadingDisagree: false,\n            serverError: null,\n        };\n\n        this.formattedText = memoizeResult((text) => formatText(text));\n    }\n\n    componentDidMount() {\n        if (this.props.termsEnabled) {\n            this.getTermsOfService();\n        } else {\n            GlobalActions.redirectUserToDefaultTeam();\n        }\n    }\n\n    getTermsOfService = () => {\n        this.setState({\n            customTermsOfServiceId: '',\n            customTermsOfServiceText: '',\n            loading: true,\n        });\n        getTermsOfService(\n            (data) => {\n                this.setState({\n                    customTermsOfServiceId: data.id,\n                    customTermsOfServiceText: data.text,\n                    loading: false,\n                });\n            },\n            () => {\n                GlobalActions.emitUserLoggedOutEvent(`/login?extra=${Constants.GET_TERMS_ERROR}`);\n            }\n        );\n    };\n\n    handleLogoutClick = (e) => {\n        e.preventDefault();\n        GlobalActions.emitUserLoggedOutEvent('/login');\n    };\n\n    handleAcceptTerms = () => {\n        this.setState({\n            loadingAgree: true,\n            serverError: null,\n        });\n        this.registerUserAction(\n            true,\n            () => {\n                const query = new URLSearchParams(this.props.location.search);\n                const redirectTo = query.get('redirect_to');\n                if (redirectTo && redirectTo.match(/^\\/([^/]|$)/)) {\n                    browserHistory.push(redirectTo);\n                } else {\n                    GlobalActions.redirectUserToDefaultTeam();\n                }\n            }\n        );\n    };\n\n    handleRejectTerms = () => {\n        this.setState({\n            loadingDisagree: true,\n            serverError: null,\n        });\n        this.registerUserAction(\n            false,\n            () => {\n                GlobalActions.emitUserLoggedOutEvent(`/login?extra=${Constants.TERMS_REJECTED}`);\n            }\n        );\n    };\n\n    registerUserAction = (accepted, success) => {\n        updateTermsOfServiceStatus(\n            this.state.customTermsOfServiceId,\n            accepted,\n            success,\n            () => {\n                this.setState({\n                    loadingAgree: false,\n                    loadingDisagree: false,\n                    serverError: (\n                        <FormattedMessage\n                            id='terms_of_service.api_error'\n                            defaultMessage='Unable to complete the request. If this issue persists, contact your System Administrator.'\n                        />\n                    ),\n                });\n            },\n        );\n    };\n\n    render() {\n        if (this.state.loading) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <div>\n                <AnnouncementBar/>\n                <div className='signup-header'>\n                    <a\n                        href='#'\n                        onClick={this.handleLogoutClick}\n                    >\n                        <span\n                            className='fa fa-chevron-left'\n                            title={Utils.localizeMessage('generic_icons.logout', 'Logout Icon')}\n                        />\n                        <FormattedMessage\n                            id='web.header.logout'\n                            defaultMessage='Logout'\n                        />\n                    </a>\n                </div>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container padding--less max-width--more'>\n                        <div>\n                            <h2>\n                                <FormattedMessage\n                                    id='terms_of_service.title'\n                                    defaultMessage={'Terms of Service'}\n                                />\n                            </h2>\n                        </div>\n                        <div className='signup__markdown min-height--fill'>\n                            {messageHtmlToComponent(this.formattedText(this.state.customTermsOfServiceText), false, {mentions: false})}\n                        </div>\n                        <div className='margin--extra'>\n                            <ButtonGroup>\n                                <Button\n                                    bsStyle={'primary'}\n                                    disabled={this.state.loadingAgree || this.state.loadingDisagree}\n                                    id='acceptTerms'\n                                    onClick={this.handleAcceptTerms}\n                                    type='submit'\n                                >\n                                    {this.state.loadingAgree && (\n                                        <span\n                                            className='fa fa-refresh icon--rotate'\n                                            title={Utils.localizeMessage('generic_icons.loading', 'Loading Icon')}\n                                        />\n                                    )}\n                                    <FormattedMessage\n                                        id='terms_of_service.agreeButton'\n                                        defaultMessage={'I Agree'}\n                                    />\n                                </Button>\n                                <Button\n                                    bsStyle={'link'}\n                                    disabled={this.state.loadingAgree || this.state.loadingDisagree}\n                                    id='rejectTerms'\n                                    onClick={this.handleRejectTerms}\n                                    type='reset'\n                                >\n                                    {this.state.loadingDisagree && (\n                                        <span\n                                            className='fa fa-refresh icon--rotate'\n                                            title={Utils.localizeMessage('generic_icons.loading', 'Loading Icon')}\n                                        />\n                                    )}\n                                    <FormattedMessage\n                                        id='terms_of_service.disagreeButton'\n                                        defaultMessage={'I Disagree'}\n                                    />\n                                </Button>\n                            </ButtonGroup>\n                            {Boolean(this.state.serverError) && (\n                                <div className='alert alert-warning margin--extra hidden-xs'>\n                                    <i\n                                        className='fa fa-exclamation-triangle'\n                                        title={Utils.localizeMessage('generic_icons.warning', 'Warning Icon')}\n                                    />\n                                    {' '}\n                                    {this.state.serverError}\n                                </div>\n                            )}\n                        </div>\n                        <div className='margin--extra'>\n                            <FormattedMarkdownMessage\n                                id='terms_of_service.footnote'\n                                defaultMessage={'By choosing \\'I Agree\\', you understand and agree to [Terms of Service]({TermsOfServiceLink}) and [Privacy Policy]({PrivacyPolicyLink}). If you do not agree, you cannot access {siteName}.'}\n                                values={{\n                                    siteName: this.props.siteName,\n                                    TermsOfServiceLink: this.props.termsOfServiceLink,\n                                    PrivacyPolicyLink: this.props.privacyPolicyLink,\n                                }}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport TermsOfService from './terms_of_service';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    return {\n        customTermsOfServiceId: config.CustomTermsOfServiceId,\n        privacyPolicyLink: config.PrivacyPolicyLink,\n        siteName: config.SiteName,\n        termsEnabled: config.EnableCustomTermsOfService === 'true',\n        termsOfServiceLink: config.TermsOfServiceLink,\n    };\n}\n\nexport default connect(mapStateToProps)(TermsOfService);\n"],"sourceRoot":""}