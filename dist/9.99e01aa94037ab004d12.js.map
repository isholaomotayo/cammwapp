{"version":3,"sources":["webpack:///./images/incoming_webhook.jpg","webpack:///./images/oauth_icon.png","webpack:///./images/outgoing_webhook.jpg","webpack:///./images/slash_command_icon.jpg","webpack:///./node_modules/react-router-dom/es/NavLink.js","webpack:///./components/integrations/integration_option.jsx","webpack:///./components/integrations/integrations.jsx","webpack:///./components/integrations/index.js","webpack:///./components/delete_modal_trigger.jsx","webpack:///./components/emoji/delete_emoji_modal.jsx","webpack:///./components/emoji/emoji_list_item/emoji_list_item.jsx","webpack:///./components/emoji/emoji_list_item/index.js","webpack:///./components/emoji/emoji_list/emoji_list.jsx","webpack:///./components/emoji/emoji_list/index.js","webpack:///./components/emoji/emoji_page.jsx","webpack:///./components/emoji/index.js","webpack:///./components/backstage/components/backstage_header.jsx","webpack:///./components/spinner_button.jsx","webpack:///./components/emoji/add_emoji/add_emoji.jsx","webpack:///./components/emoji/add_emoji/index.js","webpack:///./components/backstage/components/backstage_list.jsx","webpack:///./components/copy_text.jsx","webpack:///./components/integrations/delete_integration.jsx","webpack:///./components/integrations/installed_incoming_webhook.jsx","webpack:///./components/integrations/installed_incoming_webhooks/installed_incoming_webhooks.jsx","webpack:///./components/integrations/installed_incoming_webhooks/index.js","webpack:///./components/channel_select/channel_select.jsx","webpack:///./components/channel_select/index.js","webpack:///./components/integrations/abstract_incoming_webhook.jsx","webpack:///./components/integrations/add_incoming_webhook/add_incoming_webhook.jsx","webpack:///./components/integrations/add_incoming_webhook/index.js","webpack:///./components/integrations/edit_incoming_webhook/edit_incoming_webhook.jsx","webpack:///./components/integrations/edit_incoming_webhook/index.js","webpack:///./components/integrations/installed_outgoing_webhook.jsx","webpack:///./components/integrations/installed_outgoing_webhooks/installed_outgoing_webhooks.jsx","webpack:///./components/integrations/installed_outgoing_webhooks/index.js","webpack:///./components/integrations/abstract_outgoing_webhook.jsx","webpack:///./components/integrations/add_outgoing_webhook/add_outgoing_webhook.jsx","webpack:///./components/integrations/add_outgoing_webhook/index.js","webpack:///./components/integrations/edit_outgoing_webhook/edit_outgoing_webhook.jsx","webpack:///./components/integrations/edit_outgoing_webhook/index.js","webpack:///./components/integrations/installed_oauth_app.jsx","webpack:///./components/integrations/installed_oauth_apps/installed_oauth_apps.jsx","webpack:///./components/integrations/installed_oauth_apps/index.js","webpack:///./components/integrations/abstract_oauth_app.jsx","webpack:///./components/integrations/add_oauth_app/add_oauth_app.jsx","webpack:///./components/integrations/add_oauth_app/index.js","webpack:///./components/integrations/edit_oauth_app/edit_oauth_app.jsx","webpack:///./components/integrations/edit_oauth_app/index.js","webpack:///./components/integrations/installed_command.jsx","webpack:///./components/integrations/installed_commands/installed_commands.jsx","webpack:///./components/integrations/installed_commands/index.js","webpack:///./components/integrations/abstract_command.jsx","webpack:///./components/integrations/add_command/add_command.jsx","webpack:///./components/integrations/add_command/index.js","webpack:///./components/integrations/edit_command/edit_command.jsx","webpack:///./components/integrations/edit_command/index.js","webpack:///./components/integrations/confirm_integration/confirm_integration.jsx","webpack:///./components/integrations/confirm_integration/index.js","webpack:///./components/integrations/commands_container/commands_container.jsx","webpack:///./components/integrations/commands_container/index.js","webpack:///./components/backstage/components/backstage_category.jsx","webpack:///./components/backstage/components/backstage_section.jsx","webpack:///./components/backstage/components/backstage_sidebar.jsx","webpack:///./components/backstage/components/backstage_navbar.jsx","webpack:///./components/backstage/backstage_controller.jsx","webpack:///./components/backstage/index.js","webpack:///./node_modules/mattermost-redux/selectors/entities/integrations.js"],"names":["module","exports","__webpack_require__","p","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_Route__WEBPACK_IMPORTED_MODULE_2__","_Link__WEBPACK_IMPORTED_MODULE_3__","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_typeof","Symbol","iterator","obj","constructor","NavLink","_ref","to","exact","strict","location","activeClassName","className","activeStyle","style","getIsActive","isActive","ariaCurrent","rest","keys","indexOf","_objectWithoutProperties","path","pathname","escapedPath","replace","a","createElement","children","_ref2","match","filter","join","aria-current","propTypes","bool","object","string","func","oneOf","defaultProps","__webpack_exports__","IntegrationOption","React","Component","_this$props","this","props","image","title","description","link","react_default","Link","src","PropTypes","isRequired","node","Integrations","currentSiteName","_this","siteName","document","Utils","team","display_name","updateTitle","options","enableIncomingWebhooks","push","team_permission_gate","teamId","id","permissions","Permissions","MANAGE_WEBHOOKS","integration_option_IntegrationOption","IncomingWebhookIcon","index_es","defaultMessage","name","enableOutgoingWebhooks","OutgoingWebhookIcon","enableCommands","MANAGE_SLASH_COMMANDS","SlashCommandIcon","enableOAuthServiceProvider","system_permission_gate","MANAGE_OAUTH","OAuthIcon","values","appDirectory","rel","href","user","enableOnlyAdminIntegrations","connect","state","config","getConfig","SiteName","EnableIncomingWebhooks","EnableOutgoingWebhooks","EnableCommands","EnableOAuthServiceProvider","EnableOnlyAdminIntegrations","DeleteModalTrigger","delete_modal_trigger_classCallCheck","delete_modal_trigger_defineProperty","delete_modal_trigger_assertThisInitialized","delete_modal_trigger_possibleConstructorReturn","delete_modal_trigger_getPrototypeOf","e","preventDefault","setState","showDeleteModal","onDelete","Constants","KeyCodes","ENTER","handleConfirm","TypeError","PureComponent","onClick","handleOpenModal","triggerTitle","confirm_modal","show","modalTitle","message","modalMessage","confirmButtonText","modalConfirmButton","onConfirm","onCancel","handleCancel","onKeyDown","handleKeyDown","DeleteEmoji","localizeMessage","EmojiListItem","emoji","actions","deleteCustomEmoji","creatorUsername","creatorDisplayName","deleteButton","creator_id","currentUserId","currentTeam","MANAGE_EMOJIS","delete_emoji_modal_DeleteEmoji","handleDelete","MANAGE_OTHERS_EMOJIS","backgroundImage","Client4","getCustomEmojiImageUrl","shape","ownProps","entities","emojis","customEmoji","emojiId","creator","getUser","getDisplayNameByUser","username","getCurrentUserId","getCurrentTeam","dispatch","bindActionCreators","EMOJI_PER_PAGE","EMOJI_SEARCH_DELAY_MILLISECONDS","EmojiList","emoji_list_classCallCheck","emoji_list_defineProperty","emoji_list_assertThisInitialized","emoji_list_possibleConstructorReturn","emoji_list_getPrototypeOf","next","page","nextLoading","getCustomEmojis","Emoji","SORT_BY_NAME","then","data","missingPages","scrollToTop","term","value","clearTimeout","searchTimeout","setTimeout","_asyncToGenerator","regeneratorRuntime","mark","_callee","_ref3","wrap","_context","prev","trim","searchEmojis","abrupt","loading","searchCustomEmojis","sent","map","em","stop","index","newSearchEmojis","_toConsumableArray","splice","_this2","_ref4","nextButton","previousButton","_this3","colSpan","loading_screen","emojiIds","forEach","emoji_list_item","deleteFromSearch","pageStart","pageEnd","slice","buttonContents","save_button","btnClass","extraClasses","nextPage","saving","disabled","savingMessage","previousPage","type","placeholder","onChange","onSearchChange","search","arrayOf","flexGrow","flexShrink","getCustomEmojiIdsSortedByName","EmojiPage","undefined","teamDisplayName","loadRolesIfNeeded","nextProps","teamName","emoji_list","general","BackstageHeader","Children","child","SpinnerButton","spinning","loadingGif","AddEmoji","add_emoji_classCallCheck","add_emoji_defineProperty","add_emoji_assertThisInitialized","add_emoji_possibleConstructorReturn","add_emoji_getPrototypeOf","error","toLowerCase","startsWith","endsWith","substring","test","emojiMap","hasSystemEmoji","EmojiActions","history","err","files","reader","FileReader","onload","imageUrl","result","readAsDataURL","filename","preview","htmlFor","backstage_header_BackstageHeader","onSubmit","handleSubmit","maxLength","updateName","accept","multiple","updateImage","form_error","spinner_button_SpinnerButton","router","getEmojiMap","BackstageList","backstage_list_classCallCheck","backstage_list_possibleConstructorReturn","backstage_list_getPrototypeOf","updateFilter","bind","backstage_list_assertThisInitialized","cloneElement","emptyText","addLink","addText","header","searchPlaceholder","helpText","CopyText","copyToClipboard","queryCommandSupported","tooltip","Tooltip","idMessage","OverlayTrigger","trigger","delayShow","OVERLAY_TIME_DELAY","placement","overlay","copyText","DeleteIntegration","messageId","InstalledIncomingWebhook","installed_incoming_webhook_classCallCheck","installed_incoming_webhook_possibleConstructorReturn","installed_incoming_webhook_getPrototypeOf","installed_incoming_webhook_assertThisInitialized","incomingWebhook","displayName","channel","matchesFilter","canChange","concat","delete_integration_DeleteIntegration","t","incomingWebhookId","getSiteURL","url","copy_text_CopyText","createAt","create_at","channel_id","InstalledIncomingWebhooks","installed_incoming_webhooks_classCallCheck","installed_incoming_webhooks_defineProperty","installed_incoming_webhooks_assertThisInitialized","installed_incoming_webhooks_possibleConstructorReturn","installed_incoming_webhooks_getPrototypeOf","removeIncomingHook","deleteIncomingWebhook","incomingWebhookCompare","getIncomingHooks","START_PAGE_NUM","PAGE_SIZE","b","displayNameA","channelA","channels","displayNameB","localeCompare","incomingWebhooks","sort","canManageOthersWebhooks","user_id","installed_incoming_webhook_InstalledIncomingWebhook","users","backstage_list_BackstageList","buildYourOwn","array","getCurrentTeamId","haveITeamPermission","permission","MANAGE_OTHERS_WEBHOOKS","incomingHooks","team_id","getAllChannels","getUsers","Actions","ChannelSelect","channelName","OPEN_CHANNEL","selectOpen","PRIVATE_CHANNEL","selectPrivate","DM_CHANNEL","selectDm","getMyChannelsSorted","createSelector","getMyChannels","getCurrentUserLocale","locale","channel_select_toConsumableArray","sortChannelsByTypeAndDisplayName","AbstractIncomingWebhook","abstract_incoming_webhook_classCallCheck","abstract_incoming_webhook_defineProperty","abstract_incoming_webhook_assertThisInitialized","abstract_incoming_webhook_possibleConstructorReturn","abstract_incoming_webhook_getPrototypeOf","hook","channelId","channelLocked","channel_locked","iconURL","icon_url","serverError","clientError","action","checked","getStateFromHook","initialHook","headerToRender","footerToRender","footer","updateDisplayName","updateDescription","channel_select","updateChannelId","updateChannelLocked","enablePostUsernameOverride","updateUsername","enablePostIconOverride","updateIconURL","errors","HEADER","FOOTER","AddIncomingWebhook","add_incoming_webhook_classCallCheck","add_incoming_webhook_defineProperty","add_incoming_webhook_assertThisInitialized","add_incoming_webhook_possibleConstructorReturn","add_incoming_webhook_getPrototypeOf","add_incoming_webhook_asyncToGenerator","createIncomingHook","browserHistory","createIncomingHookRequest","_x","apply","abstract_incoming_webhook_AbstractIncomingWebhook","addIncomingHook","EnablePostUsernameOverride","EnablePostIconOverride","requests","integrations","EditIncomingWebhook","edit_incoming_webhook_classCallCheck","edit_incoming_webhook_defineProperty","edit_incoming_webhook_assertThisInitialized","edit_incoming_webhook_possibleConstructorReturn","edit_incoming_webhook_getPrototypeOf","edit_incoming_webhook_asyncToGenerator","newHook","token","submitHook","_callee2","_context2","updateIncomingHook","updateIncomingHookRequest","showConfirmModal","getIncomingHook","hookId","editIncomingHook","URLSearchParams","get","InstalledOutgoingWebhook","installed_outgoing_webhook_classCallCheck","installed_outgoing_webhook_possibleConstructorReturn","installed_outgoing_webhook_getPrototypeOf","handleRegenToken","installed_outgoing_webhook_assertThisInitialized","onRegenToken","outgoingWebhook","triggerWords","trigger_words","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","done","return","makeDisplayName","triggerWhen","urls","callback_urls","trigger_when","contentType","content_type","InstalledOutgoingWebhooks","installed_outgoing_webhooks_classCallCheck","installed_outgoing_webhooks_defineProperty","installed_outgoing_webhooks_assertThisInitialized","installed_outgoing_webhooks_possibleConstructorReturn","installed_outgoing_webhooks_getPrototypeOf","regenOutgoingHookToken","removeOutgoingHook","outgoingWebhookCompare","getOutgoingHooks","channelB","outgoingWebhooks","installed_outgoing_webhook_InstalledOutgoingWebhook","regenOutgoingWebhookToken","outgoingHooks","AbstractOutgoingWebhook","abstract_outgoing_webhook_classCallCheck","abstract_outgoing_webhook_defineProperty","abstract_outgoing_webhook_assertThisInitialized","abstract_outgoing_webhook_possibleConstructorReturn","abstract_outgoing_webhook_getPrototypeOf","callbackUrls","split","triggerWord","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","callbackUrl","TeamStore","getCurrentId","parseInt","renderExtra","updateContentType","rows","updateTriggerWords","updateTriggerWhen","updateCallbackUrls","AddOutgoingWebhook","add_outgoing_webhook_classCallCheck","add_outgoing_webhook_defineProperty","add_outgoing_webhook_assertThisInitialized","add_outgoing_webhook_possibleConstructorReturn","add_outgoing_webhook_getPrototypeOf","add_outgoing_webhook_asyncToGenerator","createOutgoingHook","createOutgoingHookRequest","abstract_outgoing_webhook_AbstractOutgoingWebhook","addOutgoingHook","EditOutgoingWebhook","edit_outgoing_webhook_classCallCheck","edit_outgoing_webhook_defineProperty","edit_outgoing_webhook_assertThisInitialized","edit_outgoing_webhook_possibleConstructorReturn","edit_outgoing_webhook_getPrototypeOf","edit_outgoing_webhook_asyncToGenerator","triggerWordsSame","callbackUrlsSame","every","v","handleConfirmModal","updateOutgoingHook","updateOutgoingHookRequest","confirmButton","confirmTitle","confirmMessage","confirmModalDismissed","getOutgoingHook","editOutgoingHook","FAKE_SECRET","InstalledOAuthApp","installed_oauth_app_classCallCheck","installed_oauth_app_defineProperty","installed_oauth_app_assertThisInitialized","installed_oauth_app_possibleConstructorReturn","installed_oauth_app_getPrototypeOf","clientSecret","oauthApp","client_secret","onRegenerateSecret","regenOAuthAppSecretRequest","handleShowClientSecret","isTrusted","showHide","is_trusted","handleHideClientSecret","formatted_markdown_message","icon","regen","handleRegenerate","clientId","InstalledOAuthApps","installed_oauth_apps_classCallCheck","installed_oauth_apps_defineProperty","installed_oauth_apps_assertThisInitialized","installed_oauth_apps_possibleConstructorReturn","installed_oauth_apps_getPrototypeOf","app","deleteOAuthApp","getOAuthApps","nameA","nameB","oauthApps","oauthAppCompare","installed_oauth_app_InstalledOAuthApp","regenOAuthAppSecret","canManageOauth","oauthApplications","haveISystemPermission","updateOAuthApp","AbstractOAuthApp","abstract_oauth_app_classCallCheck","abstract_oauth_app_defineProperty","abstract_oauth_app_assertThisInitialized","abstract_oauth_app_possibleConstructorReturn","abstract_oauth_app_getPrototypeOf","homepage","has_icon","Boolean","refs","Image","imageLoaded","getStateFromApp","initialApp","trusted","MANAGE_SYSTEM","updateTrusted","updateHomepage","ref","updateIconUrl","AddOAuthApp","add_oauth_app_classCallCheck","add_oauth_app_defineProperty","add_oauth_app_assertThisInitialized","add_oauth_app_possibleConstructorReturn","add_oauth_app_getPrototypeOf","add_oauth_app_asyncToGenerator","addOAuthApp","addOAuthAppRequest","abstract_oauth_app_AbstractOAuthApp","EditOAuthApp","edit_oauth_app_classCallCheck","edit_oauth_app_defineProperty","edit_oauth_app_assertThisInitialized","edit_oauth_app_possibleConstructorReturn","edit_oauth_app_getPrototypeOf","edit_oauth_app_asyncToGenerator","newApp","submitOAuthApp","editOAuthApp","getOAuthApp","oauthAppId","InstalledCommand","command","auto_complete","auto_complete_hint","commandToken","InstalledCommands","regenCommandToken","deleteCommand","commands","commandCompare","canManageOthersSlashCommands","installed_command_InstalledCommand","MANAGE_OTHERS_SLASH_COMMANDS","REQUEST_POST","AbstractCommand","abstract_command_classCallCheck","abstract_command_defineProperty","abstract_command_assertThisInitialized","abstract_command_possibleConstructorReturn","abstract_command_getPrototypeOf","method","iconUrl","autocomplete","autocompleteHint","autocompleteDescription","auto_complete_desc","substr","MIN_TRIGGER_LENGTH","MAX_TRIGGER_LENGTH","min","max","getStateFromCommand","initialCommand","updateAutocompleteHint","updateAutocompleteDescription","updateTrigger","updateUrl","updateMethod","updateAutocomplete","AddCommand","add_command_classCallCheck","add_command_defineProperty","add_command_assertThisInitialized","add_command_possibleConstructorReturn","add_command_getPrototypeOf","add_command_asyncToGenerator","addCommand","abstract_command_AbstractCommand","EditCommand","edit_command_classCallCheck","edit_command_defineProperty","edit_command_assertThisInitialized","edit_command_possibleConstructorReturn","edit_command_getPrototypeOf","edit_command_asyncToGenerator","newCommand","originalCommand","submitCommand","editCommand","getCustomTeamCommands","commandId","getCommands","ConfirmIntegration","confirm_integration_classCallCheck","confirm_integration_defineProperty","confirm_integration_assertThisInitialized","confirm_integration_possibleConstructorReturn","confirm_integration_getPrototypeOf","window","addEventListener","handleKeyPress","removeEventListener","headerText","tokenText","incomingHook","outgoingHook","COMMAND","INCOMING_WEBHOOK","incomingHookToken","OUTGOING_WEBHOOK","outgoingHookToken","OAUTH_APP","ErrorPageTypes","PAGE_NOT_FOUND","oauthAppToken","oauthAppSecret","secret","CommandRoute","component","extraProps","commands_container_objectWithoutProperties","Route","render","CommandsContainer","commands_container_classCallCheck","commands_container_possibleConstructorReturn","commands_container_getPrototypeOf","Switch","Redirect","commands_container_CommandRoute","BackstageCategory","parentLink","element","BackstageSection","subsection","getLink","clonedChildren","BackstageSidebar","enableCustomEmoji","canCreateCustomEmoji","backstage_category_BackstageCategory","backstage_section_BackstageSection","renderCustomEmoji","renderIntegrations","BackstageNavbar","DEFAULT_CHANNEL","BackstageRoute","backstage_controller_objectWithoutProperties","BackstageController","listRef","scrollTop","announcement_bar","system_notice","backstage_navbar_BackstageNavbar","pluggable","pluggableName","setListRef","backstage_sidebar_BackstageSidebar","backstage_controller_BackstageRoute","AddIncomingWehook","InstalledOauthApps","AddOauthApp","EditOauthApp","withRouter","getCurrentUser","EnableCustomEmoji","getMyTeams","defineProperty","getAutocompleteCommandsList","getAllCommands","getOutgoingHooksInCurrentTeam","getSystemCommands","_reselect","_teams","systemCommands","hooks","o","currentTeamId"],"mappings":"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","file":"9.99e01aa94037ab004d12.js","sourcesContent":["module.exports = __webpack_public_path__ + \"files/fd69f7891f867c2aa14011da92b728ac.jpg\";","module.exports = __webpack_public_path__ + \"files/e9ee8de75ba7184661c37260884092fe.png\";","module.exports = __webpack_public_path__ + \"files/2aa264fb1956b8be41f2047d428a1a1e.jpg\";","module.exports = __webpack_public_path__ + \"files/d184fcdb23c1e24bfd7132950ceb4f68.jpg\";","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Route from \"./Route\";\nimport Link from \"./Link\";\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nvar NavLink = function NavLink(_ref) {\n  var to = _ref.to,\n      exact = _ref.exact,\n      strict = _ref.strict,\n      location = _ref.location,\n      activeClassName = _ref.activeClassName,\n      className = _ref.className,\n      activeStyle = _ref.activeStyle,\n      style = _ref.style,\n      getIsActive = _ref.isActive,\n      ariaCurrent = _ref[\"aria-current\"],\n      rest = _objectWithoutProperties(_ref, [\"to\", \"exact\", \"strict\", \"location\", \"activeClassName\", \"className\", \"activeStyle\", \"style\", \"isActive\", \"aria-current\"]);\n\n  var path = (typeof to === \"undefined\" ? \"undefined\" : _typeof(to)) === \"object\" ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  var escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n\n  return React.createElement(Route, {\n    path: escapedPath,\n    exact: exact,\n    strict: strict,\n    location: location,\n    children: function children(_ref2) {\n      var location = _ref2.location,\n          match = _ref2.match;\n\n      var isActive = !!(getIsActive ? getIsActive(match, location) : match);\n\n      return React.createElement(Link, _extends({\n        to: to,\n        className: isActive ? [className, activeClassName].filter(function (i) {\n          return i;\n        }).join(\" \") : className,\n        style: isActive ? _extends({}, style, activeStyle) : style,\n        \"aria-current\": isActive && ariaCurrent || null\n      }, rest));\n    }\n  });\n};\n\nNavLink.propTypes = {\n  to: Link.propTypes.to,\n  exact: PropTypes.bool,\n  strict: PropTypes.bool,\n  location: PropTypes.object,\n  activeClassName: PropTypes.string,\n  className: PropTypes.string,\n  activeStyle: PropTypes.object,\n  style: PropTypes.object,\n  isActive: PropTypes.func,\n  \"aria-current\": PropTypes.oneOf([\"page\", \"step\", \"location\", \"date\", \"time\", \"true\"])\n};\n\nNavLink.defaultProps = {\n  activeClassName: \"active\",\n  \"aria-current\": \"page\"\n};\n\nexport default NavLink;","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport default class IntegrationOption extends React.Component {\n    static get propTypes() {\n        return {\n            image: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            description: PropTypes.node.isRequired,\n            link: PropTypes.string.isRequired,\n        };\n    }\n\n    render() {\n        const {image, title, description, link} = this.props;\n\n        return (\n            <Link\n                to={link}\n                className='integration-option'\n            >\n                <img\n                    className='integration-option__image'\n                    src={image}\n                />\n                <div className='integration-option__title'>\n                    {title}\n                </div>\n                <div className='integration-option__description'>\n                    {description}\n                </div>\n            </Link>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport * as Utils from 'utils/utils.jsx';\nimport IncomingWebhookIcon from 'images/incoming_webhook.jpg';\nimport OAuthIcon from 'images/oauth_icon.png';\nimport OutgoingWebhookIcon from 'images/outgoing_webhook.jpg';\nimport SlashCommandIcon from 'images/slash_command_icon.jpg';\n\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nimport IntegrationOption from './integration_option.jsx';\n\nexport default class Integrations extends React.Component {\n    static get propTypes() {\n        return {\n            team: PropTypes.object,\n            user: PropTypes.object,\n            siteName: PropTypes.string,\n            enableIncomingWebhooks: PropTypes.bool,\n            enableOutgoingWebhooks: PropTypes.bool,\n            enableCommands: PropTypes.bool,\n            enableOAuthServiceProvider: PropTypes.bool,\n            enableOnlyAdminIntegrations: PropTypes.bool,\n        };\n    }\n\n    componentDidMount() {\n        this.updateTitle();\n    }\n\n    updateTitle = () => {\n        const currentSiteName = this.props.siteName || '';\n        document.title = Utils.localizeMessage('admin.sidebar.integrations', 'Integrations') + ' - ' + this.props.team.display_name + ' ' + currentSiteName;\n    }\n\n    render() {\n        const options = [];\n\n        if (this.props.enableIncomingWebhooks) {\n            options.push(\n                <TeamPermissionGate\n                    teamId={this.props.team.id}\n                    permissions={[Permissions.MANAGE_WEBHOOKS]}\n                    key='incomingWebhookPermission'\n                >\n                    <IntegrationOption\n                        key='incomingWebhook'\n                        image={IncomingWebhookIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.incomingWebhook.title'\n                                defaultMessage='Incoming Webhook'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.incomingWebhook.description'\n                                defaultMessage='Incoming webhooks allow external integrations to send messages'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/incoming_webhooks'}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        if (this.props.enableOutgoingWebhooks) {\n            options.push(\n                <TeamPermissionGate\n                    teamId={this.props.team.id}\n                    permissions={[Permissions.MANAGE_WEBHOOKS]}\n                    key='outgoingWebhookPermission'\n                >\n                    <IntegrationOption\n                        key='outgoingWebhook'\n                        image={OutgoingWebhookIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.outgoingWebhook.title'\n                                defaultMessage='Outgoing Webhook'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.outgoingWebhook.description'\n                                defaultMessage='Outgoing webhooks allow external integrations to receive and respond to messages'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/outgoing_webhooks'}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        if (this.props.enableCommands) {\n            options.push(\n                <TeamPermissionGate\n                    teamId={this.props.team.id}\n                    permissions={[Permissions.MANAGE_SLASH_COMMANDS]}\n                    key='commandPermission'\n                >\n                    <IntegrationOption\n                        key='command'\n                        image={SlashCommandIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.command.title'\n                                defaultMessage='Slash Command'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.command.description'\n                                defaultMessage='Slash commands send events to an external integration'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/commands'}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        if (this.props.enableOAuthServiceProvider) {\n            options.push(\n                <SystemPermissionGate\n                    permissions={[Permissions.MANAGE_OAUTH]}\n                    key='oauth2AppsPermission'\n                >\n                    <IntegrationOption\n                        key='oauth2Apps'\n                        image={OAuthIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.oauthApps.title'\n                                defaultMessage='OAuth 2.0 Applications'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.oauthApps.description'\n                                defaultMessage='Auth 2.0 allows external applications to make authorized requests to the Mattermost API.'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/oauth2-apps'}\n                    />\n                </SystemPermissionGate>\n            );\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <div className='backstage-header'>\n                    <h1>\n                        <FormattedMessage\n                            id='integrations.header'\n                            defaultMessage='Integrations'\n                        />\n                    </h1>\n                </div>\n                <div className='backstage-list__help'>\n                    <FormattedMessage\n                        id='integrations.help'\n                        defaultMessage='Visit the {appDirectory} to find self-hosted, third-party apps and integrations for Mattermost.'\n                        values={{\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='integrations.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                </div>\n                <div>\n                    {options}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport Integrations from './integrations.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const siteName = config.SiteName;\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n    const enableCommands = config.EnableCommands === 'true';\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n    const enableOnlyAdminIntegrations = config.EnableOnlyAdminIntegrations === 'true';\n\n    return {\n        siteName,\n        enableIncomingWebhooks,\n        enableOutgoingWebhooks,\n        enableCommands,\n        enableOAuthServiceProvider,\n        enableOnlyAdminIntegrations,\n    };\n}\n\nexport default connect(mapStateToProps)(Integrations);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport ConfirmModal from './confirm_modal.jsx';\n\nexport default class DeleteModalTrigger extends React.PureComponent {\n    static propTypes = {\n        onDelete: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n        if (this.constructor === DeleteModalTrigger) {\n            throw new TypeError('Can not construct abstract class.');\n        }\n\n        this.state = {\n            showDeleteModal: false,\n        };\n    }\n\n    handleOpenModal = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            showDeleteModal: true,\n        });\n    }\n\n    handleConfirm = () => {\n        this.props.onDelete();\n    }\n\n    handleCancel = () => {\n        this.setState({\n            showDeleteModal: false,\n        });\n    }\n\n    handleKeyDown = (e) => {\n        if (Utils.isKeyPressed(e, Constants.KeyCodes.ENTER)) {\n            this.handleConfirm(e);\n        }\n    }\n\n    render() {\n        return (\n            <span>\n                <button\n                    className='color--link style--none'\n                    onClick={this.handleOpenModal}\n                >\n                    { this.triggerTitle }\n                </button>\n                <ConfirmModal\n                    show={this.state.showDeleteModal}\n                    title={this.modalTitle}\n                    message={this.modalMessage}\n                    confirmButtonText={this.modalConfirmButton}\n                    onConfirm={this.handleConfirm}\n                    onCancel={this.handleCancel}\n                    onKeyDown={this.handleKeyDown}\n                />\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport DeleteModalTrigger from 'components/delete_modal_trigger.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class DeleteEmoji extends DeleteModalTrigger {\n    static propTypes = {\n        onDelete: PropTypes.func.isRequired,\n    }\n\n    get triggerTitle() {\n        return (\n            <FormattedMessage\n                id='emoji_list.delete'\n                defaultMessage='Delete'\n            />\n        );\n    }\n\n    get modalTitle() {\n        return (\n            <FormattedMessage\n                id='emoji_list.delete.confirm.title'\n                defaultMessage='Delete Custom Emoji'\n            />\n        );\n    }\n\n    get modalMessage() {\n        return (\n            <div className='alert alert-warning'>\n                <i\n                    className='fa fa-warning fa-margin--right'\n                    title={localizeMessage('generic_icons.warning', 'Warning Icon')}\n                />\n                <FormattedMessage\n                    id='emoji_list.delete.confirm.msg'\n                    defaultMessage='This action permanently deletes the custom emoji. Are you sure you want to delete it?'\n                />\n            </div>\n        );\n    }\n\n    get modalConfirmButton() {\n        return (\n            <FormattedMessage\n                id='emoji_list.delete.confirm.button'\n                defaultMessage='Delete'\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\nimport {Client4} from 'mattermost-redux/client';\n\nimport DeleteEmoji from 'components/emoji/delete_emoji_modal.jsx';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nexport default class EmojiListItem extends React.Component {\n    static propTypes = {\n        emoji: PropTypes.object.isRequired,\n        currentUserId: PropTypes.string.isRequired,\n        creatorDisplayName: PropTypes.string.isRequired,\n        creatorUsername: PropTypes.string,\n        currentTeam: PropTypes.object,\n        onDelete: PropTypes.func,\n        actions: PropTypes.shape({\n            deleteCustomEmoji: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        emoji: {},\n        currentUserId: '',\n        currentTeam: {},\n        creatorDisplayName: '',\n    }\n\n    handleDelete = () => {\n        if (this.props.onDelete) {\n            this.props.onDelete(this.props.emoji.id);\n        }\n\n        this.props.actions.deleteCustomEmoji(this.props.emoji.id);\n    }\n\n    render() {\n        const emoji = this.props.emoji;\n        const creatorUsername = this.props.creatorUsername;\n        let creatorDisplayName = this.props.creatorDisplayName;\n\n        if (creatorUsername && creatorUsername !== creatorDisplayName) {\n            creatorDisplayName += ' (@' + creatorUsername + ')';\n        }\n\n        let deleteButton = null;\n        if (emoji.creator_id === this.props.currentUserId) {\n            deleteButton = (\n                <TeamPermissionGate\n                    teamId={this.props.currentTeam.id}\n                    permissions={[Permissions.MANAGE_EMOJIS]}\n                >\n                    <DeleteEmoji onDelete={this.handleDelete}/>\n                </TeamPermissionGate>\n            );\n        } else {\n            deleteButton = (\n                <TeamPermissionGate\n                    teamId={this.props.currentTeam.id}\n                    permissions={[Permissions.MANAGE_EMOJIS]}\n                >\n                    <TeamPermissionGate\n                        teamId={this.props.currentTeam.id}\n                        permissions={[Permissions.MANAGE_OTHERS_EMOJIS]}\n                    >\n                        <DeleteEmoji onDelete={this.handleDelete}/>\n                    </TeamPermissionGate>\n                </TeamPermissionGate>\n            );\n        }\n\n        return (\n            <tr className='backstage-list__item'>\n                <td className='emoji-list__name'>\n                    {':' + emoji.name + ':'}\n                </td>\n                <td className='emoji-list__image'>\n                    <span\n                        className='emoticon'\n                        style={{backgroundImage: 'url(' + Client4.getCustomEmojiImageUrl(emoji.id) + ')'}}\n                    />\n                </td>\n                <td className='emoji-list__creator'>\n                    {creatorDisplayName}\n                </td>\n                <td className='emoji-list-item_actions'>\n                    {deleteButton}\n                </td>\n            </tr>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getUser, getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {deleteCustomEmoji} from 'mattermost-redux/actions/emojis';\n\nimport {getDisplayNameByUser} from 'utils/utils.jsx';\n\nimport EmojiListItem from './emoji_list_item.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const emoji = state.entities.emojis.customEmoji[ownProps.emojiId];\n    const creator = getUser(state, emoji.creator_id);\n\n    return {\n        emoji,\n        creatorDisplayName: getDisplayNameByUser(creator),\n        creatorUsername: creator ? creator.username : '',\n        currentUserId: getCurrentUserId(state),\n        currentTeam: getCurrentTeam(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            deleteCustomEmoji,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiListItem);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Emoji} from 'mattermost-redux/constants';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport LoadingScreen from 'components/loading_screen.jsx';\nimport SaveButton from 'components/save_button.jsx';\nimport EmojiListItem from 'components/emoji/emoji_list_item';\n\nconst EMOJI_PER_PAGE = 50;\nconst EMOJI_SEARCH_DELAY_MILLISECONDS = 200;\n\nexport default class EmojiList extends React.Component {\n    static propTypes = {\n\n        /**\n         * Custom emojis on the system.\n         */\n        emojiIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n        /**\n         * Function to scroll list to top.\n         */\n        scrollToTop: PropTypes.func.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * Get pages of custom emojis.\n             */\n            getCustomEmojis: PropTypes.func.isRequired,\n\n            /**\n             * Search custom emojis.\n             */\n            searchCustomEmojis: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.searchTimeout = null;\n\n        this.state = {\n            loading: true,\n            page: 0,\n            nextLoading: false,\n            searchEmojis: null,\n            missingPages: true,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getCustomEmojis(0, EMOJI_PER_PAGE + 1, Emoji.SORT_BY_NAME, true).then(({data}) => {\n            this.setState({loading: false});\n            if (data && data.length < EMOJI_PER_PAGE) {\n                this.setState({missingPages: false});\n            }\n        });\n    }\n\n    nextPage = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        const next = this.state.page + 1;\n        this.setState({nextLoading: true});\n        this.props.actions.getCustomEmojis(next, EMOJI_PER_PAGE, Emoji.SORT_BY_NAME, true).then(({data}) => {\n            this.setState({page: next, nextLoading: false});\n            if (data && data.length < EMOJI_PER_PAGE) {\n                this.setState({missingPages: false});\n            }\n\n            this.props.scrollToTop();\n        });\n    }\n\n    previousPage = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        this.setState({page: this.state.page - 1, nextLoading: false});\n        this.props.scrollToTop();\n    }\n\n    onSearchChange = (e) => {\n        if (!e || !e.target) {\n            return;\n        }\n\n        const term = e.target.value || '';\n\n        clearTimeout(this.searchTimeout);\n\n        this.searchTimeout = setTimeout(async () => {\n            if (term.trim() === '') {\n                this.setState({searchEmojis: null, page: 0});\n                return;\n            }\n\n            this.setState({loading: true});\n\n            const {data} = await this.props.actions.searchCustomEmojis(term, {}, true);\n\n            if (data) {\n                this.setState({searchEmojis: data.map((em) => em.id), loading: false});\n            } else {\n                this.setState({searchEmojis: [], loading: false});\n            }\n        }, EMOJI_SEARCH_DELAY_MILLISECONDS);\n    }\n\n    deleteFromSearch = (emojiId) => {\n        if (!this.state.searchEmojis) {\n            return;\n        }\n\n        const index = this.state.searchEmojis.indexOf(emojiId);\n\n        if (index < 0) {\n            return;\n        }\n\n        const newSearchEmojis = [...this.state.searchEmojis];\n        newSearchEmojis.splice(index, 1);\n        this.setState({searchEmojis: newSearchEmojis});\n    }\n\n    render() {\n        const searchEmojis = this.state.searchEmojis;\n        const emojis = [];\n        let nextButton;\n        let previousButton;\n\n        if (this.state.loading) {\n            emojis.push(\n                <tr\n                    key='loading'\n                    className='backstage-list__item backstage-list__empty'\n                >\n                    <td colSpan='4'>\n                        <LoadingScreen key='loading'/>\n                    </td>\n                </tr>\n            );\n        } else if (this.props.emojiIds.length === 0 || (searchEmojis && searchEmojis.length === 0)) {\n            emojis.push(\n                <tr\n                    key='empty'\n                    className='backstage-list__item backstage-list__empty'\n                >\n                    <td colSpan='4'>\n                        <FormattedMessage\n                            id='emoji_list.empty'\n                            defaultMessage='No custom emoji found'\n                        />\n                    </td>\n                </tr>\n            );\n        } else if (searchEmojis) {\n            searchEmojis.forEach((emojiId) => {\n                emojis.push(\n                    <EmojiListItem\n                        key={'emoji_search_item' + emojiId}\n                        emojiId={emojiId}\n                        onDelete={this.deleteFromSearch}\n                    />\n                );\n            });\n        } else {\n            const pageStart = this.state.page * EMOJI_PER_PAGE;\n            const pageEnd = pageStart + EMOJI_PER_PAGE;\n            const emojisToDisplay = this.props.emojiIds.slice(pageStart, pageEnd);\n\n            emojisToDisplay.forEach((emojiId) => {\n                emojis.push(\n                    <EmojiListItem\n                        key={'emoji_list_item' + emojiId}\n                        emojiId={emojiId}\n                    />\n                );\n            });\n\n            if (this.state.missingPages) {\n                const buttonContents = (\n                    <span>\n                        <FormattedMessage\n                            id='filtered_user_list.next'\n                            defaultMessage='Next'\n                        />\n                        <i\n                            className='fa fa-chevron-right margin-left'\n                            title={localizeMessage('generic_icons.next', 'Next Icon')}\n                        />\n                    </span>\n                );\n\n                nextButton = (\n                    <SaveButton\n                        btnClass='btn-link'\n                        extraClasses='pull-right'\n                        onClick={this.nextPage}\n                        saving={this.state.nextLoading}\n                        disabled={this.state.nextLoading}\n                        defaultMessage={buttonContents}\n                        savingMessage={buttonContents}\n                    />\n                );\n            }\n\n            if (this.state.page > 0) {\n                previousButton = (\n                    <button\n                        className='btn btn-link'\n                        onClick={this.previousPage}\n                    >\n                        <i\n                            className='fa fa-chevron-left margin-right'\n                            title={localizeMessage('generic_icons.previous', 'Previous Icon')}\n                        />\n                        <FormattedMessage\n                            id='filtered_user_list.prev'\n                            defaultMessage='Previous'\n                        />\n                    </button>\n                );\n            }\n        }\n\n        return (\n            <div>\n                <div className='backstage-filters'>\n                    <div className='backstage-filter__search'>\n                        <i\n                            className='fa fa-search'\n                            title={localizeMessage('generic_icons.search', 'Search Icon')}\n                        />\n                        <input\n                            type='search'\n                            className='form-control'\n                            placeholder={localizeMessage('emoji_list.search', 'Search Custom Emoji')}\n                            onChange={this.onSearchChange}\n                            style={style.search}\n                        />\n                    </div>\n                </div>\n                <span className='backstage-list__help'>\n                    <p>\n                        <FormattedMessage\n                            id='emoji_list.help'\n                            defaultMessage=\"Custom emoji are available to everyone on your server. Type ':' followed by two characters in a message box to bring up the emoji selection menu.\"\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='emoji_list.help2'\n                            defaultMessage=\"Tip: If you add #, ##, or ### as the first character on a new line containing emoji, you can use larger sized emoji. To try it out, send a message such as: '# :smile:'.\"\n                        />\n                    </p>\n                </span>\n                <div className='backstage-list'>\n                    <table className='emoji-list__table'>\n                        <thead>\n                            <tr className='backstage-list__item emoji-list__table-header'>\n                                <th className='emoji-list__name'>\n                                    <FormattedMessage\n                                        id='emoji_list.name'\n                                        defaultMessage='Name'\n                                    />\n                                </th>\n                                <th className='emoji-list__image'>\n                                    <FormattedMessage\n                                        id='emoji_list.image'\n                                        defaultMessage='Image'\n                                    />\n                                </th>\n                                <th className='emoji-list__creator'>\n                                    <FormattedMessage\n                                        id='emoji_list.creator'\n                                        defaultMessage='Creator'\n                                    />\n                                </th>\n                                <th className='emoji-list_actions'>\n                                    <FormattedMessage\n                                        id='emoji_list.actions'\n                                        defaultMessage='Actions'\n                                    />\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {emojis}\n                        </tbody>\n                    </table>\n                </div>\n                <div className='filter-controls padding-top x2'>\n                    {previousButton}\n                    {nextButton}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    search: {flexGrow: 0, flexShrink: 0},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getCustomEmojiIdsSortedByName} from 'mattermost-redux/selectors/entities/emojis';\n\nimport {getCustomEmojis, searchCustomEmojis} from 'mattermost-redux/actions/emojis';\n\nimport EmojiList from './emoji_list.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        emojiIds: getCustomEmojiIdsSortedByName(state) || [],\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getCustomEmojis,\n            searchCustomEmojis,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport * as Utils from 'utils/utils.jsx';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nimport EmojiList from './emoji_list';\n\nexport default class EmojiPage extends React.Component {\n    static propTypes = {\n        teamId: PropTypes.string.isRequired,\n        teamName: PropTypes.string.isRequired,\n        teamDisplayName: PropTypes.string.isRequired,\n        siteName: PropTypes.string,\n        scrollToTop: PropTypes.func.isRequired,\n        actions: PropTypes.shape({\n            loadRolesIfNeeded: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        teamName: '',\n        teamDisplayName: '',\n        siteName: '',\n    }\n\n    componentDidMount() {\n        this.updateTitle();\n        this.props.actions.loadRolesIfNeeded(['system_admin', 'team_admin', 'system_user', 'team_user']);\n    }\n\n    updateTitle = (props = this.props) => {\n        document.title = Utils.localizeMessage('custom_emoji.header', 'Custom Emoji') + ' - ' + props.teamDisplayName + ' ' + props.siteName;\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.siteName !== nextProps.siteName) {\n            this.updateTitle(nextProps);\n        }\n    }\n\n    render() {\n        return (\n            <div className='backstage-content emoji-list'>\n                <div className='backstage-header'>\n                    <h1>\n                        <FormattedMessage\n                            id='emoji_list.header'\n                            defaultMessage='Custom Emoji'\n                        />\n                    </h1>\n                    <TeamPermissionGate\n                        teamId={this.props.teamId}\n                        permissions={[Permissions.MANAGE_EMOJIS]}\n                    >\n                        <Link\n                            className='add-link'\n                            to={'/' + this.props.teamName + '/emoji/add'}\n                        >\n                            <button\n                                type='button'\n                                className='btn btn-primary'\n                            >\n                                <FormattedMessage\n                                    id='emoji_list.add'\n                                    defaultMessage='Add Custom Emoji'\n                                />\n                            </button>\n                        </Link>\n                    </TeamPermissionGate>\n                    <EmojiList scrollToTop={this.props.scrollToTop}/>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {loadRolesIfNeeded} from 'mattermost-redux/actions/roles';\n\nimport EmojiPage from './emoji_page.jsx';\n\nfunction mapStateToProps(state) {\n    const team = getCurrentTeam(state) || {};\n\n    return {\n        teamId: team.id,\n        teamName: team.name,\n        teamDisplayName: team.display_name,\n        siteName: state.entities.general.config.SiteName,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadRolesIfNeeded,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiPage);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class BackstageHeader extends React.Component {\n    static get propTypes() {\n        return {\n            children: PropTypes.node,\n        };\n    }\n\n    render() {\n        const children = [];\n\n        React.Children.forEach(this.props.children, (child, index) => {\n            if (index !== 0) {\n                children.push(\n                    <span\n                        key={'divider' + index}\n                        className='backstage-header__divider'\n                    >\n                        <i\n                            className='fa fa-angle-right'\n                            title={localizeMessage('generic_icons.breadcrumb', 'Breadcrumb Icon')}\n                        />\n                    </span>\n                );\n            }\n\n            children.push(child);\n        });\n\n        return (\n            <div className='backstage-header'>\n                <h1>\n                    {children}\n                </h1>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React, {PureComponent} from 'react';\n\nimport loadingGif from 'images/load.gif';\n\nexport default class SpinnerButton extends PureComponent {\n    static defaultProps = {\n        spinning: false,\n    }\n\n    static propTypes = {\n\n        /**\n         * Children to show when not spinning\n         */\n        children: PropTypes.node,\n\n        /**\n         * Set to true to spin\n         */\n        spinning: PropTypes.bool.isRequired,\n\n        /**\n         * Callback function when button is clicked\n         */\n        onClick: PropTypes.func,\n    }\n\n    render() {\n        const {spinning, children, ...props} = this.props; // eslint-disable-line no-use-before-define\n\n        if (spinning) {\n            return (\n                <img\n                    className='spinner-button__gif'\n                    src={loadingGif}\n                />\n            );\n        }\n\n        return (\n            <button\n                className='btn btn-primary'\n                {...props}\n            >\n                {children}\n            </button>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport * as EmojiActions from 'actions/emoji_actions.jsx';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport FormError from 'components/form_error.jsx';\nimport SpinnerButton from 'components/spinner_button.jsx';\n\nexport default class AddEmoji extends React.Component {\n    static propTypes = {\n        team: PropTypes.object,\n        user: PropTypes.object,\n        emojiMap: PropTypes.object.isRequired,\n    };\n\n    static contextTypes = {\n        router: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            image: null,\n            imageUrl: '',\n            saving: false,\n            error: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            error: null,\n        });\n\n        const emoji = {\n            creator_id: this.props.user.id,\n            name: this.state.name.trim().toLowerCase(),\n        };\n\n        // trim surrounding colons if the user accidentally included them in the name\n        if (emoji.name.startsWith(':') && emoji.name.endsWith(':')) {\n            emoji.name = emoji.name.substring(1, emoji.name.length - 1);\n        }\n\n        if (!emoji.name) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.nameRequired'\n                        defaultMessage='A name is required for the emoji'\n                    />\n                ),\n            });\n\n            return;\n        } else if ((/[^a-z0-9_-]/).test(emoji.name)) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.nameInvalid'\n                        defaultMessage=\"An emoji's name can only contain lowercase letters, numbers, and the symbols '-' and '_'.\"\n                    />\n                ),\n            });\n\n            return;\n        } else if (this.props.emojiMap.hasSystemEmoji(emoji.name)) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.nameTaken'\n                        defaultMessage='This name is already in use by a system emoji. Please choose another name.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!this.state.image) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.imageRequired'\n                        defaultMessage='An image is required for the emoji'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        EmojiActions.addEmoji(\n            emoji,\n            this.state.image,\n            () => {\n                this.props.history.push('/' + this.props.team.name + '/emoji');\n            },\n            (err) => {\n                this.setState({\n                    saving: false,\n                    error: err.message,\n                });\n            }\n        );\n    }\n\n    updateName = (e) => {\n        this.setState({\n            name: e.target.value,\n        });\n    }\n\n    updateImage = (e) => {\n        if (e.target.files.length === 0) {\n            this.setState({\n                image: null,\n                imageUrl: '',\n            });\n\n            return;\n        }\n\n        const image = e.target.files[0];\n\n        const reader = new FileReader();\n        reader.onload = () => {\n            this.setState({\n                image,\n                imageUrl: reader.result,\n            });\n        };\n        reader.readAsDataURL(image);\n    }\n\n    render() {\n        let filename = null;\n        if (this.state.image) {\n            filename = (\n                <span className='add-emoji__filename'>\n                    {this.state.image.name}\n                </span>\n            );\n        }\n\n        let preview = null;\n        if (this.state.imageUrl) {\n            preview = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='preview'\n                    >\n                        <FormattedMessage\n                            id='add_emoji.preview'\n                            defaultMessage='Preview'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8 add-emoji__preview'>\n                        <FormattedMessage\n                            id='add_emoji.preview.sentence'\n                            defaultMessage='This is a sentence with {image} in it.'\n                            values={{\n                                image: (\n                                    <span\n                                        className='emoticon'\n                                        style={{backgroundImage: 'url(' + this.state.imageUrl + ')'}}\n                                    />\n                                ),\n                            }}\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/emoji'}>\n                        <FormattedMessage\n                            id='emoji_list.header'\n                            defaultMessage='Custom Emoji'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id='add_emoji.header'\n                        defaultMessage='Add'\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='name'\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.name'\n                                    defaultMessage='Name'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='name'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.name}\n                                    onChange={this.updateName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_emoji.name.help'\n                                        defaultMessage=\"Choose a name for your emoji made of up to 64 characters consisting of lowercase letters, numbers, and the symbols '-' and '_'.\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='image'\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.image'\n                                    defaultMessage='Image'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <div>\n                                    <div className='add-emoji__upload'>\n                                        <button className='btn btn-primary'>\n                                            <FormattedMessage\n                                                id='add_emoji.image.button'\n                                                defaultMessage='Select'\n                                            />\n                                        </button>\n                                        <input\n                                            type='file'\n                                            accept='.jpg,.png,.gif'\n                                            multiple={false}\n                                            onChange={this.updateImage}\n                                        />\n                                    </div>\n                                    {filename}\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_emoji.image.help'\n                                            defaultMessage='Choose the image for your emoji. The image can be a gif, png, or jpeg file with a max size of 64 KB and dimensions up to 128 by 128 pixels.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {preview}\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                error={this.state.error}\n                            />\n                            <Link\n                                className='btn btn-sm'\n                                to={'/' + this.props.team.name + '/emoji'}\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                onClick={this.handleSubmit}\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.save'\n                                    defaultMessage='Save'\n                                />\n                            </SpinnerButton>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getEmojiMap} from 'selectors/emojis';\n\nimport AddEmoji from './add_emoji.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        emojiMap: getEmojiMap(state),\n    };\n}\n\nexport default connect(mapStateToProps)(AddEmoji);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport * as Utils from 'utils/utils.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\n\nexport default class BackstageList extends React.Component {\n    static propTypes = {\n        children: PropTypes.node,\n        header: PropTypes.node.isRequired,\n        addLink: PropTypes.string,\n        addText: PropTypes.node,\n        emptyText: PropTypes.node,\n        helpText: PropTypes.node,\n        loading: PropTypes.bool.isRequired,\n        searchPlaceholder: PropTypes.string,\n    }\n\n    static defaultProps = {\n        searchPlaceholder: Utils.localizeMessage('backstage_list.search', 'Search'),\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.updateFilter = this.updateFilter.bind(this);\n\n        this.state = {\n            filter: '',\n        };\n    }\n\n    updateFilter(e) {\n        this.setState({\n            filter: e.target.value,\n        });\n    }\n\n    render() {\n        const filter = this.state.filter.toLowerCase();\n\n        let children;\n        if (this.props.loading) {\n            children = <LoadingScreen/>;\n        } else {\n            children = React.Children.map(this.props.children, (child) => {\n                return React.cloneElement(child, {filter});\n            });\n\n            if (children.length === 0 && this.props.emptyText) {\n                children = (\n                    <span className='backstage-list__item backstage-list__empty'>\n                        {this.props.emptyText}\n                    </span>\n                );\n            }\n        }\n\n        let addLink = null;\n        if (this.props.addLink && this.props.addText) {\n            addLink = (\n                <Link\n                    className='add-link'\n                    to={this.props.addLink}\n                >\n                    <button\n                        type='button'\n                        className='btn btn-primary'\n                    >\n                        <span>\n                            {this.props.addText}\n                        </span>\n                    </button>\n                </Link>\n            );\n        }\n\n        return (\n            <div className='backstage-content'>\n                <div className='backstage-header'>\n                    <h1>\n                        {this.props.header}\n                    </h1>\n                    {addLink}\n                </div>\n                <div className='backstage-filters'>\n                    <div className='backstage-filter__search'>\n                        <i\n                            className='fa fa-search'\n                            title={Utils.localizeMessage('generic_icons.search', 'Search Icon')}\n                        />\n                        <input\n                            type='search'\n                            className='form-control'\n                            placeholder={this.props.searchPlaceholder}\n                            value={this.state.filter}\n                            onChange={this.updateFilter}\n                            style={style.search}\n                        />\n                    </div>\n                </div>\n                <span className='backstage-list__help'>\n                    {this.props.helpText}\n                </span>\n                <div className='backstage-list'>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    search: {flexGrow: 0, flexShrink: 0},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\n\nimport Constants from 'utils/constants.jsx';\nimport {copyToClipboard} from 'utils/utils.jsx';\n\nexport default class CopyText extends React.PureComponent {\n    static propTypes = {\n        value: PropTypes.string.isRequired,\n\n        defaultMessage: PropTypes.string,\n\n        idMessage: PropTypes.string,\n    };\n\n    static get defaultProps() {\n        return {\n            idMessage: 'integrations.copy',\n            defaultMessage: 'Copy',\n        };\n    }\n\n    copyText = (e) => {\n        e.preventDefault();\n        copyToClipboard(this.props.value);\n    };\n\n    render() {\n        if (!document.queryCommandSupported('copy')) {\n            return null;\n        }\n\n        const tooltip = (\n            <Tooltip id='copy'>\n                <FormattedMessage\n                    id={this.props.idMessage}\n                    defaultMessage={this.props.defaultMessage}\n                />\n            </Tooltip>\n        );\n\n        return (\n            <OverlayTrigger\n                trigger={['hover', 'focus']}\n                delayShow={Constants.OVERLAY_TIME_DELAY}\n                placement='top'\n                overlay={tooltip}\n            >\n                <a\n                    href='#'\n                    className='fa fa-copy margin-left'\n                    onClick={this.copyText}\n                />\n            </OverlayTrigger>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport DeleteModalTrigger from 'components/delete_modal_trigger.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class DeleteIntegration extends DeleteModalTrigger {\n    get triggerTitle() {\n        return (\n            <FormattedMessage\n                id='installed_integrations.delete'\n                defaultMessage='Delete'\n            />\n        );\n    }\n\n    get modalTitle() {\n        return (\n            <FormattedMessage\n                id='integrations.delete.confirm.title'\n                defaultMessage='Delete Integration'\n            />\n        );\n    }\n\n    get modalMessage() {\n        return (\n            <div className='alert alert-warning'>\n                <i\n                    className='fa fa-warning fa-margin--right'\n                    title={localizeMessage('generic_icons.warning', 'Warning Icon')}\n                />\n                <FormattedMessage\n                    id={this.props.messageId}\n                    defaultMessage='This action permanently deletes the integration and breaks any integrations using it. Are you sure you want to delete it?'\n                />\n            </div>\n        );\n    }\n\n    get modalConfirmButton() {\n        return (\n            <FormattedMessage\n                id='integrations.delete.confirm.button'\n                defaultMessage='Delete'\n            />\n        );\n    }\n}\n\nDeleteIntegration.propTypes = {\n    messageId: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {getSiteURL} from 'utils/url.jsx';\nimport {t} from 'utils/i18n';\n\nimport CopyText from 'components/copy_text.jsx';\n\nimport DeleteIntegration from './delete_integration.jsx';\n\nexport default class InstalledIncomingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * Data used for showing webhook details\n        */\n        incomingWebhook: PropTypes.object.isRequired,\n\n        /**\n        * Function to call when webhook delete button is pressed\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * String used for filtering webhook item\n        */\n        filter: PropTypes.string,\n\n        /**\n        * Data used for showing created by details\n        */\n        creator: PropTypes.object.isRequired,\n\n        /**\n        *  Set to show available actions on webhook\n        */\n        canChange: PropTypes.bool.isRequired,\n\n        /**\n        *  Data used in routing of webhook for modifications\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        *  Data used for filtering of webhook based on filter prop\n        */\n        channel: PropTypes.object,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    handleDelete() {\n        this.props.onDelete(this.props.incomingWebhook);\n    }\n\n    static matchesFilter(incomingWebhook, channel, filter) {\n        if (!filter) {\n            return true;\n        }\n\n        if (incomingWebhook.display_name.toLowerCase().indexOf(filter) !== -1 ||\n            incomingWebhook.description.toLowerCase().indexOf(filter) !== -1) {\n            return true;\n        }\n\n        if (incomingWebhook.channel_id) {\n            if (channel && channel.name.toLowerCase().indexOf(filter) !== -1) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    render() {\n        const incomingWebhook = this.props.incomingWebhook;\n        const channel = this.props.channel;\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n\n        if (!InstalledIncomingWebhook.matchesFilter(incomingWebhook, channel, filter)) {\n            return null;\n        }\n\n        let displayName;\n        if (incomingWebhook.display_name) {\n            displayName = incomingWebhook.display_name;\n        } else if (channel) {\n            displayName = channel.display_name;\n        } else {\n            displayName = (\n                <FormattedMessage\n                    id='installed_incoming_webhooks.unknown_channel'\n                    defaultMessage='A Private Webhook'\n                />\n            );\n        }\n\n        let description = null;\n        if (incomingWebhook.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {incomingWebhook.description}\n                    </span>\n                </div>\n            );\n        }\n\n        let actions = null;\n        if (this.props.canChange) {\n            actions = (\n                <div className='item-actions'>\n                    <Link to={`/${this.props.team.name}/integrations/incoming_webhooks/edit?id=${incomingWebhook.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId={t('installed_incoming_webhooks.delete.confirm')}\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        const incomingWebhookId = getSiteURL() + '/hooks/' + incomingWebhook.id;\n\n        return (\n            <div className='backstage-list__item'>\n                <div className='item-details'>\n                    <div className='item-details__row'>\n                        <span className='item-details__name'>\n                            {displayName}\n                        </span>\n                    </div>\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__url'>\n                            <FormattedMessage\n                                id='installed_integrations.url'\n                                defaultMessage='URL: {url}'\n                                values={{\n                                    url: incomingWebhookId,\n                                }}\n                            />\n                            <span>\n                                <CopyText\n                                    value={incomingWebhookId}\n                                />\n                            </span>\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: this.props.creator.username,\n                                    createAt: incomingWebhook.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                </div>\n                {actions}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledIncomingWebhook from 'components/integrations/installed_incoming_webhook.jsx';\n\nexport default class InstalledIncomingWebhooks extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Data used in passing down as props for webhook modifications\n        */\n        team: PropTypes.object,\n\n        /**\n        * Data used for checking if webhook is created by current user\n        */\n        user: PropTypes.object,\n\n        /**\n        *  Data used for checking modification privileges\n        */\n        canManageOthersWebhooks: PropTypes.bool,\n\n        /**\n        * Data used in passing down as props for showing webhook details\n        */\n        incomingWebhooks: PropTypes.array,\n\n        /**\n        * Data used in sorting for displaying list and as props channel details\n        */\n        channels: PropTypes.object,\n\n        /**\n        *  Data used in passing down as props for webhook -created by label\n        */\n        users: PropTypes.object,\n\n        /**\n        *  Data used in passing as argument for loading webhooks\n        */\n\n        teamId: PropTypes.string,\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call for removing incomingWebhook\n            */\n            removeIncomingHook: PropTypes.func,\n\n            /**\n            * The function to call for incomingWebhook List and for the status of api\n            */\n            getIncomingHooks: PropTypes.func,\n        }),\n\n        /**\n        * Whether or not incoming webhooks are enabled.\n        */\n        enableIncomingWebhooks: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.deleteIncomingWebhook = this.deleteIncomingWebhook.bind(this);\n        this.incomingWebhookCompare = this.incomingWebhookCompare.bind(this);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableIncomingWebhooks) {\n            this.props.actions.getIncomingHooks(\n                this.props.teamId,\n                Constants.Integrations.START_PAGE_NUM,\n                Constants.Integrations.PAGE_SIZE\n            ).then(\n                () => this.setState({loading: false})\n            );\n        }\n    }\n\n    deleteIncomingWebhook = (incomingWebhook) => {\n        this.props.actions.removeIncomingHook(incomingWebhook.id);\n    }\n\n    incomingWebhookCompare(a, b) {\n        let displayNameA = a.display_name;\n        if (!displayNameA) {\n            const channelA = this.props.channels[a.channel_id];\n            if (channelA) {\n                displayNameA = channelA.display_name;\n            } else {\n                displayNameA = Utils.localizeMessage('installed_incoming_webhooks.unknown_channel', 'A Private Webhook');\n            }\n        }\n\n        const displayNameB = b.display_name;\n\n        return displayNameA.localeCompare(displayNameB);\n    }\n\n    render() {\n        const incomingWebhooks = this.props.incomingWebhooks.sort(this.incomingWebhookCompare).map((incomingWebhook) => {\n            const canChange = this.props.canManageOthersWebhooks || this.props.user.id === incomingWebhook.user_id;\n            const channel = this.props.channels[incomingWebhook.channel_id];\n            return (\n                <InstalledIncomingWebhook\n                    key={incomingWebhook.id}\n                    incomingWebhook={incomingWebhook}\n                    onDelete={this.deleteIncomingWebhook}\n                    creator={this.props.users[incomingWebhook.user_id] || {}}\n                    canChange={canChange}\n                    team={this.props.team}\n                    channel={channel}\n                />\n            );\n        });\n\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.header'\n                        defaultMessage='Installed Incoming Webhooks'\n                    />\n                }\n                addText={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.add'\n                        defaultMessage='Add Incoming Webhook'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/incoming_webhooks/add'}\n                emptyText={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.empty'\n                        defaultMessage='No incoming webhooks found'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.help'\n                        defaultMessage='Use incoming webhooks to connect external tools to Mattermost. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\n                        values={{\n                            buildYourOwn: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='http://docs.mattermost.com/developer/webhooks-incoming.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_incoming_webhooks.help.buildYourOwn'\n                                        defaultMessage='Build your own'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_incoming_webhooks.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('installed_incoming_webhooks.search', 'Search Incoming Webhooks')}\n                loading={this.state.loading}\n            >\n                {incomingWebhooks}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'mattermost-redux/actions/integrations';\nimport {getAllChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {getIncomingHooks} from 'mattermost-redux/selectors/entities/integrations';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport InstalledIncomingWebhooks from './installed_incoming_webhooks.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const teamId = getCurrentTeamId(state);\n    const canManageOthersWebhooks = haveITeamPermission(state, {team: teamId, permission: Permissions.MANAGE_OTHERS_WEBHOOKS});\n    const incomingHooks = getIncomingHooks(state);\n    const incomingWebhooks = Object.keys(incomingHooks).\n        map((key) => incomingHooks[key]).\n        filter((incomingWebhook) => incomingWebhook.team_id === teamId);\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n\n    return {\n        incomingWebhooks,\n        channels: getAllChannels(state),\n        users: getUsers(state),\n        teamId,\n        canManageOthersWebhooks,\n        enableIncomingWebhooks,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getIncomingHooks: Actions.getIncomingHooks,\n            removeIncomingHook: Actions.removeIncomingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledIncomingWebhooks);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class ChannelSelect extends React.PureComponent {\n    static get propTypes() {\n        return {\n            channels: PropTypes.array.isRequired,\n            onChange: PropTypes.func,\n            value: PropTypes.string,\n            selectOpen: PropTypes.bool.isRequired,\n            selectPrivate: PropTypes.bool.isRequired,\n            selectDm: PropTypes.bool.isRequired,\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            selectOpen: false,\n            selectPrivate: false,\n            selectDm: false,\n        };\n    }\n\n    render() {\n        const options = [\n            <option\n                key=''\n                value=''\n            >\n                {Utils.localizeMessage('channel_select.placeholder', '--- Select a channel ---')}\n            </option>,\n        ];\n\n        this.props.channels.forEach((channel) => {\n            const channelName = channel.display_name || channel.name;\n            if (channel.type === Constants.OPEN_CHANNEL && this.props.selectOpen) {\n                options.push(\n                    <option\n                        key={channel.id}\n                        value={channel.id}\n                    >\n                        {channelName}\n                    </option>\n                );\n            } else if (channel.type === Constants.PRIVATE_CHANNEL && this.props.selectPrivate) {\n                options.push(\n                    <option\n                        key={channel.id}\n                        value={channel.id}\n                    >\n                        {channelName}\n                    </option>\n                );\n            } else if (channel.type === Constants.DM_CHANNEL && this.props.selectDm) {\n                options.push(\n                    <option\n                        key={channel.id}\n                        value={channel.id}\n                    >\n                        {channelName}\n                    </option>\n                );\n            }\n        });\n\n        return (\n            <select\n                className='form-control'\n                value={this.props.value}\n                onChange={this.props.onChange}\n            >\n                {options}\n            </select>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {createSelector} from 'reselect';\n\nimport {getMyChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentUserLocale} from 'mattermost-redux/selectors/entities/i18n';\nimport {sortChannelsByTypeAndDisplayName} from 'mattermost-redux/utils/channel_utils';\n\nimport ChannelSelect from './channel_select.jsx';\n\nconst getMyChannelsSorted = createSelector(\n    getMyChannels,\n    getCurrentUserLocale,\n    (channels, locale) => {\n        return [...channels].sort(sortChannelsByTypeAndDisplayName.bind(null, locale));\n    }\n);\n\nfunction mapStateToProps(state) {\n    return {\n        channels: getMyChannelsSorted(state),\n    };\n}\n\nexport default connect(mapStateToProps)(ChannelSelect);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport ChannelSelect from 'components/channel_select';\nimport FormError from 'components/form_error.jsx';\nimport SpinnerButton from 'components/spinner_button.jsx';\n\nexport default class AbstractIncomingWebhook extends React.Component {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The header text to render, has id and defaultMessage\n        */\n        header: PropTypes.object.isRequired,\n\n        /**\n        * The footer text to render, has id and defaultMessage\n        */\n        footer: PropTypes.object.isRequired,\n\n        /**\n        * The server error text after a failed action\n        */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n        * The hook used to set the initial state\n        */\n        initialHook: PropTypes.object,\n\n        /**\n        * Whether to allow configuration of the default post username.\n        */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post icon.\n        */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n\n        /**\n        * The async function to run when the action button is pressed\n        */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromHook(this.props.initialHook || {});\n    }\n\n    getStateFromHook = (hook) => {\n        return {\n            displayName: hook.display_name || '',\n            description: hook.description || '',\n            channelId: hook.channel_id || '',\n            channelLocked: hook.channel_locked || false,\n            username: hook.username || '',\n            iconURL: hook.icon_url || '',\n            saving: false,\n            serverError: '',\n            clientError: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            serverError: '',\n            clientError: '',\n        });\n\n        if (!this.state.channelId) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_incoming_webhook.channelRequired'\n                        defaultMessage='A valid channel is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const hook = {\n            channel_id: this.state.channelId,\n            channel_locked: this.state.channelLocked,\n            display_name: this.state.displayName,\n            description: this.state.description,\n            username: this.state.username,\n            icon_url: this.state.iconURL,\n        };\n\n        this.props.action(hook).then(() => this.setState({saving: false}));\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateChannelId = (e) => {\n        this.setState({\n            channelId: e.target.value,\n        });\n    }\n\n    updateChannelLocked = (e) => {\n        this.setState({\n            channelLocked: e.target.checked,\n        });\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateIconURL = (e) => {\n        this.setState({\n            iconURL: e.target.value,\n        });\n    }\n\n    render() {\n        var headerToRender = this.props.header;\n        var footerToRender = this.props.footer;\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/incoming_webhooks`}>\n                        <FormattedMessage\n                            id='installed_incoming_webhooks.header'\n                            defaultMessage='Incoming Webhooks'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={headerToRender.id}\n                        defaultMessage={headerToRender.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.displayName'\n                                    defaultMessage='Title'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.displayName.help'\n                                        defaultMessage='Choose a title to be displayed on the webhook settings page. Maximum 64 characters.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='500'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.description.help'\n                                        defaultMessage='Description for your incoming webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='channelId'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.channel'\n                                    defaultMessage='Channel'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <ChannelSelect\n                                    id='channelId'\n                                    value={this.state.channelId}\n                                    onChange={this.updateChannelId}\n                                    selectOpen={true}\n                                    selectPrivate={true}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.channel.help'\n                                        defaultMessage='The default public or private channel that receives the webhook payloads. You must belong to the private channel when setting up the webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='channelLocked'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.channelLocked'\n                                    defaultMessage='Lock to this channel'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <input\n                                    id='channelLocked'\n                                    type='checkbox'\n                                    checked={this.state.channelLocked}\n                                    onChange={this.updateChannelLocked}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.channelLocked.help'\n                                        defaultMessage='If set, the incoming webhook can only post to the channel selected above.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        { this.props.enablePostUsernameOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='username'\n                                >\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.username'\n                                        defaultMessage='Username'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='username'\n                                        type='text'\n                                        maxLength='22'\n                                        className='form-control'\n                                        value={this.state.username}\n                                        onChange={this.updateUsername}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_incoming_webhook.username.help'\n                                            defaultMessage='Choose the username this integration will post as. Usernames can be up to 22 characters, and may contain lowercase letters, numbers and the symbols \"-\", \"_\", and \".\".'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        { this.props.enablePostIconOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='iconURL'\n                                >\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.icon_url'\n                                        defaultMessage='Profile Picture'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='iconURL'\n                                        type='text'\n                                        maxLength='1024'\n                                        className='form-control'\n                                        value={this.state.iconURL}\n                                        onChange={this.updateIconURL}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_incoming_webhook.icon_url.help'\n                                            defaultMessage='Choose the profile picture this integration will use when posting. Enter the URL of a .png or .jpg file at least 128 pixels by 128 pixels.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-sm'\n                                to={`/${this.props.team.name}/integrations/incoming_webhooks`}\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                onClick={this.handleSubmit}\n                            >\n                                <FormattedMessage\n                                    id={footerToRender.id}\n                                    defaultMessage={footerToRender.defaultMessage}\n                                />\n                            </SpinnerButton>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractIncomingWebhook from 'components/integrations/abstract_incoming_webhook.jsx';\n\nconst HEADER = {id: t('integrations.add'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('add_incoming_webhook.save'), defaultMessage: 'Save'};\n\nexport default class AddIncomingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The request state for createIncomingHook action. Contains status and error\n        */\n        createIncomingHookRequest: PropTypes.object.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post username.\n        */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post icon.\n        */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to add a new incoming webhook\n            */\n            createIncomingHook: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addIncomingHook = async (hook) => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.createIncomingHook(hook);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=incoming_webhooks&id=${data.id}`);\n            return;\n        }\n\n        if (this.props.createIncomingHookRequest.error) {\n            this.setState({serverError: this.props.createIncomingHookRequest.error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractIncomingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n                action={this.addIncomingHook}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {createIncomingHook} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport AddIncomingWebhook from './add_incoming_webhook.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n\n    return {\n        createIncomingHookRequest: state.requests.integrations.createIncomingHook,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createIncomingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddIncomingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractIncomingWebhook from 'components/integrations/abstract_incoming_webhook.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\n\nconst HEADER = {id: t('integrations.edit'), defaultMessage: 'Edit'};\nconst FOOTER = {id: t('update_incoming_webhook.update'), defaultMessage: 'Update'};\n\nexport default class EditIncomingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The incoming webhook to edit\n        */\n        hook: PropTypes.object,\n\n        /**\n        * The id of the incoming webhook to edit\n        */\n        hookId: PropTypes.string.isRequired,\n\n        /**\n        * The request state for updateIncomingHook action. Contains status and error\n        */\n        updateIncomingHookRequest: PropTypes.object.isRequired,\n\n        /**\n        * Whether or not incoming webhooks are enabled.\n        */\n        enableIncomingWebhooks: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post username.\n        */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post icon.\n        */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to update an incoming webhook\n            */\n            updateIncomingHook: PropTypes.func.isRequired,\n\n            /**\n            * The function to call to get an incoming webhook\n            */\n            getIncomingHook: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableIncomingWebhooks) {\n            this.props.actions.getIncomingHook(this.props.hookId);\n        }\n    }\n\n    editIncomingHook = async (hook) => {\n        this.newHook = hook;\n\n        if (this.props.hook.id) {\n            hook.id = this.props.hook.id;\n        }\n\n        if (this.props.hook.token) {\n            hook.token = this.props.hook.token;\n        }\n\n        await this.submitHook();\n    }\n\n    submitHook = async () => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.updateIncomingHook(this.newHook);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/incoming_webhooks`);\n            return;\n        }\n\n        if (this.props.updateIncomingHookRequest.error) {\n            this.setState({serverError: this.props.updateIncomingHookRequest.error.message});\n        }\n    }\n\n    render() {\n        if (!this.props.hook) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractIncomingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n                action={this.editIncomingHook}\n                serverError={this.state.serverError}\n                initialHook={this.props.hook}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getIncomingHook, updateIncomingHook} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditIncomingWebhook from './edit_incoming_webhook.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n    const hookId = (new URLSearchParams(ownProps.location.search)).get('id');\n\n    return {\n        hookId,\n        hook: state.entities.integrations.incomingHooks[hookId],\n        updateIncomingHookRequest: state.requests.integrations.updateIncomingHook,\n        enableIncomingWebhooks,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            updateIncomingHook,\n            getIncomingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditIncomingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {t} from 'utils/i18n';\nimport CopyText from 'components/copy_text.jsx';\n\nimport DeleteIntegration from './delete_integration.jsx';\n\nexport default class InstalledOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * Data used for showing webhook details\n        */\n        outgoingWebhook: PropTypes.object.isRequired,\n\n        /**\n        * Function used for webhook token regeneration\n        */\n        onRegenToken: PropTypes.func.isRequired,\n\n        /**\n        * Function to call when webhook delete button is pressed\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * String used for filtering webhook item\n        */\n        filter: PropTypes.string,\n\n        /**\n        * Data used for showing created by details\n        */\n        creator: PropTypes.object.isRequired,\n\n        /**\n        *  Set to show available actions on webhook\n        */\n        canChange: PropTypes.bool.isRequired,\n\n        /**\n        *  Data used in routing of webhook for modifications\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        *  Data used for filtering of webhooks based in filter prop\n        */\n        channel: PropTypes.object,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleRegenToken = this.handleRegenToken.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    handleRegenToken(e) {\n        e.preventDefault();\n\n        this.props.onRegenToken(this.props.outgoingWebhook);\n    }\n\n    handleDelete() {\n        this.props.onDelete(this.props.outgoingWebhook);\n    }\n\n    makeDisplayName(outgoingWebhook, channel) {\n        if (outgoingWebhook.display_name) {\n            return outgoingWebhook.display_name;\n        } else if (channel) {\n            return channel.display_name;\n        }\n        return (\n            <FormattedMessage\n                id='installed_outgoing_webhooks.unknown_channel'\n                defaultMessage='A Private Webhook'\n            />\n        );\n    }\n\n    matchesFilter(outgoingWebhook, channel, filter) {\n        if (!filter) {\n            return true;\n        }\n\n        const {\n            display_name: displayName,\n            description,\n            trigger_words: triggerWords,\n        } = outgoingWebhook;\n\n        if (\n            (displayName && displayName.toLowerCase().indexOf(filter) !== -1) ||\n            (description && description.toLowerCase().indexOf(filter) !== -1)\n        ) {\n            return true;\n        }\n\n        if (triggerWords) {\n            for (const triggerWord of triggerWords) {\n                if (triggerWord.toLowerCase().indexOf(filter) !== -1) {\n                    return true;\n                }\n            }\n        }\n\n        if (channel && channel.name) {\n            if (channel.name.toLowerCase().indexOf(filter) !== -1) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    render() {\n        const outgoingWebhook = this.props.outgoingWebhook;\n        const channel = this.props.channel;\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n        const triggerWordsFull = 0;\n        const triggerWordsStartsWith = 1;\n\n        if (outgoingWebhook && !this.matchesFilter(outgoingWebhook, channel, filter)) {\n            return null;\n        }\n\n        const displayName = this.makeDisplayName(outgoingWebhook, channel);\n\n        let description = null;\n        if (outgoingWebhook.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {outgoingWebhook.description}\n                    </span>\n                </div>\n            );\n        }\n\n        let triggerWords = null;\n        if (outgoingWebhook.trigger_words && outgoingWebhook.trigger_words.length > 0) {\n            triggerWords = (\n                <div className='item-details__row'>\n                    <span className='item-details__trigger-words'>\n                        <FormattedMessage\n                            id='installed_integrations.triggerWords'\n                            defaultMessage='Trigger Words: {triggerWords}'\n                            values={{\n                                triggerWords: outgoingWebhook.trigger_words.join(', '),\n                            }}\n                        />\n                    </span>\n                </div>\n            );\n        }\n\n        const urls = (\n            <div className='item-details__row'>\n                <span className='item-details__url'>\n                    <FormattedMessage\n                        id='installed_integrations.callback_urls'\n                        defaultMessage='Callback URLs: {urls}'\n                        values={{\n                            urls: outgoingWebhook.callback_urls.join(', '),\n                        }}\n                    />\n                </span>\n            </div>\n        );\n\n        let triggerWhen;\n        if (outgoingWebhook.trigger_when === triggerWordsFull) {\n            triggerWhen = (\n                <FormattedMessage\n                    id='add_outgoing_webhook.triggerWordsTriggerWhenFullWord'\n                    defaultMessage='First word matches a trigger word exactly'\n                />\n            );\n        } else if (outgoingWebhook.trigger_when === triggerWordsStartsWith) {\n            triggerWhen = (\n                <FormattedMessage\n                    id='add_outgoing_webhook.triggerWordsTriggerWhenStartsWith'\n                    defaultMessage='First word starts with a trigger word'\n                />\n            );\n        }\n\n        let actions = null;\n        if (this.props.canChange) {\n            actions = (\n                <div className='item-actions'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.handleRegenToken}\n                    >\n                        <FormattedMessage\n                            id='installed_integrations.regenToken'\n                            defaultMessage='Regen Token'\n                        />\n                    </button>\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/outgoing_webhooks/edit?id=${outgoingWebhook.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId={t('installed_outgoing_webhooks.delete.confirm')}\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-list__item'>\n                <div className='item-details'>\n                    <div className='item-details__row'>\n                        <span className='item-details__name'>\n                            {displayName}\n                        </span>\n                    </div>\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__content_type'>\n                            <FormattedMessage\n                                id='installed_integrations.content_type'\n                                defaultMessage='Content-Type: {contentType}'\n                                values={{\n                                    contentType: outgoingWebhook.content_type || 'application/x-www-form-urlencoded',\n                                }}\n                            />\n                        </span>\n                    </div>\n                    {triggerWords}\n                    <div className='item-details__row'>\n                        <span className='item-details__trigger-when'>\n                            <FormattedMessage\n                                id='installed_integrations.triggerWhen'\n                                defaultMessage='Trigger When: {triggerWhen}'\n                                values={{\n                                    triggerWhen,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedMessage\n                                id='installed_integrations.token'\n                                defaultMessage='Token: {token}'\n                                values={{\n                                    token: outgoingWebhook.token,\n                                }}\n                            />\n                            <CopyText\n                                value={outgoingWebhook.token}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: this.props.creator.username,\n                                    createAt: outgoingWebhook.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    {urls}\n                </div>\n                {actions}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport Constants from 'utils/constants.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledOutgoingWebhook from 'components/integrations/installed_outgoing_webhook.jsx';\n\nexport default class InstalledOutgoingWebhooks extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Data used in passing down as props for webhook modifications\n        */\n        team: PropTypes.object,\n\n        /**\n        * Data used for checking if webhook is created by current user\n        */\n        user: PropTypes.object,\n\n        /**\n        *  Data used for checking modification privileges\n        */\n        canManageOthersWebhooks: PropTypes.bool,\n\n        /**\n        * Data used in passing down as props for showing webhook details\n        */\n        outgoingWebhooks: PropTypes.array,\n\n        /**\n        * Data used in sorting for displaying list and as props channel details\n        */\n        channels: PropTypes.object,\n\n        /**\n        *  Data used in passing down as props for webhook -created by label\n        */\n        users: PropTypes.object,\n\n        /**\n        *  Data used in passing as argument for loading webhooks\n        */\n        teamId: PropTypes.string,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call for removing outgoingWebhook\n            */\n            removeOutgoingHook: PropTypes.func,\n\n            /**\n            * The function to call for outgoingWebhook List and for the status of api\n            */\n            getOutgoingHooks: PropTypes.func,\n\n            /**\n            * The function to call for regeneration of webhook token\n            */\n            regenOutgoingHookToken: PropTypes.func,\n        }),\n\n        /**\n        * Whether or not outgoing webhooks are enabled.\n        */\n        enableOutgoingWebhooks: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.outgoingWebhookCompare = this.outgoingWebhookCompare.bind(this);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOutgoingWebhooks) {\n            this.props.actions.getOutgoingHooks(\n                '',\n                this.props.teamId,\n                Constants.Integrations.START_PAGE_NUM,\n                Constants.Integrations.PAGE_SIZE\n            ).then(\n                () => this.setState({loading: false})\n            );\n        }\n    }\n\n    regenOutgoingWebhookToken = (outgoingWebhook) => {\n        this.props.actions.regenOutgoingHookToken(outgoingWebhook.id);\n    }\n\n    removeOutgoingHook = (outgoingWebhook) => {\n        this.props.actions.removeOutgoingHook(outgoingWebhook.id);\n    }\n\n    outgoingWebhookCompare(a, b) {\n        let displayNameA = a.display_name;\n        if (!displayNameA) {\n            const channelA = this.props.channels[a.channel_id];\n            if (channelA) {\n                displayNameA = channelA.display_name;\n            } else {\n                displayNameA = Utils.localizeMessage('installed_outgoing_webhooks.unknown_channel', 'A Private Webhook');\n            }\n        }\n\n        let displayNameB = b.display_name;\n        if (!displayNameB) {\n            const channelB = this.props.channels[b.channel_id];\n            if (channelB) {\n                displayNameB = channelB.display_name;\n            } else {\n                displayNameB = Utils.localizeMessage('installed_outgoing_webhooks.unknown_channel', 'A Private Webhook');\n            }\n        }\n        return displayNameA.localeCompare(displayNameB);\n    }\n\n    render() {\n        const outgoingWebhooks = this.props.outgoingWebhooks.sort(this.outgoingWebhookCompare).map((outgoingWebhook) => {\n            const canChange = this.props.canManageOthersWebhooks || this.props.user.id === outgoingWebhook.creator_id;\n            const channel = this.props.channels[outgoingWebhook.channel_id];\n            return (\n                <InstalledOutgoingWebhook\n                    key={outgoingWebhook.id}\n                    outgoingWebhook={outgoingWebhook}\n                    onRegenToken={this.regenOutgoingWebhookToken}\n                    onDelete={this.removeOutgoingHook}\n                    creator={this.props.users[outgoingWebhook.creator_id] || {}}\n                    canChange={canChange}\n                    team={this.props.team}\n                    channel={channel}\n                />\n            );\n        });\n\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.header'\n                        defaultMessage='Installed Outgoing Webhooks'\n                    />\n                }\n                addText={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.add'\n                        defaultMessage='Add Outgoing Webhook'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/outgoing_webhooks/add'}\n                emptyText={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.empty'\n                        defaultMessage='No outgoing webhooks found'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.help'\n                        defaultMessage='Use outgoing webhooks to connect external tools to Mattermost. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\n                        values={{\n                            buildYourOwn: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='http://docs.mattermost.com/developer/webhooks-outgoing.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_outgoing_webhooks.help.buildYourOwn'\n                                        defaultMessage='Build your own'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_outgoing_webhooks.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('installed_outgoing_webhooks.search', 'Search Outgoing Webhooks')}\n                loading={this.state.loading}\n            >\n                {outgoingWebhooks}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'mattermost-redux/actions/integrations';\nimport {getOutgoingHooks} from 'mattermost-redux/selectors/entities/integrations';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {getAllChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport InstalledOutgoingWebhook from './installed_outgoing_webhooks.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const teamId = getCurrentTeamId(state);\n    const canManageOthersWebhooks = haveITeamPermission(state, {team: teamId, permission: Permissions.MANAGE_OTHERS_WEBHOOKS});\n    const outgoingHooks = getOutgoingHooks(state);\n    const outgoingWebhooks = Object.keys(outgoingHooks).\n        map((key) => outgoingHooks[key]).\n        filter((outgoingWebhook) => outgoingWebhook.team_id === teamId);\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n\n    return {\n        outgoingWebhooks,\n        channels: getAllChannels(state),\n        users: getUsers(state),\n        teamId,\n        canManageOthersWebhooks,\n        enableOutgoingWebhooks,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getOutgoingHooks: Actions.getOutgoingHooks,\n            removeOutgoingHook: Actions.removeOutgoingHook,\n            regenOutgoingHookToken: Actions.regenOutgoingHookToken,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledOutgoingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport TeamStore from 'stores/team_store.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport ChannelSelect from 'components/channel_select';\nimport FormError from 'components/form_error.jsx';\nimport SpinnerButton from 'components/spinner_button.jsx';\n\nexport default class AbstractOutgoingWebhook extends React.Component {\n    static propTypes = {\n\n        /**\n         * The current team\n         */\n        team: PropTypes.object.isRequired,\n\n        /**\n         * The header text to render, has id and defaultMessage\n         */\n        header: PropTypes.object.isRequired,\n\n        /**\n         * The footer text to render, has id and defaultMessage\n         */\n        footer: PropTypes.object.isRequired,\n\n        /**\n         * Any extra component/node to render\n         */\n        renderExtra: PropTypes.node.isRequired,\n\n        /**\n         * The server error text after a failed action\n         */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n         * The hook used to set the initial state\n         */\n        initialHook: PropTypes.object,\n\n        /**\n         * The async function to run when the action button is pressed\n         */\n        action: PropTypes.func.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post username.\n         */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post icon.\n         */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromHook(this.props.initialHook || {});\n    }\n\n    getStateFromHook = (hook) => {\n        let triggerWords = '';\n        if (hook.trigger_words) {\n            let i = 0;\n            for (i = 0; i < hook.trigger_words.length; i++) {\n                triggerWords += hook.trigger_words[i] + '\\n';\n            }\n        }\n\n        let callbackUrls = '';\n        if (hook.callback_urls) {\n            let i = 0;\n            for (i = 0; i < hook.callback_urls.length; i++) {\n                callbackUrls += hook.callback_urls[i] + '\\n';\n            }\n        }\n\n        return {\n            displayName: hook.display_name || '',\n            description: hook.description || '',\n            contentType: hook.content_type || 'application/x-www-form-urlencoded',\n            channelId: hook.channel_id || '',\n            triggerWords,\n            triggerWhen: hook.trigger_when || 0,\n            callbackUrls,\n            saving: false,\n            clientError: null,\n            username: hook.username || '',\n            iconURL: hook.icon_url || '',\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            clientError: '',\n        });\n\n        const triggerWords = [];\n        if (this.state.triggerWords) {\n            for (let triggerWord of this.state.triggerWords.split('\\n')) {\n                triggerWord = triggerWord.trim();\n\n                if (triggerWord.length > 0) {\n                    triggerWords.push(triggerWord);\n                }\n            }\n        }\n\n        if (!this.state.channelId && triggerWords.length === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_outgoing_webhook.triggerWordsOrChannelRequired'\n                        defaultMessage='A valid channel or a list of trigger words is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const callbackUrls = [];\n        for (let callbackUrl of this.state.callbackUrls.split('\\n')) {\n            callbackUrl = callbackUrl.trim();\n\n            if (callbackUrl.length > 0) {\n                callbackUrls.push(callbackUrl);\n            }\n        }\n\n        if (callbackUrls.length === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_outgoing_webhook.callbackUrlsRequired'\n                        defaultMessage='One or more callback URLs are required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const hook = {\n            team_id: TeamStore.getCurrentId(),\n            channel_id: this.state.channelId,\n            trigger_words: triggerWords,\n            trigger_when: parseInt(this.state.triggerWhen, 10),\n            callback_urls: callbackUrls,\n            display_name: this.state.displayName,\n            content_type: this.state.contentType,\n            description: this.state.description,\n            username: this.state.username,\n            icon_url: this.state.iconURL,\n        };\n\n        this.props.action(hook).then(() => this.setState({saving: false}));\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateContentType = (e) => {\n        this.setState({\n            contentType: e.target.value,\n        });\n    }\n\n    updateChannelId = (e) => {\n        this.setState({\n            channelId: e.target.value,\n        });\n    }\n\n    updateTriggerWords = (e) => {\n        this.setState({\n            triggerWords: e.target.value,\n        });\n    }\n\n    updateTriggerWhen = (e) => {\n        this.setState({\n            triggerWhen: e.target.value,\n        });\n    }\n\n    updateCallbackUrls = (e) => {\n        this.setState({\n            callbackUrls: e.target.value,\n        });\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateIconURL = (e) => {\n        this.setState({\n            iconURL: e.target.value,\n        });\n    }\n\n    render() {\n        const contentTypeOption1 = 'application/x-www-form-urlencoded';\n        const contentTypeOption2 = 'application/json';\n\n        var headerToRender = this.props.header;\n        var footerToRender = this.props.footer;\n        var renderExtra = this.props.renderExtra;\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/outgoing_webhooks`}>\n                        <FormattedMessage\n                            id='installed_outgoing_webhooks.header'\n                            defaultMessage='Outgoing Webhooks'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={headerToRender.id}\n                        defaultMessage={headerToRender.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.displayName'\n                                    defaultMessage='Title'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.displayName.help'\n                                        defaultMessage='Choose a title to be displayed on the webhook settings page. Maximum 64 characters.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='500'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.description.help'\n                                        defaultMessage='Description for your incoming webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='contentType'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.content_Type'\n                                    defaultMessage='Content Type'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    className='form-control'\n                                    value={this.state.contentType}\n                                    onChange={this.updateContentType}\n                                >\n                                    <option\n                                        value={contentTypeOption1}\n                                    >\n                                        {contentTypeOption1}\n                                    </option>\n                                    <option\n                                        value={contentTypeOption2}\n                                    >\n                                        {contentTypeOption2}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.contentType.help1'\n                                        defaultMessage='Choose the content type by which the request will be sent.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.contentType.help2'\n                                        defaultMessage='If application/x-www-form-urlencoded is chosen, the server will encode the parameters in a URL format in the request body.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.contentType.help3'\n                                        defaultMessage='If application/json is chosen, the server will format the request body as JSON.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='channelId'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.channel'\n                                    defaultMessage='Channel'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <ChannelSelect\n                                    id='channelId'\n                                    value={this.state.channelId}\n                                    onChange={this.updateChannelId}\n                                    selectOpen={true}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.channel.help'\n                                        defaultMessage='Public channel that delivers payload to webhook. Optional if at least one Trigger Word is specified.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='triggerWords'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.triggerWords'\n                                    defaultMessage='Trigger Words (One Per Line)'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <textarea\n                                    id='triggerWords'\n                                    rows='3'\n                                    maxLength='1000'\n                                    className='form-control'\n                                    value={this.state.triggerWords}\n                                    onChange={this.updateTriggerWords}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.triggerWords.help'\n                                        defaultMessage='Messages that start with one of the specified words will trigger the outgoing webhook. Optional if Channel is selected.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='triggerWords'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.triggerWordsTriggerWhen'\n                                    defaultMessage='Trigger When'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    className='form-control'\n                                    value={this.state.triggerWhen}\n                                    onChange={this.updateTriggerWhen}\n                                >\n                                    <option\n                                        value='0'\n                                    >\n                                        {localizeMessage('add_outgoing_webhook.triggerWordsTriggerWhenFullWord', 'First word matches a trigger word exactly')}\n                                    </option>\n                                    <option\n                                        value='1'\n                                    >\n                                        {localizeMessage('add_outgoing_webhook.triggerWordsTriggerWhenStartsWith', 'First word starts with a trigger word')}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.triggerWordsTriggerWhen.help'\n                                        defaultMessage='Choose when to trigger the outgoing webhook; if the first word of a message matches a Trigger Word exactly, or if it starts with a Trigger Word.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='callbackUrls'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.callbackUrls'\n                                    defaultMessage='Callback URLs (One Per Line)'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <textarea\n                                    id='callbackUrls'\n                                    rows='3'\n                                    maxLength='1000'\n                                    className='form-control'\n                                    value={this.state.callbackUrls}\n                                    onChange={this.updateCallbackUrls}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.callbackUrls.help'\n                                        defaultMessage='The URL that messages will be sent to. If the URL is private, add it as a {link}.'\n                                        values={{\n                                            link: (\n                                                <a\n                                                    href='https://about.mattermost.com/default-allow-internal-connections-settings-documentation/'\n                                                    target='_blank'\n                                                    rel='noopener noreferrer'\n                                                >\n                                                    <FormattedMessage\n                                                        id='add_outgoing_webhook.callbackUrls.helpLinkText'\n                                                        defaultMessage='trusted internal connection'\n                                                    />\n                                                </a>\n                                            ),\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {this.props.enablePostUsernameOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='username'\n                                >\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.username'\n                                        defaultMessage='Username'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='username'\n                                        type='text'\n                                        maxLength='22'\n                                        className='form-control'\n                                        value={this.state.username}\n                                        onChange={this.updateUsername}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_outgoing_webhook.username.help'\n                                            defaultMessage='Choose the username this integration will post as. Usernames can be up to 22 characters, and may contain lowercase letters, numbers and the symbols \"-\", \"_\", and \".\".'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        {this.props.enablePostIconOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='iconURL'\n                                >\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.icon_url'\n                                        defaultMessage='Profile Picture'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='iconURL'\n                                        type='text'\n                                        maxLength='1024'\n                                        className='form-control'\n                                        value={this.state.iconURL}\n                                        onChange={this.updateIconURL}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_outgoing_webhook.icon_url.help'\n                                            defaultMessage='Choose the profile picture this integration will use when posting. Enter the URL of a .png or .jpg file at least 128 pixels by 128 pixels.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-sm'\n                                to={`/${this.props.team.name}/integrations/outgoing_webhooks`}\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                onClick={this.handleSubmit}\n                            >\n                                <FormattedMessage\n                                    id={footerToRender.id}\n                                    defaultMessage={footerToRender.defaultMessage}\n                                />\n                            </SpinnerButton>\n                            {renderExtra}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractOutgoingWebhook from 'components/integrations/abstract_outgoing_webhook.jsx';\n\nconst HEADER = {id: t('integrations.add'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('add_outgoing_webhook.save'), defaultMessage: 'Save'};\n\nexport default class AddOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The current team\n         */\n        team: PropTypes.object.isRequired,\n\n        /**\n         * The request state for createOutgoingHook action. Contains status and error\n         */\n        createOutgoingHookRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * The function to call to add a new outgoing webhook\n             */\n            createOutgoingHook: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n         * Whether to allow configuration of the default post username.\n         */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post icon.\n         */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addOutgoingHook = async (hook) => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.createOutgoingHook(hook);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=outgoing_webhooks&id=${data.id}`);\n            return;\n        }\n\n        if (this.props.createOutgoingHookRequest.error) {\n            this.setState({serverError: this.props.createOutgoingHookRequest.error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractOutgoingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                renderExtra={''}\n                action={this.addOutgoingHook}\n                serverError={this.state.serverError}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {createOutgoingHook} from 'mattermost-redux/actions/integrations';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport AddOutgoingWebhook from './add_outgoing_webhook.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n    return {\n        createOutgoingHookRequest: state.requests.integrations.createOutgoingHook,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createOutgoingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOutgoingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport AbstractOutgoingWebhook from 'components/integrations/abstract_outgoing_webhook.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\n\nconst HEADER = {id: 'integrations.edit', defaultMessage: 'Edit'};\nconst FOOTER = {id: 'update_outgoing_webhook.update', defaultMessage: 'Update'};\n\nexport default class EditOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The current team\n         */\n        team: PropTypes.object.isRequired,\n\n        /**\n         * The outgoing webhook to edit\n         */\n        hook: PropTypes.object,\n\n        /**\n         * The id of the outgoing webhook to edit\n         */\n        hookId: PropTypes.string.isRequired,\n\n        /**\n         * The request state for updateOutgoingHook action. Contains status and error\n         */\n        updateOutgoingHookRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * The function to call to update an outgoing webhook\n             */\n            updateOutgoingHook: PropTypes.func.isRequired,\n\n            /**\n             * The function to call to get an outgoing webhook\n             */\n            getOutgoingHook: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not outgoing webhooks are enabled.\n        */\n        enableOutgoingWebhooks: PropTypes.bool,\n\n        /**\n         * Whether to allow configuration of the default post username.\n         */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post icon.\n         */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOutgoingWebhooks) {\n            this.props.actions.getOutgoingHook(this.props.hookId);\n        }\n    }\n\n    editOutgoingHook = async (hook) => {\n        this.newHook = hook;\n\n        if (this.props.hook.id) {\n            hook.id = this.props.hook.id;\n        }\n\n        if (this.props.hook.token) {\n            hook.token = this.props.hook.token;\n        }\n\n        const triggerWordsSame = (this.props.hook.trigger_words.length === hook.trigger_words.length) &&\n            this.props.hook.trigger_words.every((v, i) => v === hook.trigger_words[i]);\n\n        const callbackUrlsSame = (this.props.hook.callback_urls.length === hook.callback_urls.length) &&\n            this.props.hook.callback_urls.every((v, i) => v === hook.callback_urls[i]);\n\n        if (this.props.hook.content_type !== hook.content_type ||\n            !triggerWordsSame || !callbackUrlsSame) {\n            this.handleConfirmModal();\n        } else {\n            await this.submitHook();\n        }\n    }\n\n    handleConfirmModal = () => {\n        this.setState({showConfirmModal: true});\n    }\n\n    confirmModalDismissed = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    submitHook = async () => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.updateOutgoingHook(this.newHook);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/outgoing_webhooks`);\n            return;\n        }\n\n        this.setState({showConfirmModal: false});\n\n        if (this.props.updateOutgoingHookRequest.error) {\n            this.setState({serverError: this.props.updateOutgoingHookRequest.error.message});\n        }\n    }\n\n    renderExtra = () => {\n        const confirmButton = (\n            <FormattedMessage\n                id='update_outgoing_webhook.update'\n                defaultMessage='Update'\n            />\n        );\n\n        const confirmTitle = (\n            <FormattedMessage\n                id='update_outgoing_webhook.confirm'\n                defaultMessage='Edit Outgoing Webhook'\n            />\n        );\n\n        const confirmMessage = (\n            <FormattedMessage\n                id='update_outgoing_webhook.question'\n                defaultMessage='Your changes may break the existing outgoing webhook. Are you sure you would like to update it?'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                title={confirmTitle}\n                message={confirmMessage}\n                confirmButtonText={confirmButton}\n                show={this.state.showConfirmModal}\n                onConfirm={this.submitHook}\n                onCancel={this.confirmModalDismissed}\n            />\n        );\n    }\n\n    render() {\n        if (!this.props.hook) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractOutgoingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                renderExtra={this.renderExtra()}\n                action={this.editOutgoingHook}\n                serverError={this.state.serverError}\n                initialHook={this.props.hook}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getOutgoingHook, updateOutgoingHook} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditOutgoingWebhook from './edit_outgoing_webhook.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const hookId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n\n    return {\n        hookId,\n        hook: state.entities.integrations.outgoingHooks[hookId],\n        updateOutgoingHookRequest: state.requests.integrations.createOutgoingHook,\n        enableOutgoingWebhooks,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            updateOutgoingHook,\n            getOutgoingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOutgoingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\nimport FormError from 'components/form_error.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport CopyText from 'components/copy_text.jsx';\n\nimport DeleteIntegration from './delete_integration.jsx';\n\nconst FAKE_SECRET = '***************';\n\nexport default class InstalledOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        /**\n        * The oauthApp data\n        */\n        oauthApp: PropTypes.object.isRequired,\n\n        /**\n        * The request state for regenOAuthAppSecret action. Contains status and error\n        */\n        regenOAuthAppSecretRequest: PropTypes.object.isRequired,\n\n        /**\n        * The function to call when Regenerate Secret link is clicked\n        */\n        onRegenerateSecret: PropTypes.func.isRequired,\n\n        /**\n        * The function to call when Delete link is clicked\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * Set to filter OAuthApp\n        */\n        filter: PropTypes.string,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            clientSecret: FAKE_SECRET,\n        };\n    }\n\n    handleShowClientSecret = (e) => {\n        if (e && e.preventDefault) {\n            e.preventDefault();\n        }\n        this.setState({clientSecret: this.props.oauthApp.client_secret});\n    }\n\n    handleHideClientSecret = (e) => {\n        e.preventDefault();\n        this.setState({clientSecret: FAKE_SECRET});\n    }\n\n    handleRegenerate = (e) => {\n        e.preventDefault();\n        this.props.onRegenerateSecret(this.props.oauthApp.id).then(\n            () => {\n                const {error} = this.props.regenOAuthAppSecretRequest;\n                if (error) {\n                    this.setState({error: error.message});\n                } else {\n                    this.setState({error: null});\n                    this.handleShowClientSecret();\n                }\n            }\n        );\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.oauthApp);\n    }\n\n    matchesFilter = (oauthApp, filter) => {\n        if (!filter) {\n            return true;\n        }\n\n        return oauthApp.name.toLowerCase().indexOf(filter) !== -1;\n    }\n\n    render() {\n        const oauthApp = this.props.oauthApp;\n        let error;\n\n        if (this.state.error) {\n            error = (\n                <FormError\n                    error={this.state.error}\n                />\n            );\n        }\n\n        if (!this.matchesFilter(oauthApp, this.props.filter)) {\n            return null;\n        }\n\n        let name;\n        if (oauthApp.name) {\n            name = oauthApp.name;\n        } else {\n            name = (\n                <FormattedMessage\n                    id='installed_integrations.unnamed_oauth_app'\n                    defaultMessage='Unnamed OAuth 2.0 Application'\n                />\n            );\n        }\n\n        let description;\n        if (oauthApp.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {oauthApp.description}\n                    </span>\n                </div>\n            );\n        }\n\n        const urls = (\n            <div className='item-details__row'>\n                <span className='item-details__url'>\n                    <FormattedMessage\n                        id='installed_integrations.callback_urls'\n                        defaultMessage='Callback URLs: {urls}'\n                        values={{\n                            urls: oauthApp.callback_urls.join(', '),\n                        }}\n                    />\n                </span>\n            </div>\n        );\n\n        let isTrusted;\n        if (oauthApp.is_trusted) {\n            isTrusted = Utils.localizeMessage('installed_oauth_apps.trusted.yes', 'Yes');\n        } else {\n            isTrusted = Utils.localizeMessage('installed_oauth_apps.trusted.no', 'No');\n        }\n\n        let showHide;\n        let clientSecret;\n        if (this.state.clientSecret === FAKE_SECRET) {\n            showHide = (\n                <button\n                    id='showSecretButton'\n                    className='style--none color--link'\n                    onClick={this.handleShowClientSecret}\n                >\n                    <FormattedMessage\n                        id='installed_integrations.showSecret'\n                        defaultMessage='Show Secret'\n                    />\n                </button>\n            );\n            clientSecret = (\n                <span className='item-details__token'>\n                    <FormattedMessage\n                        id='installed_integrations.client_secret'\n                        defaultMessage='Client Secret: **{clientSecret}**'\n                        values={{\n                            clientSecret: this.state.clientSecret,\n                        }}\n                    />\n                </span>\n            );\n        } else {\n            showHide = (\n                <button\n                    id='hideSecretButton'\n                    className='style--none color--link'\n                    onClick={this.handleHideClientSecret}\n                >\n                    <FormattedMessage\n                        id='installed_integrations.hideSecret'\n                        defaultMessage='Hide Secret'\n                    />\n                </button>\n            );\n            clientSecret = (\n                <span className='item-details__token'>\n                    <FormattedMarkdownMessage\n                        id='installed_integrations.client_secret'\n                        defaultMessage='Client Secret: **{clientSecret}**'\n                        values={{\n                            clientSecret: this.state.clientSecret,\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_secret'\n                        defaultMessage='Copy Client Secret'\n                        value={this.state.clientSecret}\n                    />\n                </span>\n            );\n        }\n\n        const regen = (\n            <button\n                id='regenerateSecretButton'\n                className='style--none color--link'\n                onClick={this.handleRegenerate}\n            >\n                <FormattedMessage\n                    id='installed_integrations.regenSecret'\n                    defaultMessage='Regenerate Secret'\n                />\n            </button>\n        );\n\n        let icon;\n        if (oauthApp.icon_url) {\n            icon = (\n                <div className='integration__icon integration-list__icon'>\n                    <img src={oauthApp.icon_url}/>\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-list__item'>\n                {icon}\n                <div className='item-details'>\n                    <div className='item-details__row'>\n                        <span className='item-details__name'>\n                            {name}\n                        </span>\n                    </div>\n                    {error}\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__url'>\n                            <FormattedMarkdownMessage\n                                id='installed_oauth_apps.is_trusted'\n                                defaultMessage='Is Trusted: **{isTrusted}**'\n                                values={{\n                                    isTrusted,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedMarkdownMessage\n                                id='installed_integrations.client_id'\n                                defaultMessage='Client ID: **{clientId}**'\n                                values={{\n                                    clientId: oauthApp.id,\n                                }}\n                            />\n                            <CopyText\n                                idMessage='integrations.copy_client_id'\n                                defaultMessage='Copy Client Id'\n                                value={oauthApp.id}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        {clientSecret}\n                    </div>\n                    {urls}\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: Utils.getDisplayNameByUserId(oauthApp.creator_id),\n                                    createAt: oauthApp.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                </div>\n                <div className='item-actions'>\n                    {showHide}\n                    {' - '}\n                    {regen}\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/oauth2-apps/edit?id=${oauthApp.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId={t('installed_oauth_apps.delete.confirm')}\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {localizeMessage} from 'utils/utils.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledOAuthApp from '../installed_oauth_app.jsx';\n\nexport default class InstalledOAuthApps extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        /**\n        * The oauthApps data\n        */\n        oauthApps: PropTypes.object,\n\n        /**\n        * Set if user can manage oath\n        */\n        canManageOauth: PropTypes.bool,\n\n        /**\n        * The request state for regenOAuthAppSecret action. Contains status and error\n        */\n        regenOAuthAppSecretRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to fetch OAuth apps\n            */\n            getOAuthApps: PropTypes.func.isRequired,\n\n            /**\n            * The function to call when Regenerate Secret link is clicked\n            */\n            regenOAuthAppSecret: PropTypes.func.isRequired,\n\n            /**\n            * The function to call when Delete link is clicked\n            */\n            deleteOAuthApp: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not OAuth applications are enabled.\n        */\n        enableOAuthServiceProvider: PropTypes.bool,\n\n        /**\n        * Whether or not integration configuration is restricted to admins.\n        */\n        enableOnlyAdminIntegrations: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOAuthServiceProvider) {\n            this.props.actions.getOAuthApps().then(\n                () => this.setState({loading: false})\n            );\n        }\n    }\n\n    deleteOAuthApp = (app) => {\n        if (app && app.id) {\n            this.props.actions.deleteOAuthApp(app.id);\n        }\n    }\n\n    oauthAppCompare(a, b) {\n        let nameA = a.name;\n        if (!nameA) {\n            nameA = localizeMessage('installed_integrations.unnamed_oauth_app', 'Unnamed OAuth 2.0 Application');\n        }\n\n        let nameB = b.name;\n        if (!nameB) {\n            nameB = localizeMessage('installed_integrations.unnamed_oauth_app', 'Unnamed OAuth 2.0 Application');\n        }\n\n        return nameA.localeCompare(nameB);\n    }\n\n    render() {\n        const oauthApps = Object.values(this.props.oauthApps).sort(this.oauthAppCompare).map((app) => {\n            return (\n                <InstalledOAuthApp\n                    key={app.id}\n                    team={this.props.team}\n                    oauthApp={app}\n                    regenOAuthAppSecretRequest={this.props.regenOAuthAppSecretRequest}\n                    onRegenerateSecret={this.props.actions.regenOAuthAppSecret}\n                    onDelete={this.deleteOAuthApp}\n                />\n            );\n        });\n\n        const integrationsEnabled = this.props.enableOAuthServiceProvider && this.props.canManageOauth;\n        let props;\n        if (integrationsEnabled) {\n            props = {\n                addLink: '/' + this.props.team.name + '/integrations/oauth2-apps/add',\n                addText: localizeMessage('installed_oauth_apps.add', 'Add OAuth 2.0 Application'),\n            };\n        }\n\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_oauth_apps.header'\n                        defaultMessage='OAuth 2.0 Applications'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_oauth_apps.help'\n                        defaultMessage='Create {oauthApplications} to securely integrate bots and third-party apps with Mattermost. Visit the {appDirectory} to find available self-hosted apps.'\n                        values={{\n                            oauthApplications: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://docs.mattermost.com/developer/oauth-2-0-applications.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_oauth_apps.help.oauthApplications'\n                                        defaultMessage='OAuth 2.0 applications'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_oauth_apps.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                emptyText={\n                    <FormattedMessage\n                        id='installed_oauth_apps.empty'\n                        defaultMessage='No OAuth 2.0 Applications found'\n                    />\n                }\n                searchPlaceholder={localizeMessage('installed_oauth_apps.search', 'Search OAuth 2.0 Applications')}\n                loading={this.state.loading}\n                {...props}\n            >\n                {oauthApps}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'mattermost-redux/actions/integrations';\nimport {getOAuthApps} from 'mattermost-redux/selectors/entities/integrations';\nimport {haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport InstalledOAuthApps from './installed_oauth_apps.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n    const enableOnlyAdminIntegrations = config.EnableOnlyAdminIntegrations === 'true';\n\n    return {\n        canManageOauth: haveISystemPermission(state, {permission: Permissions.MANAGE_OAUTH}),\n        oauthApps: getOAuthApps(state),\n        regenOAuthAppSecretRequest: state.requests.integrations.updateOAuthApp,\n        enableOAuthServiceProvider,\n        enableOnlyAdminIntegrations,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getOAuthApps: Actions.getOAuthApps,\n            regenOAuthAppSecret: Actions.regenOAuthAppSecret,\n            deleteOAuthApp: Actions.deleteOAuthApp,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledOAuthApps);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport FormError from 'components/form_error.jsx';\nimport SpinnerButton from 'components/spinner_button.jsx';\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\n\nexport default class AbstractOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The header text to render, has id and defaultMessage\n        */\n        header: PropTypes.object.isRequired,\n\n        /**\n        * The footer text to render, has id and defaultMessage\n        */\n        footer: PropTypes.object.isRequired,\n\n        /**\n         * Any extra component/node to render\n         */\n        renderExtra: PropTypes.node.isRequired,\n\n        /**\n        * The server error text after a failed action\n        */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n        * The OAuthApp used to set the initial state\n        */\n        initialApp: PropTypes.object,\n\n        /**\n        * The async function to run when the action button is pressed\n        */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.image = new Image();\n        this.image.onload = this.imageLoaded;\n        this.state = this.getStateFromApp(this.props.initialApp || {});\n    }\n\n    getStateFromApp = (app) => {\n        return {\n            name: app.name || '',\n            description: app.description || '',\n            homepage: app.homepage || '',\n            icon_url: app.icon_url || '',\n            callbackUrls: app.callback_urls ? app.callback_urls.join('\\n') : '',\n            is_trusted: app.is_trusted || false,\n            has_icon: Boolean(app.icon_url),\n            saving: false,\n            clientError: null,\n        };\n    }\n\n    imageLoaded = () => {\n        this.setState({\n            has_icon: true,\n            icon_url: this.refs.icon_url.value,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            clientError: '',\n        });\n\n        if (!this.state.name) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.nameRequired'\n                        defaultMessage='Name for the OAuth 2.0 application is required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!this.state.description) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.descriptionRequired'\n                        defaultMessage='Description for the OAuth 2.0 application is required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!this.state.homepage) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.homepageRequired'\n                        defaultMessage='Homepage for the OAuth 2.0 application is required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const callbackUrls = [];\n        for (let callbackUrl of this.state.callbackUrls.split('\\n')) {\n            callbackUrl = callbackUrl.trim();\n\n            if (callbackUrl.length > 0) {\n                callbackUrls.push(callbackUrl);\n            }\n        }\n\n        if (callbackUrls.length === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.callbackUrlsRequired'\n                        defaultMessage='One or more callback URLs are required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const app = {\n            name: this.state.name,\n            callback_urls: callbackUrls,\n            homepage: this.state.homepage,\n            description: this.state.description,\n            is_trusted: this.state.is_trusted,\n            icon_url: this.state.icon_url,\n        };\n\n        this.props.action(app).then(() => this.setState({saving: false}));\n    }\n\n    updateName = (e) => {\n        this.setState({\n            name: e.target.value,\n        });\n    }\n\n    updateTrusted = (e) => {\n        this.setState({\n            is_trusted: e.target.value === 'true',\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateHomepage = (e) => {\n        this.setState({\n            homepage: e.target.value,\n        });\n    }\n\n    updateIconUrl = (e) => {\n        this.setState({\n            has_icon: false,\n            icon_url: e.target.value,\n        });\n        this.image.src = e.target.value;\n    }\n\n    updateCallbackUrls = (e) => {\n        this.setState({\n            callbackUrls: e.target.value,\n        });\n    }\n\n    render() {\n        const headerToRender = this.props.header;\n        const footerToRender = this.props.footer;\n        const renderExtra = this.props.renderExtra;\n\n        let icon;\n        if (this.state.has_icon) {\n            icon = (\n                <div className='integration__icon'>\n                    <img src={this.state.icon_url}/>\n                </div>\n            );\n        }\n\n        const trusted = (\n            <SystemPermissionGate permissions={[Permissions.MANAGE_SYSTEM]}>\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='is_trusted'\n                    >\n                        <FormattedMessage\n                            id='installed_oauth_apps.trusted'\n                            defaultMessage='Is Trusted'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <label className='radio-inline'>\n                            <input\n                                type='radio'\n                                value='true'\n                                name='is_trusted'\n                                checked={this.state.is_trusted}\n                                onChange={this.updateTrusted}\n                            />\n                            <FormattedMessage\n                                id='installed_oauth_apps.trusted.yes'\n                                defaultMessage='Yes'\n                            />\n                        </label>\n                        <label className='radio-inline'>\n                            <input\n                                type='radio'\n                                value='false'\n                                name='is_trusted'\n                                checked={!this.state.is_trusted}\n                                onChange={this.updateTrusted}\n                            />\n                            <FormattedMessage\n                                id='installed_oauth_apps.trusted.no'\n                                defaultMessage='No'\n                            />\n                        </label>\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_oauth_app.trusted.help'\n                                defaultMessage=\"When true, the OAuth 2.0 application is considered trusted by the Mattermost server and doesn't require the user to accept authorization. When false, an additional window will appear, asking the user to accept or deny the authorization.\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </SystemPermissionGate>\n        );\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/oauth2-apps`}>\n                        <FormattedMessage\n                            id='installed_oauth_apps.header'\n                            defaultMessage='Installed OAuth2 Apps'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={headerToRender.id}\n                        defaultMessage={headerToRender.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    {icon}\n                    <form className='form-horizontal'>\n                        {trusted}\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='name'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.name'\n                                    defaultMessage='Display Name'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='name'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.name}\n                                    onChange={this.updateName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.name.help'\n                                        defaultMessage='Display name for your OAuth 2.0 application made of up to 64 characters.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='512'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.description.help'\n                                        defaultMessage='Description for your OAuth 2.0 application.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='homepage'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.homepage'\n                                    defaultMessage='Homepage'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='homepage'\n                                    type='url'\n                                    maxLength='256'\n                                    className='form-control'\n                                    value={this.state.homepage}\n                                    onChange={this.updateHomepage}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.homepage.help'\n                                        defaultMessage='The URL for the homepage of the OAuth 2.0 application. Make sure you use HTTP or HTTPS in your URL depending on your server configuration.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='icon_url'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.iconUrl'\n                                    defaultMessage='Icon URL'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='icon_url'\n                                    ref='icon_url'\n                                    type='url'\n                                    maxLength='512'\n                                    className='form-control'\n                                    value={this.state.icon_url}\n                                    onChange={this.updateIconUrl}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.icon.help'\n                                        defaultMessage='The URL for the homepage of the OAuth 2.0 application. Make sure you use HTTP or HTTPS in your URL depending on your server configuration.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='callbackUrls'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.callbackUrls'\n                                    defaultMessage='Callback URLs (One Per Line)'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <textarea\n                                    id='callbackUrls'\n                                    rows='3'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.callbackUrls}\n                                    onChange={this.updateCallbackUrls}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.callbackUrls.help'\n                                        defaultMessage='The redirect URIs to which the service will redirect users after accepting or denying authorization of your application, and which will handle authorization codes or access tokens. Must be a valid URL and start with http:// or https://.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-sm'\n                                to={`/${this.props.team.name}/integrations/oauth2-apps`}\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                onClick={this.handleSubmit}\n                            >\n                                <FormattedMessage\n                                    id={footerToRender.id}\n                                    defaultMessage={footerToRender.defaultMessage}\n                                />\n                            </SpinnerButton>\n                            {renderExtra}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractOAuthApp from '../abstract_oauth_app.jsx';\n\nconst HEADER = {id: t('add_oauth_app.header'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('installed_oauth_apps.save'), defaultMessage: 'Save'};\n\nexport default class AddOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        /**\n        * The request state for addOAuthApp action. Contains status and error\n        */\n        addOAuthAppRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to add new OAuthApp\n            */\n            addOAuthApp: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addOAuthApp = async (app) => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.addOAuthApp(app);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=oauth2-apps&id=${data.id}`);\n            return;\n        }\n\n        if (this.props.addOAuthAppRequest.error) {\n            this.setState({serverError: this.props.addOAuthAppRequest.error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractOAuthApp\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                renderExtra={''}\n                action={this.addOAuthApp}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {addOAuthApp} from 'mattermost-redux/actions/integrations';\n\nimport AddOAuthApp from './add_oauth_app.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        addOAuthAppRequest: state.requests.integrations.addOAuthApp,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            addOAuthApp,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOAuthApp);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport LoadingScreen from 'components/loading_screen.jsx';\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport AbstractOAuthApp from '../abstract_oauth_app.jsx';\n\nconst HEADER = {id: 'integrations.edit', defaultMessage: 'Edit'};\nconst FOOTER = {id: 'update_incoming_webhook.update', defaultMessage: 'Update'};\n\nexport default class EditOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The id of the OAuthApp to edit\n        */\n        oauthAppId: PropTypes.string.isRequired,\n\n        /**\n        * The OAuthApp data\n        */\n        oauthApp: PropTypes.object,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to get OAuthApp\n            */\n            getOAuthApp: PropTypes.func.isRequired,\n\n            /**\n            * The function to call to edit OAuthApp\n            */\n            editOAuthApp: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not OAuth applications are enabled.\n        */\n        enableOAuthServiceProvider: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOAuthServiceProvider) {\n            this.props.actions.getOAuthApp(this.props.oauthAppId);\n        }\n    }\n\n    editOAuthApp = async (app) => {\n        this.newApp = app;\n\n        if (this.props.oauthApp.id) {\n            app.id = this.props.oauthApp.id;\n        }\n\n        if (this.props.oauthApp.token) {\n            app.token = this.props.oauthApp.token;\n        }\n\n        const callbackUrlsSame = (this.props.oauthApp.callback_urls.length === app.callback_urls.length) &&\n            this.props.oauthApp.callback_urls.every((v, i) => v === app.callback_urls[i]);\n\n        if (callbackUrlsSame === false) {\n            this.handleConfirmModal();\n        } else {\n            await this.submitOAuthApp();\n        }\n    }\n\n    handleConfirmModal = () => {\n        this.setState({showConfirmModal: true});\n    }\n\n    confirmModalDismissed = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    submitOAuthApp = async () => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.editOAuthApp(this.newApp);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/oauth2-apps`);\n            return;\n        }\n\n        this.setState({showConfirmModal: false});\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    renderExtra = () => {\n        const confirmButton = (\n            <FormattedMessage\n                id='update_command.update'\n                defaultMessage='Update'\n            />\n        );\n\n        const confirmTitle = (\n            <FormattedMessage\n                id='update_oauth_app.confirm'\n                defaultMessage='Edit OAuth 2.0 application'\n            />\n        );\n\n        const confirmMessage = (\n            <FormattedMessage\n                id='update_oauth_app.question'\n                defaultMessage='Your changes may break the existing OAuth 2.0 application. Are you sure you would like to update it?'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                title={confirmTitle}\n                message={confirmMessage}\n                confirmButtonText={confirmButton}\n                show={this.state.showConfirmModal}\n                onConfirm={this.submitOAuthApp}\n                onCancel={this.confirmModalDismissed}\n            />\n        );\n    }\n\n    render() {\n        if (!this.props.oauthApp) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractOAuthApp\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                renderExtra={this.renderExtra()}\n                action={this.editOAuthApp}\n                serverError={this.state.serverError}\n                initialApp={this.props.oauthApp}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getOAuthApp, editOAuthApp} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditOAuthApp from './edit_oauth_app.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const oauthAppId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    return {\n        oauthAppId,\n        oauthApp: state.entities.integrations.oauthApps[oauthAppId],\n        enableOAuthServiceProvider,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getOAuthApp,\n            editOAuthApp,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOAuthApp);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {t} from 'utils/i18n';\nimport CopyText from '../copy_text.jsx';\n\nimport DeleteIntegration from './delete_integration.jsx';\n\nexport default class InstalledCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * Installed slash command to display\n        */\n        command: PropTypes.object.isRequired,\n\n        /**\n        * The function to call when Regenerate Token link is clicked\n        */\n        onRegenToken: PropTypes.func.isRequired,\n\n        /**\n        * The function to call when Delete link is clicked\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * Set to filter command, comes from BackstageList\n        */\n        filter: PropTypes.string,\n\n        /**\n        * The creator user data\n        */\n        creator: PropTypes.object.isRequired,\n\n        /**\n        * Set to show edit link\n        */\n        canChange: PropTypes.bool.isRequired,\n    }\n\n    handleRegenToken = (e) => {\n        e.preventDefault();\n\n        this.props.onRegenToken(this.props.command);\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.command);\n    }\n\n    matchesFilter(command, filter) {\n        if (!filter) {\n            return true;\n        }\n\n        return command.display_name.toLowerCase().indexOf(filter) !== -1 ||\n            command.description.toLowerCase().indexOf(filter) !== -1 ||\n            command.trigger.toLowerCase().indexOf(filter) !== -1;\n    }\n\n    render() {\n        const command = this.props.command;\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n\n        if (!this.matchesFilter(command, filter)) {\n            return null;\n        }\n\n        let name;\n\n        if (command.display_name) {\n            name = command.display_name;\n        } else {\n            name = (\n                <FormattedMessage\n                    id='installed_commands.unnamed_command'\n                    defaultMessage='Unnamed Slash Command'\n                />\n            );\n        }\n\n        let description = null;\n        if (command.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {command.description}\n                    </span>\n                </div>\n            );\n        }\n\n        let trigger = '- /' + command.trigger;\n        if (command.auto_complete && command.auto_complete_hint) {\n            trigger += ' ' + command.auto_complete_hint;\n        }\n\n        let actions = null;\n        if (this.props.canChange) {\n            actions = (\n                <div className='item-actions'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.handleRegenToken}\n                    >\n                        <FormattedMessage\n                            id='installed_integrations.regenToken'\n                            defaultMessage='Regenerate Token'\n                        />\n                    </button>\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/commands/edit?id=${command.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId={t('installed_commands.delete.confirm')}\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        const commandToken = command.token;\n\n        return (\n            <div className='backstage-list__item'>\n                <div className='item-details'>\n                    <div className='item-details__row'>\n                        <span className='item-details__name'>\n                            {name}\n                        </span>\n                        <span className='item-details__trigger'>\n                            {trigger}\n                        </span>\n                    </div>\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedMessage\n                                id='installed_integrations.token'\n                                defaultMessage='Token: {token}'\n                                values={{\n                                    token: commandToken,\n                                }}\n                            />\n                            <CopyText\n                                value={commandToken}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: this.props.creator.username,\n                                    createAt: command.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                </div>\n                {actions}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledCommand from '../installed_command.jsx';\n\nexport default class InstalledCommands extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team object\n        */\n        team: PropTypes.object,\n\n        /**\n        * The user object\n        */\n        user: PropTypes.object,\n\n        /**\n        * The users collection\n        */\n        users: PropTypes.object,\n\n        /**\n        * Installed slash commands to display\n        */\n        commands: PropTypes.array,\n\n        /**\n        * Set whether to show the loading... animation or not\n        */\n        loading: PropTypes.bool,\n\n        /**\n        * Set to allow changes to installed slash commands\n        */\n        canManageOthersSlashCommands: PropTypes.bool,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call when Regenerate Token link is clicked\n            */\n            regenCommandToken: PropTypes.func.isRequired,\n\n            /**\n            * The function to call when Delete link is clicked\n            */\n            deleteCommand: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    regenCommandToken = (command) => {\n        this.props.actions.regenCommandToken(command.id);\n    }\n\n    deleteCommand = (command) => {\n        this.props.actions.deleteCommand(command.id);\n    }\n\n    commandCompare(a, b) {\n        let nameA = a.display_name;\n        if (!nameA) {\n            nameA = Utils.localizeMessage('installed_commands.unnamed_command', 'Unnamed Slash Command');\n        }\n\n        let nameB = b.display_name;\n        if (!nameB) {\n            nameB = Utils.localizeMessage('installed_commands.unnamed_command', 'Unnamed Slash Command');\n        }\n\n        return nameA.localeCompare(nameB);\n    }\n\n    render() {\n        const commands = this.props.commands.\n            filter((command) => command.team_id === this.props.team.id).\n            sort(this.commandCompare).map((command) => {\n                const canChange = this.props.canManageOthersSlashCommands || this.props.user.id === command.creator_id;\n\n                return (\n                    <InstalledCommand\n                        key={command.id}\n                        team={this.props.team}\n                        command={command}\n                        onRegenToken={this.regenCommandToken}\n                        onDelete={this.deleteCommand}\n                        creator={this.props.users[command.creator_id] || {}}\n                        canChange={canChange}\n                    />\n                );\n            });\n\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_commands.header'\n                        defaultMessage='Installed Slash Commands'\n                    />\n                }\n                addText={\n                    <FormattedMessage\n                        id='installed_commands.add'\n                        defaultMessage='Add Slash Command'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/commands/add'}\n                emptyText={\n                    <FormattedMessage\n                        id='installed_commands.empty'\n                        defaultMessage='No slash commands found'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_commands.help'\n                        defaultMessage='Use slash commands to connect external tools to Mattermost. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\n                        values={{\n                            buildYourOwn: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='http://docs.mattermost.com/developer/slash-commands.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_commands.help.buildYourOwn'\n                                        defaultMessage='Build your own'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_commands.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('installed_commands.search', 'Search Slash Commands')}\n                loading={this.props.loading}\n            >\n                {commands}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {deleteCommand, regenCommandToken} from 'mattermost-redux/actions/integrations';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport InstalledCommands from './installed_commands.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const canManageOthersSlashCommands = haveITeamPermission(state, {team: ownProps.team.id, permission: Permissions.MANAGE_OTHERS_SLASH_COMMANDS});\n\n    return {\n        canManageOthersSlashCommands,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            regenCommandToken,\n            deleteCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledCommands);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport FormError from 'components/form_error.jsx';\nimport SpinnerButton from 'components/spinner_button.jsx';\n\nconst REQUEST_POST = 'P';\nconst REQUEST_GET = 'G';\n\nexport default class AbstractCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The header text to render, has id and defaultMessage\n        */\n        header: PropTypes.object.isRequired,\n\n        /**\n        * The footer text to render, has id and defaultMessage\n        */\n        footer: PropTypes.object.isRequired,\n\n        /**\n         * Any extra component/node to render\n         */\n        renderExtra: PropTypes.node.isRequired,\n\n        /**\n        * The server error text after a failed action\n        */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n        * The Command used to set the initial state\n        */\n        initialCommand: PropTypes.object,\n\n        /**\n        * The async function to run when the action button is pressed\n        */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromCommand(this.props.initialCommand || {});\n    }\n\n    getStateFromCommand = (command) => {\n        return {\n            displayName: command.display_name || '',\n            description: command.description || '',\n            trigger: command.trigger || '',\n            url: command.url || '',\n            method: command.method || REQUEST_POST,\n            username: command.username || '',\n            iconUrl: command.icon_url || '',\n            autocomplete: command.auto_complete || false,\n            autocompleteHint: command.auto_complete_hint || '',\n            autocompleteDescription: command.auto_complete_desc || '',\n            saving: false,\n            clientError: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            clientError: '',\n        });\n\n        let triggerWord = this.state.trigger.trim().toLowerCase();\n        if (triggerWord.indexOf('/') === 0) {\n            triggerWord = triggerWord.substr(1);\n        }\n\n        const command = {\n            display_name: this.state.displayName,\n            description: this.state.description,\n            trigger: triggerWord,\n            url: this.state.url.trim(),\n            method: this.state.method,\n            username: this.state.username,\n            icon_url: this.state.iconUrl,\n            auto_complete: this.state.autocomplete,\n            team_id: this.props.team.id,\n        };\n\n        if (command.auto_complete) {\n            command.auto_complete_desc = this.state.autocompleteDescription;\n            command.auto_complete_hint = this.state.autocompleteHint;\n        }\n\n        if (!command.trigger) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerRequired'\n                        defaultMessage='A trigger word is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (command.trigger.indexOf('/') === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidSlash'\n                        defaultMessage='A trigger word cannot begin with a /'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (command.trigger.indexOf(' ') !== -1) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidSpace'\n                        defaultMessage='A trigger word must not contain spaces'\n                    />\n                ),\n            });\n            return;\n        }\n\n        if (command.trigger.length < Constants.MIN_TRIGGER_LENGTH ||\n            command.trigger.length > Constants.MAX_TRIGGER_LENGTH) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidLength'\n                        defaultMessage='A trigger word must contain between {min} and {max} characters'\n                        values={{\n                            min: Constants.MIN_TRIGGER_LENGTH,\n                            max: Constants.MAX_TRIGGER_LENGTH,\n                        }}\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!command.url) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.urlRequired'\n                        defaultMessage='A request URL is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        this.props.action(command).then(() => this.setState({saving: false}));\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateTrigger = (e) => {\n        this.setState({\n            trigger: e.target.value,\n        });\n    }\n\n    updateUrl = (e) => {\n        this.setState({\n            url: e.target.value,\n        });\n    }\n\n    updateMethod = (e) => {\n        this.setState({\n            method: e.target.value,\n        });\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateIconUrl = (e) => {\n        this.setState({\n            iconUrl: e.target.value,\n        });\n    }\n\n    updateAutocomplete = (e) => {\n        this.setState({\n            autocomplete: e.target.checked,\n        });\n    }\n\n    updateAutocompleteHint = (e) => {\n        this.setState({\n            autocompleteHint: e.target.value,\n        });\n    }\n\n    updateAutocompleteDescription = (e) => {\n        this.setState({\n            autocompleteDescription: e.target.value,\n        });\n    }\n\n    render() {\n        let autocompleteHint = null;\n        let autocompleteDescription = null;\n\n        if (this.state.autocomplete) {\n            autocompleteHint = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='autocompleteHint'\n                    >\n                        <FormattedMessage\n                            id='add_command.autocompleteHint'\n                            defaultMessage='Autocomplete Hint'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <input\n                            id='autocompleteHint'\n                            type='text'\n                            maxLength='1024'\n                            className='form-control'\n                            value={this.state.autocompleteHint}\n                            onChange={this.updateAutocompleteHint}\n                            placeholder={Utils.localizeMessage('add_command.autocompleteHint.placeholder', 'Example: [Patient Name]')}\n                        />\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_command.autocompleteHint.help'\n                                defaultMessage='(Optional) Arguments associated with your slash command, displayed as help in the autocomplete list.'\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n\n            autocompleteDescription = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='autocompleteDescription'\n                    >\n                        <FormattedMessage\n                            id='add_command.autocompleteDescription'\n                            defaultMessage='Autocomplete Description'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <input\n                            id='description'\n                            type='text'\n                            maxLength='128'\n                            className='form-control'\n                            value={this.state.autocompleteDescription}\n                            onChange={this.updateAutocompleteDescription}\n                            placeholder={Utils.localizeMessage('add_command.autocompleteDescription.placeholder', 'Example: \"Returns search results for patient records\"')}\n                        />\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_command.autocompleteDescription.help'\n                                defaultMessage='(Optional) Short description of slash command for the autocomplete list.'\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/integrations/commands'}>\n                        <FormattedMessage\n                            id='installed_command.header'\n                            defaultMessage='Slash Commands'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={this.props.header.id}\n                        defaultMessage={this.props.header.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_command.displayName'\n                                    defaultMessage='Title'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.displayName.help'\n                                        defaultMessage='Choose a title to be displayed on the slash command settings page. Maximum 64 characters.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_command.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='128'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.description.help'\n                                        defaultMessage='Description for your incoming webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='trigger'\n                            >\n                                <FormattedMessage\n                                    id='add_command.trigger'\n                                    defaultMessage='Command Trigger Word'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='trigger'\n                                    type='text'\n                                    maxLength={Constants.MAX_TRIGGER_LENGTH}\n                                    className='form-control'\n                                    value={this.state.trigger}\n                                    onChange={this.updateTrigger}\n                                    placeholder={Utils.localizeMessage('add_command.trigger.placeholder', 'Command trigger e.g. \"hello\" not including the slash')}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.help'\n                                        defaultMessage='Trigger word must be unique, and cannot begin with a slash or contain any spaces.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.helpExamples'\n                                        defaultMessage='Examples: client, employee, patient, weather'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.helpReserved'\n                                        defaultMessage='Reserved: {link}'\n                                        values={{\n                                            link: (\n                                                <a\n                                                    href='https://docs.mattermost.com/help/messaging/executing-commands.html#built-in-commands'\n                                                    target='_blank'\n                                                    rel='noopener noreferrer'\n                                                >\n                                                    <FormattedMessage\n                                                        id='add_command.trigger.helpReservedLinkText'\n                                                        defaultMessage='see list of built-in slash commands'\n                                                    />\n                                                </a>\n                                            ),\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='url'\n                            >\n                                <FormattedMessage\n                                    id='add_command.url'\n                                    defaultMessage='Request URL'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='url'\n                                    type='text'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.url}\n                                    onChange={this.updateUrl}\n                                    placeholder={Utils.localizeMessage('add_command.url.placeholder', 'Must start with http:// or https://')}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.url.help'\n                                        defaultMessage='The callback URL to receive the HTTP POST or GET event request when the slash command is run.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='method'\n                            >\n                                <FormattedMessage\n                                    id='add_command.method'\n                                    defaultMessage='Request Method'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    id='method'\n                                    className='form-control'\n                                    value={this.state.method}\n                                    onChange={this.updateMethod}\n                                >\n                                    <option value={REQUEST_POST}>\n                                        {Utils.localizeMessage('add_command.method.post', 'POST')}\n                                    </option>\n                                    <option value={REQUEST_GET}>\n                                        {Utils.localizeMessage('add_command.method.get', 'GET')}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.method.help'\n                                        defaultMessage='The type of command request issued to the Request URL.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='username'\n                            >\n                                <FormattedMessage\n                                    id='add_command.username'\n                                    defaultMessage='Response Username'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='username'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.username}\n                                    onChange={this.updateUsername}\n                                    placeholder={Utils.localizeMessage('add_command.username.placeholder', 'Username')}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.username.help'\n                                        defaultMessage='(Optional) Choose a username override for responses for this slash command. Usernames can consist of up to 22 characters consisting of lowercase letters, numbers and they symbols \"-\", \"_\", and \".\" .'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='iconUrl'\n                            >\n                                <FormattedMessage\n                                    id='add_command.iconUrl'\n                                    defaultMessage='Response Icon'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='iconUrl'\n                                    type='text'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.iconUrl}\n                                    onChange={this.updateIconUrl}\n                                    placeholder={Utils.localizeMessage('add_command.iconUrl.placeholder', 'https://www.example.com/myicon.png')}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.iconUrl.help'\n                                        defaultMessage='(Optional) Choose a profile picture override for the post responses to this slash command. Enter the URL of a .png or .jpg file at least 128 pixels by 128 pixels.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='autocomplete'\n                            >\n                                <FormattedMessage\n                                    id='add_command.autocomplete'\n                                    defaultMessage='Autocomplete'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <input\n                                    id='autocomplete'\n                                    type='checkbox'\n                                    checked={this.state.autocomplete}\n                                    onChange={this.updateAutocomplete}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.autocomplete.help'\n                                        defaultMessage='(Optional) Show slash command in autocomplete list.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {autocompleteHint}\n                        {autocompleteDescription}\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-sm'\n                                to={'/' + this.props.team.name + '/integrations/commands'}\n                            >\n                                <FormattedMessage\n                                    id='add_command.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                onClick={this.handleSubmit}\n                            >\n                                <FormattedMessage\n                                    id={this.props.footer.id}\n                                    defaultMessage={this.props.footer.defaultMessage}\n                                />\n                            </SpinnerButton>\n                            {this.props.renderExtra}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractCommand from '../abstract_command.jsx';\n\nconst HEADER = {id: t('integrations.add'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('add_command.save'), defaultMessage: 'Save'};\n\nexport default class AddCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to add new command\n            */\n            addCommand: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addCommand = async (command) => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.addCommand(command);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/commands/confirm?type=commands&id=${data.id}`);\n            return;\n        }\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractCommand\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                renderExtra={''}\n                action={this.addCommand}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {addCommand} from 'mattermost-redux/actions/integrations';\n\nimport AddCommand from './add_command.jsx';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            addCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(AddCommand);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport LoadingScreen from 'components/loading_screen.jsx';\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport AbstractCommand from '../abstract_command.jsx';\n\nconst HEADER = {id: t('integrations.edit'), defaultMessage: 'Edit'};\nconst FOOTER = {id: t('edit_command.save'), defaultMessage: 'Update'};\n\nexport default class EditCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The id of the command to edit\n        */\n        commandId: PropTypes.string.isRequired,\n\n        /**\n        * Installed slash commands to display\n        */\n        commands: PropTypes.object,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to fetch team commands\n            */\n            getCustomTeamCommands: PropTypes.func.isRequired,\n\n            /**\n            * The function to call to edit command\n            */\n            editCommand: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not commands are enabled.\n        */\n        enableCommands: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            originalCommand: null,\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableCommands) {\n            this.props.actions.getCustomTeamCommands(this.props.team.id).then(\n                () => {\n                    this.setState({\n                        originalCommand: Object.values(this.props.commands).filter((command) => command.id === this.props.commandId)[0],\n                    });\n                }\n            );\n        }\n    }\n\n    editCommand = async (command) => {\n        this.newCommand = command;\n\n        if (this.state.originalCommand.id) {\n            command.id = this.state.originalCommand.id;\n        }\n\n        if (this.state.originalCommand.url !== this.newCommand.url ||\n            this.state.originalCommand.trigger !== this.newCommand.trigger ||\n            this.state.originalCommand.method !== this.newCommand.method) {\n            this.handleConfirmModal();\n        } else {\n            await this.submitCommand();\n        }\n    }\n\n    handleConfirmModal = () => {\n        this.setState({showConfirmModal: true});\n    }\n\n    confirmModalDismissed = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    submitCommand = async () => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.editCommand(this.newCommand);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/commands`);\n            return;\n        }\n\n        this.setState({showConfirmModal: false});\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    renderExtra = () => {\n        const confirmButton = (\n            <FormattedMessage\n                id='update_command.update'\n                defaultMessage='Update'\n            />\n        );\n\n        const confirmTitle = (\n            <FormattedMessage\n                id='update_command.confirm'\n                defaultMessage='Edit Slash Command'\n            />\n        );\n\n        const confirmMessage = (\n            <FormattedMessage\n                id='update_command.question'\n                defaultMessage='Your changes may break the existing slash command. Are you sure you would like to update it?'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                title={confirmTitle}\n                message={confirmMessage}\n                confirmButtonText={confirmButton}\n                show={this.state.showConfirmModal}\n                onConfirm={this.submitCommand}\n                onCancel={this.confirmModalDismissed}\n            />\n        );\n    }\n\n    render() {\n        if (!this.state.originalCommand) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractCommand\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                renderExtra={this.renderExtra()}\n                action={this.editCommand}\n                serverError={this.state.serverError}\n                initialCommand={this.state.originalCommand}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {editCommand, getCustomTeamCommands} from 'mattermost-redux/actions/integrations';\nimport {getCommands} from 'mattermost-redux/selectors/entities/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditCommand from './edit_command.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const commandId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const enableCommands = config.EnableCommands === 'true';\n\n    return {\n        commandId,\n        commands: getCommands(state),\n        enableCommands,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getCustomTeamCommands,\n            editCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditCommand);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {Constants, ErrorPageTypes} from 'utils/constants.jsx';\nimport CopyText from 'components/copy_text.jsx';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport {getSiteURL} from 'utils/url.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class ConfirmIntegration extends React.Component {\n    static get propTypes() {\n        return {\n            team: PropTypes.object,\n            location: PropTypes.object,\n            commands: PropTypes.object,\n            oauthApps: PropTypes.object,\n            incomingHooks: PropTypes.object,\n            outgoingHooks: PropTypes.object,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: (new URLSearchParams(this.props.location.search)).get('type'),\n            id: (new URLSearchParams(this.props.location.search)).get('id'),\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('keypress', this.handleKeyPress);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keypress', this.handleKeyPress);\n    }\n\n    handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            browserHistory.push('/' + this.props.team.name + '/integrations/' + this.state.type);\n        }\n    }\n\n    render() {\n        let headerText = null;\n        let helpText = null;\n        let tokenText = null;\n\n        const command = this.props.commands[this.state.id];\n        const incomingHook = this.props.incomingHooks[this.state.id];\n        const outgoingHook = this.props.outgoingHooks[this.state.id];\n        const oauthApp = this.props.oauthApps[this.state.id];\n\n        if (this.state.type === Constants.Integrations.COMMAND && command) {\n            const commandToken = command.token;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_commands.header'}\n                    defaultMessage='Slash Commands'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='add_command.doneHelp'\n                        defaultMessage='Your slash command has been set up. The following token will be sent in the outgoing payload. Please use it to verify the request came from your Mattermost team (see [documentation](!https://docs.mattermost.com/developer/slash-commands.html) for further details).'\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_command.token'\n                        defaultMessage='**Token**: {token}'\n                        values={{\n                            token: commandToken,\n                        }}\n                    />\n                    <CopyText\n                        value={commandToken}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.INCOMING_WEBHOOK && incomingHook) {\n            const incomingHookToken = getSiteURL() + '/hooks/' + incomingHook.id;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_incoming_webhooks.header'}\n                    defaultMessage='Incoming Webhooks'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='add_incoming_webhook.doneHelp'\n                        defaultMessage='Your incoming webhook has been set up. Please send data to the following URL (see [documentation](!https://docs.mattermost.com/developer/webhooks-incoming.html) for further details).'\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_incoming_webhook.url'\n                        defaultMessage='**URL**: {url}'\n                        values={{\n                            url: incomingHookToken,\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_secret'\n                        defaultMessage='Copy Client Secret'\n                        value={incomingHookToken}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.OUTGOING_WEBHOOK && outgoingHook) {\n            const outgoingHookToken = outgoingHook.token;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_outgoing_webhooks.header'}\n                    defaultMessage='Outgoing Webhooks'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='add_outgoing_webhook.doneHelp'\n                        defaultMessage='Your outgoing webhook has been set up. The following token will be sent in the outgoing payload. Please use it to verify the request came from your Mattermost team (see [documentation](!https://docs.mattermost.com/developer/webhooks-outgoing.html) for further details).'\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_outgoing_webhook.token'\n                        defaultMessage='**Token**: {token}'\n                        values={{\n                            token: outgoingHookToken,\n                        }}\n                    />\n                    <CopyText\n                        value={outgoingHookToken}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.OAUTH_APP && oauthApp) {\n            const oauthAppToken = oauthApp.id;\n            const oauthAppSecret = oauthApp.client_secret;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_oauth_apps.header'}\n                    defaultMessage='OAuth 2.0 Applications'\n                />\n            );\n\n            helpText = [];\n            helpText.push(\n                <p key='add_oauth_app.doneHelp'>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.doneHelp'\n                        defaultMessage='Your OAuth 2.0 application has been set up. Please use the following Client ID and Client Secret when requesting authorization for your application (see [documentation](!https://docs.mattermost.com/developer/oauth-2-0-applications.html) for further details).'\n                    />\n                </p>\n            );\n            helpText.push(\n                <p key='add_oauth_app.clientId'>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.clientId'\n                        defaultMessage='**Client ID**: {id}'\n                        values={{\n                            id: oauthAppToken,\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_id'\n                        defaultMessage='Copy Client Id'\n                        value={oauthAppToken}\n                    />\n                    <br/>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.clientSecret'\n                        defaultMessage='**Client Secret**: {secret}'\n                        values={{\n                            secret: oauthAppSecret,\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_secret'\n                        defaultMessage='Copy Client Secret'\n                        value={oauthAppSecret}\n                    />\n                </p>\n            );\n\n            helpText.push(\n                <p key='add_oauth_app.doneUrlHelp'>\n                    <FormattedMessage\n                        id='add_oauth_app.doneUrlHelp'\n                        defaultMessage='The following are your authorized redirect URL(s).'\n                    />\n                </p>\n            );\n\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.url'\n                        defaultMessage='**URL(s)**: {url}'\n                        values={{\n                            url: oauthApp.callback_urls,\n                        }}\n                    />\n                </p>\n            );\n        } else {\n            browserHistory.replace(`/error?type=${ErrorPageTypes.PAGE_NOT_FOUND}`);\n            return '';\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/integrations/' + this.state.type}>\n                        {headerText}\n                    </Link>\n                    <FormattedMessage\n                        id='integrations.add'\n                        defaultMessage='Add'\n                    />\n                </BackstageHeader>\n                <div className='backstage-form backstage-form__confirmation'>\n                    <h4 className='backstage-form__title'>\n                        <FormattedMessage\n                            id='integrations.successful'\n                            defaultMessage='Setup Successful'\n                        />\n                    </h4>\n                    {helpText}\n                    {tokenText}\n                    <div className='backstage-form__footer'>\n                        <Link\n                            className='btn btn-primary'\n                            type='submit'\n                            to={'/' + this.props.team.name + '/integrations/' + this.state.type}\n                        >\n                            <FormattedMessage\n                                id='integrations.done'\n                                defaultMessage='Done'\n                            />\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getCommands, getOAuthApps, getIncomingHooks, getOutgoingHooks} from 'mattermost-redux/selectors/entities/integrations';\n\nimport ConfirmIntegration from './confirm_integration.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        commands: getCommands(state),\n        oauthApps: getOAuthApps(state),\n        incomingHooks: getIncomingHooks(state),\n        outgoingHooks: getOutgoingHooks(state),\n    };\n}\n\nexport default connect(mapStateToProps)(ConfirmIntegration);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport InstalledCommands from 'components/integrations/installed_commands';\nimport AddCommand from 'components/integrations/add_command';\nimport EditCommand from 'components/integrations/edit_command';\nimport ConfirmIntegration from 'components/integrations/confirm_integration';\n\nconst CommandRoute = ({component: Component, extraProps, ...rest}) => ( //eslint-disable-line react/prop-types\n    <Route\n        {...rest}\n        render={(props) => (\n            <Component\n                {...extraProps}\n                {...props}\n            />\n        )}\n    />\n);\n\nexport default class CommandsContainer extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data needed to pass into child components\n        */\n        team: PropTypes.object,\n\n        /**\n        * The user data needed to pass into child components\n        */\n        user: PropTypes.object,\n\n        /**\n        * The users collection\n        */\n        users: PropTypes.object,\n\n        /**\n        * Installed slash commands to display\n        */\n        commands: PropTypes.array,\n\n        /**\n        * Object from react-router\n        */\n        match: PropTypes.shape({\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to fetch team commands\n            */\n            getCustomTeamCommands: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not commands are enabled.\n        */\n        enableCommands: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableCommands) {\n            this.props.actions.getCustomTeamCommands(this.props.team.id).then(\n                () => this.setState({loading: false})\n            );\n        }\n    }\n\n    render() {\n        const extraProps = {\n            loading: this.state.loading,\n            commands: this.props.commands || [],\n            users: this.props.users,\n            team: this.props.team,\n            user: this.props.user,\n        };\n        return (\n            <div>\n                <Switch>\n                    <Route\n                        exact={true}\n                        path={`${this.props.match.url}/`}\n                        render={() => (<Redirect to={`${this.props.match.url}/installed`}/>)}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/installed`}\n                        component={InstalledCommands}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/add`}\n                        component={AddCommand}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/edit`}\n                        component={EditCommand}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/confirm`}\n                        component={ConfirmIntegration}\n                    />\n                </Switch>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getCustomTeamCommands} from 'mattermost-redux/actions/integrations';\nimport {getCommands} from 'mattermost-redux/selectors/entities/integrations';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport CommandsContainer from './commands_container.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enableCommands = config.EnableCommands === 'true';\n\n    return {\n        commands: Object.values(getCommands(state)),\n        users: getUsers(state),\n        enableCommands,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getCustomTeamCommands,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommandsContainer);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Route, NavLink} from 'react-router-dom';\n\nexport default class BackstageCategory extends React.Component {\n    static get propTypes() {\n        return {\n            name: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            icon: PropTypes.string.isRequired,\n            parentLink: PropTypes.string,\n            children: PropTypes.arrayOf(PropTypes.element),\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            parentLink: '',\n            children: [],\n        };\n    }\n\n    static get contextTypes() {\n        return {\n            router: PropTypes.object.isRequired,\n        };\n    }\n\n    render() {\n        const {name, title, icon, parentLink, children} = this.props;\n\n        const link = parentLink + '/' + name;\n\n        return (\n            <li className='backstage-sidebar__category'>\n                <NavLink\n                    to={link}\n                    className='category-title'\n                    activeClassName='category-title--active'\n                >\n                    <i className={'fa ' + icon}/>\n                    <span className='category-title__text'>\n                        {title}\n                    </span>\n                </NavLink>\n                <Route\n                    path={link}\n                    render={() => (\n                        <ul className='sections'>\n                            {\n                                React.Children.map(children, (child) => {\n                                    if (!child) {\n                                        return child;\n                                    }\n\n                                    return React.cloneElement(child, {\n                                        parentLink: link,\n                                    });\n                                })\n                            }\n                        </ul>\n                    )}\n                />\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nexport default class BackstageSection extends React.Component {\n    static get propTypes() {\n        return {\n            name: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            parentLink: PropTypes.string,\n            subsection: PropTypes.bool,\n            children: PropTypes.arrayOf(PropTypes.element),\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            parentLink: '',\n            subsection: false,\n            children: [],\n        };\n    }\n\n    static get contextTypes() {\n        return {\n            router: PropTypes.object.isRequired,\n        };\n    }\n\n    getLink() {\n        return this.props.parentLink + '/' + this.props.name;\n    }\n\n    render() {\n        const {title, subsection, children} = this.props;\n\n        const link = this.getLink();\n\n        let clonedChildren = null;\n        if (children.length > 0) {\n            clonedChildren = (\n                <ul className='subsections'>\n                    {\n                        React.Children.map(children, (child) => {\n                            return React.cloneElement(child, {\n                                parentLink: link,\n                                subsection: true,\n                            });\n                        })\n                    }\n                </ul>\n            );\n        }\n\n        let className = 'section';\n        if (subsection) {\n            className = 'subsection';\n        }\n\n        return (\n            <li className={className}>\n                <NavLink\n                    className={`${className}-title`}\n                    activeClassName={`${className}-title--active`}\n                    to={link}\n                >\n                    <span className={`${className}-title__text`}>\n                        {title}\n                    </span>\n                </NavLink>\n                {clonedChildren}\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nimport BackstageCategory from './backstage_category.jsx';\nimport BackstageSection from './backstage_section.jsx';\n\nexport default class BackstageSidebar extends React.Component {\n    static get propTypes() {\n        return {\n            team: PropTypes.object.isRequired,\n            user: PropTypes.object.isRequired,\n            enableCustomEmoji: PropTypes.bool.isRequired,\n            enableIncomingWebhooks: PropTypes.bool.isRequired,\n            enableOutgoingWebhooks: PropTypes.bool.isRequired,\n            enableCommands: PropTypes.bool.isRequired,\n            enableOAuthServiceProvider: PropTypes.bool.isRequired,\n            canCreateCustomEmoji: PropTypes.bool.isRequired,\n        };\n    }\n\n    renderCustomEmoji() {\n        if (!this.props.enableCustomEmoji || !this.props.canCreateCustomEmoji) {\n            return null;\n        }\n\n        return (\n            <BackstageCategory\n                name='emoji'\n                parentLink={'/' + this.props.team.name}\n                icon='fa-smile-o'\n                title={\n                    <FormattedMessage\n                        id='backstage_sidebar.emoji'\n                        defaultMessage='Custom Emoji'\n                    />\n                }\n            />\n        );\n    }\n\n    renderIntegrations() {\n        if (!this.props.enableIncomingWebhooks &&\n            !this.props.enableOutgoingWebhooks &&\n            !this.props.enableCommands &&\n            !this.props.enableOAuthServiceProvider) {\n            return null;\n        }\n\n        let incomingWebhooks = null;\n        if (this.props.enableIncomingWebhooks) {\n            incomingWebhooks = (\n                <TeamPermissionGate\n                    permissions={[Permissions.MANAGE_WEBHOOKS]}\n                    teamId={this.props.team.id}\n                >\n                    <BackstageSection\n                        name='incoming_webhooks'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={(\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.incoming_webhooks'\n                                defaultMessage='Incoming Webhooks'\n                            />\n                        )}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        let outgoingWebhooks = null;\n        if (this.props.enableOutgoingWebhooks) {\n            outgoingWebhooks = (\n                <TeamPermissionGate\n                    permissions={[Permissions.MANAGE_WEBHOOKS]}\n                    teamId={this.props.team.id}\n                >\n                    <BackstageSection\n                        name='outgoing_webhooks'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={(\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.outgoing_webhooks'\n                                defaultMessage='Outgoing Webhooks'\n                            />\n                        )}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        let commands = null;\n        if (this.props.enableCommands) {\n            commands = (\n                <TeamPermissionGate\n                    permissions={[Permissions.MANAGE_SLASH_COMMANDS]}\n                    teamId={this.props.team.id}\n                >\n                    <BackstageSection\n                        name='commands'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={(\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.commands'\n                                defaultMessage='Slash Commands'\n                            />\n                        )}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        let oauthApps = null;\n        if (this.props.enableOAuthServiceProvider) {\n            oauthApps = (\n                <SystemPermissionGate permissions={[Permissions.MANAGE_OAUTH]}>\n                    <BackstageSection\n                        name='oauth2-apps'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.oauthApps'\n                                defaultMessage='OAuth 2.0 Applications'\n                            />\n                        }\n                    />\n                </SystemPermissionGate>\n            );\n        }\n\n        return (\n            <TeamPermissionGate\n                permissions={[Permissions.MANAGE_WEBHOOKS, Permissions.MANAGE_SLASH_COMMANDS, Permissions.MANAGE_OAUTH]}\n                teamId={this.props.team.id}\n            >\n                <BackstageCategory\n                    name='integrations'\n                    icon='fa-link'\n                    parentLink={'/' + this.props.team.name}\n                    title={\n                        <FormattedMessage\n                            id='backstage_sidebar.integrations'\n                            defaultMessage='Integrations'\n                        />\n                    }\n                >\n                    {incomingWebhooks}\n                    {outgoingWebhooks}\n                    {commands}\n                    {oauthApps}\n                </BackstageCategory>\n            </TeamPermissionGate>\n        );\n    }\n\n    render() {\n        return (\n            <div className='backstage-sidebar'>\n                <ul>\n                    {this.renderCustomEmoji()}\n                    {this.renderIntegrations()}\n                </ul>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {Constants} from 'utils/constants.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class BackstageNavbar extends React.Component {\n    static get propTypes() {\n        return {\n            team: PropTypes.object.isRequired,\n            siteName: PropTypes.string,\n        };\n    }\n\n    render() {\n        if (!this.props.team) {\n            return null;\n        }\n\n        return (\n            <div className='backstage-navbar'>\n                <Link\n                    className='backstage-navbar__back'\n                    to={`/${this.props.team.name}/channels/${Constants.DEFAULT_CHANNEL}`}\n                >\n                    <i\n                        className='fa fa-angle-left'\n                        title={localizeMessage('generic_icons.back', 'Back Icon')}\n                    />\n                    <span>\n                        <FormattedMessage\n                            id='backstage_navbar.backToMattermost'\n                            defaultMessage='Back to {siteName}'\n                            values={{\n                                siteName: this.props.siteName,\n                            }}\n                        />\n                    </span>\n                </Link>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Route, Switch} from 'react-router-dom';\n\nimport Pluggable from 'plugins/pluggable';\nimport AnnouncementBar from 'components/announcement_bar';\nimport SystemNotice from 'components/system_notice';\nimport Integrations from 'components/integrations';\nimport Emoji from 'components/emoji';\nimport AddEmoji from 'components/emoji/add_emoji';\nimport InstalledIncomingWebhooks from 'components/integrations/installed_incoming_webhooks';\nimport AddIncomingWehook from 'components/integrations/add_incoming_webhook';\nimport EditIncomingWebhook from 'components/integrations/edit_incoming_webhook';\nimport InstalledOutgoingWebhooks from 'components/integrations/installed_outgoing_webhooks';\nimport AddOutgoingWebhook from 'components/integrations/add_outgoing_webhook';\nimport EditOutgoingWebhook from 'components/integrations/edit_outgoing_webhook';\nimport InstalledOauthApps from 'components/integrations/installed_oauth_apps';\nimport AddOauthApp from 'components/integrations/add_oauth_app';\nimport EditOauthApp from 'components/integrations/edit_oauth_app';\nimport CommandsContainer from 'components/integrations/commands_container';\nimport ConfirmIntegration from 'components/integrations/confirm_integration';\n\nimport BackstageSidebar from './components/backstage_sidebar.jsx';\nimport BackstageNavbar from './components/backstage_navbar';\n\nconst BackstageRoute = ({component: Component, extraProps, ...rest}) => ( //eslint-disable-line react/prop-types\n    <Route\n        {...rest}\n        render={(props) => (\n            <Component\n                {...extraProps}\n                {...props}\n            />\n        )}\n    />\n);\n\nexport default class BackstageController extends React.Component {\n    static propTypes = {\n\n        /**\n         * Current user.\n         */\n        user: PropTypes.object,\n\n        /**\n         * Current team.\n         */\n        team: PropTypes.object,\n\n        /**\n         * Object from react-router\n         */\n        match: PropTypes.shape({\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n\n        siteName: PropTypes.string,\n        enableCustomEmoji: PropTypes.bool.isRequired,\n        enableIncomingWebhooks: PropTypes.bool.isRequired,\n        enableOutgoingWebhooks: PropTypes.bool.isRequired,\n        enableCommands: PropTypes.bool.isRequired,\n        enableOAuthServiceProvider: PropTypes.bool.isRequired,\n        canCreateCustomEmoji: PropTypes.bool.isRequired,\n    }\n\n    scrollToTop = () => {\n        if (this.listRef) {\n            this.listRef.scrollTop = 0;\n        }\n    }\n\n    setListRef = (ref) => {\n        this.listRef = ref;\n    }\n\n    render() {\n        if (this.props.team == null || this.props.user == null) {\n            return <div/>;\n        }\n        const extraProps = {\n            team: this.props.team,\n            user: this.props.user,\n            scrollToTop: this.scrollToTop,\n        };\n        return (\n            <div className='backstage'>\n                <AnnouncementBar/>\n                <SystemNotice/>\n                <BackstageNavbar\n                    team={this.props.team}\n                    siteName={this.props.siteName}\n                />\n                <Pluggable pluggableName='Root'/>\n                <div\n                    className='backstage-body'\n                    ref={this.setListRef}\n                >\n                    <BackstageSidebar\n                        team={this.props.team}\n                        user={this.props.user}\n                        enableCustomEmoji={this.props.enableCustomEmoji}\n                        enableIncomingWebhooks={this.props.enableIncomingWebhooks}\n                        enableOutgoingWebhooks={this.props.enableOutgoingWebhooks}\n                        enableCommands={this.props.enableCommands}\n                        enableOAuthServiceProvider={this.props.enableOAuthServiceProvider}\n                        canCreateCustomEmoji={this.props.canCreateCustomEmoji}\n                    />\n                    <Switch>\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={'/:team/integrations'}\n                            component={Integrations}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={`${this.props.match.url}/incoming_webhooks`}\n                            component={InstalledIncomingWebhooks}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/incoming_webhooks/add`}\n                            component={AddIncomingWehook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/incoming_webhooks/edit`}\n                            component={EditIncomingWebhook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={`${this.props.match.url}/outgoing_webhooks`}\n                            component={InstalledOutgoingWebhooks}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/outgoing_webhooks/add`}\n                            component={AddOutgoingWebhook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/outgoing_webhooks/edit`}\n                            component={EditOutgoingWebhook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/commands`}\n                            component={CommandsContainer}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={`${this.props.match.url}/oauth2-apps`}\n                            component={InstalledOauthApps}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/oauth2-apps/add`}\n                            component={AddOauthApp}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/oauth2-apps/edit`}\n                            component={EditOauthApp}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/confirm`}\n                            component={ConfirmIntegration}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={'/:team/emoji'}\n                            component={Emoji}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/add`}\n                            component={AddEmoji}\n                        />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\n\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\nimport {getMyTeams, getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {haveITeamPermission, haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport BackstageController from './backstage_controller.jsx';\n\nfunction mapStateToProps(state) {\n    const user = getCurrentUser(state);\n    const team = getCurrentTeam(state);\n\n    const config = getConfig(state);\n\n    const siteName = config.SiteName;\n    const enableCustomEmoji = config.EnableCustomEmoji === 'true';\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n    const enableCommands = config.EnableCommands === 'true';\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    let canCreateCustomEmoji = haveISystemPermission(state, {permission: Permissions.MANAGE_EMOJIS});\n    if (!canCreateCustomEmoji) {\n        for (const t of getMyTeams(state)) {\n            if (haveITeamPermission(state, {team: t.id, permission: Permissions.MANAGE_EMOJIS})) {\n                canCreateCustomEmoji = true;\n                break;\n            }\n        }\n    }\n\n    return {\n        user,\n        team,\n        siteName,\n        enableCustomEmoji,\n        enableIncomingWebhooks,\n        enableOutgoingWebhooks,\n        enableCommands,\n        enableOAuthServiceProvider,\n        canCreateCustomEmoji,\n    };\n}\n\nexport default withRouter(connect(mapStateToProps)(BackstageController));\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getAutocompleteCommandsList = exports.getAllCommands = exports.getOutgoingHooksInCurrentTeam = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nexports.getIncomingHooks = getIncomingHooks;\nexports.getOutgoingHooks = getOutgoingHooks;\nexports.getCommands = getCommands;\nexports.getOAuthApps = getOAuthApps;\nexports.getSystemCommands = getSystemCommands;\n\nvar _reselect = require('reselect');\n\nvar _teams = require('./teams');\n\nfunction getIncomingHooks(state) {\n    return state.entities.integrations.incomingHooks;\n}\n\nfunction getOutgoingHooks(state) {\n    return state.entities.integrations.outgoingHooks;\n}\n\nfunction getCommands(state) {\n    return state.entities.integrations.commands;\n}\n\nfunction getOAuthApps(state) {\n    return state.entities.integrations.oauthApps;\n}\n\nfunction getSystemCommands(state) {\n    return state.entities.integrations.systemCommands;\n}\n\n/**\n * get outgoing hooks in current team\n */\nvar getOutgoingHooksInCurrentTeam = exports.getOutgoingHooksInCurrentTeam = (0, _reselect.createSelector)(_teams.getCurrentTeamId, getOutgoingHooks, function (teamId, hooks) {\n    return Object.values(hooks).filter(function (o) {\n        return o.teamId === teamId;\n    });\n});\n\nvar getAllCommands = exports.getAllCommands = (0, _reselect.createSelector)(getCommands, getSystemCommands, function (commands, systemCommands) {\n    return _extends({}, commands, systemCommands);\n});\n\nvar getAutocompleteCommandsList = exports.getAutocompleteCommandsList = (0, _reselect.createSelector)(getAllCommands, _teams.getCurrentTeamId, function (commands, currentTeamId) {\n    return Object.values(commands).filter(function (command) {\n        return command && (!command.team_id || command.team_id === currentTeamId) && command.auto_complete;\n    }).sort(function (a, b) {\n        return a.display_name.localeCompare(b.display_name);\n    });\n});"],"sourceRoot":""}