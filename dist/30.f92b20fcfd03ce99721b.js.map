{"version":3,"sources":["webpack:///./node_modules/mattermost-redux/actions/jobs.js","webpack:///./node_modules/chart.js/src/chart.js","webpack:///./node_modules/chartjs-color/index.js","webpack:///./node_modules/chart.js/src/core/core.interaction.js","webpack:///./node_modules/chart.js/src/platforms/platform.js","webpack:///./node_modules/chart.js/src/core/core.plugins.js","webpack:///./node_modules/react-router-dom/es/NavLink.js","webpack:///./node_modules/mattermost-redux/selectors/entities/jobs.js","webpack:///./node_modules/chart.js/src/core/core.js","webpack:///./node_modules/chart.js/src/helpers/helpers.easing.js","webpack:///./node_modules/chart.js/src/helpers/helpers.canvas.js","webpack:///./node_modules/chart.js/src/helpers/helpers.options.js","webpack:///./node_modules/chart.js/src/core/core.helpers.js","webpack:///./node_modules/color-convert/index.js","webpack:///./node_modules/color-convert/conversions.js","webpack:///./node_modules/chartjs-color-string/color-string.js","webpack:///./node_modules/color-name/index.js","webpack:///./node_modules/chart.js/src/elements/element.arc.js","webpack:///./node_modules/chart.js/src/elements/element.line.js","webpack:///./node_modules/chart.js/src/elements/element.point.js","webpack:///./node_modules/chart.js/src/elements/element.rectangle.js","webpack:///./node_modules/chart.js/src/platforms/platform.basic.js","webpack:///./node_modules/chart.js/src/platforms/platform.dom.js","webpack:///./node_modules/chart.js/src/core/core.animation.js","webpack:///./node_modules/chart.js/src/core/core.controller.js","webpack:///./node_modules/chart.js/src/core/core.datasetController.js","webpack:///./node_modules/chart.js/src/core/core.scaleService.js","webpack:///./node_modules/chart.js/src/core/core.scale.js","webpack:///./node_modules/chart.js/src/core/core.tooltip.js","webpack:///./node_modules/chart.js/src/scales/scale.linearbase.js","webpack:///./node_modules/chart.js/src/scales/scale.category.js","webpack:///./node_modules/chart.js/src/scales/scale.linear.js","webpack:///./node_modules/chart.js/src/scales/scale.logarithmic.js","webpack:///./node_modules/chart.js/src/scales/scale.radialLinear.js","webpack:///./node_modules/chart.js/src/scales/scale.time.js","webpack:///./node_modules/chart.js/src/controllers/controller.bar.js","webpack:///./node_modules/chart.js/src/controllers/controller.bubble.js","webpack:///./node_modules/chart.js/src/controllers/controller.doughnut.js","webpack:///./node_modules/chart.js/src/controllers/controller.line.js","webpack:///./node_modules/chart.js/src/controllers/controller.polarArea.js","webpack:///./node_modules/chart.js/src/controllers/controller.radar.js","webpack:///./node_modules/chart.js/src/controllers/controller.scatter.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bar.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bubble.js","webpack:///./node_modules/chart.js/src/charts/Chart.Doughnut.js","webpack:///./node_modules/chart.js/src/charts/Chart.Line.js","webpack:///./node_modules/chart.js/src/charts/Chart.PolarArea.js","webpack:///./node_modules/chart.js/src/charts/Chart.Radar.js","webpack:///./node_modules/chart.js/src/charts/Chart.Scatter.js","webpack:///./node_modules/chart.js/src/plugins/index.js","webpack:///./node_modules/chart.js/src/plugins/plugin.filler.js","webpack:///./node_modules/chart.js/src/plugins/plugin.legend.js","webpack:///./node_modules/chart.js/src/plugins/plugin.title.js","webpack:///./node_modules/mattermost-redux/constants/schemes.js","webpack:///./node_modules/chart.js/src/helpers/index.js","webpack:///./node_modules/chart.js/src/core/core.defaults.js","webpack:///./node_modules/chart.js/src/core/core.element.js","webpack:///./node_modules/chart.js/src/elements/index.js","webpack:///./node_modules/mattermost-redux/selectors/entities/admin.js","webpack:///./node_modules/chart.js/src/core/core.layouts.js","webpack:///./node_modules/chart.js/src/core/core.ticks.js","webpack:///./node_modules/chart.js/src/helpers/helpers.core.js","webpack:///./node_modules/mattermost-redux/actions/schemes.js","webpack:///./node_modules/mattermost-redux/selectors/entities/schemes.js"],"names":["Object","defineProperty","exports","value","createJob","job","_helpers","bindClientFunc","_client","Client4","_action_types","JobTypes","CREATE_JOB_REQUEST","RECEIVED_JOB","CREATE_JOB_SUCCESS","CREATE_JOB_FAILURE","getJob","id","GET_JOB_REQUEST","GET_JOB_SUCCESS","GET_JOB_FAILURE","getJobs","page","arguments","length","undefined","perPage","_constants","General","JOBS_CHUNK_SIZE","GET_JOBS_REQUEST","RECEIVED_JOBS","GET_JOBS_SUCCESS","GET_JOBS_FAILURE","getJobsByType","type","RECEIVED_JOBS_BY_TYPE","cancelJob","CANCEL_JOB_REQUEST","CANCEL_JOB_SUCCESS","CANCEL_JOB_FAILURE","__webpack_require__","Chart","helpers","defaults","Element","elements","Interaction","layouts","platform","plugins","Ticks","k","hasOwnProperty","register","initialize","module","window","Legend","legend","_element","Title","title","pluginService","PluginBase","extend","canvasHelpers","canvas","layoutService","convert","string","Color","obj","this","valid","values","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","r","red","l","lightness","v","w","whiteness","c","cyan","prototype","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","i","chan","Math","pow","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","p","a","w1","w2","toJSON","clone","result","source","target","prop","toString","call","slice","console","error","spaces","maxes","getValues","space","charAt","capped","chans","max","min","round","sname","args","Array","index","svalues","getRelativePosition","e","chart","native","x","y","parseVisibleItems","handler","meta","j","ilen","jlen","data","datasets","isDatasetVisible","getDatasetMeta","element","_view","skip","getIntersectItems","position","inRange","push","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","indexOf","useY","pt1","pt2","deltaX","abs","deltaY","sqrt","indexMode","options","items","forEach","dataset","datasetIndex","_index","modes","single","label","_datasetIndex","x-axis","point","nearest","sort","b","ret","getArea","intersectsItem","inXRange","inYRange","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","_set","_plugins","_cacheId","plugin","unregister","idx","splice","clear","count","getAll","notify","hook","descriptor","params","method","descriptors","apply","cache","$plugins","config","opts","global","_invalidate","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_Route__WEBPACK_IMPORTED_MODULE_2__","_Link__WEBPACK_IMPORTED_MODULE_3__","_extends","assign","key","_typeof","Symbol","iterator","constructor","NavLink","_ref","to","exact","strict","location","activeClassName","className","activeStyle","style","getIsActive","isActive","ariaCurrent","rest","keys","_objectWithoutProperties","path","pathname","escapedPath","replace","createElement","children","_ref2","match","filter","join","aria-current","propTypes","bool","object","func","oneOf","defaultProps","__webpack_exports__","getAllJobs","state","entities","jobs","makeGetJobsByType","_reselect","createSelector","jobsByType","jobsByTypeList","responsive","responsiveAnimationDuration","maintainAspectRatio","events","hover","onHover","mode","animationDuration","onClick","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","showLines","layout","padding","top","right","bottom","left","item","construct","effects","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","ctx","clearRect","width","height","roundedRect","radius","rx","ry","moveTo","lineTo","quadraticCurveTo","rect","drawPoint","edgeLength","xOffset","yOffset","size","isNaN","beginPath","arc","closePath","fill","SQRT2","fillRect","strokeRect","offset","leftX","topY","sideSize","stroke","drawImage","clipArea","area","save","clip","unclipArea","restore","previous","flip","steppedLine","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","drawRoundedRectangle","toLineHeight","matches","toPadding","isObject","resolve","inputs","context","isArray","color","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","parseInt","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","view","document","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","configMerge","merge","merger","tval","sval","scaleMerge","scaleService","getScaleDefaults","_merger","scale","slen","valueOrDefault","where","collection","filterCallback","filtered","each","findIndex","array","callback","scope","findNextWhere","arrayToSearch","startIndex","isNullOrUndef","currentItem","findPreviousWhere","isNumber","parseFloat","isFinite","almostEquals","epsilon","almostWhole","rounded","reduce","NEGATIVE_INFINITY","sign","log10","exponent","log","LOG10E","powerOf10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distanceBetweenPoints","aliasPixel","pixelWidth","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","EPSILON","splineCurveMonotone","points","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","map","model","_model","deltaK","mK","pointsLen","slopeDeltaX","nextItem","loop","previousItem","niceNum","range","floor","fraction","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","mouseX","mouseY","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","getMaximumWidth","container","clientWidth","cw","getMaximumHeight","clientHeight","h","ch","el","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","getHoverColor","colorValue","CanvasPattern","conversions","Converter","arg","pair","exec","from","convs","routeSpace","fspace","rgb2hsl","g","delta","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","f","q","hwb2rgb","wh","bl","cmyk2rgb","m","xyz2rgb","xyz2lab","lab2xyz","lab","y2","lab2lch","lab2rgb","lch2lab","lch","hr","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","colorNames","rgba","percentaString","hsla","num","hexDouble","str","toUpperCase","getRgb","getHsl","getAlpha","reverseNames","name","backgroundColor","borderColor","borderWidth","inLabelRange","vm","hoverRadius","chartX","chartY","pointRelativePosition","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","halfAngle","halfRadius","tooltipPosition","centreAngle","rangeFromCentre","draw","_chart","sA","eA","strokeStyle","lineWidth","fillStyle","lineJoin","globalDefaults","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","currentVM","spanGaps","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","xRange","hitRadius","pointStyle","hoverBorderWidth","chartArea","isVertical","bar","getBarBounds","x1","x2","y1","halfWidth","base","halfHeight","rectangle","borderSkipped","signX","signY","horizontal","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","getContext","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","get","passive","listener","createEvent","nativeEvent","addResizeListener","expando","resizer","cls","cssText","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","fn","thisArg","ticking","throttled","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","keyframes","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","injectCSS","getElementById","renderHeight","getAttribute","renderWidth","initial","display","displayWidth","aspectRatio","displayHeight","initCanvas","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","animation","duration","easing","onProgress","noop","onComplete","Animation","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","cancelAnimation","me","startDigest","startTime","Date","now","framesToDrop","advance","endTime","set","positionIsHorizontal","types","instances","controllers","labels","initConfig","uid","_bufferedRender","controller","update","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scales","scaleOptions","xAxes","xAxisOptions","yAxes","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","linkScales","ControllerClass","Error","resetElements","reset","tooltip","newOptions","removeBox","_options","tooltips","updateConfig","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","easingValue","transition","boxes","box","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getElementsAtEventForMode","getDatasetAtEvent","_meta","hidden","xAxisID","yAxisID","getVisibleDatasetCount","generateLegend","legendCallback","destroy","unbindEvents","toBase64Image","toDataURL","Tooltip","_chartInstance","listeners","_listeners","eventHandler","updateHoverStyle","enabled","changed","handleEvent","_start","bufferedRequest","hoverOptions","active","arrayEquals","Controller","arrayEvents","unlistenArrayEvents","stub","_chartjs","DatasetController","datasetElementType","dataElementType","addElements","getMeta","getDataset","getScaleForId","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","updateElement","configurable","enumerable","res","listenArrayEvents","resyncElements","removeHoverStyle","elementOpts","custom","valueAtIndexOrDefault","setHoverStyle","hoverBackgroundColor","hoverBorderColor","numMeta","numData","insertElements","start","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","inherits","constructors","registerScaleType","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","fullWidth","addBox","labelsFromTicks","ticks","getLineValue","offsetGridLines","lineValue","getPixelForTick","gridLines","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","beginAtZero","minRotation","maxRotation","mirror","reverse","autoSkip","autoSkipPadding","labelOffset","formatters","minor","major","computeTextSize","tick","parseFontOptions","fontSize","family","parseLineHeight","Scale","getPadding","getTicks","_ticks","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","minSize","isHorizontal","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","getRightValue","rawValue","NaN","getLabelForIndex","getPixelForValue","getValueForPixel","pixel","finalVal","innerHeight","getPixelForDecimal","decimal","valueOffset","getBasePixel","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","optionMajorTicks","isRotated","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","zeroLineIndex","textAlign","textBaseline","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","rotation","itemToDraw","translate","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","callbacks","beforeTitle","tooltipItems","labelCount","xLabel","afterTitle","beforeBody","beforeLabel","tooltipItem","yLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","xScale","_xScale","yScale","_yScale","_scale","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","len","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","body","dataPoints","paddingAndSize","radiusAndPadding","getBackgroundPoint","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","pt","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","drawFooter","drawBackground","hasTooltipContent","pivot","average","hasValue","eventPosition","nearestElement","d","tp","LinearScaleBase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","handleDirectionalChanges","numericGeneratorOptions","stepSize","fixedStepSize","generationOptions","dataRange","spacing","niceRange","niceMin","niceMax","ceil","numSpaces","precision","generateTicks","end","ticksAsNumbers","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","IDMatches","hasStacks","stacked","stack","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","tickFontSize","rightValue","innerDimension","logarithmic","LogarithmicScale","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","getValueOrDefault","animate","angleLines","circular","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","getValueCount","getPointLabelFontOptions","pointLabelOptions","measureLabelSize","determineLimits","getTextAlignForAngle","text","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","LinearRadialScale","xCenter","yCenter","drawingArea","pointPosition","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","getDistanceFromCenterForValue","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","drawRadiusLine","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate","table","skey","tkey","mid","i0","i1","lo","lookup","prev","span","momentify","parser","format","parse","input","time","startOf","valueOf","determineMajorUnit","unit","generate","capacity","timeOpts","minUnit","interval","factor","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","milliseconds","determineStepSize","TimeScale","warn","timestamp","timestamps","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","diff","as","determineUnitForFormatting","_majorUnit","distribution","curr","buildLookupTable","_offsets","upper","lower","computeOffsets","_labelFormat","momentDate","hasTime","determineLabelFormat","majorUnit","ticksFromTimestamps","tooltipFormat","tickFormatFunction","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","categoryPercentage","barPercentage","Rectangle","rects","_ruler","getRuler","rectangleOptions","datasetLabel","updateElementGeometry","vscale","getValueScale","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","stackCount","pixels","barThickness","computeMinSampleSize","imeta","ivalue","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","rectangleElementOptions","horizontalBar","dataPoint","bubble","Point","_resolveElementOptions","dsIndex","dataIndex","animateRotate","animateScale","generateLabels","ds","arcOpts","legendItem","cutoutPercentage","circumference","dataLabel","doughnut","pie","Arc","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","arcs","hoverWidth","lineEnabled","showLine","Line","lineElementOptions","lineTension","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","controlPoints","capControlPoint","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","polarArea","countVisibleElements","visibleCount","datasetStartAngle","resetRadius","radar","pointElementOptions","scatter","Bar","Bubble","Doughnut","PolarArea","Radar","Scatter","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","sources","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","createNewLegendAndAttach","legendOpts","configure","beforeInit","mergeIf","afterEvent","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","ScopeTypes","TEAM","CHANNEL","configuration","ease","actual","origin","c0","c1","getLogs","admin","logs","getAudits","audits","getConfig","getEnvironmentConfig","environmentConfig","getComplianceReports","complianceReports","getClusterInfo","clusterInfo","getUserAccessTokens","userAccessTokens","filterByPosition","sortByWeight","_tmpIndex_","v0","v1","layoutItem","props","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","boxPadding","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","tickValue","logDelta","tickString","numDecimal","toFixed","remain","toExponential","defaultValue","loopable","a0","a1","klen","_mergerIf","setFn","extensions","ChartElement","Surrogate","__super__","callCallback","fromIndex","getValueAtIndexOrDefault","getScheme","schemeId","SchemeTypes","GET_SCHEME_REQUEST","RECEIVED_SCHEME","GET_SCHEME_SUCCESS","GET_SCHEME_FAILURE","getSchemes","PAGE_SIZE_DEFAULT","GET_SCHEMES_REQUEST","RECEIVED_SCHEMES","GET_SCHEMES_SUCCESS","GET_SCHEMES_FAILURE","createScheme","scheme","CREATE_SCHEME_REQUEST","CREATED_SCHEME","CREATE_SCHEME_SUCCESS","CREATE_SCHEME_FAILURE","deleteScheme","_this","gen","Promise","reject","step","info","done","then","err","_asyncToGenerator","regeneratorRuntime","mark","_callee","dispatch","getState","wrap","_context","DELETE_SCHEME_REQUEST","sent","t0","forceLogoutIfNecessary","_reduxBatchedActions","batchActions","DELETE_SCHEME_FAILURE","_errors","logError","abrupt","DELETED_SCHEME","DELETE_SCHEME_SUCCESS","_x3","_x4","patchScheme","PATCH_SCHEME_REQUEST","PATCHED_SCHEME","PATCH_SCHEME_SUCCESS","PATCH_SCHEME_FAILURE","getSchemeTeams","GET_SCHEME_TEAMS_REQUEST","RECEIVED_SCHEME_TEAMS","GET_SCHEME_TEAMS_SUCCESS","GET_SCHEME_TEAMS_FAILURE","getSchemeChannels","GET_SCHEME_CHANNELS_REQUEST","RECEIVED_SCHEME_CHANNELS","GET_SCHEME_CHANNELS_SUCCESS","GET_SCHEME_CHANNELS_FAILURE","_slicedToArray","arr","_arr","_n","_d","_e","_s","_i","sliceIterator","TypeError","makeGetSchemeChannels","_channels","getAllChannels","allChannels","_schemes","msg","schemeChannels","entries","_item","channel","scheme_id","makeGetSchemeTeams","_teams","getTeams","allTeams","schemeTeams","_item2","team","schemes"],"mappings":"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","file":"30.f92b20fcfd03ce99721b.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createJob = createJob;\nexports.getJob = getJob;\nexports.getJobs = getJobs;\nexports.getJobsByType = getJobsByType;\nexports.cancelJob = cancelJob;\n\nvar _action_types = require('../action_types');\n\nvar _client = require('../client');\n\nvar _constants = require('../constants');\n\nvar _helpers = require('./helpers');\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nfunction createJob(job) {\n    return (0, _helpers.bindClientFunc)(_client.Client4.createJob, _action_types.JobTypes.CREATE_JOB_REQUEST, [_action_types.JobTypes.RECEIVED_JOB, _action_types.JobTypes.CREATE_JOB_SUCCESS], _action_types.JobTypes.CREATE_JOB_FAILURE, job);\n}\n\nfunction getJob(id) {\n    return (0, _helpers.bindClientFunc)(_client.Client4.getJob, _action_types.JobTypes.GET_JOB_REQUEST, [_action_types.JobTypes.RECEIVED_JOB, _action_types.JobTypes.GET_JOB_SUCCESS], _action_types.JobTypes.GET_JOB_FAILURE, id);\n}\n\nfunction getJobs() {\n    var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var perPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _constants.General.JOBS_CHUNK_SIZE;\n\n    return (0, _helpers.bindClientFunc)(_client.Client4.getJobs, _action_types.JobTypes.GET_JOBS_REQUEST, [_action_types.JobTypes.RECEIVED_JOBS, _action_types.JobTypes.GET_JOBS_SUCCESS], _action_types.JobTypes.GET_JOBS_FAILURE, page, perPage);\n}\n\nfunction getJobsByType(type) {\n    var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var perPage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.General.JOBS_CHUNK_SIZE;\n\n    return (0, _helpers.bindClientFunc)(_client.Client4.getJobsByType, _action_types.JobTypes.GET_JOBS_REQUEST, [_action_types.JobTypes.RECEIVED_JOBS, _action_types.JobTypes.RECEIVED_JOBS_BY_TYPE, _action_types.JobTypes.GET_JOBS_SUCCESS], _action_types.JobTypes.GET_JOBS_FAILURE, type, page, perPage);\n}\n\nfunction cancelJob(job) {\n    return (0, _helpers.bindClientFunc)(_client.Client4.cancelJob, _action_types.JobTypes.CANCEL_JOB_REQUEST, _action_types.JobTypes.CANCEL_JOB_SUCCESS, _action_types.JobTypes.CANCEL_JOB_FAILURE, job);\n}","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index');\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\nrequire('./core/core.helpers')(Chart);\n\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Ticks = require('./core/core.ticks');\n\nrequire('./core/core.animation')(Chart);\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\nrequire('./core/core.scaleService')(Chart);\nrequire('./core/core.scale')(Chart);\nrequire('./core/core.tooltip')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\n// Loading built-it plugins\nvar plugins = require('./plugins');\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar basic = require('./platform.basic');\nvar dom = require('./platform.dom');\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Route from \"./Route\";\nimport Link from \"./Link\";\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nvar NavLink = function NavLink(_ref) {\n  var to = _ref.to,\n      exact = _ref.exact,\n      strict = _ref.strict,\n      location = _ref.location,\n      activeClassName = _ref.activeClassName,\n      className = _ref.className,\n      activeStyle = _ref.activeStyle,\n      style = _ref.style,\n      getIsActive = _ref.isActive,\n      ariaCurrent = _ref[\"aria-current\"],\n      rest = _objectWithoutProperties(_ref, [\"to\", \"exact\", \"strict\", \"location\", \"activeClassName\", \"className\", \"activeStyle\", \"style\", \"isActive\", \"aria-current\"]);\n\n  var path = (typeof to === \"undefined\" ? \"undefined\" : _typeof(to)) === \"object\" ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  var escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n\n  return React.createElement(Route, {\n    path: escapedPath,\n    exact: exact,\n    strict: strict,\n    location: location,\n    children: function children(_ref2) {\n      var location = _ref2.location,\n          match = _ref2.match;\n\n      var isActive = !!(getIsActive ? getIsActive(match, location) : match);\n\n      return React.createElement(Link, _extends({\n        to: to,\n        className: isActive ? [className, activeClassName].filter(function (i) {\n          return i;\n        }).join(\" \") : className,\n        style: isActive ? _extends({}, style, activeStyle) : style,\n        \"aria-current\": isActive && ariaCurrent || null\n      }, rest));\n    }\n  });\n};\n\nNavLink.propTypes = {\n  to: Link.propTypes.to,\n  exact: PropTypes.bool,\n  strict: PropTypes.bool,\n  location: PropTypes.object,\n  activeClassName: PropTypes.string,\n  className: PropTypes.string,\n  activeStyle: PropTypes.object,\n  style: PropTypes.object,\n  isActive: PropTypes.func,\n  \"aria-current\": PropTypes.oneOf([\"page\", \"step\", \"location\", \"date\", \"time\", \"true\"])\n};\n\nNavLink.defaultProps = {\n  activeClassName: \"active\",\n  \"aria-current\": \"page\"\n};\n\nexport default NavLink;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getAllJobs = getAllJobs;\nexports.getJobsByType = getJobsByType;\nexports.makeGetJobsByType = makeGetJobsByType;\n\nvar _reselect = require('reselect');\n\nfunction getAllJobs(state) {\n    return state.entities.jobs.jobs;\n} // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\n\nfunction getJobsByType(state) {\n    return state.entities.jobs.jobsByTypeList;\n}\n\nfunction makeGetJobsByType(type) {\n    return (0, _reselect.createSelector)(getJobsByType, function (jobsByType) {\n        return jobsByType[type] || [];\n    });\n}","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar rx = Math.min(radius, width / 2);\n\t\t\tvar ry = Math.min(radius, height / 2);\n\n\t\t\tctx.moveTo(x + rx, y);\n\t\t\tctx.lineTo(x + width - rx, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + ry);\n\t\t\tctx.lineTo(x + width, y + height - ry);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\n\t\t\tctx.lineTo(x + rx, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - ry);\n\t\t\tctx.lineTo(x, y + ry);\n\t\t\tctx.quadraticCurveTo(x, y, x + rx, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = x - offset;\n\t\t\tvar topY = y - offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n\tctx.closePath();\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.currentTarget || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar color = helpers.color;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\t\tvar ratio = 0;\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t// Cliping for Points.\n\t\t// going out from inner charArea?\n\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\n\t\t\t// Point fade out\n\t\t\tif (model.x < chartArea.left) {\n\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\n\t\t\t} else if (chartArea.right * errMargin < model.x) {\n\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\n\t\t\t} else if (model.y < chartArea.top) {\n\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\n\t\t\t} else if (chartArea.bottom * errMargin < model.y) {\n\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\n\t\t\t}\n\t\t\tratio = Math.round(ratio * 100) / 100;\n\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n\t\t}\n\n\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.Animation = Element.extend({\n\t\tchart: null, // the animation associated chart instance\n\t\tcurrentStep: 0, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\n\t\t/**\n\t\t * @param {Chart} chart - The chart to animate.\n\t\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t\t * @param {Number} duration - The animation duration in ms.\n\t\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t\t */\n\t\taddAnimation: function(chart, animation, duration, lazy) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar i, ilen;\n\n\t\t\tanimation.chart = chart;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchart.animating = true;\n\t\t\t}\n\n\t\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\t\tif (animations[i].chart === chart) {\n\t\t\t\t\tanimations[i] = animation;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tanimations.push(animation);\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (animations.length === 1) {\n\t\t\t\tthis.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\tcancelAnimation: function(chart) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\t\treturn animation.chart === chart;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchart.animating = false;\n\t\t\t}\n\t\t},\n\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tme.advance(1 + framesToDrop);\n\n\t\t\tvar endTime = Date.now();\n\n\t\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tadvance: function(count) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar animation, chart;\n\t\t\tvar i = 0;\n\n\t\t\twhile (i < animations.length) {\n\t\t\t\tanimation = animations[i];\n\t\t\t\tchart = animation.chart;\n\n\t\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\t\tchart.animating = false;\n\t\t\t\t\tanimations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation instead\n\t * @prop Chart.Animation#animationObject\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'animationObject', {\n\t\tget: function() {\n\t\t\treturn this;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation#chart instead\n\t * @prop Chart.Animation#chartInstance\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'chartInstance', {\n\t\tget: function() {\n\t\t\treturn this.chart;\n\t\t},\n\t\tset: function(value) {\n\t\t\tthis.chart = value;\n\t\t}\n\t});\n\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar Interaction = require('./core.interaction');\nvar layouts = require('./core.layouts');\nvar platform = require('../platforms/platform');\nvar plugins = require('./core.plugins');\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Chart.Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = function(Chart) {\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar me = this;\n\t\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chart) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\t\tscale.position = scale.options.position;\n\t\t\t\tscale.weight = scale.options.weight;\n\t\t\t\tlayouts.addBox(chart, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nmodule.exports = function(Chart) {\n\n\tfunction computeTextSize(context, tick, font) {\n\t\treturn helpers.isArray(tick) ?\n\t\t\thelpers.longestText(context, font, tick) :\n\t\t\tcontext.measureText(tick).width;\n\t}\n\n\tfunction parseFontOptions(options) {\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tstyle: style,\n\t\t\tfamily: family,\n\t\t\tfont: helpers.fontString(size, style, family)\n\t\t};\n\t}\n\n\tfunction parseLineHeight(options) {\n\t\treturn helpers.options.toLineHeight(\n\t\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n\t}\n\n\tChart.Scale = Element.extend({\n\t\t/**\n\t\t * Get the padding needed for the scale\n\t\t * @method getPadding\n\t\t * @private\n\t\t * @returns {Padding} the necessary padding\n\t\t */\n\t\tgetPadding: function() {\n\t\t\tvar me = this;\n\t\t\treturn {\n\t\t\t\tleft: me.paddingLeft || 0,\n\t\t\t\ttop: me.paddingTop || 0,\n\t\t\t\tright: me.paddingRight || 0,\n\t\t\t\tbottom: me.paddingBottom || 0\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Returns the scale tick objects ({label, major})\n\t\t * @since 2.7\n\t\t */\n\t\tgetTicks: function() {\n\t\t\treturn this._ticks;\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tmergeTicksOptions: function() {\n\t\t\tvar ticks = this.options.ticks;\n\t\t\tif (ticks.minor === false) {\n\t\t\t\tticks.minor = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (ticks.major === false) {\n\t\t\t\tticks.major = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var key in ticks) {\n\t\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\t\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\t\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t\t// around for long time and not marked as private, we can't change its structure\n\t\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t\t// use scale.getTicks() instead.\n\n\t\t\tme.beforeBuildTicks();\n\n\t\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\t\tticks = me.buildTicks() || [];\n\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\n\t\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t\t// this method and supposed to contain only string values).\n\t\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\t\tlabel = labels[i];\n\t\t\t\ttick = ticks[i];\n\t\t\t\tif (!tick) {\n\t\t\t\t\tticks.push(tick = {\n\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\tmajor: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttick.label = label;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme._ticks = ticks;\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tcontext.font = tickFont.font;\n\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\tlabelRotation--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelRotation++;\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.labelRotation = labelRotation;\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += deltaHeight;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += deltaHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t\t}\n\n\t\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.handleMargins();\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\n\t\t/**\n\t\t * Handle margins and padding interactions\n\t\t * @private\n\t\t */\n\t\thandleMargins: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\t\t},\n\n\t\tafterFit: function() {\n\t\t\thelpers.callback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (rawValue) {\n\t\t\t\tif (this.isHorizontal()) {\n\t\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t\t}\n\t\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t/**\n\t\t * Used to get the value to display in the tooltip for the data at the given index\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param value\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t/**\n\t\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param pixel\n\t\t */\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the tick at the given index\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (offset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t\t},\n\n\t\t/**\n\t\t * Utility for getting the pixel location of a percentage of scale\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForDecimal: function(decimal) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\t/**\n\t\t * Returns the pixel for the minimum chart value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetBasePixel: function() {\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\n\t\t},\n\n\t\tgetBaseValue: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0;\n\t\t},\n\n\t\t/**\n\t\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t\t * @private\n\t\t */\n\t\t_autoSkip: function(ticks) {\n\t\t\tvar skipRatio;\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar optionTicks = me.options.ticks.minor;\n\t\t\tvar tickCount = ticks.length;\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\t\tvar result = [];\n\t\t\tvar i, tick, shouldSkip;\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\t\ttick = ticks[i];\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\t\tdelete tick.label;\n\t\t\t\t}\n\t\t\t\tresult.push(tick);\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = defaults.global;\n\t\t\tvar optionTicks = options.ticks.minor;\n\t\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\t\tvar xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.right + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar label = tick.label;\n\t\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\t\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t\t// bottom\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// top\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tvar labelXOffset;\n\n\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: tick.major,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\t\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left;\n\t\t\t\tvar x2 = me.right + axisWidth;\n\t\t\t\tvar y1 = me.top;\n\t\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t/**\n \t * Helper method to merge the opacity into a color\n \t */\n\tfunction mergeOpacity(colorString, opacity) {\n\t\tvar color = helpers.color(colorString);\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t}\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\t// Private helper to create a tooltip item model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index;\n\t\tvar datasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex,\n\t\t\tx: element._model.x,\n\t\t\ty: element._model.y\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the reset model for the tooltip\n\t * @param tooltipOpts {Object} the tooltip options\n\t */\n\tfunction getBaseModel(tooltipOpts) {\n\t\tvar globalDefaults = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\treturn {\n\t\t\t// Positioning\n\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t// Body\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t// Title\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t// Footer\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t// Appearance\n\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\topacity: 0,\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\tdisplayColors: tooltipOpts.displayColors,\n\t\t\tborderColor: tooltipOpts.borderColor,\n\t\t\tborderWidth: tooltipOpts.borderWidth\n\t\t};\n\t}\n\n\t/**\n\t * Get the size of the tooltip\n\t */\n\tfunction getTooltipSize(tooltip, model) {\n\t\tvar ctx = tooltip._chart.ctx;\n\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\tvar width = 0;\n\n\t\t// Count of all lines in the body\n\t\tvar body = model.body;\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t}, 0);\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\t\tvar titleLineCount = model.title.length;\n\t\tvar footerLineCount = model.footer.length;\n\t\tvar titleFontSize = model.titleFontSize;\n\t\tvar bodyFontSize = model.bodyFontSize;\n\t\tvar footerFontSize = model.footerFontSize;\n\n\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t\t// Title width\n\t\tvar widthPadding = 0;\n\t\tvar maxLineWidth = function(line) {\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t};\n\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\thelpers.each(model.title, maxLineWidth);\n\n\t\t// Body width\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t\t// Body lines may include some extra width due to the color box\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\thelpers.each(body, function(bodyItem) {\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t});\n\n\t\t// Reset back to 0\n\t\twidthPadding = 0;\n\n\t\t// Footer width\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\thelpers.each(model.footer, maxLineWidth);\n\n\t\t// Add padding\n\t\twidth += 2 * model.xPadding;\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the alignment of a tooltip given the size\n\t */\n\tfunction determineAlignment(tooltip, size) {\n\t\tvar model = tooltip._model;\n\t\tvar chart = tooltip._chart;\n\t\tvar chartArea = tooltip._chart.chartArea;\n\t\tvar xAlign = 'center';\n\t\tvar yAlign = 'center';\n\n\t\tif (model.y < size.height) {\n\t\t\tyAlign = 'top';\n\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\tyAlign = 'bottom';\n\t\t}\n\n\t\tvar lf, rf; // functions to determine left, right alignment\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\tif (yAlign === 'center') {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= midX;\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x > midX;\n\t\t\t};\n\t\t} else {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= (size.width / 2);\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t};\n\t\t}\n\n\t\tolf = function(x) {\n\t\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t\t};\n\t\torf = function(x) {\n\t\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t\t};\n\t\tyf = function(y) {\n\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t};\n\n\t\tif (lf(model.x)) {\n\t\t\txAlign = 'left';\n\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\tif (olf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t} else if (rf(model.x)) {\n\t\t\txAlign = 'right';\n\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\tif (orf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t}\n\n\t\tvar opts = tooltip._options;\n\t\treturn {\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t};\n\t}\n\n\t/**\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t */\n\tfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t\t// Background Position\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\n\t\tvar caretSize = vm.caretSize;\n\t\tvar caretPadding = vm.caretPadding;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = alignment.xAlign;\n\t\tvar yAlign = alignment.yAlign;\n\t\tvar paddingAndSize = caretSize + caretPadding;\n\t\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\t\tif (xAlign === 'right') {\n\t\t\tx -= size.width;\n\t\t} else if (xAlign === 'center') {\n\t\t\tx -= (size.width / 2);\n\t\t\tif (x + size.width > chart.width) {\n\t\t\t\tx = chart.width - size.width;\n\t\t\t}\n\t\t\tif (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (yAlign === 'top') {\n\t\t\ty += paddingAndSize;\n\t\t} else if (yAlign === 'bottom') {\n\t\t\ty -= size.height + paddingAndSize;\n\t\t} else {\n\t\t\ty -= (size.height / 2);\n\t\t}\n\n\t\tif (yAlign === 'center') {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx += paddingAndSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx -= paddingAndSize;\n\t\t\t}\n\t\t} else if (xAlign === 'left') {\n\t\t\tx -= radiusAndPadding;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx += radiusAndPadding;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tChart.Tooltip = Element.extend({\n\t\tinitialize: function() {\n\t\t\tthis._model = getBaseModel(this._options);\n\t\t\tthis._lastActive = [];\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\t\tvar title = callbacks.title.apply(me, arguments);\n\t\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t// which breaks any animations.\n\t\t\tvar existingModel = me._model;\n\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\tvar alignment = {\n\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t};\n\t\t\tvar backgroundPoint = {\n\t\t\t\tx: existingModel.x,\n\t\t\t\ty: existingModel.y\n\t\t\t};\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: existingModel.width,\n\t\t\t\theight: existingModel.height\n\t\t\t};\n\t\t\tvar tooltipPosition = {\n\t\t\t\tx: existingModel.caretX,\n\t\t\t\ty: existingModel.caretY\n\t\t\t};\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [];\n\t\t\t\tvar labelTextColors = [];\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\tif (opts.filter) {\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Determine colors for boxes\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t\t});\n\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t\t// Initial positioning and colors\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\t\tmodel.labelColors = labelColors;\n\t\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t\t// data points\n\t\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t// Final Size and Position\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t\t} else {\n\t\t\t\tmodel.opacity = 0;\n\t\t\t}\n\n\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\tmodel.x = backgroundPoint.x;\n\t\t\tmodel.y = backgroundPoint.y;\n\t\t\tmodel.width = tooltipSize.width;\n\t\t\tmodel.height = tooltipSize.height;\n\n\t\t\t// Point where the caret on the tooltip points to\n\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\tmodel.caretY = tooltipPosition.y;\n\n\t\t\tme._model = model;\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size) {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\t\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t\t},\n\t\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\t\tvar x1, x2, x3, y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x;\n\t\t\tvar ptY = tooltipPoint.y;\n\t\t\tvar width = size.width;\n\t\t\tvar height = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\ty2 = ptY + (height / 2);\n\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\t\ty3 = y2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\t\ty3 = y2 + caretSize;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = vm.caretX;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t\t// invert drawing order\n\t\t\t\t\tvar tmp = x3;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t\tx1 = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar x = pt.x;\n\t\t\tvar y = pt.y;\n\t\t\tvar width = tooltipSize.width;\n\t\t\tvar height = tooltipSize.height;\n\t\t\tvar radius = vm.cornerRadius;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tif (yAlign === 'top') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tif (yAlign === 'bottom') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\n\t\t\tctx.fill();\n\n\t\t\tif (vm.borderWidth > 0) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: vm.width,\n\t\t\t\theight: vm.height\n\t\t\t};\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\t// Truthy/falsey value for empty tooltip\n\t\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t\t// Draw Background\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @returns {Boolean} true if the tooltip changed\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me._options;\n\t\t\tvar changed = false;\n\n\t\t\tme._lastActive = me._lastActive || [];\n\n\t\t\t// Find Active Elements for tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme._active = [];\n\t\t\t} else {\n\t\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t\t// Only handle target event on tooltip change\n\t\t\tif (changed) {\n\t\t\t\tme._lastActive = me._active;\n\n\t\t\t\tif (options.enabled || options.custom) {\n\t\t\t\t\tme._eventPosition = {\n\t\t\t\t\t\tx: e.x,\n\t\t\t\t\t\ty: e.y\n\t\t\t\t\t};\n\n\t\t\t\t\tme.update(true);\n\t\t\t\t\tme.pivot();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * @namespace Chart.Tooltip.positioners\n\t */\n\tChart.Tooltip.positioners = {\n\t\t/**\n\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t * @function Chart.Tooltip.positioners.average\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t * @returns {Point} tooltip position\n\t\t */\n\t\taverage: function(elements) {\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, len;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tvar count = 0;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\tx += pos.x;\n\t\t\t\t\ty += pos.y;\n\t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: Math.round(x / count),\n\t\t\t\ty: Math.round(y / count)\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t * @returns {Point} the tooltip position\n\t\t */\n\t\tnearest: function(elements, eventPosition) {\n\t\t\tvar x = eventPosition.x;\n\t\t\tvar y = eventPosition.y;\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar i, len, nearestElement;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestElement) {\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\tx = tp.x;\n\t\t\t\ty = tp.y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t};\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar spacing;\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tvar precision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, spacing.toString().length - 2);\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Chart.Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = options.backgroundColor;\n\t\t\tmodel.borderColor = options.borderColor;\n\t\t\tmodel.borderWidth = options.borderWidth;\n\t\t\tmodel.radius = options.radius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\n\t\t\treturn values;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, area);\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nvar ScopeTypes = exports.ScopeTypes = {\n    TEAM: 'team',\n    CHANNEL: 'channel'\n};","'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n","'use strict';\n\nvar color = require('chartjs-color');\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getLogs = getLogs;\nexports.getAudits = getAudits;\nexports.getConfig = getConfig;\nexports.getEnvironmentConfig = getEnvironmentConfig;\nexports.getComplianceReports = getComplianceReports;\nexports.getClusterInfo = getClusterInfo;\nexports.getUserAccessTokens = getUserAccessTokens;\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nfunction getLogs(state) {\n    return state.entities.admin.logs;\n}\n\nfunction getAudits(state) {\n    return state.entities.admin.audits;\n}\n\nfunction getConfig(state) {\n    return state.entities.admin.config;\n}\n\nfunction getEnvironmentConfig(state) {\n    return state.entities.admin.environmentConfig;\n}\n\nfunction getComplianceReports(state) {\n    return state.entities.admin.complianceReports;\n}\n\nfunction getClusterInfo(state) {\n    return state.entities.admin.clusterInfo;\n}\n\nfunction getUserAccessTokens(state) {\n    return state.entities.admin.userAccessTokens;\n}","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n","'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getScheme = getScheme;\nexports.getSchemes = getSchemes;\nexports.createScheme = createScheme;\nexports.deleteScheme = deleteScheme;\nexports.patchScheme = patchScheme;\nexports.getSchemeTeams = getSchemeTeams;\nexports.getSchemeChannels = getSchemeChannels;\n\nvar _client = require('../client');\n\nvar _action_types = require('../action_types');\n\nvar _constants = require('../constants');\n\nvar _reduxBatchedActions = require('redux-batched-actions');\n\nvar _helpers = require('./helpers');\n\nvar _errors = require('./errors');\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\n\nfunction getScheme(schemeId) {\n    return (0, _helpers.bindClientFunc)(_client.Client4.getScheme, _action_types.SchemeTypes.GET_SCHEME_REQUEST, [_action_types.SchemeTypes.RECEIVED_SCHEME, _action_types.SchemeTypes.GET_SCHEME_SUCCESS], _action_types.SchemeTypes.GET_SCHEME_FAILURE, schemeId);\n}\n\nfunction getSchemes(scope) {\n    var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var perPage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.General.PAGE_SIZE_DEFAULT;\n\n    return (0, _helpers.bindClientFunc)(_client.Client4.getSchemes, _action_types.SchemeTypes.GET_SCHEMES_REQUEST, [_action_types.SchemeTypes.RECEIVED_SCHEMES, _action_types.SchemeTypes.GET_SCHEMES_SUCCESS], _action_types.SchemeTypes.GET_SCHEMES_FAILURE, scope, page, perPage);\n}\n\nfunction createScheme(scheme) {\n    return (0, _helpers.bindClientFunc)(_client.Client4.createScheme, _action_types.SchemeTypes.CREATE_SCHEME_REQUEST, [_action_types.SchemeTypes.CREATED_SCHEME, _action_types.SchemeTypes.CREATE_SCHEME_SUCCESS], _action_types.SchemeTypes.CREATE_SCHEME_FAILURE, scheme);\n}\n\nfunction deleteScheme(schemeId) {\n    var _this = this;\n\n    return function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(dispatch, getState) {\n            var data;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            dispatch({ type: _action_types.SchemeTypes.DELETE_SCHEME_REQUEST, data: null }, getState);\n\n                            data = null;\n                            _context.prev = 2;\n                            _context.next = 5;\n                            return _client.Client4.deleteScheme(schemeId);\n\n                        case 5:\n                            data = _context.sent;\n                            _context.next = 13;\n                            break;\n\n                        case 8:\n                            _context.prev = 8;\n                            _context.t0 = _context['catch'](2);\n\n                            (0, _helpers.forceLogoutIfNecessary)(_context.t0, dispatch, getState);\n                            dispatch((0, _reduxBatchedActions.batchActions)([{ type: _action_types.SchemeTypes.DELETE_SCHEME_FAILURE, error: _context.t0 }, (0, _errors.logError)(_context.t0)]), getState);\n                            return _context.abrupt('return', { error: _context.t0 });\n\n                        case 13:\n\n                            dispatch({ type: _action_types.SchemeTypes.DELETED_SCHEME, data: { schemeId: schemeId } }, getState);\n                            dispatch({ type: _action_types.SchemeTypes.DELETE_SCHEME_SUCCESS, data: null }, getState);\n\n                            return _context.abrupt('return', { data: data });\n\n                        case 16:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, _this, [[2, 8]]);\n        }));\n\n        return function (_x3, _x4) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n}\n\nfunction patchScheme(schemeId, scheme) {\n    return (0, _helpers.bindClientFunc)(_client.Client4.patchScheme, _action_types.SchemeTypes.PATCH_SCHEME_REQUEST, [_action_types.SchemeTypes.PATCHED_SCHEME, _action_types.SchemeTypes.PATCH_SCHEME_SUCCESS], _action_types.SchemeTypes.PATCH_SCHEME_FAILURE, schemeId, scheme);\n}\n\nfunction getSchemeTeams(schemeId) {\n    var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var perPage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.General.PAGE_SIZE_DEFAULT;\n\n    return (0, _helpers.bindClientFunc)(_client.Client4.getSchemeTeams, _action_types.SchemeTypes.GET_SCHEME_TEAMS_REQUEST, [_action_types.SchemeTypes.RECEIVED_SCHEME_TEAMS, _action_types.SchemeTypes.GET_SCHEME_TEAMS_SUCCESS], _action_types.SchemeTypes.GET_SCHEME_TEAMS_FAILURE, schemeId, page, perPage);\n}\n\nfunction getSchemeChannels(schemeId) {\n    var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var perPage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.General.PAGE_SIZE_DEFAULT;\n\n    return (0, _helpers.bindClientFunc)(_client.Client4.getSchemeChannels, _action_types.SchemeTypes.GET_SCHEME_CHANNELS_REQUEST, [_action_types.SchemeTypes.RECEIVED_SCHEME_CHANNELS, _action_types.SchemeTypes.GET_SCHEME_CHANNELS_SUCCESS], _action_types.SchemeTypes.GET_SCHEME_CHANNELS_FAILURE, schemeId, page, perPage);\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\n\nexports.getSchemes = getSchemes;\nexports.getScheme = getScheme;\nexports.makeGetSchemeChannels = makeGetSchemeChannels;\nexports.makeGetSchemeTeams = makeGetSchemeTeams;\n\nvar _reselect = require('reselect');\n\nvar _channels = require('./channels');\n\nvar _teams = require('./teams');\n\nvar _schemes = require('../../constants/schemes');\n\nfunction getSchemes(state) {\n    return state.entities.schemes.schemes;\n}\n\nfunction getScheme(state, id) {\n    var schemes = getSchemes(state);\n    return schemes[id];\n}\n\nfunction makeGetSchemeChannels() {\n    return (0, _reselect.createSelector)(_channels.getAllChannels, function (state, props) {\n        return getScheme(state, props.schemeId);\n    }, function (allChannels, scheme) {\n        if (!scheme) {\n            return [];\n        }\n\n        if (scheme.scope === _schemes.ScopeTypes.TEAM) {\n            var msg = 'Not implemented: scheme \\'' + scheme.id + '\\' is team-scope but \\'getSchemeChannels\\' only accepts channel-scoped schemes.';\n            console.warn(msg); // eslint-disable-line no-console\n            return [];\n        }\n\n        var schemeChannels = [];\n\n        // $FlowFixMe\n        Object.entries(allChannels).forEach(function (item) {\n            var _item = _slicedToArray(item, 2),\n                channel = _item[1];\n\n            if (channel.scheme_id === scheme.id) {\n                schemeChannels.push(channel);\n            }\n        });\n\n        return schemeChannels;\n    });\n}\n\nfunction makeGetSchemeTeams() {\n    return (0, _reselect.createSelector)(_teams.getTeams, function (state, props) {\n        return getScheme(state, props.schemeId);\n    }, function (allTeams, scheme) {\n        if (!scheme) {\n            return [];\n        }\n\n        if (scheme.scope === _schemes.ScopeTypes.CHANNEL) {\n            var msg = 'Error: scheme \\'' + scheme.id + '\\' is channel-scoped but \\'getSchemeChannels\\' only accepts team-scoped schemes.';\n            console.warn(msg); // eslint-disable-line no-console\n            return [];\n        }\n\n        var schemeTeams = [];\n\n        // $FlowFixMe\n        Object.entries(allTeams).forEach(function (item) {\n            var _item2 = _slicedToArray(item, 2),\n                team = _item2[1];\n\n            if (team.scheme_id === scheme.id) {\n                schemeTeams.push(team);\n            }\n        });\n\n        return schemeTeams;\n    });\n}"],"sourceRoot":""}