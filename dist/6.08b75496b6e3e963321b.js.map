{"version":3,"sources":["webpack:///./components/settings_sidebar.jsx"],"names":["SettingsSidebar","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","handleClick","bind","_assertThisInitialized","React","Component","tab","e","preventDefault","updateTab","name","$","target","closest","addClass","UserAgent","_this2","tabList","tabs","map","key","concat","className","activeTab","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","id","onClick","icon","title","iconTitle","uiName","propTypes","PropTypes","arrayOf","shape","string","isRequired","func"],"mappings":"i8BASqBA,cACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACfE,uEAAAG,CAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KAEDO,YAAcN,EAAKM,YAAYC,KAAjBC,IAAAR,KAHJA,8OADsBS,IAAMC,+FAMnCC,EAAKC,GACbA,EAAEC,iBACFX,KAAKH,MAAMe,UAAUH,EAAII,MACzBC,IAAEJ,EAAEK,QAAQC,QAAQ,mBAAmBC,SAAS,gEAG5CC,OACAJ,IAAE,wCAAwCG,SAAS,kDAGlD,IAAAE,EAAAnB,KACCoB,EAAUpB,KAAKH,MAAMwB,KAAKC,IAAI,SAACb,GACjC,IAAMc,EAAG,GAAAC,OAAMf,EAAII,KAAV,OACLY,EAAY,GAKhB,OAJIN,EAAKtB,MAAM6B,YAAcjB,EAAII,OAC7BY,EAAY,UAIZE,EAAAC,EAAAC,cAAA,MACIC,GAAE,GAAAN,OAAKf,EAAII,KAAT,MACFU,IAAKA,EACLE,UAAWA,GAEXE,EAAAC,EAAAC,cAAA,UACIC,GAAE,GAAAN,OAAKf,EAAII,KAAT,UACFY,UAAU,8BACVM,QAASZ,EAAKf,YAAYC,KAAK,KAAMI,IAErCkB,EAAAC,EAAAC,cAAA,KACIJ,UAAWhB,EAAIuB,KACfC,MAAOxB,EAAIyB,YAEdzB,EAAI0B,WAMrB,OACIR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MACIC,GAAG,UACHL,UAAU,6BAETL,aAOrBxB,EAAgBwC,WACZf,KAAMgB,IAAUC,QAAQD,IAAUE,OAC9B1B,KAAMwB,IAAUG,OAAOC,WACvBN,OAAQE,IAAUG,OAAOC,WACzBT,KAAMK,IAAUG,OAAOC,cACvBA,WACJf,UAAWW,IAAUG,OACrB5B,UAAWyB,IAAUK,KAAKD","file":"6.08b75496b6e3e963321b.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport * as UserAgent from 'utils/user_agent.jsx';\n\nexport default class SettingsSidebar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick(tab, e) {\n        e.preventDefault();\n        this.props.updateTab(tab.name);\n        $(e.target).closest('.settings-modal').addClass('display--content');\n    }\n    componentDidMount() {\n        if (UserAgent.isFirefox()) {\n            $('.settings-modal .settings-table .nav').addClass('position--top');\n        }\n    }\n    render() {\n        const tabList = this.props.tabs.map((tab) => {\n            const key = `${tab.name}_li`;\n            let className = '';\n            if (this.props.activeTab === tab.name) {\n                className = 'active';\n            }\n\n            return (\n                <li\n                    id={`${tab.name}Li`}\n                    key={key}\n                    className={className}\n                >\n                    <button\n                        id={`${tab.name}Button`}\n                        className='cursor--pointer style--none'\n                        onClick={this.handleClick.bind(null, tab)}\n                    >\n                        <i\n                            className={tab.icon}\n                            title={tab.iconTitle}\n                        />\n                        {tab.uiName}\n                    </button>\n                </li>\n            );\n        });\n\n        return (\n            <div>\n                <ul\n                    id='tabList'\n                    className='nav nav-pills nav-stacked'\n                >\n                    {tabList}\n                </ul>\n            </div>\n        );\n    }\n}\n\nSettingsSidebar.propTypes = {\n    tabs: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        uiName: PropTypes.string.isRequired,\n        icon: PropTypes.string.isRequired,\n    })).isRequired,\n    activeTab: PropTypes.string,\n    updateTab: PropTypes.func.isRequired,\n};\n"],"sourceRoot":""}