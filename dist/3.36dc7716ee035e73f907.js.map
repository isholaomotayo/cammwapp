{"version":3,"sources":["webpack:///./utils/markdown/remove_markdown.js","webpack:///./utils/syntax_highlighting.jsx","webpack:///./utils/notifications.jsx","webpack:///./components/settings_sidebar.jsx?91ec","webpack:///./utils/position_utils.jsx","webpack:///./components/logged_in/index.js?3ab1","webpack:///./utils/route.jsx","webpack:///./components/autosize_textarea.jsx","webpack:///./components/suggestion/generic_user_provider.jsx","webpack:///./components/setting_picture.jsx","webpack:///./components/user_list_row/user_list_row.jsx","webpack:///./components/user_list_row/index.js","webpack:///./components/user_list.jsx","webpack:///./components/searchable_user_list/searchable_user_list.jsx","webpack:///./client/websocket_client.jsx","webpack:///./client/web_websocket_client.jsx","webpack:///./components/at_mention/at_mention.jsx","webpack:///./components/at_mention/index.jsx","webpack:///./components/local_date_time/local_date_time.jsx","webpack:///./components/local_date_time/index.js","webpack:///./plugins/registry.js","webpack:///./plugins/index.js","webpack:///./components/root/root.jsx","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./images/bing.mp3","webpack:///./images/icon_WS.png","webpack:///./i18n/de.json","webpack:///./i18n/es.json","webpack:///./i18n/fr.json","webpack:///./i18n/it.json","webpack:///./i18n/ja.json","webpack:///./i18n/ko.json","webpack:///./i18n/nl.json","webpack:///./i18n/pl.json","webpack:///./i18n/pt-BR.json","webpack:///./i18n/ro.json","webpack:///./i18n/ru.json","webpack:///./i18n/tr.json","webpack:///./i18n/zh-TW.json","webpack:///./i18n/zh-CN.json","webpack:///./plugins/export.js","webpack:///./components/user_settings/index.js?4083","webpack:///./components/header_footer_template_route.jsx","webpack:///./components/header_footer_template/index.js?9120","webpack:///./components/backstage/index.js?937c","webpack:///./images/filesOverlay.png","webpack:///./images/logoWhite.png","webpack:///./non_npm_dependencies/jquery-dragster/jquery.dragster.js","webpack:///./components/pdf_preview.jsx?201b","webpack:///./images/tutorialTip.gif","webpack:///./images/tutorialTipWhite.gif","webpack:///./images/favicon/favicon-16x16.png","webpack:///./images/favicon/redfavicon-16x16.png","webpack:///./images/appIcons.png","webpack:///./components/error_page/index.jsx?4c76","webpack:///./components/login/login_controller/index.js?7f1c","webpack:///./components/admin_console/index.js?cc43","webpack:///./components/password_reset_send_link.jsx?eea9","webpack:///./components/password_reset_form/index.js?1c57","webpack:///./components/signup/signup_controller/index.js?3081","webpack:///./components/signup/signup_email/index.js?fd7f","webpack:///./components/terms_of_service/index.js?4169","webpack:///./components/should_verify_email/index.js?4b7b","webpack:///./components/do_verify_email/index.js?01f1","webpack:///./components/claim/index.js?d70a","webpack:///./components/help/help_controller.jsx?083b","webpack:///./components/get_ios_app/index.js?024a","webpack:///./components/get_android_app/index.js?b51e","webpack:///./components/select_team/index.js?d49e","webpack:///./components/authorize.jsx?ba68","webpack:///./components/create_team/index.js?e586","webpack:///./components/mfa/mfa_controller/index.js?b130","webpack:///./actions/local_storage.jsx","webpack:///./actions/views/posts.js","webpack:///./components/delete_post_modal/delete_post_modal.jsx","webpack:///./components/delete_post_modal/index.js","webpack:///./components/gif_picker/utils/constants.js","webpack:///./components/svg/gif_search_icon.jsx","webpack:///./components/svg/gif_search_clear_icon.jsx","webpack:///./components/gif_picker/components/SearchBar/index.jsx","webpack:///./components/svg/gif_trending_icon.jsx","webpack:///./components/svg/gif_reactions_icon.jsx","webpack:///./components/gif_picker/components/Header/index.jsx","webpack:///./components/gif_picker/components/App/index.jsx","webpack:///./components/gif_picker/components/InfiniteScroll/index.js","webpack:///./components/gif_picker/components/Categories/index.jsx","webpack:///./components/gif_picker/components/SearchItem/index.jsx","webpack:///./components/gif_picker/components/SearchGrid/SearchGrid.jsx","webpack:///./components/gif_picker/components/SearchGrid/index.js","webpack:///./components/gif_picker/components/Search/index.jsx","webpack:///./components/gif_picker/components/Trending/index.jsx","webpack:///./components/gif_picker/gif_picker.jsx","webpack:///./components/svg/emoji_icon.jsx","webpack:///./components/svg/gfycat_icon.jsx","webpack:///./components/emoji_picker/components/emoji_picker_category.jsx","webpack:///./components/emoji_picker/components/emoji_picker_item.jsx","webpack:///./components/emoji_picker/emoji_picker_category_section.jsx","webpack:///./components/emoji_picker/components/emoji_picker_preview.jsx","webpack:///./components/emoji_picker/emoji_picker.jsx","webpack:///./components/emoji_picker/index.js","webpack:///./components/emoji_picker/emoji_picker_tabs.jsx","webpack:///./components/emoji_picker/emoji_picker_overlay.jsx","webpack:///./components/markdown/markdown.jsx","webpack:///./components/markdown/index.js","webpack:///./components/post_view/combined_system_message/last_users.jsx","webpack:///./components/post_view/combined_system_message/combined_system_message.jsx","webpack:///./components/post_view/combined_system_message/index.js","webpack:///./components/post_view/post_add_channel_member/post_add_channel_member.jsx","webpack:///./components/post_view/post_add_channel_member/index.js","webpack:///./components/post_markdown/system_message_helpers.jsx","webpack:///./components/post_markdown/post_markdown.jsx","webpack:///./components/post_markdown/index.js","webpack:///./components/suggestion/at_mention_provider.jsx","webpack:///./components/suggestion/channel_mention_provider.jsx","webpack:///./actions/integration_actions.jsx","webpack:///./components/suggestion/command_provider.jsx","webpack:///./components/suggestion/emoticon_provider.jsx","webpack:///./components/textbox.jsx","webpack:///./components/edit_post_modal/edit_post_modal.jsx","webpack:///./components/edit_post_modal/index.js","webpack:///./stores/modal_store.jsx","webpack:///./components/get_link_modal.jsx","webpack:///./components/get_post_link_modal/get_post_link_modal.jsx","webpack:///./components/get_post_link_modal/index.js","webpack:///./components/get_team_invite_link_modal/get_team_invite_link_modal.jsx","webpack:///./components/get_team_invite_link_modal/index.js","webpack:///./components/get_public_link_modal/get_public_link_modal.jsx","webpack:///./components/get_public_link_modal/index.js","webpack:///./components/invite_member_modal/invite_member_modal.jsx","webpack:///./components/invite_member_modal/index.js","webpack:///./selectors/local_storage.js","webpack:///./actions/views/channel.js","webpack:///./components/leave_private_channel_modal/leave_private_channel_modal.jsx","webpack:///./components/leave_private_channel_modal/index.js","webpack:///./components/removed_from_channel_modal/removed_from_channel_modal.jsx","webpack:///./components/removed_from_channel_modal/index.js","webpack:///./components/reset_status_modal/reset_status_modal.jsx","webpack:///./components/reset_status_modal/index.js","webpack:///./components/shortcuts_modal.jsx","webpack:///./stores/post_store.jsx","webpack:///./components/file_upload_overlay.jsx","webpack:///./utils/delayed_action.jsx","webpack:///./actions/command.js","webpack:///./actions/views/create_comment.jsx","webpack:///./components/svg/attachment_icon.jsx","webpack:///./components/file_attachment/filename_overlay.jsx","webpack:///./components/file_preview.jsx","webpack:///./actions/file_actions.jsx","webpack:///./components/file_upload/file_upload.jsx","webpack:///./components/file_upload/index.js","webpack:///./components/msg_typing/msg_typing.jsx","webpack:///./components/msg_typing/index.js","webpack:///./components/post_deleted_modal.jsx","webpack:///./components/create_comment/create_comment.jsx","webpack:///./components/create_comment/index.js","webpack:///./components/post_view/date_separator.jsx","webpack:///./components/post_view/floating_timestamp.jsx","webpack:///./components/dot_menu/dot_menu_item.jsx","webpack:///./components/dot_menu/dot_menu.jsx","webpack:///./components/dot_menu/index.js","webpack:///./components/svg/download_icon.jsx","webpack:///./components/file_attachment/file_thumbnail.jsx","webpack:///./components/file_attachment/file_attachment.jsx","webpack:///./components/file_attachment/index.js","webpack:///./components/loading_image_preview.jsx","webpack:///./components/audio_video_preview.jsx","webpack:///./components/code_preview.jsx","webpack:///./components/view_image/image_preview.jsx","webpack:///./components/view_image/popover_bar/popover_bar.jsx","webpack:///./components/view_image/popover_bar/index.js","webpack:///./components/view_image/view_image.jsx","webpack:///./components/view_image/index.js","webpack:///./components/single_image_view/single_image_view.jsx","webpack:///./components/single_image_view/index.js","webpack:///./components/file_attachment_list/file_attachment_list.jsx","webpack:///./components/file_attachment_list/index.js","webpack:///./components/post_profile_picture/post_profile_picture.jsx","webpack:///./components/post_profile_picture/index.jsx","webpack:///./components/post_view/failed_post_options/failed_post_options.jsx","webpack:///./components/post_view/failed_post_options/index.js","webpack:///./components/svg/flag_icon.jsx","webpack:///./components/svg/flag_icon_filled.jsx","webpack:///./components/post_view/post_flag_icon/post_flag_icon.js","webpack:///./components/post_view/post_flag_icon/index.js","webpack:///./components/post_view/post_time.jsx","webpack:///./components/post_view/reaction/reaction.jsx","webpack:///./components/post_view/reaction/index.js","webpack:///./components/permissions_gates/channel_permission_gate/channel_permission_gate.jsx","webpack:///./components/permissions_gates/channel_permission_gate/index.js","webpack:///./components/post_view/reaction_list/reaction_list.jsx","webpack:///./components/post_view/reaction_list/index.js","webpack:///./components/youtube_video/youtube_video.jsx","webpack:///./components/youtube_video/index.js","webpack:///./components/post_view/show_more/show_more.jsx","webpack:///./components/post_view/show_more/index.js","webpack:///./components/post_view/message_attachments/action_button.jsx","webpack:///./components/suggestion/menu_action_provider.jsx","webpack:///./components/suggestion/generic_channel_provider.jsx","webpack:///./components/post_view/message_attachments/action_menu/action_menu.jsx","webpack:///./components/post_view/message_attachments/action_menu/index.js","webpack:///./components/post_view/message_attachments/message_attachment.jsx","webpack:///./components/post_view/message_attachments/message_attachment_list.jsx","webpack:///./utils/commons.jsx","webpack:///./components/post_view/post_attachment_opengraph/post_attachment_opengraph.jsx","webpack:///./components/post_view/post_attachment_opengraph/index.js","webpack:///./components/post_view/post_image/post_image.jsx","webpack:///./components/post_view/post_image/index.js","webpack:///./components/post_view/post_body_additional_content/post_body_additional_content.jsx","webpack:///./components/post_view/post_body_additional_content/index.js","webpack:///./components/post_view/post_message_view/post_message_view.jsx","webpack:///./components/post_view/post_message_view/index.js","webpack:///./components/message_with_additional_content.jsx","webpack:///./components/user_profile.jsx","webpack:///./components/rhs_comment/rhs_comment.jsx","webpack:///./components/rhs_comment/index.js","webpack:///./components/rhs_header_post/rhs_header_post.jsx","webpack:///./components/rhs_header_post/index.js","webpack:///./components/rhs_root_post/rhs_root_post.jsx","webpack:///./components/rhs_root_post/index.js","webpack:///./components/rhs_thread/rhs_thread.jsx","webpack:///./components/rhs_thread/index.js","webpack:///./components/suggestion/search_channel_provider.jsx","webpack:///./components/suggestion/search_suggestion_list.jsx","webpack:///./components/suggestion/suggestion_date.jsx","webpack:///./components/suggestion/search_user_provider.jsx","webpack:///./components/suggestion/search_date_provider.jsx","webpack:///./components/channel_header/components/header_icon_wrapper.jsx","webpack:///./components/search_hint/search_hint.jsx","webpack:///./components/svg/mentions_icon.jsx","webpack:///./components/svg/search_icon.jsx","webpack:///./components/search_bar/search_bar.jsx","webpack:///./components/search_bar/index.jsx","webpack:///./components/search_results_header/search_results_header.jsx","webpack:///./components/search_results_header/index.jsx","webpack:///./components/svg/reply_icon.jsx","webpack:///./components/common/comment_icon.jsx","webpack:///./components/svg/archive_icon.jsx","webpack:///./components/search_results_item/search_results_item.jsx","webpack:///./components/search_results_item/index.js","webpack:///./components/search_hint/data_retention_hint.jsx","webpack:///./components/search_hint/flag_post_search_hint.jsx","webpack:///./components/search_hint/no_result_search_hint.jsx","webpack:///./components/search_hint/pin_post_search_hint.jsx","webpack:///./components/search_results/search_results.jsx","webpack:///./components/search_results/index.jsx","webpack:///./components/sidebar_right/sidebar_right.jsx","webpack:///./components/sidebar_right/index.js","webpack:///./components/add_users_to_team/add_users_to_team.jsx","webpack:///./components/add_users_to_team/index.js","webpack:///./components/svg/leave_team_icon.jsx","webpack:///./components/searchable_user_list/searchable_user_list_container.jsx","webpack:///./components/team_members_dropdown/team_members_dropdown.jsx","webpack:///./components/team_members_dropdown/index.js","webpack:///./components/member_list_team/member_list_team.jsx","webpack:///./components/member_list_team/index.js","webpack:///./components/team_members_modal/team_members_modal.jsx","webpack:///./components/team_members_modal/index.js","webpack:///./components/team_general_tab/team_general_tab.jsx","webpack:///./components/team_general_tab/index.js","webpack:///./components/setting_upload.jsx","webpack:///./components/team_import_tab.jsx","webpack:///./components/team_settings/team_settings.jsx","webpack:///./components/team_settings/index.js","webpack:///./components/team_settings_modal.jsx","webpack:///./components/tutorial/tutorial_tip/tutorial_tip.jsx","webpack:///./components/tutorial/tutorial_tip/index.js","webpack:///./components/tutorial/menu_tutorial_tip.jsx","webpack:///./components/toggle_modal_button_redux/toggle_modal_button_redux.jsx","webpack:///./components/toggle_modal_button_redux/index.js","webpack:///./components/leave_team_modal/leave_team_modal.jsx","webpack:///./components/leave_team_modal/index.js","webpack:///./selectors/views/modals.js","webpack:///./components/sidebar_right_menu/sidebar_right_menu.jsx","webpack:///./components/sidebar_right_menu/index.js","webpack:///./components/user_settings/import_theme_modal.jsx","webpack:///./components/modal_controller/modal_controller.jsx","webpack:///./components/modal_controller/index.js","webpack:///./selectors/lhs.jsx","webpack:///./components/copy_url_context_menu/copy_url_context_menu.jsx","webpack:///./components/copy_url_context_menu/index.js","webpack:///./components/team_sidebar/components/team_button.jsx","webpack:///./components/team_sidebar/team_sidebar_controller.jsx","webpack:///./components/team_sidebar/index.js","webpack:///./components/searchable_channel_list.jsx","webpack:///./components/more_channels/more_channels.jsx","webpack:///./components/more_channels/index.js","webpack:///./components/more_direct_channels/more_direct_channels.jsx","webpack:///./components/more_direct_channels/index.js","webpack:///./components/new_channel_modal/new_channel_modal.jsx","webpack:///./components/new_channel_modal/index.js","webpack:///./components/change_url_modal/change_url_modal.jsx","webpack:///./components/change_url_modal/index.js","webpack:///./components/new_channel_flow/new_channel_flow.jsx","webpack:///./components/new_channel_flow/index.js","webpack:///./components/svg/unread_below_icon.jsx","webpack:///./components/unread_channel_indicator.jsx","webpack:///./components/bootstrap_span.jsx","webpack:///./components/status_dropdown/status_dropdown.jsx","webpack:///./components/status_dropdown/index.jsx","webpack:///./components/sidebar/header/sidebar_header_dropdown_button.jsx","webpack:///./components/sidebar/header/dropdown/sidebar_header_dropdown.jsx","webpack:///./components/sidebar/header/dropdown/index.js","webpack:///./components/sidebar/header/sidebar_header.jsx","webpack:///./components/sidebar/header/index.js","webpack:///./components/svg/draft_icon.jsx","webpack:///./components/svg/globe_icon.jsx","webpack:///./components/svg/lock_icon.jsx","webpack:///./components/sidebar/sidebar_channel_button_or_link/sidebar_channel_button_or_link_icon.jsx","webpack:///./components/sidebar/sidebar_channel_button_or_link/sidebar_channel_button_or_link_close_button.jsx","webpack:///./components/sidebar/sidebar_channel_button_or_link/sidebar_channel_button_or_link.jsx","webpack:///./components/sidebar/sidebar_tutorial_tip.jsx","webpack:///./components/sidebar/sidebar_channel/sidebar_channel.jsx","webpack:///./components/sidebar/sidebar_channel/index.js","webpack:///./components/sidebar/sidebar.jsx","webpack:///./components/sidebar/index.js","webpack:///./components/channel_info_modal/channel_info_modal.jsx","webpack:///./components/channel_info_modal/index.js","webpack:///./components/channel_invite_modal/channel_invite_modal.jsx","webpack:///./components/channel_invite_modal/index.js","webpack:///./components/channel_members_dropdown/channel_members_dropdown.jsx","webpack:///./components/channel_members_dropdown/index.js","webpack:///./components/member_list_channel/member_list_channel.jsx","webpack:///./components/member_list_channel/index.js","webpack:///./components/channel_members_modal/channel_members_modal.jsx","webpack:///./components/channel_members_modal/index.js","webpack:///./components/channel_notifications_modal/components/describe.jsx","webpack:///./components/channel_notifications_modal/components/section_title.jsx","webpack:///./components/channel_notifications_modal/components/collapse_view.jsx","webpack:///./components/channel_notifications_modal/components/extra_info.jsx","webpack:///./components/channel_notifications_modal/components/expand_view.jsx","webpack:///./components/channel_notifications_modal/components/notification_section.jsx","webpack:///./components/channel_notifications_modal/channel_notifications_modal.jsx","webpack:///./components/channel_notifications_modal/index.js","webpack:///./components/convert_channel_modal/convert_channel_modal.jsx","webpack:///./components/convert_channel_modal/index.js","webpack:///./components/delete_channel_modal/delete_channel_modal.jsx","webpack:///./components/delete_channel_modal/index.js","webpack:///./components/edit_channel_header_modal/edit_channel_header_modal.jsx","webpack:///./components/edit_channel_header_modal/index.js","webpack:///./components/edit_channel_purpose_modal/edit_channel_purpose_modal.jsx","webpack:///./components/edit_channel_purpose_modal/index.js","webpack:///./components/svg/member_icon.jsx","webpack:///./components/svg/message_icon.jsx","webpack:///./components/popover_list_members/popover_list_members_item.jsx","webpack:///./components/popover_list_members/popover_list_members.jsx","webpack:///./components/popover_list_members/index.js","webpack:///./components/rename_channel_modal/rename_channel_modal.jsx","webpack:///./components/rename_channel_modal/index.js","webpack:///./components/svg/pin_icon.jsx","webpack:///./plugins/channel_header_plug/channel_header_plug.jsx","webpack:///./plugins/channel_header_plug/index.js","webpack:///./components/channel_header/channel_header.jsx","webpack:///./components/channel_header/index.js","webpack:///./utils/global_event_emitter.jsx","webpack:///./components/post_view/new_message_indicator.jsx","webpack:///./components/post_view/commented_on_files_message/commented_on_files_message.jsx","webpack:///./components/post_view/commented_on_files_message/index.js","webpack:///./components/post_view/commented_on/commented_on.jsx","webpack:///./components/post_view/commented_on/index.js","webpack:///./components/post_view/post_body/post_body.jsx","webpack:///./components/post_view/post_body/index.js","webpack:///./components/post_view/post_info/post_info.jsx","webpack:///./components/post_view/post_info/index.js","webpack:///./components/post_view/post_header/post_header.jsx","webpack:///./components/post_view/post_header/index.js","webpack:///./components/post_view/post/post.jsx","webpack:///./components/post_view/post/index.js","webpack:///./components/svg/scroll_to_bottom_icon.jsx","webpack:///./components/post_view/scroll_to_bottom_arrows.jsx","webpack:///./components/post_view/channel_intro_message/channel_intro_message.jsx","webpack:///./components/post_view/channel_intro_message/index.js","webpack:///./components/post_view/post_list.jsx","webpack:///./components/post_view/index.js","webpack:///./components/permalink_view/permalink_view.jsx","webpack:///./components/permalink_view/index.js","webpack:///./components/notify_counts/notify_counts.jsx","webpack:///./components/notify_counts/index.js","webpack:///./components/suggestion/switch_channel_provider.jsx","webpack:///./components/suggestion/switch_team_provider.jsx","webpack:///./components/quick_switch_modal/quick_switch_modal.jsx","webpack:///./components/quick_switch_modal/index.js","webpack:///./plugins/mobile_channel_header_plug/mobile_channel_header_plug.jsx","webpack:///./plugins/mobile_channel_header_plug/index.js","webpack:///./components/svg/info_icon.jsx","webpack:///./components/navbar/navbar_info_button/navbar_info_button.jsx","webpack:///./components/navbar/navbar_info_button/index.js","webpack:///./components/navbar/navbar.jsx","webpack:///./components/navbar/index.js","webpack:///./components/channel_layout/channel_identifier_router/actions.js","webpack:///./components/deferComponentRender.jsx","webpack:///./components/create_post/create_post.jsx","webpack:///./components/create_post/index.js","webpack:///./components/tutorial/tutorial_intro_screens/tutorial_intro_screens.jsx","webpack:///./components/tutorial/tutorial_intro_screens/index.jsx","webpack:///./components/tutorial/tutorial_view.jsx","webpack:///./components/tutorial/index.jsx","webpack:///./components/channel_view/channel_view.jsx","webpack:///./components/channel_view/index.js","webpack:///./components/channel_layout/channel_identifier_router/channel_identifier_router.jsx","webpack:///./components/channel_layout/channel_identifier_router/index.js","webpack:///./components/channel_layout/center_channel/center_channel.jsx","webpack:///./components/channel_layout/center_channel/index.js","webpack:///./components/channel_layout/channel_controller.jsx","webpack:///./components/needs_team/needs_team.jsx","webpack:///./components/needs_team/index.js","webpack:///./components/intl_provider/intl_provider.jsx","webpack:///./components/intl_provider/index.jsx","webpack:///./components/root/index.js","webpack:///./utils/utils.jsx","webpack:///./actions/global_actions.jsx","webpack:///./utils/server_version.jsx","webpack:///./components/formatted_markdown_message.jsx","webpack:///./actions/user_actions.jsx","webpack:///./components/loading_screen.jsx","webpack:///./utils/latinise.jsx","webpack:///./utils/url.jsx","webpack:///./dispatcher/app_dispatcher.jsx","webpack:///./actions/diagnostics_actions.jsx","webpack:///./actions/admin_actions.jsx","webpack:///./actions/notification_actions.jsx","webpack:///./actions/post_utils.js","webpack:///./actions/post_actions.jsx","webpack:///./utils/markdown/mentionable_renderer.jsx","webpack:///./utils/post_utils.jsx","webpack:///./selectors/rhs.jsx","webpack:///./components/confirm_modal.jsx","webpack:///./components/setting_item_max.jsx","webpack:///./components/form_error.jsx","webpack:///./utils/text_formatting.jsx","webpack:///./stores/user_store.jsx","webpack:///./selectors/i18n.js","webpack:///./components/setting_item_min.jsx","webpack:///./actions/views/rhs.js","webpack:///./stores/team_store.jsx","webpack:///./components/suggestion/suggestion.jsx","webpack:///./actions/channel_actions.jsx","webpack:///./stores/channel_store.jsx","webpack:///./components/permissions_gates/team_permission_gate/team_permission_gate.jsx","webpack:///./components/permissions_gates/team_permission_gate/index.js","webpack:///./stores/error_store.jsx","webpack:///./actions/views/modals.js","webpack:///./components/suggestion/provider.jsx","webpack:///./actions/team_actions.jsx","webpack:///./components/save_button.jsx","webpack:///./plugins/pluggable/pluggable.jsx","webpack:///./plugins/pluggable/index.js","webpack:///./actions/status_actions.jsx","webpack:///./stores/browser_store.jsx","webpack:///./images/load.gif","webpack:///./components/profile_picture.jsx","webpack:///./utils/license_utils.jsx","webpack:///./components/announcement_bar/announcement_bar.jsx","webpack:///./components/announcement_bar/index.js","webpack:///./components/permissions_gates/system_permission_gate/system_permission_gate.jsx","webpack:///./components/permissions_gates/system_permission_gate/index.js","webpack:///./selectors/emojis.js","webpack:///./utils/file_utils.jsx","webpack:///./selectors/posts.js","webpack:///./utils/channel_utils.jsx","webpack:///./i18n/i18n.jsx","webpack:///./components/suggestion/suggestion_box.jsx","webpack:///./components/suggestion/suggestion_list.jsx","webpack:///./actions/views/search.js","webpack:///./selectors/storage.js","webpack:///./utils/timezone.jsx","webpack:///./stores/preference_store.jsx","webpack:///./actions/websocket_actions.jsx","webpack:///./stores/suggestion_store.jsx","webpack:///./components/svg/status_away_avatar_icon.jsx","webpack:///./components/svg/status_away_icon.jsx","webpack:///./components/svg/status_dnd_avatar_icon.jsx","webpack:///./components/svg/status_dnd_icon.jsx","webpack:///./components/svg/status_offline_avatar_icon.jsx","webpack:///./components/svg/status_offline_icon.jsx","webpack:///./components/svg/status_online_avatar_icon.jsx","webpack:///./components/svg/status_online_icon.jsx","webpack:///./components/status_icon.jsx","webpack:///./utils/markdown/renderer.jsx","webpack:///./utils/markdown/index.js","webpack:///./utils/emoji.jsx","webpack:///./actions/emoji_actions.jsx","webpack:///./images/icon50x50.png","webpack:///./actions/views/lhs.js","webpack:///./stores/local_storage_store.jsx","webpack:///./utils/team_utils.jsx","webpack:///./selectors/views/admin.js","webpack:///./components/toggle_modal_button.jsx","webpack:///./components/latex_block.jsx","webpack:///./components/markdown_image.jsx","webpack:///./components/post_emoji/post_emoji.jsx","webpack:///./components/post_emoji/index.jsx","webpack:///./utils/message_html_to_component.jsx","webpack:///./components/file_info_preview/file_info_preview.jsx","webpack:///./components/file_info_preview/index.js","webpack:///./components/user_settings/modal/user_settings_modal.jsx","webpack:///./components/user_settings/modal/index.js","webpack:///./components/multiselect/multiselect_list.jsx","webpack:///./components/multiselect/multiselect.jsx","webpack:///./utils/emoticons.jsx","webpack:///./utils/event_types.jsx","webpack:///./stores/analytics_store.jsx","webpack:///./components/svg/mattermost_logo.jsx","webpack:///./images/img_trans.gif","webpack:///./components/quick_input.jsx","webpack:///./components/svg/menu_icon.jsx","webpack:///./actions/views/notice.js","webpack:///./components/system_notice/notices.jsx","webpack:///./components/system_notice/system_notice.jsx","webpack:///./components/system_notice/index.js","webpack:///./components/profile_popover/profile_popover.jsx","webpack:///./components/profile_popover/index.js","webpack:///./components/about_build_modal/about_build_modal.jsx","webpack:///./components/about_build_modal/index.js","webpack:///./actions/views/root.js","webpack:///./utils/emoji_map.js"],"names":["RemoveMarkdown","marked","Renderer","text","replace","body","href","title","hlJS","registerLanguage","hljsActionscript","hljsApplescript","hljsBash","hljsClojure","hljsCoffeescript","hljsCpp","hljsCs","hljsCss","hljsD","hljsDart","hljsDelphi","hljsDiff","hljsDjango","hljsDockerfile","hljsErlang","hljsFortran","hljsFsharp","hljsGcode","hljsGo","hljsGroovy","hljsHandlebars","hljsHaskell","hljsHaxe","hljsJava","hljsJavascript","hljsJson","hljsJulia","hljsKotlin","hljsLess","hljsLisp","hljsLua","hljsMakefile","hljsMarkdown","hljsMatlab","hljsObjectivec","hljsOcaml","hljsPerl","hljsPhp","hljsPowershell","hljsPuppet","hljsPython","hljsR","hljsRuby","hljsRust","hljsScala","hljsScheme","hljsScss","hljsSmalltalk","hljsSql","hljsStylus","hljsSwift","hljsTex","hljsVbnet","hljsVbscript","hljsVerilog","hljsXml","hljsYaml","HighlightedLanguages","Constants","highlight","lang","code","language","getLanguageFromNameOrAlias","value","e","TextFormatting","getLanguageFromFileExtension","extension","key","extensions","find","x","canHighlight","Boolean","getLanguageName","name","langName","toLowerCase","Object","keys","aliases","a","requestedNotificationPermission","showNotification","_showNotification","apply","this","arguments","_callee","_ref","requireInteraction","silent","onClick","icon","permission","notification","_args","regeneratorRuntime","wrap","_context","prev","next","length","undefined","icon50","UserAgent","iconWS","window","Error","Notification","requestPermission","sent","Promise","resolve","tag","onclick","setTimeout","close","DEFAULT_NOTIFICATION_DURATION","abrupt","stop","module","exports","cb","__webpack_require__","then","require","bind","catch","oe","popOverOverlayPosition","targetBounds","innerHeight","spaceRequiredOptions","above","below","top","bottom","d","__webpack_exports__","checkIfMFARequired","stores_user_store_jsx__WEBPACK_IMPORTED_MODULE_0__","ErrorPageTypes","PAGE_NOT_FOUND","mfaPaths","mfaAuthServices","license","config","path","MFA","EnableMultifactorAuthentication","EnforceMultifactorAuthentication","indexOf","user","UserStore","getCurrentUser","mfa_active","auth_service","AutosizeTextarea","props","_this","_classCallCheck","_defineProperty","_assertThisInitialized","_possibleConstructorReturn","_getPrototypeOf","call","height","refs","reference","scrollHeight","textarea","style","getComputedStyle","borderWidth","parseInt","borderTopWidth","borderBottomWidth","String","onHeightChange","maxHeight","onChange","React","Component","focus","blur","recalculateSize","_objectSpread","Reflect","deleteProperty","defaultValue","placeholder","disabled","onInput","id","otherProps","_objectWithoutProperties","heightProps","rows","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","assign","ref","handleChange","container","selectionStart","selectionEnd","PropTypes","string","func","overflow","width","UserSuggestion","Suggestion","_this$props","item","className","isSelection","username","description","first_name","last_name","nickname","concat","Utils","react__WEBPACK_IMPORTED_MODULE_3___default","handleClick","baseProps","src","Client4","getUsersRoute","last_picture_update","UserProvider","Provider","suggestionId","pretext","normalizedPretext","startNewRequest","autocompleteUsers","data","shouldCancelDispatch","users","AppDispatcher","handleServerAction","type","ActionTypes","SUGGESTION_RECEIVED_SUGGESTIONS","matchedPretext","terms","map","items","component","SettingPicture","setState","removeSrc","updateSection","state","onRemove","onSubmit","preventDefault","onFileChange","file","previewBlob","URL","createObjectURL","reader","FileReader","onload","orientation","getExifOrientation","target","result","orientationStyles","getOrientationStyles","image","readAsArrayBuffer","nextProps","setPicture","revokeObjectURL","view","DataView","getUint16","byteLength","offset","marker","getUint32","little","tags","i","_exif2css","exif2css","transform","transformOrigin","img","confirmButton","selectButtonSpinner","imageContext","imageStyles","backgroundImage","react__WEBPACK_IMPORTED_MODULE_6___default","alt","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","trigger","delayShow","OVERLAY_TIME_DELAY","placement","overlay","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","react_intl__WEBPACK_IMPORTED_MODULE_7__","defaultMessage","handleRemoveSrc","helpText","fileInputDisabled","loadingPicture","loadingGif","localizeMessage","confirmButtonClass","submitActive","handleSave","components_formatted_markdown_message_jsx__WEBPACK_IMPORTED_MODULE_15__","values","max","fileSizeToString","maxFileSize","components_form_error_jsx__WEBPACK_IMPORTED_MODULE_14__","errors","clientError","serverError","accept","handleFileChange","handleCancel","object","bool","number","UserListRow","buttons","actions","Action","index","react_default","toString","actionProps","actionUserProps","status","email","emailStyle","extraInfo","formatted_markdown_message","userCountID","userCountEmail","userCount","profile_picture","getProfilePictureUrl","isRequired","arrayOf","connect","ownProps","getStatusForUserId","UserList","user_list_classCallCheck","user_list_possibleConstructorReturn","user_list_getPrototypeOf","scrollToTop","user_list_assertThisInitialized","scrollTop","content","_this2","RowComponentType","rowComponentType","loading_screen","TEST_ID_COUNT","index_es","defaultProps","propTypes","SearchableUserList","searchable_user_list_classCallCheck","searchable_user_list_possibleConstructorReturn","searchable_user_list_getPrototypeOf","nextPage","searchable_user_list_assertThisInitialized","previousPage","focusSearchBar","handleInput","renderCount","nextTimeoutId","nextDisabled","prevProps","page","term","userList","clearTimeout","$","ReactDOM","findDOMNode","channelListScroll","focusOnMount","filter","onTermChange","search","startCount","endCount","count","total","isSearch","usersPerPage","Math","min","nextButton","previousButton","usersToDisplay","filterRow","pageStart","pageEnd","slice","renderFilterRow","quick_input","user_list_UserList","showTeamToggle","WebClient","WebSocketClient","conn","connectionUrl","sequence","eventSequence","connectFailCount","eventCallback","responseCallbacks","firstConnectCallback","reconnectCallback","missedEventCallback","errorCallback","closeCallback","token","console","log","WebSocket","onopen","sendMessage","onclose","retryTime","initialize","onerror","evt","onmessage","msg","JSON","parse","seq_reply","error","seq","callback","readyState","OPEN","action","responseCallback","send","stringify","CLOSED","channelId","parentId","channel_id","parent_id","userIds","user_ids","spaceRequiredForPopOver","AtMention","overlayRef","current","getBoundingClientRect","show","getUserFromMentionName","createRef","PureComponent","mentionName","usersByUsername","hasOwnProperty","test","substring","Fragment","children","suffix","currentUserId","Overlay","rootClose","onHide","hideOverlay","pluggable","profile_popover","isRHS","hasMention","displayUsername","teammateNameDisplay","node","getCurrentUserId","getTeammateNameDisplaySetting","getUsersByUsername","LocalDateTime","enableTimezone","eventTime","timeZone","useMilitaryTime","date","Date","timezoneProps","dateTime","toISOString","hour12","userTimezone","getUserTimezone","areTimezonesEnabledAndSupported","getBool","Preferences","CATEGORY_DISPLAY_SETTINGS","USE_MILITARY_TIME","getUserCurrentTimezone","dispatchPluginComponentAction","pluginId","generateId","store","dispatch","RECEIVED_PLUGIN_COMPONENT","resolveReactElement","element","PluginRegistry","dropdownText","RECEIVED_PLUGIN_POST_COMPONENT","mobileIcon","hook","componentId","REMOVED_PLUGIN_COMPONENT","reducer","reducerRegistry","register","event","handler","registerPluginWebSocketEvent","unregisterPluginWebSocketEvent","registerPluginReconnectHandler","unregisterPluginReconnectHandler","initializePlugins","_initializePlugins","_callee2","_ref2","_context2","getState","entities","general","PluginsEnabled","getPlugins","forEach","m","loadPlugin","_asyncToGenerator","mark","plugins","getWebappPlugins","t0","RECEIVED_WEBAPP_PLUGINS","_x","registerPlugin","plugin","loadedPlugins","manifest","bundlePath","webapp","bundle_path","includes","script","document","getSiteURL","registry","initializePlugin","getElementsByTagName","appendChild","removePlugin","uninitialize","deinitialize","unregisterAllPluginWebSocketEvents","getElementById","parentNode","removeChild","loadPluginsIfNecessary","_loadPluginsIfNecessary","_callee3","oldManifests","_ref3","newManifests","_context3","newManifest","oldManifest","version","REMOVED_WEBAPP_PLUGIN","CreateTeam","makeAsyncComponent","loadCreateTeam","ErrorPage","loadErrorPage","TermsOfService","loadTermsOfService","LoginController","loadLoginController","AdminConsole","loadAdminConsole","LoggedIn","loadLoggedIn","PasswordResetSendLink","loadPasswordResetSendLink","PasswordResetForm","loadPasswordResetForm","SignupController","loadSignupController","SignupEmail","loadSignupEmail","ShouldVerifyEmail","loadShouldVerifyEmail","DoVerifyEmail","loadDoVerifyEmail","ClaimController","loadClaimController","HelpController","loadHelpController","GetIosApp","loadGetIosApp","GetAndroidApp","loadGetAndroidApp","SelectTeam","loadSelectTeam","Authorize","loadAuthorize","Mfa","loadMfa","LoggedInRoute","rest","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","render","Root","segmentKey","DIAGNOSTICS_SEGMENT_KEY","diagnosticId","diagnosticsEnabled","analytics","global","invoked","methods","factory","t","_len","args","Array","_key","prototype","unshift","push","load","async","location","protocol","n","insertBefore","SNIPPET_VERSION","identify","context","ip","referrer","url","anonymousId","afterIntl","configLoaded","Intl","I18n","loadRecentlyUsedCustomEmojis","getConfig","IosAppDownloadLink","AndroidAppDownloadLink","pathname","noAccounts","history","showTermsOfService","setUrl","setSystemEmojis","EmojiIndicesByAlias","originalEvent","StoragePrefixes","LOGOUT","storageArea","localStorage","newValue","BrowserStore","isSignallingLogout","GlobalActions","LOGIN","isSignallingLogin","reload","addEventListener","stopPropagation","FastClick","attach","ErrorStore","setConnectionErrorCount","newProps","redirectIfNecessary","loadMeAndConfig","response","onConfigLoaded","trackLoadTime","unbind","components_intl_provider__WEBPACK_IMPORTED_MODULE_28__","react_router_dom__WEBPACK_IMPORTED_MODULE_11__","components_header_footer_template_route__WEBPACK_IMPORTED_MODULE_27__","NeedsTeam","react_router_dom__WEBPACK_IMPORTED_MODULE_12__","to","shape","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","p","utils_message_html_to_component__WEBPACK_IMPORTED_MODULE_0__","utils_text_formatting_jsx__WEBPACK_IMPORTED_MODULE_1__","Redux","ReactRedux","ReactBootstrap","PostUtils","formatText","messageHtmlToComponent","all","HFTRoute","react__WEBPACK_IMPORTED_MODULE_4___default","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","components_async_load__WEBPACK_IMPORTED_MODULE_8__","doLoad","HeaderFooterTemplate","LoggedInHFTRoute","jQuery","fn","dragster","options","settings","extend","enter","noop","leave","over","drop","each","first","second","$this","on","dragenter","dragleave","dragover","dragster:enter","dragster:leave","dragster:over","dragster:drop","setPreviousTeamId","teamId","userId","LocalStorageStore","editPost","post","PostActions","RECEIVED_ERROR","err","server_error_id","_x2","selectAttachmentMenuAction","postId","actionId","dataSource","displayText","SELECT_ATTACHMENT_MENU_ACTION","_x3","DeletePostModal","delete_post_modal_defineProperty","delete_post_modal_asyncToGenerator","channelName","focusedPostId","teamName","deleteAndRemovePost","browserHistory","handleDelete","commentWarning","commentCount","postTerm","root_id","Modal","onExited","enforceFocus","Header","closeButton","Title","Body","Footer","deletePostBtn","autoFocus","channel","getChannel","views","getCurrentTeam","bindActionCreators","utils_constants","OPEN_EMBED_PAGE","SHARE","TRENDING","REACTIONS","mattermost","GifSearchIcon","viewBox","fill","GifSearchClearIcon","enableBackground","mapDispatchToProps","saveSearchBarText","saveSearchScrollPosition","searchTextUpdate","getStyle","makeStyleFromTheme","theme","background","backgroundColor","centerChannelBg","changeOpacity","centerChannelColor","inputBackground","input","borderColor","SearchBar","_Component","SearchBar_classCallCheck","SearchBar_defineProperty","SearchBar_assertThisInitialized","SearchBar_possibleConstructorReturn","SearchBar_getPrototypeOf","searchText","trim","split","join","searchInput","triggerSearch","onSearch","parseSearchText","searchTimeout","onCategories","isFilteredTags","inputFocused","removeExtraSpaces","tagsList","substr","filteredTags","tagName","_this$props2","onTrending","updateSearchInputValue","SearchBar_inherits","SearchBar_createClass","searchBarText","nextState","clearSearchButton","gif_search_clear_icon_GifSearchClearIcon","clearSearchHandle","method","noValidate","handleSubmit","autoComplete","autoCapitalize","onFocus","focusInput","onBlur","blurInput","gif_search_icon_GifSearchIcon","array","SearchBar_objectSpread","gifs","categories","getTheme","appProps","app","GifTrendingIcon","stroke","GifReactionsIcon","header","borderBottomColor","iconActive","iconHover","_PureComponent","Header_classCallCheck","Header_possibleConstructorReturn","Header_getPrototypeOf","hovering","Header_inherits","Header_createClass","components_SearchBar","renderTabs","tabs","tab","link","constants","renderTab","Icon","_this3","onMouseOver","onMouseOut","cursor","paddingTop","saveAppProps","App","App_classCallCheck","App_possibleConstructorReturn","App_getPrototypeOf","App_inherits","App_createClass","appClassName","components_Header","authenticateSdk","InfiniteScroll","InfiniteScroll_classCallCheck","InfiniteScroll_possibleConstructorReturn","InfiniteScroll_getPrototypeOf","scrollListener","InfiniteScroll_assertThisInitialized","pageLoaded","attachScrollListener","setScrollPosition","hasMore","loader","initialLoad","containerHeight","loadMore","threshold","useWindow","isReverse","scrollPosition","scrollComponent","elementProps","InfiniteScroll_objectSpread","defaultLoader","el","offsetTop","calculateTopPosition","offsetParent","scrollTo","scrollEl","pageYOffset","documentElement","offsetHeight","clientHeight","Number","detachScrollListener","removeEventListener","requestCategoriesList","requestCategoriesListIfNeeded","Categories","_getPrototypeOf2","Categories_classCallCheck","Categories_defineProperty","Categories_assertThisInitialized","Categories_possibleConstructorReturn","Categories_getPrototypeOf","gfycats","gfyId","trackEvent","Categories_inherits","Categories_createClass","sendImpressions","hasImageProxy","filterTagsList","gfyItem","max1mbGif","avgColor","Categories_objectSpread","InfiniteScroll_InfiniteScroll","cache","HasImageProxy","SearchItem","SearchItem_classCallCheck","SearchItem_possibleConstructorReturn","SearchItem_getPrototypeOf","SearchItem_inherits","SearchItem_createClass","left","itemWidth","itemClickHandler","paddingBottom","SearchItem_objectSpread","ITEMS_PADDING","NUMBER_OF_COLUMNS_PORTRAIT","NUMBER_OF_COLUMNS_LANDSCAPE","WEBKIT_SCROLLBAR_WIDTH","SearchGrid","SearchGrid_classCallCheck","SearchGrid_defineProperty","SearchGrid_assertThisInitialized","SearchGrid_possibleConstructorReturn","SearchGrid_getPrototypeOf","matchMedia","matches","numberOfColumns","keyword","handleItemClick","gfyid","columnsHeights","_toConsumableArray","containerWidth","offsetWidth","setNumberOfColumns","SearchGrid_objectSpread","scrollY","padding","SearchGrid_inherits","SearchGrid_createClass","resizeHandler","scrollHandler","containerClassName","resultsByTerm","moreRemaining","_ref$items","isEmpty","columnWidth","leftPosition","searchItems","colIndex","minHeightColumnIndex","itemHeight","components_SearchItem","maxColumnHeight","emptySearch","components_SearchGrid_objectSpread","searchGfycat","searchIfNeededInitial","Search","Search_classCallCheck","Search_defineProperty","Search_assertThisInitialized","Search_possibleConstructorReturn","Search_getPrototypeOf","Search_inherits","Search_createClass","components_SearchGrid","Search_objectSpread","searchCategory","Trending","Trending_classCallCheck","Trending_defineProperty","Trending_assertThisInitialized","Trending_possibleConstructorReturn","Trending_getPrototypeOf","Trending_inherits","Trending_createClass","appName","basePath","itemTapType","shareEvent","appId","enableHistory","GifPicker","gif_picker_classCallCheck","gif_picker_possibleConstructorReturn","gif_picker_getPrototypeOf","shouldComponentUpdate","PureRenderMixin","gif_picker_assertThisInitialized","handleTrending","handleCategories","handleSearch","gif","onGifClick","max5mbGif","components_Categories","components_Search","components_Trending","components_App","EmojiIcon","role","aria-label","strokeWidth","fillRule","cx","cy","rx","ry","GfycatIcon","EmojiPickerCategory","emoji_picker_category_classCallCheck","emoji_picker_category_possibleConstructorReturn","emoji_picker_category_getPrototypeOf","emoji_picker_category_assertThisInitialized","selected","enable","onCategoryClick","category","EMOJI_LAZY_LOAD_SCROLL_THROTTLE","EmojiPickerItem","emojiItem","isSelected","onItemOver","categoryIndex","emojiIndex","debounce","handleMouseOver","leading","trailing","onItemClick","emoji","topOfTheEmojiItem","bottomOfTheEmojiItem","containerRef","containerTop","containerBottom","itemClassName","spriteClassName","batch","filename","handleMouseOverThrottle","imgTrans","getEmojiImageUrl","emojiItemRef","any","EmojiPickerCategorySection","div","updateCategoryOffset","categoryName","divRef","EmojiPickerPreview","previewImage","EMOJI_CONTAINER_STYLE","SYSTEM_EMOJIS_COUNT","CATEGORIES","recent","message","people","nature","foods","activity","places","objects","symbols","flags","custom","getEmojiFilename","EMOJIS_PER_PAGE","EmojiPicker","emoji_picker_classCallCheck","emoji_picker_defineProperty","emoji_picker_assertThisInitialized","emoji_picker_possibleConstructorReturn","emoji_picker_getPrototypeOf","emoji_picker_asyncToGenerator","customEmojisEnabled","loadingMoreEmojis","getCustomEmojis","customEmojiPage","missingPages","incrementEmojiPickerPage","lastVisibleEmoji","emojiPickerContainer","emojis","currentEmojiLoadedCount","_this$state","emojisToShow","numEmojisLoaded","lastVisibleEmojiRef","emoji_picker_item_EmojiPickerItem","handleItemOver","onItemUnmount","divTopOffset","divHeight","handleCategoryClick","handleFilterChange","handleKeyDown","handleScroll","handleScrollThrottle","throttle","allEmojis","loadMoreCustomEmojis","getEmojis","requestAnimationFrame","difference","numToLoad","ceil","emojiMap","visible","searchCustomEmojis","onEmojiClick","selectNextEmoji","selectPrevEmoji","getCurrentEmojiByCursor","newCursor","newCategory","getCategoryByIndex","lastVisibleEmojiInNewCategory","emojiIds","getCategoriesByKey","getEmojisByCategory","emojiId","_this$state2","customEmojiMap","customEmojis","_arr","_i","categoryEmojis","emoji_picker_toConsumableArray","recentEmojis","reverse","has","get","Emoji","currentEmoji","fileName","emoji_picker_objectSpread","currentCategoryName","_this4","categoryKeys","getCurrentEmojiCategoryName","emojiPickerCategories","emoji_picker_category_EmojiPickerCategory","emojiSearchInput","onKeyDown","categoryComponents","emojiCurrentResultsItems","emoji_picker_category_section_EmojiPickerCategorySection","emojiPickerContainerRef","onScroll","emojiSearch","emojiCategories","emojiCurrentResults","emoji_picker_preview_EmojiPickerPreview","listHeight","EnableCustomEmoji","emojiPickerCustomPage","getEmojiMap","getRecentEmojis","EmojiPickerTabs","emoji_picker_tabs_classCallCheck","emoji_picker_tabs_defineProperty","emoji_picker_tabs_assertThisInitialized","emoji_picker_tabs_possibleConstructorReturn","emoji_picker_tabs_getPrototypeOf","emojiTabVisible","pickerStyle","right","rightOffset","emoji_picker_tabs_objectSpread","topOffset","pickerClass","enableGifPicker","Tabs","defaultActiveKey","justified","Tab","eventKey","onEnter","handleEnterEmojiTab","onExit","handleExitEmojiTab","emoji_icon_EmojiIcon","emoji_picker","gfycat_icon_GfycatIcon","mountOnEnter","unmountOnExit","gif_picker_GifPicker","oneOf","EmojiPickerOverlay","emoji_picker_overlay_classCallCheck","emoji_picker_overlay_possibleConstructorReturn","emoji_picker_overlay_getPrototypeOf","spaceRequiredAbove","spaceRequiredBelow","animation","emoji_picker_tabs_EmojiPickerTabs","CENTER_SPACE_REQUIRED_ABOVE","CENTER_SPACE_REQUIRED_BELOW","Markdown","enableFormatting","autolinkedUrlSchemes","siteURL","mentionKeys","atMentions","channelNamesMap","proxyImages","team","htmlFormattedText","imageProps","getChannelNamesMap","createSelector","getChannelsNameMapInCurrentTeam","channelMentions","getAutolinkedUrlSchemes","CATEGORY_ADVANCED_SETTINGS","getCurrentUserMentionKeys","typeMessage","last_users_defineProperty","_typeMessage","Posts","POST_TYPES","ADD_TO_CHANNEL","JOIN_CHANNEL","LEAVE_CHANNEL","REMOVE_FROM_CHANNEL","ADD_TO_TEAM","JOIN_TEAM","LEAVE_TEAM","REMOVE_FROM_TEAM","LastUsers","last_users_classCallCheck","last_users_assertThisInitialized","last_users_possibleConstructorReturn","last_users_getPrototypeOf","expand","formattedMessage","markdown","formatOptions","formatMessage","intl","actor","expandedLocale","postType","usernames","firstUser","lastIndex","lastUser","renderMessage","firstUserMessage","otherUsersMessage","numOthers","actorMessage","handleOnClick","intlShape","postTypeMessage","combined_system_message_defineProperty","_postTypeMessage","one","two","many_expanded","one_you","CombinedSystemMessage","allUserIds","allUsernames","getMissingProfilesByIds","getMissingProfilesByUsernames","currentUsername","userProfiles","reduce","acc","currentUserDisplayName","getAllUsernames","loadUserProfiles","_this$props3","actorId","_this$props4","getUsernamesByIds","localeHolder","secondUser","mentionHighlight","singleline","last_users_LastUsers","renderFormattedMessage","_this$props5","messageData","removedUserIds","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","showJoinLeave","combined_system_message_toConsumableArray","return","uniqueRemovedUserIds","arr","getProfilesByIdsAndUsernames","makeGetProfilesByIdsAndUsernames","currentUser","ADVANCED_FILTER_JOIN_LEAVE","PostAddChannelMember","createAt","create_at","addChannelMember","sendAddToChannelEphemeralPost","removePost","at_mention","idx","post_add_channel_member_toConsumableArray","andSeparator","commaSeparator","linkId","linkText","messageId","messageText","channelType","PRIVATE_CHANNEL","OPEN_CHANNEL","generateAtMentions","handleAddChannelMember","getPost","renderUsername","renderFormattedText","renderAddToChannelMessage","addedUsername","systemMessageRenderers","system_message_helpers_defineProperty","_systemMessageRendere","removedUsername","HEADER_CHANGE","headerOptions","channel_mentions","oldHeader","old_header","newHeader","new_header","old","new","DISPLAYNAME_CHANGE","old_displayname","new_displayname","oldDisplayName","newDisplayName","CONVERT_CHANNEL","PURPOSE_CHANGE","oldPurpose","old_purpose","newPurpose","new_purpose","CHANNEL_DELETED","PostMarkdown","renderedSystemMessage","add_channel_member","ChannelStore","getCurrent","isUserCanManageMembers","canManageMembers","isEphemeral","General","addMemberProps","post_add_channel_member","post_id","EPHEMERAL_ADD_TO_CHANNEL","COMBINED_USER_ACTIVITY","_post$props$user_acti","user_activity","combined_system_message","renderSystemMessage","message_source","pluginHooks","o","components","MessageWillFormat","AtMentionSuggestion","AtMentionProvider","at_mention_provider_classCallCheck","at_mention_provider_possibleConstructorReturn","at_mention_provider_getPrototypeOf","captured","XRegExp","exec","prefix","autocompleteUsersInChannel","members","at_mention_provider_objectSpread","MENTION_MEMBERS","nonmembers","out_of_channel","_arr2","_i2","MENTION_NONMEMBERS","specialMentions","startsWith","MENTION_SPECIAL","mentions","ChannelMentionSuggestion","display_name","purpose","ChannelMentionProvider","channel_mention_provider_classCallCheck","channel_mention_provider_possibleConstructorReturn","channel_mention_provider_getPrototypeOf","lastPrefixTrimmed","lastPrefixWithNoResults","lastCompletedWord","resetRequest","SuggestionStore","clearSuggestions","words","wrappedChannelIds","wrappedChannels","getMyChannels","delete_at","nameWords","matched","j","wordMatched","MENTION_CHANNELS","sort","b","sortChannelsByTypeAndDisplayName","addSuggestions","MENTION_MORE_CHANNELS","loading","autocompleteChannels","channels","myMembers","getMyChannelMemberships","wrappedMoreChannels","moreChannels","wrapped","RECEIVED_MORE_CHANNELS","CommandSuggestion","suggestion","hint","CommandProvider","command","getCommandsList","getCurrentTeamId","cmd","auto_complete","s","auto_complete_hint","auto_complete_desc","localeCompare","getSuggestedCommands","EMOJI_CATEGORY_SUGGESTION_BLACKLIST","EmoticonSuggestion","EmoticonProvider","partialName","Emoticons","emoticon","autocompleteCustomEmojis","findAndSuggestEmojis","_step$value","_slicedToArray","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","alias","hasSystemEmoji","aName","bName","aPrefix","PreReleaseFeatures","PRE_RELEASE_FEATURES","Textbox","textbox_classCallCheck","textbox_defineProperty","textbox_assertThisInitialized","textbox_possibleConstructorReturn","textbox_getPrototypeOf","getConnectionErrorCount","connection","handlePostError","characterLimit","errorMessage","limit","wrapper","closest","addClass","removeClass","textbox","getTextbox","checkMessageLength","prevState","preview","suggestionProviders","supportsCommands","addChangeListener","onReceivedError","removeChangeListener","providers","editHeader","hasText","helpTextClass","previewMessageLink","previewLink","MARKDOWN_PREVIEW","togglePreview","visibility","opacity","textboxClassName","emojiEnabled","display","post_markdown","suggestion_box","spellCheck","createMessage","onKeyPress","handleBlur","handleHeightChange","inputComponent","listComponent","SuggestionList","listStyle","suggestionListStyle","renderDividers","popoverMentionKeyClick","Link","rel","KeyCodes","EditPostModal","edit_post_modal_classCallCheck","edit_post_modal_defineProperty","edit_post_modal_assertThisInitialized","edit_post_modal_possibleConstructorReturn","edit_post_modal_getPrototypeOf","editModalBody","showEmojiPicker","editbox","emojiAlias","editText","newMessage","editPostEmoji","postError","edit_post_modal_asyncToGenerator","editingPost","updatedPost","hasAttachment","deletePostModalData","errorClass","ANIMATION_TIMEOUT","handleHide","file_ids","ModalId","ModalIdentifiers","DELETE_POST","dialogType","dialogProps","openModal","addMessageIntoHistory","ctrlSend","ENTER","shiftKey","altKey","ctrlKey","handleEdit","ESCAPE","doRefocus","refocusId","hideEditPostModal","hidePreview","errorBoxClass","postErrorClass","emojiPicker","EnableEmojiPicker","emoji_picker_overlay_EmojiPickerOverlay","getContainer","getEditPostControls","hideEmojiPicker","handleEmojiClick","handleGifClick","EnableGifPicker","toggleEmojiPicker","dialogClassName","onEntered","handleEntered","handleExit","handleExited","keyboard","bsClass","textbox_Textbox","handleEditKeyPress","setEditboxRef","maxPostSize","getEditingPost","MaxPostSize","DEFAULT_CHARACTER_LIMIT","ModalStore","ModalStoreClass","modal_store_classCallCheck","modal_store_defineProperty","modal_store_assertThisInitialized","modal_store_possibleConstructorReturn","modal_store_getPrototypeOf","removeListener","payload","_payload$action","modal_store_objectWithoutProperties","TOGGLE_SHORTCUTS_MODAL","TOGGLE_IMPORT_THEME_MODAL","TOGGLE_INVITE_MEMBER_MODAL","TOGGLE_DELETE_POST_MODAL","TOGGLE_GET_POST_LINK_MODAL","TOGGLE_GET_TEAM_INVITE_LINK_MODAL","TOGGLE_GET_PUBLIC_LINK_MODAL","TOGGLE_QUICK_SWITCH_MODAL","TOGGLE_CHANNEL_PURPOSE_UPDATE_MODAL","TOGGLE_CHANNEL_NAME_UPDATE_MODAL","TOGGLE_LEAVE_PRIVATE_CHANNEL_MODAL","emit","dispatchToken","handleEventPayload","EventEmitter","GetLinkModal","get_link_modal_classCallCheck","get_link_modal_defineProperty","get_link_modal_assertThisInitialized","get_link_modal_possibleConstructorReturn","get_link_modal_getPrototypeOf","copiedLink","setSelectionRange","execCommand","copyLink","queryCommandSupported","data-copy-btn","readOnly","copyLinkConfirm","GetPostLinkModal","get_post_link_modal_classCallCheck","get_post_link_modal_possibleConstructorReturn","get_post_link_modal_getPrototypeOf","handleToggle","get_post_link_modal_assertThisInitialized","hide","addModalListener","removeModalListener","postUrl","currentTeamUrl","get_link_modal_GetLinkModal","currentTeam","GetTeamInviteLinkModal","get_team_invite_link_modal_classCallCheck","get_team_invite_link_modal_defineProperty","get_team_invite_link_modal_assertThisInitialized","get_team_invite_link_modal_possibleConstructorReturn","get_team_invite_link_modal_getPrototypeOf","inviteUrl","invite_id","EnableUserCreation","GetPublicLinkModal","get_public_link_modal_classCallCheck","get_public_link_modal_defineProperty","get_public_link_modal_assertThisInitialized","get_public_link_modal_possibleConstructorReturn","get_public_link_modal_getPrototypeOf","fileId","getFilePublicLink","Selectors","holders","defineMessages","emailError","firstname","lastname","modalTitle","modalMessage","modalButton","InviteMemberModal","invite_member_modal_classCallCheck","invite_member_modal_defineProperty","invite_member_modal_assertThisInitialized","invite_member_modal_possibleConstructorReturn","invite_member_modal_getPrototypeOf","TeamStore","teamType","sendEmailNotifications","inviteIds","invites","emailErrors","firstNameErrors","lastNameErrors","valid","invite","firstName","lastName","isEmail","isSendingEmails","inviteMembers","detailed_error","requireConfirm","notEmpty","showConfirmModal","clearFields","idCount","splice","utils","teamChange","inviteSections","firstNameError","lastNameError","removeButton","removeInviteFields","emailClass","nameFields","firstNameClass","lastNameClass","maxLength","enableUserCreation","onKeyUp","displayNameKeyUp","sendButton","defaultChannelName","getByName","DEFAULT_CHANNEL","addInviteFields","sendButtonLabel","teamInviteLink","showGetTeamInviteLinkModal","backdrop","confirm_modal","confirmButtonText","onConfirm","onCancel","hideConfirmModal","injectIntl","SendEmailNotifications","getLastViewedChannelName","localStorageStore","getPreviousChannelName","getPenultimateViewedChannelName","getPenultimateChannelName","checkAndSetMobileView","UPDATE_MOBILE_VIEW","isMobile","goToLastViewedChannel","channel_asyncToGenerator","lastViewedChannel","getChannelByName","switchToChannel","switchToChannelById","_x4","teamUrl","getCurrentRelativeTeamUrl","fake","getUserByUsername","openDirectChannelToUserId","_x5","_x6","_ref4","_callee4","now","prefDirect","prefOpenTime","_context4","getDirectChannelName","createDirectChannel","CATEGORY_DIRECT_CHANNEL_SHOW","CATEGORY_CHANNEL_OPEN_TIME","PreferenceTypes","RECEIVED_PREFERENCES","batchActions","savePreferences","channel_objectSpread","user_id","_x7","_x8","leaveChannel","_ref5","_callee5","myPreferences","_ref6","_context5","getMyPreferences","isFavoriteChannel","unfavoriteChannel","leaveChannelRedux","_x9","_x10","LeavePrivateChannelModal","leave_private_channel_modal_classCallCheck","leave_private_channel_modal_defineProperty","leave_private_channel_modal_assertThisInitialized","leave_private_channel_modal_possibleConstructorReturn","leave_private_channel_modal_getPrototypeOf","button","RemovedFromChannelModal","removed_from_channel_modal_classCallCheck","removed_from_channel_modal_possibleConstructorReturn","removed_from_channel_modal_getPrototypeOf","handleShow","removed_from_channel_modal_assertThisInitialized","handleClose","remover","newState","getItem","removeItem","off","tabIndex","aria-hidden","data-dismiss","ResetStatusModal","reset_status_modal_classCallCheck","reset_status_modal_defineProperty","reset_status_modal_assertThisInitialized","reset_status_modal_possibleConstructorReturn","reset_status_modal_getPrototypeOf","checked","hideModal","newStatus","reset_status_modal_objectSpread","currentUserStatus","setStatus","pref","CATEGORY_AUTO_RESET_MANUAL_STATUS","UserStatuses","OUT_OF_OFFICE","toTitleCase","autoResetStatus","statusIsManual","manual","autoResetPrefNotSet","autoResetPref","userStatus","userStatusId","manualStatusTitle","manualStatusMessage","renderModalMessage","manualStatusButton","manualStatusId","manualStatusCancel","manualStatusCheckbox","cancelButtonText","showCheckbox","checkboxText","allShortcuts","mainHeader","default","mac","navHeader","navPrev","navNext","navUnreadPrev","navUnreadNext","navSwitcher","navDMMenu","navSettings","navMentions","navFocusCenter","msgHeader","msgInputHeader","msgEdit","msgReply","msgReprintPrev","msgReprintNext","msgCompHeader","msgCompUsername","msgCompChannel","msgCompEmoji","filesHeader","filesUpload","browserHeader","browserChannelPrev","browserChannelNext","browserFontIncrease","browserFontDecrease","browserInputHeader","browserHighlightPrev","browserHighlightNext","browserNewline","info","ShortcutsModal","shortcuts_modal_classCallCheck","shortcuts_modal_defineProperty","shortcuts_modal_assertThisInitialized","shortcuts_modal_possibleConstructorReturn","shortcuts_modal_getPrototypeOf","isMac","shortcuts","getShortcuts","renderShortcut","shortcut","PostStore","PostStoreClass","post_store_classCallCheck","post_store_possibleConstructorReturn","post_store_getPrototypeOf","selectedPostId","currentFocusedPostId","posts","currentChannelId","postVisibility","rootId","getCurrentId","postIds","postsInChannel","lastPost","from_webhook","POST_DELETED","SYSTEM_MESSAGE_PREFIX","originalDraft","draft","uploadsInProgress","fileInfos","setGlobalItem","getDraft","normalizeDraft","getGlobalItem","parentPostId","rootPost","RECEIVED_FOCUSED_POST","storeFocusedPostId","emitPostFocused","CLICK_CHANNEL","clearFocusedPost","RECEIVED_EDIT_POST","post_store_objectSpread","EDIT_POST","RECEIVED_POST_SELECTED","PostTypes","SELECT_POST","RECEIVED_POST_PINNED","RECEIVED_POST_UNPINNED","emitPostPinnedChange","FileUploadOverlay","overlayClass","overlayType","fileOverlayImage","overlayLogoImage","DelayedAction","delayed_action_classCallCheck","timer","fire","timeout","executeCommand","command_asyncToGenerator","cmdLength","hasGotoLocation","getCurrentChannel","DM_CHANNEL","GM_CHANNEL","getUserIdFromChannelName","CATEGORY_GROUP_CHANNEL_SHOW","USER_SETTINGS","UserSettingsModal","t1","goto_location","isUrlSafe","open","clearCommentDraftUploads","actionOnGlobalItemsWithPrefix","COMMENT_DRAFT","create_comment_objectSpread","updateCommentDraft","makeOnMoveHistoryIndex","direction","getMessageInHistory","makeGetMessageInHistoryItem","MESSAGE_TYPES","COMMENT","getPostDraft","moveHistoryIndexBack","moveHistoryIndexForward","nextMessageInHistory","submitPost","time","pending_post_id","submitReaction","emojiName","addReaction","removeReaction","submitCommand","create_comment_asyncToGenerator","team_id","makeOnEditLatestPost","getCurrentUsersLatestPost","getPostById","isPostPendingOrFailed","makeGetCurrentUsersLatestPost","getCommentCount","makeGetCommentCountForPost","AttachmentIcon","FilenameOverlay","canDownload","compactDisplay","fileInfo","handleImageClick","iconClass","trimmedFilename","trimFilename","OverlayTrigger","Tooltip","attachment_icon_AttachmentIcon","getFileDownloadUrl","download","FilePreview","scrollIntoView","previews","FileTypes","SVG","getFileUrl","IMAGE","imageClassName","THUMBNAIL_WIDTH","THUMBNAIL_HEIGHT","thumbnailUrl","getFileThumbnailUrl","has_preview_image","backgroundSize","filename_overlay_FilenameOverlay","toUpperCase","size","handleRemove","clientId","data-client-id","uploadFile","UPLOAD_FILES_REQUEST","request","getFilesRoute","set","getOptions","headers","field","handleFileUploadEnd","res","forceLogoutIfNecessary","failure","UPLOAD_FILES_FAILURE","clientIds","getLogErrorAction","file_infos","file_actions_objectSpread","client_ids","RECEIVED_UPLOAD_FILES","UPLOAD_FILES_SUCCESS","limited","filesAbove","fileAbove","zeroBytesFiles","zeroBytesFile","pasted","OVERLAY_TIMEOUT","FileUpload","file_upload_classCallCheck","file_upload_defineProperty","file_upload_assertThisInitialized","file_upload_possibleConstructorReturn","file_upload_getPrototypeOf","currentRootId","onFileUpload","requests","onUploadError","files","uploadFiles","sortedFiles","from","locale","numeric","willUploadHooks","pluginFilesWillUploadHooks","pluginUploadFiles","uploadsRemaining","MAX_UPLOAD_FILES","fileCount","numUploads","tooLargeFiles","zeroFiles","_loop","end","_this$props$actions$h","fileUploadFail","fileUploadSuccess","file_upload_objectSpread","onUploadStart","tooLargeFilenames","filenames","zeroFilenames","checkPluginHooksAndUploadFiles","clearFileInput","onFileUploadChange","canUploadFiles","dataTransfer","containerSelector","overlaySelector","self","dragTimeout","hasClass","dragsterActions","dragsterEvent","isFileTransfer","cancel","fireAfter","handleDrop","clipboardData","getTarget","contains","kind","getAsFile","hour","getHours","minute","getMinutes","ext","lastIndexOf","getFullYear","getMonth","getDate","File","cmdOrCtrlPressed","isKeyPressed","U","postTextbox","activeElement","commentTextbox","fileInput","abort","menuOpen","handleMaxUploadReached","registerDragEvents","pasteUpload","keyUpload","multiple","isMobileApp","isIosChrome","bodyAction","pluginFileUploadMethods","handleLocalFileUploaded","Dropdown","dropup","pullRight","onToggle","toggleMenu","bsRole","Menu","MaxFileSize","getCurrentChannelId","getCurrentLocale","FileUploadMethod","FilesWillUploadHook","withRef","MsgTyping","numUsers","typingUsers","msg_typing_toConsumableArray","last","pop","getTypingText","getUsersTypingByChannelAndPost","makeGetUsersTypingByChannelAndPost","PostDeletedModal","CreateComment","create_comment_classCallCheck","create_comment_create_comment_defineProperty","create_comment_assertThisInitialized","create_comment_possibleConstructorReturn","create_comment_getPrototypeOf","rhsExpanded","getElementsByClassName","shouldFocusMainTextbox","focusTextbox","hideNotifyAllModal","doSubmit","modifiedDraft","create_comment_create_comment_objectSpread","onUpdateCommentDraft","draftsForPost","create_comment_create_comment_asyncToGenerator","enableConfirmNotificationsToChannel","channelMembersCount","NOTIFY_ALL_MEMBERS","containsAtChannel","showNotifyAllModal","enableAddButton","fasterThanHumanWillClick","forceFocus","rootDeleted","showPostDeletedModal","lastBlurAt","codeBlockOnCtrlEnter","_postMessageOnKeyPres","postMessageOnKeyPress","allowSending","withClosedCodeBlock","persist","updatedDraft","$el","parent","scrollToBottom","metaKey","commentMsgKeyPress","UP","onEditLatestPost","onMoveHistoryIndexBack","DOWN","onMoveHistoryIndexForward","create_comment_toConsumableArray","newFileInfos","sortFileInfos","updateCommentDraftWithRootId","handleUploadError","findIndex","fileUpload","getWrappedInstance","cancelUpload","handleFileUploadChange","_this$state$draft","createCommentControls","keepFocus","resetCreatePostRequest","onResetHistoryIndex","focusTextboxIfNecessary","createPostErrorId","messageInHistory","readOnlyChannel","notifyAllTitle","notifyAllConfirm","notifyAllMessage","totalMembers","file_preview_FilePreview","removePreview","uploadsInProgressText","addButtonClass","file_upload","getFileCount","getFileUploadTarget","handleUploadStart","handleFileUploadComplete","enableEmojiPicker","getSidebarBody","getCreateCommentControls","initialText","msg_typing","post_deleted_modal_PostDeletedModal","hidePostDeletedModal","handleNotifyAllConfirmation","latestPostId","createPost","getAllChannelStats","member_count","EnableConfirmNotificationsToChannel","isCurrentUserSystemAdmin","ExperimentalTownSquareIsReadOnly","getIsRhsExpanded","resetHistoryIndex","makeOnUpdateCommentDraft","isReaction","getCustomEmojisByName","EmojiMap","makeOnSubmit","DateSeparator","weekday","month","day","year","instanceOf","FloatingTimestamp","dateString","isScrolling","isRhsPost","DotMenuItem","handleMenuItemActivated","menuItemText","oneOfType","DotMenu","dot_menu_classCallCheck","dot_menu_defineProperty","dot_menu_assertThisInitialized","dot_menu_possibleConstructorReturn","dot_menu_getPrototypeOf","handleDropdownOpened","position","dropdownToggle","dropdown","canEdit","isFlagged","unflagPost","flagPost","showGetPostLinkModal","is_pinned","unpinPost","pinPost","setEditingPost","editDisableAction","handleEditDisable","canDelete","dotMenuId","isSystemMessage","menuItems","dot_menu_item_DotMenuItem","handleFlagMenuItemActivated","handleCommentClick","handlePermalinkMenuItemActivated","isReadOnly","handlePinMenuItemActivated","handleDeleteMenuItemActivated","handleEditMenuItemActivated","pluginItems","pluginMenuItems","tooltip","data-toggle","aria-expanded","pluggableName","PostDropdownMenu","DownloadIcon","FileThumbnail","getFileType","isGIFImage","getIconClassName","FileAttachment","file_attachment_classCallCheck","file_attachment_defineProperty","file_attachment_assertThisInitialized","file_attachment_possibleConstructorReturn","file_attachment_getPrototypeOf","loadImage","handleImageLoaded","loaded","loadFiles","fileThumbnail","fileDetail","filenameOverlay","onAttachmentClick","file_thumbnail_FileThumbnail","canDownloadFiles","download_icon_DownloadIcon","LoadingImagePreview","progress","containerClass","progressView","AudioVideoPreview","audio_video_preview_classCallCheck","audio_video_preview_possibleConstructorReturn","audio_video_preview_getPrototypeOf","handleFileInfoChanged","audio_video_preview_assertThisInitialized","handleLoadError","canPlay","source","fileUrl","video","canPlayType","mime_type","pause","currentTime","file_info_preview","WEB_VIDEO_WIDTH","WEB_VIDEO_HEIGHT","MOBILE_VIDEO_WIDTH","MOBILE_VIDEO_HEIGHT","data-setup","controls","CodePreview","code_preview_classCallCheck","code_preview_possibleConstructorReturn","code_preview_getPrototypeOf","updateStateFromProps","code_preview_assertThisInitialized","handleReceivedError","handleReceivedCode","success","usedLanguage","SyntaxHighlighting","CODE_PREVIEW_MAX_FILE_SIZE","ajax","dataType","nodeName","XMLSerializer","serializeToString","lines","match","strlines","highlighted","dangerouslySetInnerHTML","__html","ImagePreview","hasPreviewImage","previewUrl","getFilePreviewUrl","PopoverBar","publicLink","enablePublicLink","showPublicLink","data-title","onGetPublicLink","footerClass","downloadLinkText","downloadLinks","isExternalFile","isDesktopApp","fileURL","fileIndex","totalFiles","ViewImageModal","view_image_classCallCheck","view_image_defineProperty","view_image_assertThisInitialized","view_image_possibleConstructorReturn","view_image_getPrototypeOf","imageIndex","showImage","RIGHT","handleNext","LEFT","handlePrev","handleKeyPress","startIndex","imageHeight","has_image_preview","completedPercentage","handleImageProgress","view_image_objectSpread","onModalDismissed","showFooter","onModalShown","onModalHidden","fileDownloadUrl","fileType","VIDEO","AUDIO","audio_video_preview_AudioVideoPreview","PDF","async_load","loadPDFPreview","supports","code_preview_CodePreview","floor","leftArrow","rightArrow","closeButtonClass","onMouseEnter","onMouseEnterImage","onMouseLeave","onMouseLeaveImage","popover_bar","handleGetPublicLink","EnablePublicLink","ViewImage","PREVIEW_IMAGE_MAX_WIDTH","PREVIEW_IMAGE_MAX_HEIGHT","SingleImageView","single_image_view_classCallCheck","single_image_view_defineProperty","single_image_view_assertThisInitialized","single_image_view_possibleConstructorReturn","single_image_view_getPrototypeOf","setViewPortWidth","viewPort","rect","viewPortWidth","previewURL","loaderImage","Image","imageLoaded","showPreviewModal","previewWidth","previewHeight","origRatio","heightRatio","toggleEmbedVisibility","handleResize","postListScrollChange","isRhsOpen","_this$computeImageDim","computeImageDimensions","minPreviewClass","viewImageModal","loadingImagePreview","toggle","data-expanded","isEmbedVisible","fileHeader","fadeInClass","svgClass","imageStyle","imageLoadedStyle","imageContainerStyle","view_image","setImageLoadedRef","setViewPortRef","getIsRhsOpen","FileAttachmentList","file_attachment_list_classCallCheck","file_attachment_list_defineProperty","file_attachment_list_assertThisInitialized","file_attachment_list_possibleConstructorReturn","file_attachment_list_getPrototypeOf","startImgIndex","getMissingFilesForPost","indexClicked","single_image_view","minHeightPlaceholder","sortedFileInfos","postFiles","file_attachment","hidePreviewModal","minHeight","selectFilesForPost","makeGetFilesForPost","PostProfilePicture","fromAutoResponder","fromWebhook","use_user_icon","enablePostIconOverride","override_icon_url","DEFAULT_WEBHOOK_LOGO","mattermost_logo","getProfilePicSrcForPost","getStatus","isBusy","EnablePostIconOverride","FailedPostOptions","failed_post_options_objectSpread","retryPost","cancelPost","post_view_failed_post_options_objectSpread","FlagIcon","FlagIconFilled","PostFlagIcon","flagIcon","flagVisible","flagIconId","idPrefix","flag_icon_filled_FlagIconFilled","flag_icon_FlagIcon","handlePress","PostTime","post_time_classCallCheck","post_time_defineProperty","post_time_assertThisInitialized","post_time_possibleConstructorReturn","post_time_getPrototypeOf","isMobileView","currentTeamDisplayName","localDateTime","local_date_time","isPermalink","Reaction","emitEmojiPosted","ids","reactions","reaction","emojiImageUrl","names","reactionVerb","currentUserReacted","otherUsersCount","profiles","otherUsers","clickTooltip","canRemoveReaction","handleRemoveReaction","canAddReaction","handleAddReaction","shouldUpdatePosition","loadMissingProfiles","reactionCount","checkReactionAction","haveIChannelPermission","IsLicensed","roles","getProfilesForReactions","makeGetProfilesForReactions","getLicense","me","channelIsArchived","Permissions","REMOVE_REACTION","ADD_REACTION","ChannelPermissionGate","hasPermission","invert","permissions","ReactionListView","reaction_list_classCallCheck","reaction_list_defineProperty","reaction_list_assertThisInitialized","reaction_list_possibleConstructorReturn","reaction_list_getPrototypeOf","addReactionButton","has_reactions","getReactionsForPost","reactionsByName","Map","emojiNames","emoji_name","post_view_reaction","innerWidth","addReactionTooltip","channel_permission_gate","addReactionClassName","makeGetReactionsForPost","Actions","ReactionList","ytRegex","YoutubeVideo","youtube_video_classCallCheck","youtube_video_possibleConstructorReturn","youtube_video_getPrototypeOf","youtube_video_assertThisInitialized","handleReceivedMetadata","handleMetadataError","loadWithoutKey","play","failed","playing","videoId","handleYoutubeTime","hours","minutes","seconds","ticks","googleDeveloperKey","googleKey","query","part","getYoutubeVideoInfo","onLinkLoaded","thumb","snippet","metadata","liveBroadcastContent","receivedYoutubeData","frameBorder","allowFullScreen","GoogleDeveloperKey","ShowMore","isCollapsed","isOverflow","textContainer","checkTextOverflow","isRHSExpanded","isRHSOpen","checkOverflow","collapsedMaxHeightStyle","isAttachmentText","collapseGradientClass","collapseShowMoreClass","attachmentTextOverflow","showIcon","showText","toggleCollapse","ActionButton","handleAction","data-action-id","MenuActionSuggestion","MenuActionProvider","menu_action_provider_classCallCheck","menu_action_provider_possibleConstructorReturn","menu_action_provider_getPrototypeOf","displayAllOptions","filterOptions","option","filteredOptions","ChannelSuggestion","ChannelProvider","ActionMenu","action_menu_classCallCheck","action_menu_defineProperty","action_menu_assertThisInitialized","action_menu_possibleConstructorReturn","action_menu_getPrototypeOf","previousInput","data_source","suggestionRef","GenericUserProvider","GenericChannelProvider","submitted","setSuggestionRef","onItemSelected","handleSelected","completeOnTab","renderNoResults","openOnFocus","openWhenEmpty","replaceAllInputOnSelect","doPostAction","menuActions","MessageAttachment","message_attachment_classCallCheck","message_attachment_defineProperty","message_attachment_assertThisInitialized","message_attachment_possibleConstructorReturn","message_attachment_getPrototypeOf","attachment","action_menu","action_button_ActionButton","currentTarget","getAttribute","fields","fieldTables","headerCols","bodyCols","rowPos","lastWasLong","nrTables","short","onHeightReceived","handleHeightReceived","preText","preTextClass","attachmentText","author","author_name","author_icon","author_link","title_link","show_more","image_url","thumb_url","useBorderStyle","getFieldsTable","getActionView","color","borderLeftColor","footer","clear","PostAttachmentList","attachments","message_attachment_MessageAttachment","getDistanceBW2Points","point1","point2","xAttr","yAttr","sqrt","pow","PostAttachmentOpenGraph","post_attachment_opengraph_classCallCheck","post_attachment_opengraph_defineProperty","post_attachment_opengraph_assertThisInitialized","post_attachment_opengraph_possibleConstructorReturn","post_attachment_opengraph_getPrototypeOf","smallImageContainer","smallImageElement","largeImageMinWidth","imageDimentions","textMaxLength","textEllipsis","largeImageMinRatio","smallImageContainerLeftPadding","imageRatio","IMAGE_LOADED","LOADING","YES","ERROR","fetchData","onImageLoad","onImageError","handleRemovePreview","isRemovePreview","hasLargeImage","openGraphData","getOpenGraphMetadata","images","bestImage","pivotPoint","points","nearestPoint","point","CommonUtils","secure_url","naturalWidth","naturalHeight","imageUrl","imageElement","getSmallImageContainer","renderingForLargeImage","wrapInSmallImageContainer","getSmallImageElement","ellipsis","REMOVE_LINK_PREVIEW","patchedPost","updatePost","removePreviewButton","getBestImageUrl","truncateText","imageToggleAnchorTag","imageTag","site_name","useSafeUrl","getOpenGraphMetadataForUrl","PostImageEmbed","post_image_classCallCheck","post_image_defineProperty","post_image_assertThisInitialized","post_image_possibleConstructorReturn","post_image_getPrototypeOf","handleLoadComplete","errored","loadImg","onLinkLoadError","onImageClick","PostImage","PostBodyAdditionalContent","post_body_additional_content_classCallCheck","post_body_additional_content_defineProperty","post_body_additional_content_assertThisInitialized","post_body_additional_content_possibleConstructorReturn","post_body_additional_content_getPrototypeOf","getSlackAttachment","generateToggleableEmbed","generateStaticEmbed","isLinkToggleable","handleLinkLoadError","handleLinkLoaded","linkLoadError","linkLoaded","loadShortenedImageLink","preCheckImageLink","mounted","isLinkImage","isYoutubeLink","enableLinkPreviews","getRedirectLocation","message_attachment_list_PostAttachmentList","linkWithoutQuery","IMAGE_TYPES","imageType","endsWith","youtube_video","post_image","previewEnabled","post_attachment_opengraph","captureExt","prependToggle","contents","imagePreview","renderImagePreview","staticEmbed","EnableLinkPreviews","PostMessageView","post_message_view_classCallCheck","post_message_view_defineProperty","post_message_view_assertThisInitialized","post_message_view_possibleConstructorReturn","post_message_view_getPrototypeOf","collapse","hasOverflow","pluginPostTypes","lastPostCount","renderDeletedPost","PluginComponent","visibleMessage","renderEditedIndicator","postTypes","MessageWithAdditionalContent","previewCollapsed","hasPlugin","messageWrapper","post_message_view","post_body_additional_content","UserProfile","user_profile_classCallCheck","user_profile_possibleConstructorReturn","user_profile_getPrototypeOf","hideProfilePopover","user_profile_assertThisInitialized","overwriteName","overwriteImage","disablePopover","displayNameType","profileImg","RhsComment","rhs_comment_classCallCheck","rhs_comment_defineProperty","rhs_comment_assertThisInitialized","rhs_comment_possibleConstructorReturn","rhs_comment_getPrototypeOf","post_time_PostTime","dropdownOpened","isConsecutivePost","isOpened","dotMenu","hover","botIndicator","profilePicture","isPostEphemeral","failedPostOptions","userProfile","user_profile_UserProfile","post_profile_picture","override_username","enablePostUsernameOverride","SYSTEM_MESSAGE_PROFILE_IMAGE","postClass","failed_post_options","react","pinnedBadge","fileAttachment","file_attachment_list","getDotMenuRef","reactEmojiClick","RHS_SPACE_REQUIRED_ABOVE","RHS_SPACE_REQUIRED_BELOW","createRemovePostButton","dot_menu","post_flag_icon","getClassName","setHover","unsetHover","renderPostTime","reaction_list","EnablePostUsernameOverride","isChannelReadOnlyById","previousPost","previousPostId","consecutivePost","postFromWebhook","prevPostFromWebhook","POST_COLLAPSE_TIMEOUT","RhsHeaderPost","previousRhsState","RHSStates","SEARCH","showSearchResults","MENTION","showMentions","FLAG","showFlaggedPosts","PIN","showPinnedPosts","back","backToResultsTooltip","closeSidebarTooltip","expandSidebarTooltip","shrinkSidebarTooltip","handleBack","toggleRhsExpanded","closeRightHandSide","RhsRootPost","rhs_root_post_classCallCheck","rhs_root_post_defineProperty","rhs_root_post_assertThisInitialized","rhs_root_post_possibleConstructorReturn","rhs_root_post_getPrototypeOf","FAKE_PARENT_DELETED","ReduxPostUtils","testStateObj","dotMenuContainer","postFlagIcon","renderView","renderThumbHorizontal","renderThumbVertical","RhsThread","rhs_thread_classCallCheck","rhs_thread_defineProperty","rhs_thread_assertThisInitialized","rhs_thread_possibleConstructorReturn","rhs_thread_getPrototypeOf","windowWidth","windowHeight","PreferenceStore","MESSAGE_DISPLAY","MESSAGE_DISPLAY_DEFAULT","MESSAGE_DISPLAY_COMPACT","flaggedPosts","getCategory","CATEGORY_FLAGGED_POST","statuses","getStatuses","openTime","postsArray","cpost","getProfiles","childNodes","rhspostlist","topRhsPostCreateAt","updateFloatingTimestamp","scrollStopAction","SCROLL_DELAY","sidebarbody","handleScrollStop","getTime","previewsCollapsed","COLLAPSE_DISPLAY","onPreferenceChange","onUserChange","addStatusesChangeListener","onStatusChange","removeStatusesChangeListener","prevPostsArray","curPostsArray","profile","filterPosts","isRootFlagged","rootStatus","createComment","rootPostDay","previousPostDay","commentsLists","postsLength","comPost","currentPostDay","toDateString","date_separator_DateSeparator","keyPrefix","reverseCount","rhs_comment","isFakeDeletedPost","create_comment","teammate","floating_timestamp_FloatingTimestamp","rhs_header_post","react_custom_scrollbars_lib_default","autoHide","autoHideTimeout","autoHideDuration","rhs_root_post","getPostsForThread","makeGetPostsForThread","getSelectedPost","COLLAPSE_DISPLAY_DEFAULT","LINK_PREVIEW_DISPLAY","LINK_PREVIEW_DISPLAY_DEFAULT","itemToName","SearchChannelSuggestion","SearchChannelProvider","channelPrefix","autocompleteChannelsForSearch","channelNames","SearchSuggestionList","popover","selection","renderChannelDivider","onCompleteWord","Popover","SuggestionDate","suggestion_date_classCallCheck","suggestion_date_possibleConstructorReturn","suggestion_date_getPrototypeOf","getStateFromStores","suggestion_date_assertThisInitialized","handleSuggestionsChanged","suggestions","getSuggestions","addSuggestionsChangedListener","removeSuggestionsChangedListener","itemComponent","SearchUserSuggestion","SearchUserProvider","usernamePrefix","autocompleteUsersInTeam","SearchDateSuggestion","search_date_provider_classCallCheck","search_date_provider_possibleConstructorReturn","search_date_provider_getPrototypeOf","handleDayClick","search_date_provider_assertThisInitialized","dayString","DayPicker_default","onDayClick","showOutsideDays","SearchDateProvider","datePrefix","dates","label","HeaderIconWrapper","iconComponent","buttonClass","buttonId","toolTips","class","messageID","pinnedPosts","recentMentions","getTooltip","tooltipKey","SearchHint","withTitle","MentionsIcon","SearchIcon","r","strokeLinecap","search_bar_classCallCheck","search_bar_defineProperty","search_bar_assertThisInitialized","search_bar_possibleConstructorReturn","search_bar_getPrototypeOf","updateSearchTerms","focused","search_bar_asyncToGenerator","handleSearchOnSuccess","searchTerms","isMentionSearch","isFlaggedPosts","querySelector","classList","remove","helpClass","search_hint_SearchHint","mentionBtn","flagBtn","isSearchingTerm","showMentionFlagBtns","mentionBtnClass","mentions_icon_MentionsIcon","searchMentions","flagBtnClass","getFlagged","clearClass","searchFormClass","searchClearTooltip","searchForm","search_icon_SearchIcon","getSearch","handleUserFocus","handleUserBlur","dateComponent","isFocus","delayInputUpdate","handleClear","renderHintPopover","rhsState","getRhsState","getIsSearchingTerm","getSearchTerms","SearchResultsHeader","isPinnedPosts","channelDisplayName","ReplyIcon","y","CommentIcon","commentCountSpan","iconStyle","searchStyle","selectorId","extraClass","reply_icon_ReplyIcon","ArchiveIcon","SearchResultsItem","search_results_item_classCallCheck","search_results_item_defineProperty","search_results_item_assertThisInitialized","search_results_item_possibleConstructorReturn","search_results_item_getPrototypeOf","selectPost","setRhsExpanded","currentTeamName","overrideUsername","disableProfilePopover","profilePic","profilePicContainer","flagContent","rhsControls","commentCountForPost","comment_icon_CommentIcon","handleFocusRHSClick","handleJumpClick","searchTerm","searchMatches","archive_icon_ArchiveIcon","getCommentCountForPost","selectPostFromRightHandSideSearch","DataRetentionHint","days","dataRetentionMessageRetentionDays","FlagPostSearchHint","dataRetentionEnableMessageDeletion","data_retention_hint_DataRetentionHint","PinPostSearchHint","GET_MORE_BUFFER","SearchResults","search_results_classCallCheck","search_results_defineProperty","search_results_assertThisInitialized","search_results_possibleConstructorReturn","search_results_getPrototypeOf","scrollbars","isSearchGettingMore","getScrollHeight","getScrollTop","getClientHeight","loadMorePosts","getMorePostsForSearch","results","noResults","ctls","isSearchingFlaggedPost","isSearchingPinnedPost","flag_post_search_hint_FlagPostSearchHint","pin_post_search_hint_PinPostSearchHint","no_result_search_hint_PinPostSearchHint","sortedResults","search_results_toConsumableArray","postA","postB","isFlaggedByPostId","search_results_item","search_results_header","isLoading","PreferenceSelectors","DataRetentionEnableMessageDeletion","DataRetentionMessageRetentionDays","viewArchivedChannels","ExperimentalViewArchivedChannels","newResults","getSearchResults","newFlaggedPosts","getSearchMatches","getUsers","getUserStatuses","getSearchResultsTerms","getIsSearchingFlaggedPost","getIsSearchingPinnedPost","getIsSearchGettingMore","SidebarRight","wasOpen","searchVisible","postRightVisible","isOpen","expandedClass","isExpanded","search_bar","search_results","toggleSize","shrink","onShrink","rhs_thread","classNames","move--left","getPinnedPosts","getFlaggedPosts","getSelectedChannelId","getFocusedPostId","getSelectedPostId","getPreviousRhsState","USERS_PER_PAGE","AddUsersToTeam","add_users_to_team_classCallCheck","add_users_to_team_defineProperty","add_users_to_team_assertThisInitialized","add_users_to_team_possibleConstructorReturn","add_users_to_team_getPrototypeOf","setModalSearchTerm","addError","saving","add_users_to_team_asyncToGenerator","v","addUsersToTeam","currentTeamId","handleResponse","loadingState","loadingUsers","prevPage","setUsersLoadingState","getProfilesNotInTeam","searchTimeoutId","searchProfiles","not_in_team_id","loadStatusesForProfilesList","SEARCH_TIMEOUT_MILLISECONDS","onAdd","rowSelected","displayEntireNameForUser","numRemainingText","num","buttonSubmitText","multiselect","optionRenderer","renderOption","valueKey","valueRenderer","renderValue","perPage","handlePageChange","handleAdd","addValue","maxValues","modalSearch","searchProfilesNotInCurrentTeam","getProfilesNotInCurrentTeam","LeaveTeamIcon","clipRule","strokeLinejoin","strokeMiterlimit","SearchableUserListContainer","searchable_user_list_container_classCallCheck","searchable_user_list_container_possibleConstructorReturn","searchable_user_list_container_getPrototypeOf","handleTermChange","searchable_user_list_container_assertThisInitialized","searchable_user_list","TeamMembersDropdown","team_members_dropdown_classCallCheck","team_members_dropdown_defineProperty","team_members_dropdown_assertThisInitialized","team_members_dropdown_possibleConstructorReturn","team_members_dropdown_getPrototypeOf","team_members_dropdown_asyncToGenerator","handleDemote","updateTeamMemberSchemeRoles","teamMember","getUser","loadMyTeamMembers","removeUserFromTeam","getTeamStats","updateActive","getChannelStats","newRole","showDemoteModal","currentRoles","scheme_admin","showMakeMember","showMakeAdmin","makeAdmin","handleMakeAdmin","makeMember","handleMakeMember","removeFromTeam","handleRemoveFromTeam","makeDemoteModal","vallues","handleDemoteSubmit","handleDemoteCancel","MemberListTeam","member_list_team_classCallCheck","member_list_team_defineProperty","member_list_team_assertThisInitialized","member_list_team_possibleConstructorReturn","member_list_team_getPrototypeOf","loadProfilesAndTeamMembers","PROFILE_CHUNK_SIZE","loadComplete","member_list_team_asyncToGenerator","loadTeamMembersForProfilesList","teamMembersDropdown","canManageTeamMembers","teamMembers","searchable_user_list_container_SearchableUserListContainer","totalTeamMembers","haveITeamPermission","MANAGE_TEAM_ROLES","searchProfilesInCurrentTeam","getProfilesInCurrentTeam","stats","getCurrentTeamStats","active_member_count","getMembersInCurrentTeam","teams","TeamMembersModal","team_members_modal_classCallCheck","team_members_modal_defineProperty","team_members_modal_assertThisInitialized","team_members_modal_possibleConstructorReturn","team_members_modal_getPrototypeOf","onLoad","teamDisplayName","member_list_team","ACCEPTED_TEAM_IMAGE_TYPES","GeneralTab","team_general_tab_classCallCheck","team_general_tab_defineProperty","team_general_tab_assertThisInitialized","team_general_tab_possibleConstructorReturn","team_general_tab_getPrototypeOf","team_general_tab_asyncToGenerator","team_general_tab_objectSpread","allowed_domains","patchTeam","allow_open_invite","MIN_TEAMNAME_LENGTH","MAX_TEAMNAME_LENGTH","_ref8","_ref10","_ref11","_callee6","_ref12","_context6","teamIconFile","loadingIcon","setTeamIcon","_ref13","_callee7","_ref14","_context7","removeTeamIcon","section","handleNameSubmit","handleAllowedDomainsSubmit","handleInviteIdSubmit","handleOpenInviteSubmit","handleDescriptionSubmit","handleTeamIconSubmit","updateName","updateDescription","updateTeamIcon","updateAllowedDomains","updateInviteId","handleOpenInviteRadio","handleGenerateInviteId","setupInitialState","perfectScrollbar","newId","random","openInvite","openInviteSection","inviteSection","nameSection","descriptionSection","teamIconSection","minMessage","allowedDomainsSection","activeSection","inputs","defaultChecked","setting_item_max","submit","handleUpdateSection","describe","setting_item_min","canInviteTeamMembers","getTeamInviteLink","teamNameLabel","nameExtraInfo","teamDescriptionLabel","MAX_TEAMDESCRIPTION_LENGTH","descriptionExtraInfo","describemsg","setting_picture","handleTeamIconRemove","last_team_icon_update","allowedDomainsInfo","closeModal","collapseModal","INVITE_USER","TeamGeneralTab","SettingsUpload","setting_upload_classCallCheck","setting_upload_possibleConstructorReturn","setting_upload_getPrototypeOf","doFileSelect","setting_upload_assertThisInitialized","val","inputnode","uploadinput","fileNameText","submitButtonClass","fileTypesAccepted","importSlack","TeamImportTab","team_import_tab_classCallCheck","team_import_tab_possibleConstructorReturn","team_import_tab_getPrototypeOf","onImportFailure","team_import_tab_assertThisInitialized","onImportSuccess","doImportSlack","encodeURIComponent","atob","messageSection","uploadDocsLink","uploadExportInstructions","uploadExporterLink","importCliLink","uploadHelpText","exportInstructions","slackAdvancedExporterLink","cliLink","uploadSection","setting_upload_SettingsUpload","TeamSettings","activeTab","team_general_tab","team_import_tab","generalTab","importTab","TeamSettingsModal","team_settings_modal_classCallCheck","team_settings_modal_defineProperty","team_settings_modal_assertThisInitialized","team_settings_modal_possibleConstructorReturn","team_settings_modal_getPrototypeOf","modalBody","active_tab","active_section","uiName","iconTitle","handleHidden","loadSettingsSidebar","updateTab","components_team_settings","TutorialSteps","TutorialTip","tutorial_tip_classCallCheck","tutorial_tip_defineProperty","tutorial_tip_assertThisInitialized","tutorial_tip_possibleConstructorReturn","tutorial_tip_getPrototypeOf","currentScreen","screens","diagnosticsTag","closeRhsMenu","savePreference","TUTORIAL_STEP","step","FINISHED","screen","buttonText","dots","data-screen","handleCircleClick","tutorialGifImage","tutorialGif","tutorialGifWhite","skipTutorial","getInt","MenuTutorialTip","toggleFunc","onBottom","arrow","tutorial_tip","ModalToggleButtonRedux","modalData","modalId","toggle_modal_button_redux_objectWithoutProperties","clickHandler","LeaveTeamModal","toggleSideBarRightMenu","modals","modalState","isModalOpen","toggleSideBarRightMenuAction","SidebarRightMenu","sidebar_right_menu_classCallCheck","sidebar_right_menu_defineProperty","sidebar_right_menu_assertThisInitialized","sidebar_right_menu_possibleConstructorReturn","sidebar_right_menu_getPrototypeOf","showAboutModal","showAddUsersToTeamModal","showDropdown","showTeamSettingsModal","teamLink","inviteLink","addUserToTeamLink","manageLink","consoleLink","joinAnotherTeamLink","createTeam","team_permission_gate","ADD_USER_TO_TEAM","OPEN_TEAM","moreTeamsToJoin","experimentalPrimaryTeam","system_permission_gate","CREATE_TEAM","toggle_modal_button","pluginDivider","leaveTeam","toggle_modal_button_redux","leave_team_icon_LeaveTeamIcon","teamSettingsLink","MANAGE_TEAM","MANAGE_SYSTEM","siteName","helpLink","reportLink","reportAProblemLink","tutorialTip","showTutorialTip","menu_tutorial_tip","openRhsMenu","addUsersToTeamModal","nativeAppLink","appDownloadLink","add_users_to_team","hideAddUsersToTeamModal","teamDivider","consoleDivider","handleAboutModal","handleEmitUserLoggedOutEvent","about_build_modal","aboutModalDismissed","team_settings_modal","hideTeamSettingsModal","enableTutorial","EnableTutorial","tutorialStep","isLicensed","AppDownloadLink","enableTeamCreation","EnableTeamCreation","ExperimentalPrimaryTeam","HelpLink","ReportAProblemLink","restrictTeamInvite","RestrictTeamInvite","SiteName","joinableTeams","getJoinableTeamIds","getIsRhsMenuOpen","MENU_POPOVER","MainMenu","ImportThemeModal","import_theme_modal_classCallCheck","import_theme_modal_defineProperty","import_theme_modal_assertThisInitialized","import_theme_modal_possibleConstructorReturn","import_theme_modal_getPrototypeOf","isInputValid","colors","sidebarBg","sidebarText","sidebarUnreadText","sidebarTextHoverBg","sidebarTextActiveBorder","sidebarTextActiveColor","sidebarHeaderBg","sidebarHeaderTextColor","onlineIndicator","awayIndicator","mentionBg","mentionColor","newMessageSeparator","linkColor","buttonBg","buttonColor","mentionHighlightBg","mentionHighlightLink","codeTheme","inputError","updateShow","charAt","handleOnHide","ModalController","modal_controller_objectWithoutProperties","modalOutput","modal","modalComponent","getIsLhsOpen","lhs","CopyUrlContextMenu","copyToClipboard","contextMenu","es6","menuId","copy","contextMenuTrigger","SiteURL","TeamButton","team_button_classCallCheck","team_button_possibleConstructorReturn","team_button_getPrototypeOf","handleSwitch","team_button_assertThisInitialized","handleDisabled","switchTeams","badge","teamIconUrl","teamClass","active","btnClass","unread","initials","displayName","teamButton","toolTip","tip","btn","copy_url_context_menu","TeamSidebar","getTeams","root","myTeams","add","filterAndSortTeamsByDisplayName","member","myTeamMembers","team_button_TeamButton","msg_count","mention_count","move--right","withRouter","getMyTeams","getTeamMemberships","SearchableChannelList","searchable_channel_list_classCallCheck","searchable_channel_list_possibleConstructorReturn","searchable_channel_list_getPrototypeOf","createChannelRow","searchable_channel_list_assertThisInitialized","doSearch","joiningChannel","channelList","handleJoin","joinButton","listContent","marginTop","noResultsText","channelsPerPage","channelsToDisplay","CHANNELS_PER_PAGE","MoreChannels","more_channels_classCallCheck","more_channels_defineProperty","more_channels_assertThisInitialized","more_channels_possibleConstructorReturn","more_channels_getPrototypeOf","force","searchedChannels","getChannels","joinChannel","getRelativeChannelURL","searching","searchMoreChannels","setSearchResults","c","CHANNELS_CHUNK_SIZE","channelsRequestStarted","serverErrorState","createNewChannelButton","CREATE_PUBLIC_CHANNEL","handleNewChannel","createChannelHelpText","searchable_channel_list_SearchableChannelList","getNotArchivedOtherChannels","getOtherChannels","RequestStatus","STARTED","MAX_SELECTABLE_VALUES","MAX_USERS_IN_GM","MoreDirectChannels","more_direct_channels_classCallCheck","more_direct_channels_defineProperty","more_direct_channels_assertThisInitialized","more_direct_channels_possibleConstructorReturn","more_direct_channels_getPrototypeOf","missingStatusByIds","getStatusesByIds","exitToChannel","openDirectChannelToUser","openGroupChannelToUsers","pageNum","restrictDirectMessage","getProfilesInTeam","getUserProfiles","resetPaging","modalName","displayname","currentChannelMembers","getTotalUsersStats","loadProfilesMissingStatus","more_direct_channels_asyncToGenerator","note","isExistingChannel","buttonSubmitLoadingText","inactive","noteText","submitImmediatelyOn","handleSubmitImmediatelyOn","totalCount","getProfilesInCurrentChannel","RestrictDirectMessage","searchProfilesSelector","selectProfiles","getTotalUsersStatsSelector","total_users_count","NewChannelModal","new_channel_modal_classCallCheck","new_channel_modal_defineProperty","new_channel_modal_assertThisInitialized","new_channel_modal_possibleConstructorReturn","new_channel_modal_getPrototypeOf","enterPressed","MIN_CHANNELNAME_LENGTH","displayNameError","onSubmitChannel","newData","channel_header","channel_purpose","onDataChanged","onChangeURLPressed","displayNameClass","createPublicChannelLink","onTypeSwitched","createPrivateChannelLink","channelSwitchText","inputPrefixId","CREATE_PRIVATE_CHANNEL","prettyTeamURL","getShortenedURL","bsSize","onModalExited","restoreFocus","MAX_CHANNELNAME_LENGTH","channelData","onEnterKeyDown","handleOnURLChange","ChangeURLModal","change_url_modal_classCallCheck","change_url_modal_defineProperty","change_url_modal_assertThisInitialized","change_url_modal_possibleConstructorReturn","change_url_modal_getPrototypeOf","currentURL","userEdit","formattedError","urlinput","cleanUpUrlable","urlError","getURLError","onModalSubmit","urlClass","fullURL","currentTeamURL","shortURL","urlTooltip","onURLChanged","submitButtonText","SHOW_NEW_CHANNEL","SHOW_EDIT_URL","SHOW_EDIT_URL_THEN_COMPLETE","NewChannelFlow","new_channel_flow_classCallCheck","new_channel_flow_defineProperty","new_channel_flow_assertThisInitialized","new_channel_flow_possibleConstructorReturn","new_channel_flow_getPrototypeOf","flowState","channelPurpose","channelHeader","createChannel","onCreateChannelError","newURL","nameModified","showChannelModal","showGroupModal","showChangeURLModal","changeURLTitle","changeURLSubmitButtonText","new_channel_modal","typeSwitched","urlChangeRequested","channelDataChanged","change_url_modal","urlChangeSubmitted","urlChangeDismissed","UnreadBelowIcon","UnreadChannelIndicator","displayValue","unread_below_icon_UnreadBelowIcon","BootstrapSpan","bootstrap_span_objectWithoutProperties","StatusDropdown","closeDropdown","ONLINE","OFFLINE","AWAY","DND","resetStatusModalData","RESET_STATUS","isUserOutOfOffice","renderStatusAction","showStatusChangeConfirmation","setOnline","setAway","setOffline","setDnd","renderOOFStatusAction","extraText","renderProfilePicture","renderStatusOnlineAction","renderStatusAwayAction","renderStatusDndAction","renderStatusOfflineAction","divider","renderStatusOutOfOfficeAction","status_dropdown_toConsumableArray","bootstrap_span","status_icon","SidebarHeaderDropdownButton","mainMenuToolTip","menu_icon","SidebarHeaderDropdown","sidebar_header_dropdown_classCallCheck","sidebar_header_dropdown_defineProperty","sidebar_header_dropdown_assertThisInitialized","sidebar_header_dropdown_possibleConstructorReturn","sidebar_header_dropdown_getPrototypeOf","onToggleDropdown","showTeamMembersModal","A","enableCustomEmoji","canCreateCustomEmoji","sysAdminLink","teamSettings","addMemberToTeam","integrationsLink","enableEmailInvitations","showInviteMemberModal","enableIncomingWebhooks","enableOutgoingWebhooks","enableCommands","enableOAuthServiceProvider","MANAGE_SLASH_COMMANDS","MANAGE_OAUTH","MANAGE_WEBHOOKS","toggleDropdown","teamMembersModal","team_members_modal","hideTeamMembersModal","keyboardShortcuts","toggleShortcutsModal","accountSettings","showAccountSettingsModal","about","logout","customEmoji","renderCustomEmojiLink","inviteDivider","backstageDivider","sysAdminDivider","helpDivider","logoutDivider","sidebar_header_dropdown_button_SidebarHeaderDropdownButton","isRequred","EnableCommands","EnableIncomingWebhooks","EnableOAuthServiceProvider","enableOnlyAdminIntegrations","EnableOnlyAdminIntegrations","EnableOutgoingWebhooks","EnableEmailInvitations","haveISystemPermission","MANAGE_EMOJIS","SidebarHeader","sidebar_header_classCallCheck","sidebar_header_defineProperty","sidebar_header_assertThisInitialized","sidebar_header_possibleConstructorReturn","sidebar_header_getPrototypeOf","status_dropdown","statusDropdown","renderStatusDropdown","teamNameWithToolTip","teamDescription","header_dropdown","DraftIcon","GlobeIcon","LockIcon","SidebarChannelButtonOrLinkIcon","hasDraft","draft_icon_DraftIcon","globe_icon_GlobeIcon","lock_icon_LockIcon","membersCount","teammateId","teammateDeletedAt","channelStatus","SidebarChannelButtonOrLinkCloseButton","removeTooltip","overlayTriggerAttr","SidebarChannelButtonOrLink","trackChannelSelectedEvent","unreadMentions","sidebar_channel_button_or_link_icon_SidebarChannelButtonOrLinkIcon","sidebar_channel_button_or_link_close_button_SidebarChannelButtonOrLinkCloseButton","rowClass","SidebarTutorialTip","townSquareDisplayName","DEFAULT_CHANNEL_UI_NAME","offTopicDisplayName","OFFTOPIC_CHANNEL_UI_NAME","townsquare","offtopic","SidebarChannel","isLeaving","channelTeammateId","unreadMsgs","showUnreadForMsgs","closeHandler","showChannelAsUnread","shouldHideChannel","handleLeaveDirectChannel","EnableXToLeaveChannelsFromLHS","handleLeavePublicChannel","handleLeavePrivateChannel","linkClass","channelMuted","sidebar_tutorial_tip_SidebarTutorialTip","openLhs","channelFake","channelStringified","channelTeammateUsername","sidebar_channel_button_or_link_SidebarChannelButtonOrLink","channelTeammateDeletedAt","makeGetChannel","DRAFT","channelsByName","memberIds","getUserIdsInChannels","total_msg_count","notify_props","mark_unread","NotificationLevels","teammate_id","shouldHideDefaultChannel","preferences","isChannelMuted","CHANNEL_POPOVER","OFFTOPIC_CHANNEL","Sidebar","sidebar_classCallCheck","sidebar_defineProperty","sidebar_assertThisInitialized","sidebar_possibleConstructorReturn","sidebar_getPrototypeOf","showDirectChannelsModal","hideMoreDirectChannelsModal","showMoreDirectChannelsModal","currentChannel","currentTeammate","unreads","currentSiteName","currentChannelName","mentionTitle","mentionCount","unreadTitle","messageCount","updateUnreadIndicators","firstUnreadChannel","scrollbar","lastUnreadChannel","lastUnreadElement","showTopUnread","showBottomUnread","firstUnreadElement","firstUnreadPosition","lastUnreadPosition","curChannel","CHANNEL_SCROLL_ADJUSTMENT","isSwitchingChannel","allChannelIds","getDisplayedChannels","curChannelId","curIndex","nextIndex","nextChannelId","updateScrollbarOnChannelChange","K","handleOpenMoreDirectChannelsModal","ChannelUtils","unreadChannelIds","showUnreadSection","favoriteChannelIds","publicChannelIds","privateChannelIds","directAndGroupChannelIds","allChannels","showMoreChannelsModal","newChannelModalType","handleViewAction","sidebar_channel","badgesActive","closedDirectChannel","navigateChannelShortcut","navigateUnreadChannelShortcut","channelIdIsDisplayedForProps","updateTitle","setBadgesActiveAndFavicon","setFirstAndLastUnreadChannels","lastBadgesActive","redFavicon","favicon","head","oldLink","channelSwitcherOption","unreadChannelItems","createSidebarChannel","favoriteItems","publicChannelItems","privateChannelItems","directMessageItems","directMessageMore","createChannelTootlip","createGroupTootlip","createDirectMessageTooltip","tooltipTriggers","moreDirectChannelsModal","moreChannelsModal","createPublicChannelIcon","showNewChannelModal","createPrivateChannelIcon","createDirectMessageIcon","more_direct_channels","more_channels","hideMoreChannelsModal","quickSwitchText","quickSwitchTextShortcutId","quickSwitchTextShortcutDefault","quickSwitchTextShortcut","openQuickSwitcher","new_channel_flow","hideNewChannelModal","sidebar_header","unread_channel_indicator_UnreadChannelIndicator","scrollToFirstUnreadChannel","scrollToLastUnreadChannel","ExperimentalGroupUnreadChannels","GroupUnreadChannels","DISABLED","getBoolPreference","CATEGORY_SIDEBAR_SETTINGS","DEFAULT_ON","keepChannelIdAsUnread","getSortedPublicChannelIds","getSortedPrivateChannelIds","getSortedFavoriteChannelIds","getSortedDirectChannelIds","getSortedPublicChannelWithUnreadsIds","getSortedPrivateChannelWithUnreadsIds","getSortedFavoriteChannelWithUnreadsIds","getSortedDirectChannelWithUnreadsIds","getSortedUnreadChannelIds","getUnreads","headerMarkdownOptions","ChannelInfoModal","channel_info_modal_classCallCheck","channel_info_modal_possibleConstructorReturn","channel_info_modal_getPrototypeOf","channel_info_modal_assertThisInitialized","getHeaderMarkdownOptions","memoizeResult","channel_info_modal_objectSpread","channelIcon","notFound","channelPurposeElement","channelURL","ChannelInviteModal","channel_invite_modal_classCallCheck","channel_invite_modal_defineProperty","channel_invite_modal_assertThisInitialized","channel_invite_modal_possibleConstructorReturn","channel_invite_modal_getPrototypeOf","inviteError","getProfilesNotInChannel","addUsersToChannel","handleInviteError","filterProfilesMatchingTerm","profilesNotInCurrentChannel","getProfilesNotInCurrentChannel","ChannelMembersDropdown","channel_members_dropdown_classCallCheck","channel_members_dropdown_defineProperty","channel_members_dropdown_assertThisInitialized","channel_members_dropdown_possibleConstructorReturn","channel_members_dropdown_getPrototypeOf","removing","removeChannelMember","channel_members_dropdown_asyncToGenerator","updateChannelMemberSchemeRoles","supportsChannelAdmin","isChannelAdmin","channelMember","canChangeMemberRoles","removeFromChannel","canRemoveMember","handleRemoveFromChannel","makeChannelMember","handleMakeChannelMember","makeChannelAdmin","handleMakeChannelAdmin","MANAGE_CHANNEL_ROLES","MemberListChannel","member_list_channel_classCallCheck","member_list_channel_defineProperty","member_list_channel_assertThisInitialized","member_list_channel_possibleConstructorReturn","member_list_channel_getPrototypeOf","loadProfilesAndTeamMembersAndChannelMembers","member_list_channel_asyncToGenerator","in_channel_id","loadTeamMembersAndChannelMembersForProfilesList","totalChannelMembers","getUsersAndActionsToDisplay","getMembersInCurrentChannel","channelMembers","sortByUsername","searchProfilesInCurrentChannel","getCurrentChannelStats","member_list_channel_objectSpread","ChannelMembersModal","channel_members_modal_classCallCheck","channel_members_modal_defineProperty","channel_members_modal_assertThisInitialized","channel_members_modal_possibleConstructorReturn","channel_members_modal_getPrototypeOf","showInviteModal","canManageChannelMembers","onClickManageChannelsButton","member_list_channel","Describe","memberNotifyLevel","globalNotifyLevel","DEFAULT","notifyLevel","NotificationSections","MARK_UNREAD","DESKTOP","PUSH","ALL","SectionTitle","CollapseView","onExpandSection","ExtraInfo","ExpandView","onCollapseSection","NONE","server_error","NotificationSection","onUpdateSection","globalNotificationLevel","memberNotificationLevel","handleOnChange","handleCollapseSection","handleExpandSection","ChannelNotificationsModal","channel_notifications_modal_classCallCheck","channel_notifications_modal_defineProperty","channel_notifications_modal_assertThisInitialized","channel_notifications_modal_possibleConstructorReturn","channel_notifications_modal_getPrototypeOf","resetStateFromNotifyProps","channel_notifications_modal_asyncToGenerator","updateChannelNotifyProps","desktopNotifyLevel","desktop","handleUpdateChannelNotifyProps","markUnreadNotifyLevel","pushNotifyLevel","channel_notifications_modal_objectSpread","getStateFromNotifyProps","notifyProps","sendPushNotifications","serverErrorTag","notification_section_NotificationSection","handleUpdateMarkUnreadLevel","handleSubmitMarkUnreadLevel","handleUpdateDesktopNotifyLevel","handleSubmitDesktopNotifyLevel","handleUpdatePushNotificationLevel","handleSubmitPushNotificationLevel","SendPushNotifications","ConvertChannelModal","convert_channel_modal_classCallCheck","convert_channel_modal_defineProperty","convert_channel_modal_assertThisInitialized","convert_channel_modal_possibleConstructorReturn","convert_channel_modal_getPrototypeOf","CHANNEL_ID_LENGTH","convertChannelToPrivate","handleConvert","currentTeamDetails","DeleteChannelModal","delete_channel_modal_classCallCheck","delete_channel_modal_possibleConstructorReturn","delete_channel_modal_getPrototypeOf","delete_channel_modal_assertThisInitialized","canViewArchivedChannels","penultimateViewedChannelName","deleteChannel","EditChannelHeaderModal","edit_channel_header_modal_classCallCheck","edit_channel_header_modal_defineProperty","edit_channel_header_modal_assertThisInitialized","edit_channel_header_modal_possibleConstructorReturn","edit_channel_header_modal_getPrototypeOf","patchChannel","editChannelHeaderTextbox","showError","nextRequestStatus","requestStatus","FAILURE","SUCCESS","errorMsg","headerTitle","onEntering","handleEntering","mapStateToProps","updateChannel","submitInfo","edit_channel_header_modal_objectSpread","EditChannelPurposeModal","edit_channel_purpose_modal_classCallCheck","edit_channel_purpose_modal_defineProperty","edit_channel_purpose_modal_assertThisInitialized","edit_channel_purpose_modal_possibleConstructorReturn","edit_channel_purpose_modal_getPrototypeOf","nextServerError","setError","unsetError","channelPurposeModal","getPurpose","requestInfo","edit_channel_purpose_modal_objectSpread","MemberIcon","MessageIcon","PopoverListMembersItem","messageIcon","showMessageIcon","message_icon_MessageIcon","PopoverListMembers","popover_list_members_classCallCheck","popover_list_members_defineProperty","popover_list_members_assertThisInitialized","popover_list_members_possibleConstructorReturn","popover_list_members_getPrototypeOf","channelAlreadyExisted","getCurrentTeamRelativeUrl","closePopover","showPopover","showChannelMembersModal","showChannelInviteModal","popoverTarget","getProfilesInChannel","sortedUsers","sortUsers","popoverButton","isDirectChannel","popover_list_members_item_PopoverListMembersItem","handleShowDirectChannel","membersName","manageMembers","isDefault","showMembersModal","memberCount","countText","channelMembersModal","channelInviteModal","channel_members_modal","hideChannelMembersModal","channel_invite_modal","hideChannelInviteModal","channelMembersTooltip","handleGetProfilesInChannel","member_icon_MemberIcon","getTargetPopover","doGetProfilesInChannel","makeGetProfilesInChannel","required","lowercase","defaultError","displayNameHolder","handleHolder","RenameChannelModal","_React$PureComponent","rename_channel_modal_classCallCheck","rename_channel_modal_defineProperty","rename_channel_modal_assertThisInitialized","rename_channel_modal_possibleConstructorReturn","rename_channel_modal_getPrototypeOf","nameError","invalid","rename_channel_modal_asyncToGenerator","oldName","minLength","onSaveSuccess","rename_channel_modal_inherits","rename_channel_modal_createClass","nameClass","urlInputLabel","readOnlyHandleInput","fullUrl","shortUrl","onDisplayNameChange","onNameChange","getTeam","teamInfo","rename_channel_modal_objectSpread","PinIcon","CustomMenu","onClose","rootCloseEvent","react_overlays_lib","onRootClose","handleRootClose","CustomToggle","activeClass","dropdownOpen","ChannelHeaderPlug","channel_header_plug_classCallCheck","channel_header_plug_defineProperty","channel_header_plug_assertThisInitialized","channel_header_plug_possibleConstructorReturn","channel_header_plug_getPrototypeOf","plug","plugs","fireActionAndClose","onSelect","channel_header_plug_CustomToggle","channel_header_plug_CustomMenu","createButton","createDropdown","ChannelHeaderButton","popoverMarkdownOptions","SEARCH_BAR_MINIMUM_WINDOW_SIZE","ChannelHeader","channel_header_classCallCheck","channel_header_defineProperty","channel_header_assertThisInitialized","channel_header_possibleConstructorReturn","channel_header_getPrototypeOf","showSearchBar","isFavorite","favoriteChannel","updateRhsState","M","showRenameChannelModal","showChannelNotificationsModal","headerOverlay","showEditChannelPurposeModal","showEditChannelHeaderModal","inviteModalData","CHANNEL_INVITE","unmute","mute","channel_header_objectSpread","getPopoverMarkdownOptions","getCustomEmojisInText","handleShortcut","popoverContent","bStyle","bSize","handleOnMouseOver","handleOnMouseOut","channelTitle","archivedIcon","popoverListMembers","isDirect","isGroup","isPrivate","popover_list_members","dmHeaderIconStatus","dmHeaderTextStatus","headerTextContainer","editMessage","editHeaderModal","toggleFavoriteTooltip","dropdownContents","EDIT_CHANNEL_HEADER","renderMute","CREATE_DM_CHANNEL","CHANNEL_INFO","MANAGE_PRIVATE_CHANNEL_MEMBERS","MANAGE_PUBLIC_CHANNEL_MEMBERS","MANAGE_PRIVATE_CHANNEL_PROPERTIES","MANAGE_PUBLIC_CHANNEL_PROPERTIES","DELETE_PRIVATE_CHANNEL","DELETE_PUBLIC_CHANNEL","DELETE_CHANNEL","handleLeave","dmUser","components_edit_channel_header_modal","hideEditChannelHeaderModal","toggleFavorite","muteTrigger","editPurposeModal","channelMutedTooltip","hideMembersModal","edit_channel_purpose_modal","hideEditChannelPurposeModal","pinnedIconClass","aria-labelledby","channel_header_plug","pin_icon_PinIcon","searchButtonClick","channel_notifications_modal","hideChannelNotificationsModal","components_rename_channel_modal","hideRenameChannelModal","prefs","dmUserId","getMyChannelMember","getMyTeamMember","isCurrentChannelReadOnly","GlobalEventEmitter","GlobalEventEmitterClass","global_event_emitter_classCallCheck","global_event_emitter_defineProperty","global_event_emitter_assertThisInitialized","global_event_emitter_possibleConstructorReturn","global_event_emitter_getPrototypeOf","global_event_emitter_objectWithoutProperties","EventTypes","POST_LIST_SCROLL_CHANGE","NewMessageIndicator","new_message_indicator_classCallCheck","new_message_indicator_possibleConstructorReturn","new_message_indicator_getPrototypeOf","rendered","newMessages","onTransitionEnd","setRendered","CommentedOnFilesMessage","getFilesForPost","plusMore","selectFileInfosForPost","CommentedOn","makeUsername","postProps","commented_on_files_message","webhookMessage","fallback","makeCommentedOnMessage","onCommentClick","stripMarkdown","getDisplayNameByUser","PostBody","post_body_classCallCheck","post_body_possibleConstructorReturn","post_body_getPrototypeOf","sendingAction","sending","comment","failedOptions","parentPost","isFirstReply","commented_on","fileAttachmentHolder","messageWithAdditionalContent","mentionHighlightClass","isCommentMention","ephemeralPostClass","parentPostUser","PostInfo","post_info_classCallCheck","post_info_defineProperty","post_info_assertThisInitialized","post_info_possibleConstructorReturn","post_info_getPrototypeOf","reactionPickerOffset","showDotMenu","comments","replyCount","getPostList","getDotMenu","handleDotMenuOpened","postTime","buildOptions","showTimeWithoutHover","mobileView","PostHeader","indicator","colon","post_info","Post","post_classCallCheck","post_defineProperty","post_assertThisInitialized","post_possibleConstructorReturn","post_getPrototypeOf","opened","previousPostIsComment","consecutivePostByUser","rootUser","sameRoot","currentUserCss","sameUserClass","domNode","hasSameRoot","hideProfilePicture","centerClass","center","getRef","onTouchStart","post_header","post_body","detailedPost","commentedOnPost","CHANNEL_DISPLAY_MODE","CHANNEL_DISPLAY_MODE_DEFAULT","CHANNEL_DISPLAY_MODE_CENTERED","ScrollToBottomIcon","ScrollToBottomArrows","atBottom","scroll_to_bottom_icon_ScrollToBottomIcon","ChannelIntroMessage","fullWidth","channelProfiles","centeredIntro","teammateName","createSetHeaderButton","createDMIntroMessage","pictures","createGMIntroMessage","setHeaderButton","createDefaultIntroMessage","uiType","channelInviteButton","createInviteChannelMemberButton","createOffTopicIntroMessage","memberMessage","creatorName","creator_id","getMonthLong","creator","purposeMessage","createStandardIntroMessage","CLOSE_TO_BOTTOM_SCROLL_MARGIN","POSTS_PER_PAGE","POST_CHUNK_SIZE","MAX_EXTRA_PAGES_LOADED","PostList","post_list_classCallCheck","post_list_defineProperty","post_list_assertThisInitialized","post_list_possibleConstructorReturn","post_list_getPrototypeOf","isDoingInitialLoad","atEnd","postListContent","postlist","extraPagesLoaded","doLoadPostsToFillScreen","hasScrolledToNewMessageSeparator","postList","messageSeparator","setUnreadsBelow","unViewedCount","lastViewed","forceScrollToBottom","doScrollToBottom","hasScrolled","previousScrollHeight","previousScrollTop","previousClientHeight","checkBottom","post_list_asyncToGenerator","getPostThreadAsync","getPostsBeforeAsync","getPostsAfterAsync","_result","getPostThread","getPostsBefore","getPostsAfter","hasScrolledToFocusedPost","getPosts","order","increasePostVisibility","moreToLoad","topPost","postCtls","lastViewedAt","renderedLastViewed","isUserActivityPost","postCtl","post_view_post","isFromWebhook","newSeparatorId","MAX_SAFE_INTEGER","loadPosts","addListener","handleWindowResize","initialScroll","nextChannel","loadPostsToFillScreenIfNecessary","prevPosts","hasNewPosts","focusedPost","didInitialScroll","prevPostId","pendingPostId","topRow","channel_intro_message","MAX_POST_VISIBILITY","topPostCreateAt","scroll_to_bottom_arrows_ScrollToBottomArrows","new_message_indicator_NewMessageIndicator","createPosts","loadingPosts","getPostsInChannel","makeGetPostsInChannel","getPostsAroundPost","makeGetPostsAroundPost","lastChannelViewTime","CHANNEL_DISPLAY_MODE_FULL_SCREEN","PermalinkView","permalink_view_classCallCheck","permalink_view_defineProperty","permalink_view_assertThisInitialized","permalink_view_possibleConstructorReturn","permalink_view_getPrototypeOf","permalink_view_asyncToGenerator","params","postid","emitPostFocusEvent","returnTo","doPermalinkEvent","isStateValid","post_view","NotifyCounts","_getUnreadsInCurrentT","getUnreadsInCurrentTeam","getChannelDisplayName","SwitchChannelSuggestion","switch_channel_provider_objectSpread","_get","switch_channel_provider_getPrototypeOf","ConnectedSwitchChannelSuggestion","quickSwitchSorter","wrappedA","wrappedB","aIsArchived","bIsArchived","deactivated","aDisplayName","bDisplayName","aStartsWith","bStartsWith","SwitchChannelProvider","getChannelsInCurrentTeam","getDirectAndGroupChannels","formatChannelsAndDispatch","fetchUsersAndChannels","formatUnreadChannelsAndDispatch","usersAsync","channelsAsync","ChannelActions","usersFromServer","channelsFromServer","UserTypes","RECEIVED_PROFILES_LIST","update_at","skipNotInChannel","completedChannels","channelFilter","channelPrefixLower","curState","usersInChannels","userSearchStrings","searchString","usersInChannel","Set","userString","makeChannelSearchFilter","newChannel","wrappedChannel","ARCHIVED_CHANNEL","u","userWrappedChannel","isDMVisible","MENTION_UNREAD_CHANNELS","SwitchTeamSuggestion","SwitchTeamProvider","teamPrefix","teamNames","CHANNEL_MODE","TEAM_MODE","QuickSwitchModal","quick_switch_modal_classCallCheck","quick_switch_modal_defineProperty","quick_switch_modal_assertThisInitialized","quick_switch_modal_possibleConstructorReturn","quick_switch_modal_getPrototypeOf","switchBox","focusPostTextbox","TAB","switchMode","mode","selectedChannel","channelProviders","disableDispatches","teamProviders","showTeamSwitcher","enableTeamProvider","enableChannelProvider","initialMode","channelShortcut","defaultChannelShortcut","help","teamShortcut","defaultTeamShortcut","channelsActiveClass","teamsActiveClass","data-mode","setSwitchBoxRef","MobileChannelHeaderPlug","fireAction","isDropdown","createList","getMyCurrentChannelMembership","MobileChannelHeaderButton","InfoIcon","NavbarInfoButton","addOne","clickHere","bsStyle","info_icon_InfoIcon","Navbar","navbar_classCallCheck","navbar_defineProperty","navbar_assertThisInitialized","navbar_possibleConstructorReturn","navbar_getPrototypeOf","contactId","getCurrentMember","getCurrentStats","outerWidth","closeRhs","closeLhs","toggleLhs","toggleRhsMenu","toggleQuickSwitchModal","showQuickSwitchModal","quickSwitchMode","_this$props$actions","markFavorite","unmarkFavorite","viewInfoOption","viewPinnedPostsOption","addMembersOption","manageMembersOption","setChannelHeaderOption","setChannelPurposeOption","notificationPreferenceOption","renameChannelOption","convertChannelOption","deleteChannelOption","leaveChannelOption","renderEditChannelHeaderOption","showChannelPurposeModal","toggleFavoriteOption","getTeammateStatus","mobile_channel_header_plug","handleUnmuteChannel","getCurrentTeamUrl","currentId","data-target","toggleLeftSidebar","notify_counts","rhsButton","toggleRightSidebar","channelInviteModalButton","navbar_objectSpread","addStatsChangeListener","handleQuickSwitchKeyPress","hideSidebars","removeStatsChangeListener","editChannelPurposeModal","renameChannelModal","channelNotificationsModal","quickSwitchModal","hideChannelPurposeModal","showChannelInviteModalButton","quick_switch_modal","hideQuickSwitchModal","searchButton","showSearch","channelMenuDropdown","createLhsButton","navbar_info_button","createRhsButton","LENGTH_OF_ID","LENGTH_OF_GROUP_ID","LENGTH_OF_USER_ID_PAIR","onChannelByIdentifierEnter","_match$params","identifier","getTeamByName","moreChannelsByName","chan","goToChannelByChannelName","actions_asyncToGenerator","_match$params2","teamObj","handleChannelJoinError","goToDirectChannelByUserId","goToChannelByChannelId","goToGroupChannelByGroupId","goToDirectChannelByUserIds","_ref7","selectUserByUsername","handleError","doChannelChange","goToDirectChannelByUsername","_match$params5","getUserByEmail","_x11","_x12","goToDirectChannelByEmail","_match$params3","data2","getChannelsNameMapInTeam","getChannelByNameAndTeamName","_ref9","selectUser","_match$params4","_ref15","_match$params6","groupId","_ref16","markGroupChannelOpen","_x13","_x14","deferComponentRender","WrappedComponent","PreRenderComponent","DeferredRenderWrapper","_React$Component","deferComponentRender_classCallCheck","deferComponentRender_possibleConstructorReturn","deferComponentRender_getPrototypeOf","shouldRender","deferComponentRender_inherits","deferComponentRender_createClass","hoistStatics","CreatePost","create_post_classCallCheck","create_post_defineProperty","create_post_assertThisInitialized","create_post_possibleConstructorReturn","create_post_getPrototypeOf","submitting","enableSendButton","sendReaction","setDraft","draftsForChannel","tokens","userIsOutOfOffice","currentChannelMembersCount","getStatusFromSlashCommand","isStatusSlashCommand","trimRight","editChannelHeaderModalData","isDirectOrGroup","onSubmitPost","handleEnableSendButton","create_post_objectSpread","create_post_toConsumableArray","itemIndex","FORWARD_SLASH","createPostControls","ctrlOrMetaKeyPressed","messageIsEmpty","draftMessageIsEmpty","ctrlEnterKeyCombo","upKeyOnly","shiftUpKeyCombo","ctrlKeyCombo","postMsgKeyPress","editLastPost","replyToLastPost","loadPrevMessage","loadNextMessage","currentUsersLatestPost","POST","latestReplyablePostId","replyBox","selectPostFromRightHandSideSearchByPostId","fillMessageFromHistory","clearDraftUploads","documentKeyHandler","lastMessage","messageInHistoryItem","fullWidthTextBox","getChannelView","postFooterClassName","createTutorialTip","sendButtonClass","attachmentsDisabled","getCreatePostControls","emitUserPostedEvent","postListScrollChangeToBottom","recentPostIdInChannel","getMostRecentPostIdInChannel","getLatestReplyablePostId","PreferencesRedux","POST_POPOVER","NUM_SCREENS","TutorialIntroScreens","tutorial_intro_screens_classCallCheck","tutorial_intro_screens_defineProperty","tutorial_intro_screens_assertThisInitialized","tutorial_intro_screens_possibleConstructorReturn","tutorial_intro_screens_getPrototypeOf","createScreenOne","createScreenTwo","createScreenThree","circles","createCircles","appDownloadImage","AppIcons","inviteModalLink","inviteText","PERMISSIONS_ALL","INVITE_TEAM","supportInfo","supportEmail","createScreen","TutorialView","isRoot","tutorial_intro_screens","townSquare","SupportEmail","ChannelView","channel_view_classCallCheck","channel_view_defineProperty","channel_view_assertThisInitialized","channel_view_possibleConstructorReturn","channel_view_getPrototypeOf","deferredPostView","PostView","channelView","createDeferredPostView","dur1","channel_view_slicedToArray","measure","dur2","clearMarks","duration","round","showTutorial","tutorial","deactivatedChannel","create_post","onClickCloseChannel","DeferredPostView","getDeactivatedChannel","getDirectTeammate","INTRO_SCREENS","ChannelIdentifierRouter","channel_identifier_router_classCallCheck","channel_identifier_router_possibleConstructorReturn","channel_identifier_router_getPrototypeOf","channel_view","CenterChannel","center_channel_classCallCheck","center_channel_possibleConstructorReturn","center_channel_getPrototypeOf","lastChannelPath","lhsOpen","rhsOpen","move--left-small","rhsMenuOpen","navbar","Switch","Route","permalink_view","Redirect","getLastViewedChannelNameByTeamName","ChannelController","pathName","announcement_bar","system_notice","sidebar_right","sidebar_right_menu","get_post_link_modal","get_public_link_modal","get_team_invite_link_modal","components_invite_member_modal","import_theme_modal_ImportThemeModal","edit_post_modal","removed_from_channel_modal","reset_status_modal","components_leave_private_channel_modal","shortcuts_modal","modal_controller","wakeUpInterval","BackstageController","loadBackstageController","lastTime","WAKEUP_CHECK_INTERVAL","WAKEUP_THRESHOLD","UNREAD_CHECK_TIME_MILLISECONDS","TEAMS_PER_PAGE","needs_team_classCallCheck","needs_team_defineProperty","needs_team_assertThisInitialized","needs_team_possibleConstructorReturn","needs_team_getPrototypeOf","isActive","blurTime","viewChannel","markChannelAsRead","fetchMyChannelsAndMembers","loadProfilesForSidebar","needs_team_asyncToGenerator","openTeams","joinTeam","initTeam","getMyTeamUnreads","selectTeam","finishedFetchingChannels","loadStatusesForChannelAndSidebar","teamsList","L","sidebar","replyTextbox","mfaRequired","clearInterval","setInterval","reconnect","updateCurrentTeam","startPeriodicStatusUpdates","startPeriodicSync","iNoBounce","handleFocus","onShortcutKeyDown","stopPeriodicStatusUpdates","stopPeriodicSync","disable","renderProps","channel_controller_ChannelController","IntlProvider","setAcceptLanguage","loadTranslationsIfNecessary","translations","localeInfo","loadTranslations","setLocalizeFunction","handleLocaleChange","messages","getTranslations","redux__WEBPACK_IMPORTED_MODULE_0__","react_redux__WEBPACK_IMPORTED_MODULE_1__","mattermost_redux_selectors_entities_general__WEBPACK_IMPORTED_MODULE_2__","mattermost_redux_selectors_entities_users__WEBPACK_IMPORTED_MODULE_3__","actions_views_root__WEBPACK_IMPORTED_MODULE_4__","_root_jsx__WEBPACK_IMPORTED_MODULE_5__","shouldShowTermsOfService","DiagnosticsEnabled","NoAccounts","DiagnosticId","navigator","platform","createSafeId","prop","RegExp","keyCode","COMPOSING","isInRole","inRole","parts","isAdmin","isSystemAdmin","notifyMe","getTeamRelativeUrl","canDing","ding","hasSoundOptions","Audio","bing","getDateForUnixTicks","displayDate","displayTime","utc","ampm","timezone","getUTCHours","getUTCMinutes","getTimestamp","loopReplacePattern","pattern","replacement","extractFirstLink","inText","areObjectsEqual","leftChain","rightChain","isNaN","areMapsEqual","isPrototypeOf","constructor","_typeof","replaceHtmlEntities","tagsToReplace","&amp;","&lt;","&gt;","newtext","regex","insertHtmlEntities","&","<",">","extin","IMAGE_TYPE_GIF","removeQuerystringOrHash","AUDIO_TYPES","VIDEO_TYPES","SPREADSHEET_TYPES","SPREADSHEET","CODE_TYPES","CODE","WORD_TYPES","WORD","PRESENTATION_TYPES","PRESENTATION","PDF_TYPES","PATCH_TYPES","PATCH","SVG_TYPES","OTHER","getFileIconPath","ICON_FROM_TYPE","other","fileTypeIn","ICON_NAME_FROM_TYPE","str","txt","isHexColor","applyTheme","dndIndicator","changeCss","THEMES","organization","mattermostDark","windows10","mentionBj","changeColor","ownPostBg","blendColors","hoveredPostBg","hoveredPostBgLight","highlightBg","ownPostHighlightBg","errorTextColor","DEFAULT_CODE_THEME","updateCodeTheme","resetTheme","classValue","styleEl","setAttribute","styleSheet","sheet","rules","cssRules","priority","selectorText","setProperty","mediaQuery","insertRule","userTheme","cssPath","THEME_ELEMENTS","themes","cssURL","$link","attr","xmlHTTP","XMLHttpRequest","placeCaretAtEnd","getCaretPosition","createRange","re","createTextRange","rc","duplicate","moveToBookmark","getBookmark","setEndPoint","range","moveEnd","moveStart","select","setCaretPosition","pos","isValidUsername","MIN_USERNAME_LENGTH","MAX_USERNAME_LENGTH","RESERVED_USERNAMES","MOBILE_SCREEN_WIDTH","curUserId","getProfile","onProgress","responseType","onprogress","colourIn","amt","hex","lum","rgb","getFullName","getDisplayName","fullName","getDisplayNameByUserId","UserStatusesWeight","online","away","dnd","offline","ooo","sortUsersByStatusAndDisplayName","statusesByUserId","aStatus","bStatus","displayEntireName","react__WEBPACK_IMPORTED_MODULE_17___default","imageURLForUser","userIdOrObject","TRANSPARENT_PIXEL","imageURLForTeam","teamIdOrObject","getTeamIconUrl","bytes","otherId","getUserIdFromChannelId","importTeam","isFeatureEnabled","feature","FeatureTogglePrefix","fillArray","types","elm","EPHEMERAL","getRootId","mod","REACTION_PATTERN","getPasswordConfig","minimumLength","PasswordMinimumLength","requireLowercase","PasswordRequireLowercase","requireUppercase","PasswordRequireUppercase","requireNumber","PasswordRequireNumber","requireSymbol","PasswordRequireSymbol","isValidPassword","password","passwordConfig","errorId","MIN_PASSWORD_LENGTH","MAX_PASSWORD_LENGTH","react_intl__WEBPACK_IMPORTED_MODULE_18__","handleFormattedTextClick","hashtagAttribute","getAttributeNode","linkAttribute","channelMentionAttribute","searchForTerm","isEmptyObject","removePrefixFromLocalStorage","getEmailInterval","enableEmailBatching","isEmailEnabled","_Constants$Preference","INTERVAL_NEVER","INTERVAL_IMMEDIATE","INTERVAL_FIFTEEN_MINUTES","INTERVAL_HOUR","CATEGORY_NOTIFICATIONS","EMAIL_INTERVAL","emailInterval","validValuesWithEmailBatching","validValuesWithoutEmailBatching","textArea","border","outline","boxShadow","moveCursorToEnd","emitChannelClickEvent","_userVisitedFakeChannel","fail","otherUserId","receivedChannel","getMyChannelMemberPromise","oldChannelId","isRHSOpened","isPinnedPostsShowing","reloadIfServerVersionChanged","penultimate","setPenultimateChannelName","setPreviousChannelName","userVisitedFakeChannel","doFocusPost","_doFocusPost","post_list","loadChannelsForCurrentUser","emitCloseRightHandSide","_emitPostFocusEvent","_args4","PERMALINK_NOT_FOUND","loadNewDMIfNeeded","loadNewGMIfNeeded","CREATE_POST","emitUserCommentedEvent","CREATE_COMMENT","showChannelPurposeUpdateModal","showChannelNameUpdateModal","showGetPublicLinkModal","showLeavePrivateChannelModal","emitSuggestionPretextChanged","SUGGESTION_PRETEXT_CHANGED","emitSelectNextSuggestion","SUGGESTION_SELECT_NEXT","emitSelectPreviousSuggestion","SUGGESTION_SELECT_PREVIOUS","emitCompleteWordSuggestion","SUGGESTION_COMPLETE_WORD","emitClearSuggestions","SUGGESTION_CLEAR_SUGGESTIONS","emitPreferenceChangedEvent","preference","RECEIVED_PREFERENCE","addedNewDmUser","emitPreferencesChangedEvent","emitPreferencesDeletedEvent","DELETED_PREFERENCES","sendEphemeralPost","timestamp","handleNewPost","addedUserId","postRootId","lastTimeTypingSent","emitLocalUserTypingEvent","actionDispatch","actionGetState","membersInChannel","TimeBetweenUserTypingUpdatesMilliseconds","MaxNotificationsPerChannel","EnableUserTypingMessages","userTyping","emitUserLoggedOutEvent","redirectTo","shouldSignalLogout","setWasLoggedIn","signalLogout","clearLastError","WebsocketActions","cookie","emitBrowserFocus","BROWSER_CHANGE_FOCUS","redirectUserToDefaultTeam","_redirectUserToDefaultTeam","getPreviousTeamId","selectChannel","emitPopoverMentionKeyClick","mentionKey","POPOVER_MENTION_KEY_CLICK","serverVersion","newServerVersion","getServerVersion","equalServerVersions","CustomRenderer","FormattedMarkdownMessage","origMsg","markedUpMessage","breaks","sanitize","renderer","switchFromLdapToEmail","_switchFromLdapToEmail","ldapPassword","UserActions","_loadProfilesAndTeamMembers","_args3","_loadProfilesAndTeamMembersAndChannelMembers","loadChannelMembersForProfilesList","membersToLoad","pid","getTeamMember","list","loadTeamMembersForProfiles","loadProfilesWithoutTeam","_loadProfilesWithoutTeam","loadStatusesForProfilesMap","getTeamMembersByIds","getChannelMembersInChannels","getChannelMembersForUserIds","_x18","_loadNewDMIfNeeded","checkPreference","savePreferencesRedux","loadProfilesForDM","getChannelAndMyMember","_x19","_loadNewGMIfNeeded","_callee8","_context8","loadProfilesForGM","_loadProfilesForGM","_callee9","newPreferences","userIdsInChannels","_context9","MIN_USERS_IN_GM","_loadProfilesForDM","_callee10","profilesToLoad","profileIds","_context10","saveTheme","_x20","_x21","_x22","_saveTheme","_callee11","_context11","CATEGORY_THEME","onThemeSaved","onSuccess","themePreferences","makeGetCategory","toDelete","themePreference","deletePreferencesRedux","searchUsers","_x23","_searchUsers","_callee12","_args12","_context12","_x24","_x25","_x26","_autocompleteUsersInChannel","_callee13","_context13","_x27","_x28","_autocompleteUsersInTeam","_callee14","_context14","_x29","_x30","_autocompleteUsers","_callee15","_context15","updateUser","_x31","_x32","_x33","_updateUser","_callee16","_context16","generateMfaSecret","_x34","_x35","_generateMfaSecret","_callee17","_context17","updateUserNotifyProps","_x36","_x37","_x38","_updateUserNotifyProps","_callee18","_ref17","_context18","activateMfa","_x43","_x44","_x45","_activateMfa","_callee20","_ref19","_context20","deactivateMfa","_x46","_x47","_deactivateMfa","_callee21","_ref20","_context21","checkMfa","_x48","_x49","_x50","_checkMfa","_callee22","loginId","_ref21","_context22","_x51","_x52","_x53","_x54","_updateActive","_callee23","_ref22","_context23","updatePassword","_x55","_x56","_x57","_x58","_x59","_updatePassword","_callee24","currentPassword","newPassword","_ref23","_context24","revokeAllSessions","resetPassword","_x63","_x64","_x65","_x66","_resetPassword","_callee26","_ref25","_context26","PASSWORD_CHANGE","resendVerification","_x67","_x68","_x69","_resendVerification","_callee27","_ref26","_context27","loginById","_x70","_x71","_x72","_x73","_x74","_loginById","_callee28","mfaToken","_ref27","ok","_context28","createUserWithInvite","_x75","_x76","_x77","_x78","_x79","_createUserWithInvite","_callee29","inviteId","_ref28","resp","_context29","webLogin","_x80","_x81","_x82","_x83","_x84","_webLogin","_callee30","_ref29","_context30","updateTermsOfServiceStatus","_x85","_x86","_x87","_x88","_updateTermsOfServiceStatus","_callee31","termsOfServiceId","accepted","_ref30","_context31","getTermsOfService","_x89","_x90","_getTermsOfService","_callee32","_ref31","_context32","getAuthorizedApps","getAuthorizedOAuthApps","authorizedApps","deauthorizeOAuthApp","uploadProfileImage","_x96","_x97","_x98","_uploadProfileImage","_callee34","userPicture","_ref33","_context34","loadProfiles","_x99","_x100","_x101","_loadProfiles","_callee35","_ref34","_context35","_loadMyTeamMembers","_callee36","_context36","getMyTeamMembers","_x102","_x103","_savePreferences","_callee37","_context37","_x104","_x105","_x106","_savePreference","_callee38","_context38","doDispatch","doGetState","_x107","_x108","sendPasswordResetEmail","_x109","_x110","_x111","_sendPasswordResetEmail","_callee39","_ref35","_context39","LoadingScreen","latinMap","Á","Ă","Ắ","Ặ","Ằ","Ẳ","Ẵ","Ǎ","Â","Ấ","Ậ","Ầ","Ẩ","Ẫ","Ä","Ǟ","Ȧ","Ǡ","Ạ","Ȁ","À","Ả","Ȃ","Ā","Ą","Å","Ǻ","Ḁ","Ⱥ","Ã","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ḃ","Ḅ","Ɓ","Ḇ","Ƀ","Ƃ","Ć","Č","Ç","Ḉ","Ĉ","Ċ","Ƈ","Ȼ","Ď","Ḑ","Ḓ","Ḋ","Ḍ","Ɗ","Ḏ","ǲ","ǅ","Đ","Ƌ","Ǳ","Ǆ","É","Ĕ","Ě","Ȩ","Ḝ","Ê","Ế","Ệ","Ề","Ể","Ễ","Ḙ","Ë","Ė","Ẹ","Ȅ","È","Ẻ","Ȇ","Ē","Ḗ","Ḕ","Ę","Ɇ","Ẽ","Ḛ","Ꝫ","Ḟ","Ƒ","Ǵ","Ğ","Ǧ","Ģ","Ĝ","Ġ","Ɠ","Ḡ","Ǥ","Ḫ","Ȟ","Ḩ","Ĥ","Ⱨ","Ḧ","Ḣ","Ḥ","Ħ","Í","Ĭ","Ǐ","Î","Ï","Ḯ","İ","Ị","Ȉ","Ì","Ỉ","Ȋ","Ī","Į","Ɨ","Ĩ","Ḭ","Ꝺ","Ꝼ","Ᵹ","Ꞃ","Ꞅ","Ꞇ","Ꝭ","Ĵ","Ɉ","Ḱ","Ǩ","Ķ","Ⱪ","Ꝃ","Ḳ","Ƙ","Ḵ","Ꝁ","Ꝅ","Ĺ","Ƚ","Ľ","Ļ","Ḽ","Ḷ","Ḹ","Ⱡ","Ꝉ","Ḻ","Ŀ","Ɫ","ǈ","Ł","Ǉ","Ḿ","Ṁ","Ṃ","Ɱ","Ń","Ň","Ņ","Ṋ","Ṅ","Ṇ","Ǹ","Ɲ","Ṉ","Ƞ","ǋ","Ñ","Ǌ","Ó","Ŏ","Ǒ","Ô","Ố","Ộ","Ồ","Ổ","Ỗ","Ö","Ȫ","Ȯ","Ȱ","Ọ","Ő","Ȍ","Ò","Ỏ","Ơ","Ớ","Ợ","Ờ","Ở","Ỡ","Ȏ","Ꝋ","Ꝍ","Ō","Ṓ","Ṑ","Ɵ","Ǫ","Ǭ","Ø","Ǿ","Õ","Ṍ","Ṏ","Ȭ","Ƣ","Ꝏ","Ɛ","Ɔ","Ȣ","Ṕ","Ṗ","Ꝓ","Ƥ","Ꝕ","Ᵽ","Ꝑ","Ꝙ","Ꝗ","Ŕ","Ř","Ŗ","Ṙ","Ṛ","Ṝ","Ȑ","Ȓ","Ṟ","Ɍ","Ɽ","Ꜿ","Ǝ","Ś","Ṥ","Š","Ṧ","Ş","Ŝ","Ș","Ṡ","Ṣ","Ṩ","ẞ","Ť","Ţ","Ṱ","Ț","Ⱦ","Ṫ","Ṭ","Ƭ","Ṯ","Ʈ","Ŧ","Ɐ","Ꞁ","Ɯ","Ʌ","Ꜩ","Ú","Ŭ","Ǔ","Û","Ṷ","Ü","Ǘ","Ǚ","Ǜ","Ǖ","Ṳ","Ụ","Ű","Ȕ","Ù","Ủ","Ư","Ứ","Ự","Ừ","Ử","Ữ","Ȗ","Ū","Ṻ","Ų","Ů","Ũ","Ṹ","Ṵ","Ꝟ","Ṿ","Ʋ","Ṽ","Ꝡ","Ẃ","Ŵ","Ẅ","Ẇ","Ẉ","Ẁ","Ⱳ","Ẍ","Ẋ","Ý","Ŷ","Ÿ","Ẏ","Ỵ","Ỳ","Ƴ","Ỷ","Ỿ","Ȳ","Ɏ","Ỹ","Ź","Ž","Ẑ","Ⱬ","Ż","Ẓ","Ȥ","Ẕ","Ƶ","Ĳ","Œ","ᴀ","ᴁ","ʙ","ᴃ","ᴄ","ᴅ","ᴇ","ꜰ","ɢ","ʛ","ʜ","ɪ","ʁ","ᴊ","ᴋ","ʟ","ᴌ","ᴍ","ɴ","ᴏ","ɶ","ᴐ","ᴕ","ᴘ","ʀ","ᴎ","ᴙ","ꜱ","ᴛ","ⱻ","ᴚ","ᴜ","ᴠ","ᴡ","ʏ","ᴢ","á","ă","ắ","ặ","ằ","ẳ","ẵ","ǎ","â","ấ","ậ","ầ","ẩ","ẫ","ä","ǟ","ȧ","ǡ","ạ","ȁ","à","ả","ȃ","ā","ą","ᶏ","ẚ","å","ǻ","ḁ","ⱥ","ã","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ḃ","ḅ","ɓ","ḇ","ᵬ","ᶀ","ƀ","ƃ","ɵ","ć","č","ç","ḉ","ĉ","ɕ","ċ","ƈ","ȼ","ď","ḑ","ḓ","ȡ","ḋ","ḍ","ɗ","ᶑ","ḏ","ᵭ","ᶁ","đ","ɖ","ƌ","ı","ȷ","ɟ","ʄ","ǳ","ǆ","é","ĕ","ě","ȩ","ḝ","ê","ế","ệ","ề","ể","ễ","ḙ","ë","ė","ẹ","ȅ","è","ẻ","ȇ","ē","ḗ","ḕ","ⱸ","ę","ᶒ","ɇ","ẽ","ḛ","ꝫ","ḟ","ƒ","ᵮ","ᶂ","ǵ","ğ","ǧ","ģ","ĝ","ġ","ɠ","ḡ","ᶃ","ǥ","ḫ","ȟ","ḩ","ĥ","ⱨ","ḧ","ḣ","ḥ","ɦ","ẖ","ħ","ƕ","í","ĭ","ǐ","î","ï","ḯ","ị","ȉ","ì","ỉ","ȋ","ī","į","ᶖ","ɨ","ĩ","ḭ","ꝺ","ꝼ","ᵹ","ꞃ","ꞅ","ꞇ","ꝭ","ǰ","ĵ","ʝ","ɉ","ḱ","ǩ","ķ","ⱪ","ꝃ","ḳ","ƙ","ḵ","ᶄ","ꝁ","ꝅ","ĺ","ƚ","ɬ","ľ","ļ","ḽ","ȴ","ḷ","ḹ","ⱡ","ꝉ","ḻ","ŀ","ɫ","ᶅ","ɭ","ł","ǉ","ſ","ẜ","ẛ","ẝ","ḿ","ṁ","ṃ","ɱ","ᵯ","ᶆ","ń","ň","ņ","ṋ","ȵ","ṅ","ṇ","ǹ","ɲ","ṉ","ƞ","ᵰ","ᶇ","ɳ","ñ","ǌ","ó","ŏ","ǒ","ô","ố","ộ","ồ","ổ","ỗ","ö","ȫ","ȯ","ȱ","ọ","ő","ȍ","ò","ỏ","ơ","ớ","ợ","ờ","ở","ỡ","ȏ","ꝋ","ꝍ","ⱺ","ō","ṓ","ṑ","ǫ","ǭ","ø","ǿ","õ","ṍ","ṏ","ȭ","ƣ","ꝏ","ɛ","ᶓ","ɔ","ᶗ","ȣ","ṕ","ṗ","ꝓ","ƥ","ᵱ","ᶈ","ꝕ","ᵽ","ꝑ","ꝙ","ʠ","ɋ","ꝗ","ŕ","ř","ŗ","ṙ","ṛ","ṝ","ȑ","ɾ","ᵳ","ȓ","ṟ","ɼ","ᵲ","ᶉ","ɍ","ɽ","ↄ","ꜿ","ɘ","ɿ","ś","ṥ","š","ṧ","ş","ŝ","ș","ṡ","ṣ","ṩ","ʂ","ᵴ","ᶊ","ȿ","ɡ","ß","ᴑ","ᴓ","ᴝ","ť","ţ","ṱ","ț","ȶ","ẗ","ⱦ","ṫ","ṭ","ƭ","ṯ","ᵵ","ƫ","ʈ","ŧ","ᵺ","ɐ","ᴂ","ǝ","ᵷ","ɥ","ʮ","ʯ","ᴉ","ʞ","ꞁ","ɯ","ɰ","ᴔ","ɹ","ɻ","ɺ","ⱹ","ʇ","ʌ","ʍ","ʎ","ꜩ","ú","ŭ","ǔ","û","ṷ","ü","ǘ","ǚ","ǜ","ǖ","ṳ","ụ","ű","ȕ","ù","ủ","ư","ứ","ự","ừ","ử","ữ","ȗ","ū","ṻ","ų","ᶙ","ů","ũ","ṹ","ṵ","ᵫ","ꝸ","ⱴ","ꝟ","ṿ","ʋ","ᶌ","ⱱ","ṽ","ꝡ","ẃ","ŵ","ẅ","ẇ","ẉ","ẁ","ⱳ","ẘ","ẍ","ẋ","ᶍ","ý","ŷ","ÿ","ẏ","ỵ","ỳ","ƴ","ỷ","ỿ","ȳ","ẙ","ɏ","ỹ","ź","ž","ẑ","ʑ","ⱬ","ż","ẓ","ȥ","ẕ","ᵶ","ᶎ","ʐ","ƶ","ɀ","ﬀ","ﬃ","ﬄ","ﬁ","ﬂ","ĳ","œ","ﬆ","ₐ","ₑ","ᵢ","ⱼ","ₒ","ᵣ","ᵤ","ᵥ","ₓ","cleaned","latinise","getLength","subLength","obj","origin","hostname","port","basename","getSiteURLFromWindowObject","unescaped","decodeURIComponent","unescape","defaultUrl","getScheme","PayloadSources","Flux","warn","SERVER_ACTION","VIEW_ACTION","SUPPORTS_CLEAR_MARKS","isSupported","performance","SUPPORTS_MARK","SUPPORTS_MEASURE_METHODS","getEntries","getEntriesByName","clearMeasures","properties","user_actual_id","track","isDevMode","name1","name2","performanceEntries","every","measurementName","lastDuration","entryName","entriesWithName","mostRecentDurationByEntryName","timing","loadEventEnd","navigationStart","_window$performance$t","checks","len","EnableDeveloper","saveConfig","_saveConfig","AdminActions","reloadConfig","_reloadConfig","adminResetMfa","_adminResetMfa","getClusterStatus","_getClusterStatus","ldapTest","_ldapTest","invalidateAllCaches","_invalidateAllCaches","recycleDatabaseConnection","_x15","_x16","_recycleDatabaseConnection","adminResetPassword","_x17","_adminResetPassword","adminResetEmail","_adminResetEmail","getOAuthAppInfo","allowOAuth2","redirectUri","scope","authorizeOAuthApp","emailToLdap","_emailToLdap","ldapId","emailToOAuth","_x39","_emailToOAuth","newType","oauthToEmail","_x40","_x41","_x42","_oauthToEmail","currentService","follow_link","uploadBrandImage","_uploadBrandImage","brandImage","uploadLicenseFile","_uploadLicenseFile","removeLicenseFile","_removeLicenseFile","uploadPublicSamlCertificate","_uploadPublicSamlCertificate","uploadPrivateSamlCertificate","_uploadPrivateSamlCertificate","_ref18","uploadIdpSamlCertificate","_x60","_x61","_uploadIdpSamlCertificate","_callee19","_context19","removePublicSamlCertificate","_x62","_removePublicSamlCertificate","removePrivateSamlCertificate","_removePrivateSamlCertificate","removeIdpSamlCertificate","_removeIdpSamlCertificate","getStandardAnalytics","_getStandardAnalytics","getAdvancedAnalytics","_getAdvancedAnalytics","getPostsPerDayAnalytics","_getPostsPerDayAnalytics","_callee25","_context25","getUsersPerDayAnalytics","_getUsersPerDayAnalytics","elasticsearchTest","_elasticsearchTest","testS3Connection","_testS3Connection","_ref24","elasticsearchPurgeIndexes","_elasticsearchPurgeIndexes","setNavigationBlocked","blocked","SET_NAVIGATION_BLOCKED","deferNavigation","onNavigationConfirmed","DEFER_NAVIGATION","cancelNavigation","CANCEL_NAVIGATION","confirmNavigation","thunkDispatch","thunkGetState","getOnNavigationConfirmed","CONFIRM_NAVIGATION","NOTIFY_TEXT_MAX_LENGTH","sendDesktopNotification","msgProps","userFromPost","missingProfileResponse","notifyText","msgPropsPost","strippedMarkdownNotifyText","sound","activeChannel","getProfilesByIds","channel_type","channel_display_name","channel_name","otherFile","desktop_sound","browser","isWindowsApp","isMacApp","completePostReceive","websocketMessageProps","post_utils_asyncToGenerator","PostSelectors","lastPostActions","INCREASE_POST_VISIBILITY","amount","RECEIVED_POSTS","shouldIgnorePost","markAsRead","markAsReadOnServer","markChannelAsViewed","markChannelAsUnread","setChannelReadAndView","post_actions_asyncToGenerator","myChannelMember","getMyChannelMemberSelector","getPostsForIds","flaggedPost","comparePosts","SearchTypes","RECEIVED_SEARCH_POSTS","_createPost","EMOJI_PATTERN","finish","storeCommentDraft","storeDraft","StorageActions","rootPostId","_updatePost","addRecentEmoji","POST_INCREASE_AMOUNT","currentPostVisibility","LOADING_POSTS","RhsActions","canEditNow","AllowEditPost","ALLOW_EDIT_POST_NEVER","ALLOW_EDIT_POST_TIME_LIMIT","PostEditTimeLimit","SHOW_EDIT_POST_MODAL","HIDE_EDIT_POST_MODAL","hardDelete","REMOVE_POST","EMBED_VISIBLE","resetEmbedVisibility","MentionableRenderer","AUTO_RESPONDER","isPostOwner","isEdited","edit_at","getImageSrc","getBaseRoute","canDeletePost","DELETE_OTHERS_POSTS","canEditPost","isOwner","EDIT_OTHERS_POSTS","timeLeft","shouldShowDotMenu","mentionableText","formatWithRenderer","V","sendOnCtrlEnter","isSendMessageOnCtrlEnter","TRIPLE_BACK_TICKS","splitMessage","line","lastPart","canAutomaticallyCloseBackticks","sendMessageOnCtrlEnter","sendCodeBlockOnCtrlEnter","rhs","selectedChannelId","selectedPost","selectedPostChannelId","exists","searchResultsTerms","prefixId","suffixId","defaultDraft","makeGetGlobalItem","isSidebarOpen","isMenuOpen","isSidebarExpanded","ConfirmModal","handleConfirm","checkbox","handleKeypress","cancelText","cancelButton","react_intl__WEBPACK_IMPORTED_MODULE_5__","hideCancel","react_bootstrap__WEBPACK_IMPORTED_MODULE_4__","modalClass","SettingItemMax","shiftEnter","setting","hintClass","infoPosition","components_save_button_jsx__WEBPACK_IMPORTED_MODULE_5__","saveButtonText","widthClass","react_intl__WEBPACK_IMPORTED_MODULE_4__","containerStyle","submitExtra","FormError","margin","removeMarkdown","punctuation","AT_MENTION_PATTERN","htmlEmojiPattern","cjkPattern","inputOptions","output","searchPatterns","convertSearchTermToRegex","termString","_terms","puncStart","puncEnd","parseSearchTerms","doFormatText","sanitizeHtml","replaceNewlines","replaceAtMentionWithToken","fullMatch","originalText","autolinkAtMentions","channelMentionExists","addToken","mention","spacer","channelNameLower","escapeHtml","originalChannelName","autolinkChannelMentions","newTokens","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_step4$value","newAlias","hashtag","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","newToken","MIN_HASHTAG_LINK_LENGTH","autolinkHashtags","reEmail","autolinkEmails","highlightSearchTerms","tokenTextLower","replaceCurrentMentionWithToken","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","caseSensitive","escapeRegex","highlightCurrentMentions","twemoji","hasUnicode","getUnicode","replaceTokens","htmlEntities","\"","'","convertEntityToCharacter","replaceSearchTermWithToken","word","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_step7$value","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","UserStoreClass","subscribe","newEntities","emitChange","profilesInChannel","emitInChannelChange","profilesNotInChannel","emitNotInChannelChange","profilesInTeam","emitInTeamChange","profilesNotInTeam","emitNotInTeamChange","profilesWithoutTeam","emitWithoutTeamChange","emitStatusesChange","myAudits","emitAuditsChange","mySessions","emitSessionsChange","skipCurrent","skipInactive","getProfilesUsernameMap","profileMap","getActiveOnlyProfiles","allowInactive","RECEIVED_PROFILE","getProfileListForIds","RECEIVED_PROFILE_NOT_IN_TEAM","RECEIVED_PROFILE_IN_TEAM","RECEIVED_PROFILE_IN_CHANNEL","RECEIVED_PROFILE_NOT_IN_CHANNEL","RECEIVED_STATUSES","mm_config","setMaxListeners","mattermost_redux_selectors_entities_general__WEBPACK_IMPORTED_MODULE_0__","mattermost_redux_selectors_entities_i18n__WEBPACK_IMPORTED_MODULE_1__","i18n_i18n__WEBPACK_IMPORTED_MODULE_2__","getCurrentUserLocale","DefaultClientLocale","i18n","en","SettingItemMin","edit","editButton","describeSection","disableOpen","getEdit","UPDATE_RHS_STATE","UPDATE_RHS_SEARCH_TERMS","performSearch","userCurrentTimezone","timezoneOffset","getUtcOffsetForTimeZone","getBrowserUtcOffset","searchPostsWithParams","is_or_search","include_deleted_channels","time_zone_offset","per_page","UPDATE_RHS_SEARCH_RESULTS_TERMS","getSearchActions","RECEIVED_SEARCH_TERM","isOrSearch","SEARCH_POSTS_SUCCESS","getPreRHSSearchActions","searchPostRequest","updateRHSState","getPostRHSSearchActions","searchPostSuccess","searchActions","preRHSSearchActions","postRHSSearchActions","SEARCH_FLAGGED_POSTS_REQUEST","SEARCH_FLAGGED_POSTS_FAILURE","SEARCH_FLAGGED_POSTS_SUCCESS","SEARCH_PINNED_POSTS_REQUEST","SEARCH_PINNED_POSTS_FAILURE","SEARCH_PINNED_POSTS_SUCCESS","TOGGLE_RHS_MENU","openMenu","OPEN_RHS_MENU","closeMenu","CLOSE_RHS_MENU","expanded","SET_RHS_EXPANDED","TOGGLE_RHS_EXPANDED","NotificationPrefs","TeamStoreClass","doEmit","emitUnreadChange","membersInTeam","emitStatsChange","getAll","TeamTypes","SELECT_TEAM","getTeamUrl","getStats","saveTeams","RECEIVED_TEAMS","getTeamListings","saveTeam","setCurrentId","RECEIVED_TEAM_STATS","RECEIVED_MY_TEAM_MEMBERS","saveMyTeamMembers","RECEIVED_MEMBERS_IN_TEAM","REMOVE_MEMBER_FROM_TEAM","getMemberInTeam","newMember","RECEIVED_MY_TEAM_MEMBER","getMyMember","RECEIVED_MY_TEAM","saveMyTeam","RECEIVED_TEAM","CREATED_TEAM","appendMyTeamMember","UPDATE_TEAM","RECEIVED_ALL_TEAMS","team_members","RECEIVED_MY_TEAMS_UNREAD","saveMyTeamMembersUnread","RECEIVED_ALL_TEAM_LISTINGS","saveTeamListings","saveMembersInTeam","saveStats","_openDirectChannelToUser","setPreference","_openGroupChannelToUsers","_loadChannelsForCurrentUser","loadDMsAndGMsForUnreads","getUnreadCounts","msgs","_searchMoreChannels","_autocompleteChannels","_autocompleteChannelsForSearch","_getChannelMembersForUserIds","uId","ChannelStoreClass","setUnreadCountsByChannels","setUnreadCountsByMembers","emitLastViewed","postMode","POST_MODE_CHANNEL","unreadCounts","doFindFirst","getMoreChannels","findFirstBy","getMyMembers","findFirstMoreBy","ChannelTypes","SELECT_CHANNEL","SELECT_CHANNEL_WITH_MEMBER","getChannelById","membersToStore","memberToStore","setUnreadCountByChannel","storeMyChannelMembersList","found","storeChannels","RECEIVED_CHANNELS","RECEIVED_MY_CHANNEL_MEMBER","RECEIVED_MY_CHANNEL_MEMBERS","RECEIVED_CHANNEL_MEMBERS","getMembersInChannel","channelMap","_this5","ch","chMember","chMentionCount","chUnreadCount","moreKey","moreChannel","markRead","RECEIVED_CHANNEL","setPostMode","POST_MODE_FOCUS","storeChannel","storeMyChannelMember","RECEIVED_CHANNEL_MEMBER","storeMoreChannels","RECEIVED_MEMBERS_IN_CHANNEL","saveMembersInChannel","channel_members","RECEIVED_CHANNEL_STATS","incrementMessages","channelstore","TeamPermissionGate","ErrorStoreClass","getLastError","storeLastError","getIgnoreNotification","ignore_notification","lastError","removeGlobalItem","utils_constants__WEBPACK_IMPORTED_MODULE_0__","MODAL_OPEN","MODAL_CLOSE","latestPrefix","latestComplete","requestStarted","_removeUserFromTeam","TeamActions","addUserToTeamFromInvite","addToTeamFromInvite","getInviteInfo","getTeamInviteInfo","inviteData","_inviteMembers","emails","SaveButton","savingMessage","extraClasses","react__WEBPACK_IMPORTED_MODULE_7___default","Pluggable","child","Children","only","childrenProps","componentName","getComponentName","cloneElement","statusesToLoad","getPostsInCurrentChannel","dmPrefs","getDirectShowPreferences","loadStatusesByIds","intervalId","STATUS_INTERVAL","isLocalStorageSupported","logoutId","ANNOUNCEMENT","sessionStorage","setItem","hasCheckedLocalStorage","localStorageSupported","LOCAL_STORAGE","LANDING_PAGE_SEEN","landingPageSeen","ProfilePicture","plugins_pluggable__WEBPACK_IMPORTED_MODULE_5__","components_profile_popover__WEBPACK_IMPORTED_MODULE_6__","components_status_icon__WEBPACK_IMPORTED_MODULE_7__","LICENSE_EXPIRY_NOTIFICATION","LICENSE_GRACE_PERIOD","AnnouncementBar","resendStatus","showSpinner","sendVerificationEmail","handleEmailResend","canViewSystemErrors","AnnouncementBarMessages","SITE_URL","enablePreviewMode","PREVIEW_MODE","ExpiresAt","isLicensePastGracePeriod","isLicenseExpired","LICENSE_EXPIRED","AnnouncementBarTypes","CRITICAL","isLicenseExpiring","LICENSE_EXPIRING","LICENSE_PAST_GRACE","isLoggedIn","email_verified","requireEmailVerification","EMAIL_VERIFICATION_REQUIRED","onErrorChange","onAnalyticsChange","EMAIL_VERIFIED","setInitialError","enableBanner","bannerText","bannerColor","bannerTextColor","allowBannerDismissal","textColor","allowDismissal","bannerDismissed","colorText","AnalyticsStore","wasFixed","isFixed","totalUsers","getAllSystem","StatTypes","TOTAL_USERS","clearNotificationError","barClass","dismissClass","barStyle","linkStyle","DEVELOPER","renewalLink","RENEWAL_LINK","WEBSOCKET_PORT_ERROR","enableSignUpWithGitLab","docsLink","createEmailResendLink","canViewAPIv3Banner","RequireEmailVerification","EnablePreviewModeBanner","BannerText","AllowBannerDismissal","EnableBanner","BannerColor","BannerTextColor","EnableSignUpWithGitLab","SystemPermissionGate","customEmojisByName","storage","getItemFromStorage","RECENT_EMOJI_KEY","utils_constants_jsx__WEBPACK_IMPORTED_MODULE_0__","utils_user_agent__WEBPACK_IMPORTED_MODULE_1__","enableFileAttachments","EnableFileAttachments","enableMobileFileUpload","EnableMobileFileUpload","EnableMobileFileDownload","MAX_FILENAME_LENGTH","findNextUnreadChannelId","languages","de","es","fr","it","ja","ko","nl","pl","pt-BR","ro","ru","tr","zh-TW","zh-CN","getAllLanguages","getLanguages","AvailableLocales","l","getLanguageInfo","isLanguageAvailable","safariFix","doAddLocaleData","addLocaleData","enLocaleData","deLocaleData","esLocaleData","frLocaleData","itLocaleData","jaLocaleData","koLocaleData","nlLocaleData","plLocaleData","ptLocaleData","roLocaleData","ruLocaleData","trLocaleData","zhLocaleData","MIN_TIME_BEFORE_CLICK","SuggestionBox","delay","relatedTarget","presentationType","handleEmitClearSuggestions","requiredCharacters","handleFocusIn","handleFocusOut","handlePopoverMentionKeyClick","handleCompleteWord","handleCompositionStart","handleCompositionUpdate","handleCompositionEnd","handlePretextChanged","registerSuggestionBox","composing","addPopoverMentionKeyClickListener","addPretextChangedListener","removePopoverMentionKeyClickListener","removePretextChangedListener","unregisterSuggestionBox","getInput","getDOMNode","getPretext","doEmitSuggestionPretextChanged","insertText","addTextAtCaret","caret","keepPretext","termWithoutMatched","overlap","findOverlap","replaceText","getItems","getTerms","provider","hasSuggestions","getSelection","getSelectedMatchedPretext","handled","SuggestionListComponent","SuggestionDateComponent","react__WEBPACK_IMPORTED_MODULE_10___default","setContainerRef","components_quick_input_jsx__WEBPACK_IMPORTED_MODULE_13__","onCompositionStart","onCompositionUpdate","onCompositionEnd","aLower","bLower","getContent","scrollToItem","cleared","visibleContentHeight","contentTop","contentTopPadding","css","contentBottomPadding","itemTop","itemBottomMargin","itemBottom","react_intl__WEBPACK_IMPORTED_MODULE_6__","components_formatted_markdown_message__WEBPACK_IMPORTED_MODULE_9__","lastType","renderDivider","renderLoading","mainClass","contentClass","SET_MODAL_SEARCH","setSystemUsersSearch","SET_SYSTEM_USERS_SEARCH","makeGetItem","getPrefix","getSupportedTimezones","getBrowserTimezone","moment_timezone__WEBPACK_IMPORTED_MODULE_1__","moment_timezone__WEBPACK_IMPORTED_MODULE_1___default","stores_redux_store_jsx__WEBPACK_IMPORTED_MODULE_2__","getTimezones","moment","tz","guess","utcOffset","getKey","setPreferencesFromServer","deletePreference","MAX_WEBSOCKET_FAILS","pluginEventHandlers","connUrl","WebsocketURL","host","WebsocketSecurePort","WebsocketPort","getUrlVersion","setEventCallback","handleEvent","setFirstConnectCallback","handleFirstConnect","setReconnectCallback","setMissedEventCallback","setCloseCallback","pluginReconnectHandlers","StatusActions","SYNC_INTERVAL_MILLISECONDS","events","failCount","SocketEvents","POSTED","EPHEMERAL_MESSAGE","getProfilesAndStatusesForPosts","handleNewPostEvent","POST_EDITED","broadcast","POST_UPDATED","handlePostEditEvent","handlePostDeleteEvent","removeMyTeamMember","removeProfileFromTeam","removeMemberInTeam","handleLeaveTeamEvent","updateTeam","handleUpdateTeamEvent","DELETE_TEAM","deletedTeam","_state$entities$teams","newTeamId","memberTeamId","RECEIVED_TEAM_DELETED","UPDATED_TEAM","handleDeleteTeamEvent","ADDED_TO_TEAM","handleTeamAddedEvent","USER_ADDED","handleUserAddedEvent","USER_REMOVED","remover_id","sentState","handleUserRemovedEvent","USER_UPDATED","getMe","saveProfile","handleUserUpdatedEvent","ROLE_ADDED","RoleTypes","RECEIVED_ROLE","handleRoleAddedEvent","ROLE_REMOVED","ROLE_DELETED","handleRoleRemovedEvent","MEMBERROLE_UPDATED","updateMyRoles","handleUpdateMemberRoleEvent","ROLE_UPDATED","handleRoleUpdatedEvent","CHANNEL_CREATED","handleChannelCreatedEvent","RECEIVED_CHANNEL_DELETED","deleteAt","handleChannelDeletedEvent","CHANNEL_CONVERTED","handleChannelConvertedEvent","CHANNEL_UPDATED","handleChannelUpdatedEvent","CHANNEL_MEMBER_UPDATED","handleChannelMemberUpdatedEvent","DIRECT_ADDED","handleDirectAddedEvent","PREFERENCE_CHANGED","handlePreferenceChangedEvent","PREFERENCES_CHANGED","handlePreferencesChangedEvent","PREFERENCES_DELETED","handlePreferencesDeletedEvent","TYPING","WebsocketEvents","STOP_TYPING","handleUserTypingEvent","STATUS_CHANGED","handleStatusChangedEvent","HELLO","setServerVersion","server_version","handleHelloEvent","REACTION_ADDED","getCustomEmojiForReaction","RECEIVED_REACTION","handleReactionAddedEvent","REACTION_REMOVED","REACTION_DELETED","handleReactionRemovedEvent","EMOJI_ADDED","EmojiTypes","RECEIVED_CUSTOM_EMOJI","handleAddEmoji","CHANNEL_VIEWED","resetCounts","handleChannelViewedEvent","PLUGIN_ENABLED","RECEIVED_WEBAPP_PLUGIN","handlePluginEnabled","PLUGIN_DISABLED","handlePluginDisabled","USER_ROLE_UPDATED","demoted","PERMISSIONS_SYSTEM_ADMIN","handleUserRoleUpdated","CONFIG_CHANGED","GeneralTypes","CLIENT_CONFIG_RECEIVED","handleConfigChanged","LICENSE_CHANGED","CLIENT_LICENSE_RECEIVED","handleLicenseChanged","PLUGIN_STATUSES_CHANGED","AdminTypes","RECEIVED_PLUGIN_STATUSES","plugin_statuses","handlePluginStatusesChangedEvent","pluginEvents","emitSuggestionsChanged","emitPretextChanged","addCompleteWordListener","removeCompleteWordListener","emitCompleteWord","delete","some","_suggestion$terms","_suggestion$items","setSelectionByDelta","delta","selectionIndex","setPretext","clearSelection","suggestionBoxExists","ensureSelectionExists","checkIfPretextMatches","selectNext","selectPrevious","completeWord","StatusAwayAvatarIcon","StatusAwayIcon","StatusDndAvatarIcon","StatusDndIcon","StatusOfflineIcon","StatusOnlineAvatarIcon","StatusOnlineIcon","StatusIcon","IconComponent","StatusOfflineAvatarIcon","formattingOptions","heading","paragraph","searchedContent","searched","dimensions","out","xhtml","level","isUrl","outHref","scheme","html","_","fromCharCode","unescapeHtmlEntities","internalLink","tablecell","bullet","taskListReg","isTaskList","format","markdownOptions","gfm","tables","mangle","Emojis","EmojiIndicesByUnicode","EmojiIndicesByCategory","addEmoji","_addEmoji","EmojiActions","INCREMENT_EMOJI_PICKER_PAGE","MAXIMUM_RECENT_EMOJI","TOGGLE_LHS","OPEN_LHS","CLOSE_LHS","getPreviousTeamIdKey","getPreviousChannelNameKey","getPenultimateChannelNameKey","wasLoggedIn","compareTeamsByDisplayName","getNavigationBlocked","admin","navigationBlock","showNavigationPrompt","ModalToggleButton","dialog","LatexBlock","katex","renderToString","throwOnError","displayMode","WAIT_FOR_HEIGHT_TIMEOUT","MarkdownImage","markdown_image_classCallCheck","markdown_image_defineProperty","markdown_image_assertThisInitialized","markdown_image_possibleConstructorReturn","markdown_image_getPrototypeOf","heightTimeout","waitForHeight","stopWaitingForHeight","handleLoad","onError","PostEmoji","emojiText","displayTextOnly","nonExistentEmoji","parser","Parser","processNodeDefinitions","ProcessNodeDefinitions","processingInstructions","replaceChildren","shouldProcessNode","attribs","processNode","post_emoji","_node$attribs","markdown_image_MarkdownImage","latex","latex_block_LatexBlock","processDefaultNode","parseWithInstructions","FileInfoPreview","infoParts","infoString","security","notifications","advanced","checkEmail","confirmTitle","confirmMsg","confirmBtns","prev_active_section","customConfirmAction","afterConfirm","handleCollapse","skipConfirm","loadUserSettings","prevActiveSection","setEnforceFocus","setRequireConfirm","handleCancelConfirmation","closeUnusedDirectMessages","CloseUnusedDirectMessages","experimentalGroupUnreadChannels","MultiSelectList","defaultOptionRenderer","handleArrowPress","setSelected","toSelect","elemTop","elemBottom","listTop","optionControls","onAction","onPageChange","MultiSelect","multiselect_classCallCheck","multiselect_assertThisInitialized","multiselect_possibleConstructorReturn","multiselect_getPrototypeOf","reactSelect","handleInputChange","change","removedValue","handleEnterPress","noteTextContainer","optionsToDisplay","valueMap","memberOptions","react_select_esm","isMulti","styles","nullComponent","IndicatorsContainer","MultiValueLabel","paddedComponent","isClearable","openMenuOnFocus","onInputChange","onInputKeyDown","inputValue","save_button","multiselect_list_MultiSelectList","paddingRight","paddingLeft","borderRight","verticalAlign","control","base","borderRadius","&:hover","multiValue","whiteSpace","multiValueRemove",":hover","emoticonPatterns","slightly_smiling_face","wink","open_mouth","scream","smirk","smile","stuck_out_tongue_closed_eyes","stuck_out_tongue","rage","slightly_frowning_face","cry","confused","confounded","neutral_face","flushed","mask","heart","broken_heart","thumbsup","thumbsdown","handleEmoticons","replaceEmoticonWithToken","matchText","key_mirror__WEBPACK_IMPORTED_MODULE_0__","key_mirror__WEBPACK_IMPORTED_MODULE_0___default","keyMirror","AnalyticsStoreClass","analyticsChanged","teamAnalyticsChanged","teamAnalytics","teamStats","MattermostLogo","react__WEBPACK_IMPORTED_MODULE_2___default","st0","QuickInput","updateInputFromProps","setInput","MenuIcon","dismissNotice","DISMISS_NOTICE","notices","adminOnly","mattermostIcon","allowForget","InstallationDate","IssuedAt","Cluster","SystemNotice","notice","dismissedNotices","remind","getCurrentNotice","CATEGORY_SYSTEM_NOTICE","hideAndRemind","hideAndForget","getPreferenceNameMap","nameMap","hasBeenDismissed","Notices","ProfilePopover","handleMentionKeyClick","handleEditAccountSettings","loadingDMChannel","arrowOffsetLeft","arrowOffsetTop","positionLeft","positionTop","popoverProps","dataContent","fullname","MAX_POSITION_LENGTH","AboutBuildModal","doHide","licensee","subTitle","learnMore","BuildEnterpriseReady","Company","buildnumber","BuildNumber","mmversion","Version","SQLDriverName","currentYear","BuildHash","BuildHashEnterprise","webappBuildHash","COMMIT_HASH","BuildDate","promises","getClientConfig","getLicenseConfig","RECEIVED_TRANSLATIONS","customEmojisArray","codepoint","systemIndex","customIndex"],"mappings":"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IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,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,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IAIHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IAEHC,IAAG,KAGHC,IAAG,KACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IAQHC,IAAG,KAQHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IAEHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IAGHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IAIHC,IAAG,KACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IAGHC,IAAG,KACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IAEHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IAGHC,IAAG,KACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IAIHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IAKHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,KAEHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,KACHC,IAAG,KACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,KACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IAEHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IAGHC,IAAG,IACHC,IAAG,IACHC,I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,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,YAAY,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,YAAY,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,OAAO,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,OAAO,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,4BAA4B,MAAM,4BAA4B,MAAM,aAAa,MAAM,4BAA4B,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,kCAAkC,MAAM,kCAAkC,MAAM,kCAAkC,MAAM,kCAAkC,MAAM,QAAQ,MAAM,aAAa,MAAM,6CAA6C,MAAM,6CAA6C,MAAM,6CAA6C,MAAM,6CAA6C,MAAM,QAAQ,MAAM,aAAa,MAAM,8BAA8B,MAAM,mCAAmC,MAAM,yCAAyC,MAAM,8CAA8C,MAAM,yCAAyC,MAAM,8CAA8C,MAAM,yCAAyC,MAAM,8CAA8C,MAAM,8BAA8B,MAAM,mCAAmC,MAAM,8BAA8B,MAAM,mCAAmC,MAAM,yCAAyC,MAAM,8CAA8C,MAAM,yCAAyC,MAAM,8CAA8C,MAAM,yCAAyC,MAAM,8CAA8C,MAAM,8BAA8B,MAAM,mCAAmC,MAAM,8BAA8B,MAAM,mCAAmC,MAAM,yCAAyC,MAAM,8CAA8C,MAAM,yCAAyC,MAAM,8CAA8C,MAAM,yCAAyC,MAAM,8CAA8C,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,8BAA8B,MAAM,mCAAmC,MAAM,8BAA8B,MAAM,mCAAmC,MAAM,8BAA8B,MAAM,mCAAmC,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,mBAAmB,MAAM,wBAAwB,MAAM,8BAA8B,MAAM,mCAAmC,MAAM,8BAA8B,MAAM,mCAAmC,MAAM,8BAA8B,MAAM,mCAAmC,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,OAAO,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,OAAO,MAAM,YAAY,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,OAAO,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,OAAO,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,OAAO,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,4BAA4B,MAAM,4BAA4B,MAAM,aAAa,MAAM,4BAA4B,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,2BAA2B,MAAM,2BAA2B,MAAM,YAAY,MAAM,2BAA2B,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,4BAA4B,MAAM,4BAA4B,MAAM,aAAa,MAAM,4BAA4B,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,OAAO,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,OAAO,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,OAAO,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,OAAO,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,OAAO,MAAM,YAAY,MAAM,OAAO,MAAM,YAAY,MAAM,OAAO,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,OAAO,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,OAAO,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,OAAO,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,OAAO,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,OAAO,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,aAAa,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,OAAO,MAAM,YAAY,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAM,OAAO,MAAM,YAAY,MAAM,OAAO,MAAM,YAAY,MAAM,OAAO,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,aAAa,MAAM,YAAY,MAAO,YAAY,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,YAAY,OAAO,QAAQ,OAAO,aAAa,OAAO,YAAY,OAAO,OAAO,OAAO,YAAY,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,YAAY,OAAO,YAAY,OAAO,OAAO,OAAO,YAAY,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,YAAY,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,YAAY,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,YAAY,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,YAAY,OAAO,OAAO,OAAO,YAAY,OAAO,OAAO,OAAO,YAAY,OAAO,OAAO,OAAO,YAAY,OAAO,OAAO,OAAO,YAAY,OAAO,OAAO,OAAO,YAAY,OAAO,OAAO,OAAO,YAAY,OAAO,OAAO,OAAO,YAAY,OAAO,OAAO,OAAO,YAAY,OAAO,OAAO,OAAO,YAAY,OAAO,OAAO,OAAO,YAAY,OAAO,YAAY,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,OAAO,OAAO,YAAY,OAAO,OAAO,OAAO,YAAY,OAAO,OAAO,OAAO,YAAY,OAAO,YAAY,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,OAAO,OAAO,YAAY,OAAO,OAAO,OAAO,YAAY,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,YAAY,OAAO,YAAY,OAAO,QAAQ,OAAO,aAAa,OAAO,YAAY,OAAO,YAAY,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,mBAAmB,OAAO,wBAAwB,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,QAAQ,OAAO,aAAa,OAAO,wBAAwB,OAAO,wBAAwB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,QAAQ,OAAO,aAAa,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,mBAAmB,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,MAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6B,OAAO,6BAA6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","file":"3.36dc7716ee035e73f907.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport marked from 'marked';\n\nexport default class RemoveMarkdown extends marked.Renderer {\n    code(text) {\n        return text.replace(/\\n/g, ' ');\n    }\n\n    blockquote(text) {\n        return text.replace(/\\n/g, ' ');\n    }\n\n    heading(text) {\n        return text + ' ';\n    }\n\n    hr() {\n        return '';\n    }\n\n    list(body) {\n        return body;\n    }\n\n    listitem(text) {\n        return text + ' ';\n    }\n\n    paragraph(text) {\n        return text;\n    }\n\n    table() {\n        return '';\n    }\n\n    tablerow() {\n        return '';\n    }\n\n    tablecell() {\n        return '';\n    }\n\n    strong(text) {\n        return text;\n    }\n\n    em(text) {\n        return text;\n    }\n\n    codespan(text) {\n        return text.replace(/\\n/g, ' ');\n    }\n\n    br() {\n        return ' ';\n    }\n\n    del(text) {\n        return text;\n    }\n\n    link(href, title, text) {\n        return text;\n    }\n\n    image(href, title, text) {\n        return text;\n    }\n\n    text(text) {\n        return text.replace('\\n', ' ');\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport hlJS from 'highlight.js/lib/highlight.js';\nimport hljsActionscript from 'highlight.js/lib/languages/actionscript.js';\nimport hljsApplescript from 'highlight.js/lib/languages/applescript.js';\nimport hljsBash from 'highlight.js/lib/languages/bash.js';\nimport hljsClojure from 'highlight.js/lib/languages/clojure.js';\nimport hljsCoffeescript from 'highlight.js/lib/languages/coffeescript.js';\nimport hljsCpp from 'highlight.js/lib/languages/cpp.js';\nimport hljsCs from 'highlight.js/lib/languages/cs.js';\nimport hljsCss from 'highlight.js/lib/languages/css.js';\nimport hljsD from 'highlight.js/lib/languages/d.js';\nimport hljsDart from 'highlight.js/lib/languages/dart.js';\nimport hljsDelphi from 'highlight.js/lib/languages/delphi.js';\nimport hljsDiff from 'highlight.js/lib/languages/diff.js';\nimport hljsDjango from 'highlight.js/lib/languages/django.js';\nimport hljsDockerfile from 'highlight.js/lib/languages/dockerfile.js';\nimport hljsErlang from 'highlight.js/lib/languages/erlang.js';\nimport hljsFortran from 'highlight.js/lib/languages/fortran.js';\nimport hljsFsharp from 'highlight.js/lib/languages/fsharp.js';\nimport hljsGcode from 'highlight.js/lib/languages/gcode.js';\nimport hljsGo from 'highlight.js/lib/languages/go.js';\nimport hljsGroovy from 'highlight.js/lib/languages/groovy.js';\nimport hljsHandlebars from 'highlight.js/lib/languages/handlebars.js';\nimport hljsHaskell from 'highlight.js/lib/languages/haskell.js';\nimport hljsHaxe from 'highlight.js/lib/languages/haxe.js';\nimport hljsJava from 'highlight.js/lib/languages/java.js';\nimport hljsJavascript from 'highlight.js/lib/languages/javascript.js';\nimport hljsJson from 'highlight.js/lib/languages/json.js';\nimport hljsJulia from 'highlight.js/lib/languages/julia.js';\nimport hljsKotlin from 'highlight.js/lib/languages/kotlin.js';\nimport hljsLess from 'highlight.js/lib/languages/less.js';\nimport hljsLisp from 'highlight.js/lib/languages/lisp.js';\nimport hljsLua from 'highlight.js/lib/languages/lua.js';\nimport hljsMakefile from 'highlight.js/lib/languages/makefile.js';\nimport hljsMarkdown from 'highlight.js/lib/languages/markdown.js';\nimport hljsMatlab from 'highlight.js/lib/languages/matlab.js';\nimport hljsObjectivec from 'highlight.js/lib/languages/objectivec.js';\nimport hljsOcaml from 'highlight.js/lib/languages/ocaml.js';\nimport hljsPerl from 'highlight.js/lib/languages/perl.js';\nimport hljsPhp from 'highlight.js/lib/languages/php.js';\nimport hljsPowershell from 'highlight.js/lib/languages/powershell.js';\nimport hljsPuppet from 'highlight.js/lib/languages/puppet.js';\nimport hljsPython from 'highlight.js/lib/languages/python.js';\nimport hljsR from 'highlight.js/lib/languages/r.js';\nimport hljsRuby from 'highlight.js/lib/languages/ruby.js';\nimport hljsRust from 'highlight.js/lib/languages/rust.js';\nimport hljsScala from 'highlight.js/lib/languages/scala.js';\nimport hljsScheme from 'highlight.js/lib/languages/scheme.js';\nimport hljsScss from 'highlight.js/lib/languages/scss.js';\nimport hljsSmalltalk from 'highlight.js/lib/languages/smalltalk.js';\nimport hljsSql from 'highlight.js/lib/languages/sql.js';\nimport hljsStylus from 'highlight.js/lib/languages/stylus.js';\nimport hljsSwift from 'highlight.js/lib/languages/swift.js';\nimport hljsTex from 'highlight.js/lib/languages/tex.js';\nimport hljsVbnet from 'highlight.js/lib/languages/vbnet.js';\nimport hljsVbscript from 'highlight.js/lib/languages/vbscript.js';\nimport hljsVerilog from 'highlight.js/lib/languages/verilog.js';\nimport hljsXml from 'highlight.js/lib/languages/xml.js';\nimport hljsYaml from 'highlight.js/lib/languages/yaml.js';\n\nimport Constants from './constants.jsx';\nimport * as TextFormatting from './text_formatting.jsx';\n\nhlJS.registerLanguage('actionscript', hljsActionscript);\nhlJS.registerLanguage('applescript', hljsApplescript);\nhlJS.registerLanguage('bash', hljsBash);\nhlJS.registerLanguage('clojure', hljsClojure);\nhlJS.registerLanguage('coffeescript', hljsCoffeescript);\nhlJS.registerLanguage('cpp', hljsCpp);\nhlJS.registerLanguage('cs', hljsCs);\nhlJS.registerLanguage('css', hljsCss);\nhlJS.registerLanguage('d', hljsD);\nhlJS.registerLanguage('dart', hljsDart);\nhlJS.registerLanguage('delphi', hljsDelphi);\nhlJS.registerLanguage('diff', hljsDiff);\nhlJS.registerLanguage('django', hljsDjango);\nhlJS.registerLanguage('dockerfile', hljsDockerfile);\nhlJS.registerLanguage('erlang', hljsErlang);\nhlJS.registerLanguage('fortran', hljsFortran);\nhlJS.registerLanguage('fsharp', hljsFsharp);\nhlJS.registerLanguage('gcode', hljsGcode);\nhlJS.registerLanguage('go', hljsGo);\nhlJS.registerLanguage('groovy', hljsGroovy);\nhlJS.registerLanguage('handlebars', hljsHandlebars);\nhlJS.registerLanguage('haskell', hljsHaskell);\nhlJS.registerLanguage('haxe', hljsHaxe);\nhlJS.registerLanguage('java', hljsJava);\nhlJS.registerLanguage('javascript', hljsJavascript);\nhlJS.registerLanguage('json', hljsJson);\nhlJS.registerLanguage('julia', hljsJulia);\nhlJS.registerLanguage('kotlin', hljsKotlin);\nhlJS.registerLanguage('less', hljsLess);\nhlJS.registerLanguage('lisp', hljsLisp);\nhlJS.registerLanguage('lua', hljsLua);\nhlJS.registerLanguage('makefile', hljsMakefile);\nhlJS.registerLanguage('markdown', hljsMarkdown);\nhlJS.registerLanguage('matlab', hljsMatlab);\nhlJS.registerLanguage('objectivec', hljsObjectivec);\nhlJS.registerLanguage('ocaml', hljsOcaml);\nhlJS.registerLanguage('perl', hljsPerl);\nhlJS.registerLanguage('php', hljsPhp);\nhlJS.registerLanguage('powershell', hljsPowershell);\nhlJS.registerLanguage('puppet', hljsPuppet);\nhlJS.registerLanguage('python', hljsPython);\nhlJS.registerLanguage('r', hljsR);\nhlJS.registerLanguage('ruby', hljsRuby);\nhlJS.registerLanguage('rust', hljsRust);\nhlJS.registerLanguage('scala', hljsScala);\nhlJS.registerLanguage('scheme', hljsScheme);\nhlJS.registerLanguage('scss', hljsScss);\nhlJS.registerLanguage('smalltalk', hljsSmalltalk);\nhlJS.registerLanguage('sql', hljsSql);\nhlJS.registerLanguage('stylus', hljsStylus);\nhlJS.registerLanguage('swift', hljsSwift);\nhlJS.registerLanguage('tex', hljsTex);\nhlJS.registerLanguage('vbnet', hljsVbnet);\nhlJS.registerLanguage('vbscript', hljsVbscript);\nhlJS.registerLanguage('verilog', hljsVerilog);\nhlJS.registerLanguage('xml', hljsXml);\nhlJS.registerLanguage('yaml', hljsYaml);\n\nconst HighlightedLanguages = Constants.HighlightedLanguages;\n\nexport function highlight(lang, code) {\n    const language = getLanguageFromNameOrAlias(lang);\n\n    if (language) {\n        try {\n            return hlJS.highlight(language, code).value;\n        } catch (e) {\n            // fall through if highlighting fails and handle below\n        }\n    }\n\n    return TextFormatting.sanitizeHtml(code);\n}\n\nexport function getLanguageFromFileExtension(extension) {\n    for (var key in HighlightedLanguages) {\n        if (HighlightedLanguages[key].extensions.find((x) => x === extension)) {\n            return key;\n        }\n    }\n\n    return null;\n}\n\nexport function canHighlight(language) {\n    return Boolean(getLanguageFromNameOrAlias(language));\n}\n\nexport function getLanguageName(language) {\n    if (canHighlight(language)) {\n        return HighlightedLanguages[getLanguageFromNameOrAlias(language)].name;\n    }\n\n    return '';\n}\n\nfunction getLanguageFromNameOrAlias(name) {\n    const langName = name.toLowerCase();\n    if (HighlightedLanguages[langName]) {\n        return langName;\n    }\n\n    return Object.keys(HighlightedLanguages).find((key) => {\n        const aliases = HighlightedLanguages[key].aliases;\n        return aliases && aliases.find((a) => a === langName);\n    });\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport Constants from 'utils/constants.jsx';\nimport icon50 from 'images/icon50x50.png';\nimport iconWS from 'images/icon_WS.png';\n\nlet requestedNotificationPermission = false;\n\n// showNotification displays a platform notification with the configured parameters.\n//\n// If successful in showing a notification, it resolves with a callback to manually close the\n// notification. Notifications that do not require interaction will be closed automatically after\n// the Constants.DEFAULT_NOTIFICATION_DURATION. Not all platforms support all features, and may\n// choose different semantics for the notifications.\nexport async function showNotification({title, body, requireInteraction, silent, onClick} = {}) {\n    let icon = icon50;\n    if (UserAgent.isEdge()) {\n        icon = iconWS;\n    }\n\n    if (!('Notification' in window)) {\n        throw new Error('Notification not supported');\n    }\n\n    if (typeof Notification.requestPermission !== 'function') {\n        throw new Error('Notification.requestPermission not supported');\n    }\n\n    if (Notification.permission !== 'granted' && requestedNotificationPermission) {\n        throw new Error('Notifications already requested but not granted');\n    }\n\n    requestedNotificationPermission = true;\n\n    let permission = await Notification.requestPermission();\n    if (typeof permission === 'undefined') {\n        // Handle browsers that don't support the promise-based syntax.\n        permission = await new Promise((resolve) => {\n            Notification.requestPermission(resolve);\n        });\n    }\n\n    if (permission !== 'granted') {\n        throw new Error('Notifications not granted');\n    }\n\n    const notification = new Notification(title, {\n        body,\n        tag: body,\n        icon,\n        requireInteraction,\n        silent,\n    });\n\n    if (onClick) {\n        notification.onclick = onClick;\n    }\n\n    if (!requireInteraction) {\n        setTimeout(() => {\n            notification.close();\n        }, Constants.DEFAULT_NOTIFICATION_DURATION);\n    }\n\n    return () => {\n        notification.close();\n    };\n}\n","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../node_modules/babel-loader/lib/index.js??ref--4!./settings_sidebar.jsx\"));\n\t});\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nexport function popOverOverlayPosition(targetBounds, innerHeight, spaceRequiredOptions) {\n    const {above, below} = spaceRequiredOptions;\n    let placement;\n\n    if (targetBounds.top > above) {\n        placement = 'top';\n    } else if (innerHeight - targetBounds.bottom > (below || above)) {\n        placement = 'bottom';\n    } else {\n        placement = 'left';\n    }\n    return placement;\n}\n","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../../node_modules/babel-loader/lib/index.js??ref--4!./index.js\"));\n\t});\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport UserStore from 'stores/user_store.jsx';\nimport {ErrorPageTypes} from 'utils/constants.jsx';\n\nexport function importComponentSuccess(callback) {\n    return (comp) => callback(null, comp.default);\n}\n\nexport function createGetChildComponentsFunction(arrayOfComponents) {\n    return (locaiton, callback) => callback(null, arrayOfComponents);\n}\n\nexport const notFoundParams = {\n    type: ErrorPageTypes.PAGE_NOT_FOUND,\n};\n\nconst mfaPaths = [\n    '/mfa/setup',\n    '/mfa/confirm',\n];\n\nconst mfaAuthServices = [\n    '',\n    'email',\n    'ldap',\n];\n\nexport function checkIfMFARequired(license, config, path) {\n    if (license.MFA === 'true' &&\n            config.EnableMultifactorAuthentication === 'true' &&\n            config.EnforceMultifactorAuthentication === 'true' &&\n            mfaPaths.indexOf(path) === -1) {\n        const user = UserStore.getCurrentUser();\n        if (user && !user.mfa_active &&\n                mfaAuthServices.indexOf(user.auth_service) !== -1) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class AutosizeTextarea extends React.Component {\n    static propTypes = {\n        value: PropTypes.string,\n        defaultValue: PropTypes.string,\n        placeholder: PropTypes.string,\n        onChange: PropTypes.func,\n        onHeightChange: PropTypes.func,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.height = 0;\n    }\n\n    get value() {\n        return this.refs.textarea.value;\n    }\n\n    set value(value) {\n        this.refs.textarea.value = value;\n    }\n\n    get selectionStart() {\n        return this.refs.textarea.selectionStart;\n    }\n\n    set selectionStart(selectionStart) {\n        this.refs.textarea.selectionStart = selectionStart;\n    }\n\n    get selectionEnd() {\n        return this.refs.textarea.selectionEnd;\n    }\n\n    set selectionEnd(selectionEnd) {\n        this.refs.textarea.selectionEnd = selectionEnd;\n    }\n\n    focus() {\n        this.refs.textarea.focus();\n    }\n\n    blur() {\n        this.refs.textarea.blur();\n    }\n\n    componentDidUpdate() {\n        this.recalculateSize();\n    }\n\n    recalculateSize = () => {\n        const height = this.refs.reference.scrollHeight;\n\n        if (height > 0 && height !== this.height) {\n            const textarea = this.refs.textarea;\n\n            const style = getComputedStyle(textarea);\n            const borderWidth = parseInt(style.borderTopWidth, 10) + parseInt(style.borderBottomWidth, 10);\n\n            // Directly change the height to avoid circular rerenders\n            textarea.style.height = String(height + borderWidth) + 'px';\n\n            this.height = height;\n\n            if (this.props.onHeightChange) {\n                this.props.onHeightChange(height, parseInt(style.maxHeight, 10));\n            }\n        }\n    };\n\n    getDOMNode = () => {\n        return this.refs.textarea;\n    };\n\n    handleChange = (e) => {\n        if (this.props.onChange) {\n            this.props.onChange(e);\n        }\n    };\n\n    render() {\n        const props = {...this.props};\n\n        Reflect.deleteProperty(props, 'onHeightChange');\n        Reflect.deleteProperty(props, 'providers');\n        Reflect.deleteProperty(props, 'channelId');\n\n        const {\n            value,\n            defaultValue,\n            placeholder,\n            disabled,\n            onInput,\n\n            // TODO: The provided `id` is sometimes hard-coded and used to interface with the\n            // component, e.g. `post_textbox`, so it can't be changed. This would ideally be\n            // abstracted to avoid passing in an `id` prop at all, but we intentionally maintain\n            // the old behaviour to address ABC-213.\n            id,\n            ...otherProps\n        } = props;\n\n        const heightProps = {};\n        if (this.height <= 0) {\n            // Set an initial number of rows so that the textarea doesn't appear too large when its first rendered\n            heightProps.rows = 1;\n        } else {\n            heightProps.height = this.height;\n        }\n\n        return (\n            <div>\n                <textarea\n                    ref='textarea'\n                    id={id}\n                    {...heightProps}\n                    {...otherProps}\n                    disabled={disabled}\n                    placeholder={placeholder}\n                    onChange={this.handleChange}\n                    onInput={onInput}\n                    value={value}\n                    defaultValue={defaultValue}\n                />\n                <div style={style.container}>\n                    <textarea\n                        ref='reference'\n                        id={id + '-reference'}\n                        style={style.reference}\n                        disabled={true}\n                        placeholder={placeholder}\n                        rows='1'\n                        {...otherProps}\n                        value={value || defaultValue || placeholder}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    container: {height: 0, overflow: 'hidden'},\n    reference: {height: 'auto', width: '100%'},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Client4} from 'mattermost-redux/client';\n\nimport {autocompleteUsers} from 'actions/user_actions.jsx';\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport {ActionTypes} from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport Provider from './provider.jsx';\nimport Suggestion from './suggestion.jsx';\n\nclass UserSuggestion extends Suggestion {\n    render() {\n        const {item, isSelection} = this.props;\n\n        let className = 'suggestion-list__item mentions__name';\n        if (isSelection) {\n            className += ' suggestion--selected';\n        }\n\n        const username = item.username;\n        let description = '';\n\n        if ((item.first_name || item.last_name) && item.nickname) {\n            description = `- ${Utils.getFullName(item)} (${item.nickname})`;\n        } else if (item.nickname) {\n            description = `- (${item.nickname})`;\n        } else if (item.first_name || item.last_name) {\n            description = `- ${Utils.getFullName(item)}`;\n        }\n\n        return (\n            <div\n                className={className}\n                onClick={this.handleClick}\n                {...Suggestion.baseProps}\n            >\n                <img\n                    className='admin-setting-user__image'\n                    src={Client4.getUsersRoute() + '/' + item.id + '/image?_=' + (item.last_picture_update || 0)}\n                />\n                <span className='admin-setting-user--align'>\n                    {'@' + username}\n                </span>\n                <span className='admin-setting-user__fullname'>\n                    {' '}\n                    {description}\n                </span>\n            </div>\n        );\n    }\n}\n\nexport default class UserProvider extends Provider {\n    handlePretextChanged(suggestionId, pretext) {\n        const normalizedPretext = pretext.toLowerCase();\n        this.startNewRequest(suggestionId, normalizedPretext);\n\n        autocompleteUsers(\n            normalizedPretext,\n            (data) => {\n                if (this.shouldCancelDispatch(normalizedPretext)) {\n                    return;\n                }\n\n                const users = Object.assign([], data.users);\n\n                AppDispatcher.handleServerAction({\n                    type: ActionTypes.SUGGESTION_RECEIVED_SUGGESTIONS,\n                    id: suggestionId,\n                    matchedPretext: normalizedPretext,\n                    terms: users.map((user) => user.username),\n                    items: users,\n                    component: UserSuggestion,\n                });\n            }\n        );\n\n        return true;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport exif2css from 'exif2css';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\n\nimport {Constants} from 'utils/constants.jsx';\nimport {localizeMessage, fileSizeToString} from 'utils/utils.jsx';\n\nimport loadingGif from 'images/load.gif';\nimport FormError from 'components/form_error.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nexport default class SettingPicture extends Component {\n    static defaultProps = {\n        imageContext: 'profile',\n    };\n\n    static propTypes = {\n        clientError: PropTypes.string,\n        serverError: PropTypes.string,\n        src: PropTypes.string,\n        file: PropTypes.object,\n        loadingPicture: PropTypes.bool,\n        submitActive: PropTypes.bool,\n        onRemove: PropTypes.func,\n        onSubmit: PropTypes.func,\n        title: PropTypes.string,\n        onFileChange: PropTypes.func,\n        updateSection: PropTypes.func,\n        imageContext: PropTypes.string,\n        maxFileSize: PropTypes.number,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            image: null,\n            removeSrc: false,\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (nextProps.file !== this.props.file) {\n            this.setState({image: null});\n\n            this.setPicture(nextProps.file);\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.previewBlob) {\n            URL.revokeObjectURL(this.previewBlob);\n        }\n    }\n\n    handleCancel = (e) => {\n        this.setState({removeSrc: false});\n        this.props.updateSection(e);\n    }\n\n    handleSave = (e) => {\n        if (this.state.removeSrc) {\n            this.props.onRemove(e);\n        } else {\n            this.props.onSubmit(e);\n        }\n    }\n\n    handleRemoveSrc = (e) => {\n        e.preventDefault();\n        this.setState({removeSrc: true});\n    }\n\n    handleFileChange = (e) => {\n        this.setState({removeSrc: false});\n        this.props.onFileChange(e);\n    }\n\n    setPicture = (file) => {\n        if (file) {\n            this.previewBlob = URL.createObjectURL(file);\n\n            var reader = new FileReader();\n            reader.onload = (e) => {\n                const orientation = this.getExifOrientation(e.target.result);\n                const orientationStyles = this.getOrientationStyles(orientation);\n\n                this.setState({\n                    image: this.previewBlob,\n                    orientationStyles,\n                });\n            };\n            reader.readAsArrayBuffer(file);\n        }\n    }\n\n    // based on https://stackoverflow.com/questions/7584794/accessing-jpeg-exif-rotation-data-in-javascript-on-the-client-side/32490603#32490603\n    getExifOrientation(data) {\n        var view = new DataView(data);\n\n        if (view.getUint16(0, false) !== 0xFFD8) {\n            return -2;\n        }\n\n        var length = view.byteLength;\n        var offset = 2;\n\n        while (offset < length) {\n            var marker = view.getUint16(offset, false);\n            offset += 2;\n\n            if (marker === 0xFFE1) {\n                if (view.getUint32(offset += 2, false) !== 0x45786966) {\n                    return -1;\n                }\n\n                var little = view.getUint16(offset += 6, false) === 0x4949;\n                offset += view.getUint32(offset + 4, little);\n                var tags = view.getUint16(offset, little);\n                offset += 2;\n\n                for (var i = 0; i < tags; i++) {\n                    if (view.getUint16(offset + (i * 12), little) === 0x0112) {\n                        return view.getUint16(offset + (i * 12) + 8, little);\n                    }\n                }\n            } else if ((marker & 0xFF00) === 0xFF00) {\n                offset += view.getUint16(offset, false);\n            } else {\n                break;\n            }\n        }\n        return -1;\n    }\n\n    getOrientationStyles(orientation) {\n        const {\n            transform,\n            'transform-origin': transformOrigin,\n        } = exif2css(orientation);\n        return {transform, transformOrigin};\n    }\n\n    render() {\n        const imageContext = this.props.imageContext;\n\n        let img;\n\n        if (this.props.file) {\n            const imageStyles = {\n                backgroundImage: 'url(' + this.state.image + ')',\n                ...this.state.orientationStyles,\n            };\n\n            img = (\n                <div className={`${imageContext}-img-preview`}>\n                    <div className='img-preview__image'>\n                        <div\n                            alt={`${imageContext} image preview`}\n                            style={imageStyles}\n                            className={`${imageContext}-img-preview`}\n                        />\n                    </div>\n                </div>\n            );\n        } else if (this.props.src && !this.state.removeSrc) {\n            img = (\n                <img\n                    className={`${imageContext}-img`}\n                    alt={`${imageContext} image`}\n                    src={this.props.src}\n                />\n            );\n\n            if (this.props.onRemove) {\n                img = (\n                    <div className={`${imageContext}-img__container`}>\n                        <div className='img-preview__image'>\n                            <img\n                                className={`${imageContext}-img`}\n                                alt={`${imageContext} image`}\n                                src={this.props.src}\n                            />\n                        </div>\n                        <OverlayTrigger\n                            trigger={['hover', 'focus']}\n                            delayShow={Constants.OVERLAY_TIME_DELAY}\n                            placement='right'\n                            overlay={(\n                                <Tooltip id='removeIcon'>\n                                    <FormattedMessage\n                                        id='setting_picture.remove'\n                                        defaultMessage='Remove this icon'\n                                    />\n                                </Tooltip>\n                            )}\n                        >\n                            <a\n                                className={`${imageContext}-img__remove`}\n                                onClick={this.handleRemoveSrc}\n                            >\n                                <span>{'×'}</span>\n                            </a>\n                        </OverlayTrigger>\n                    </div>\n                );\n            }\n        }\n\n        let confirmButton;\n        let selectButtonSpinner;\n        let fileInputDisabled = false;\n        if (this.props.loadingPicture) {\n            confirmButton = (\n                <img\n                    className='spinner'\n                    src={loadingGif}\n                />\n            );\n            selectButtonSpinner = (\n                <span\n                    className='icon fa fa-refresh icon--rotate'\n                    title={localizeMessage('generic_icons.loading', 'Loading Icon')}\n                />\n            );\n            fileInputDisabled = true;\n        } else {\n            let confirmButtonClass = 'btn btn-sm';\n            if (this.props.submitActive || this.state.removeSrc) {\n                confirmButtonClass += ' btn-primary';\n            } else {\n                confirmButtonClass += ' btn-inactive disabled';\n            }\n\n            confirmButton = (\n                <a\n                    className={confirmButtonClass}\n                    onClick={this.handleSave}\n                >\n                    <FormattedMessage\n                        id='setting_picture.save'\n                        defaultMessage='Save'\n                    />\n                </a>\n            );\n        }\n\n        let helpText;\n        if (imageContext === 'team') {\n            helpText = (\n                <FormattedMarkdownMessage\n                    id={'setting_picture.help.team'}\n                    defaultMessage='Upload a team icon in BMP, JPG or PNG format.\\nSquare images with a solid background color are recommended.'\n                />\n            );\n        } else {\n            helpText = (\n                <FormattedMessage\n                    id={'setting_picture.help.profile'}\n                    defaultMessage='Upload a picture in BMP, JPG or PNG format. Maximum file size: {max}'\n                    values={{max: fileSizeToString(this.props.maxFileSize)}}\n                />\n            );\n        }\n\n        return (\n            <ul className='section-max form-horizontal'>\n                <li className='col-xs-12 section-title'>{this.props.title}</li>\n                <li className='col-xs-offset-3 col-xs-8'>\n                    <ul className='setting-list'>\n                        {img ? <li className='setting-list-item'> {img} </li> : ''}\n                        <li className='setting-list-item padding-top x2'>\n                            {helpText}\n                        </li>\n                        <li className='setting-list-item'>\n                            <hr/>\n                            <FormError\n                                errors={[this.props.clientError, this.props.serverError]}\n                                type={'modal'}\n                            />\n                            <div\n                                className='btn btn-sm btn-primary btn-file sel-btn'\n                                disabled={fileInputDisabled}\n                            >\n                                {selectButtonSpinner}\n                                <FormattedMessage\n                                    id='setting_picture.select'\n                                    defaultMessage='Select'\n                                />\n                                <input\n                                    ref='input'\n                                    accept='.jpg,.png,.bmp'\n                                    type='file'\n                                    onChange={this.handleFileChange}\n                                    disabled={fileInputDisabled}\n                                />\n                            </div>\n                            {confirmButton}\n                            <a\n                                className='btn btn-sm theme'\n                                href='#'\n                                onClick={this.handleCancel}\n                            >\n                                <FormattedMessage\n                                    id='setting_picture.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </a>\n                        </li>\n                    </ul>\n                </li>\n            </ul>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Client4} from 'mattermost-redux/client';\n\nimport * as Utils from 'utils/utils.jsx';\nimport ProfilePicture from 'components/profile_picture.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nexport default class UserListRow extends React.Component {\n    static propTypes = {\n        user: PropTypes.object.isRequired,\n        status: PropTypes.string,\n        extraInfo: PropTypes.arrayOf(PropTypes.object),\n        actions: PropTypes.arrayOf(PropTypes.func),\n        actionProps: PropTypes.object,\n        actionUserProps: PropTypes.object,\n        userCount: PropTypes.number,\n    };\n\n    static defaultProps = {\n        extraInfo: [],\n        actions: [],\n        actionProps: {},\n        actionUserProps: {},\n    };\n\n    render() {\n        let buttons = null;\n        if (this.props.actions) {\n            buttons = this.props.actions.map((Action, index) => {\n                return (\n                    <Action\n                        key={index.toString()}\n                        user={this.props.user}\n                        {...this.props.actionProps}\n                        {...this.props.actionUserProps}\n                    />\n                );\n            });\n        }\n\n        // QUICK HACK, NEEDS A PROP FOR TOGGLING STATUS\n        let email = this.props.user.email;\n        let emailStyle = 'more-modal__description';\n        let status;\n        if (this.props.extraInfo && this.props.extraInfo.length > 0) {\n            email = (\n                <FormattedMarkdownMessage\n                    id='admin.user_item.emailTitle'\n                    defaultMessage='**Email:** {email}'\n                    values={{\n                        email: this.props.user.email,\n                    }}\n                />\n            );\n            emailStyle = '';\n        } else if (this.props.user.status) {\n            status = this.props.user.status;\n        } else {\n            status = this.props.status;\n        }\n\n        let userCountID = null;\n        let userCountEmail = null;\n        if (this.props.userCount >= 0) {\n            userCountID = Utils.createSafeId('userListRowName' + this.props.userCount);\n            userCountEmail = Utils.createSafeId('userListRowEmail' + this.props.userCount);\n        }\n\n        return (\n            <div\n                key={this.props.user.id}\n                className='more-modal__row'\n            >\n                <ProfilePicture\n                    src={Client4.getProfilePictureUrl(this.props.user.id, this.props.user.last_picture_update)}\n                    status={status}\n                    width='32'\n                    height='32'\n                />\n                <div\n                    className='more-modal__details'\n                >\n                    <div\n                        id={userCountID}\n                        className='more-modal__name'\n                    >\n                        {Utils.displayEntireNameForUser(this.props.user)}\n                    </div>\n                    <div\n                        id={userCountEmail}\n                        className={emailStyle}\n                    >\n                        {email}\n                    </div>\n                    {this.props.extraInfo}\n                </div>\n                <div\n                    className='more-modal__actions'\n                >\n                    {buttons}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getStatusForUserId} from 'mattermost-redux/selectors/entities/users';\n\nimport UserListRow from './user_list_row.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const user = ownProps.user || {};\n    return {\n        status: getStatusForUserId(state, user.id),\n    };\n}\n\nexport default connect(mapStateToProps)(UserListRow);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\n\nimport UserListRow from './user_list_row';\n\nexport default class UserList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.scrollToTop = this.scrollToTop.bind(this);\n    }\n\n    scrollToTop() {\n        if (this.refs.container) {\n            this.refs.container.scrollTop = 0;\n        }\n    }\n\n    render() {\n        const users = this.props.users;\n        const RowComponentType = this.props.rowComponentType;\n\n        let content;\n        if (users == null) {\n            return <LoadingScreen/>;\n        } else if (users.length > 0) {\n            content = users.map((user, index) => {\n                return (\n                    <RowComponentType\n                        key={user.id}\n                        user={user}\n                        extraInfo={this.props.extraInfo[user.id]}\n                        actions={this.props.actions}\n                        actionProps={this.props.actionProps}\n                        actionUserProps={this.props.actionUserProps[user.id]}\n                        userCount={(index >= 0 && index < Constants.TEST_ID_COUNT) ? index : -1}\n                    />\n                );\n            });\n        } else {\n            content = (\n                <div\n                    key='no-users-found'\n                    className='more-modal__placeholder-row'\n                >\n                    <p>\n                        <FormattedMessage\n                            id='user_list.notFound'\n                            defaultMessage='No users found'\n                        />\n                    </p>\n                </div>\n            );\n        }\n\n        return (\n            <div ref='container'>\n                {content}\n            </div>\n        );\n    }\n}\n\nUserList.defaultProps = {\n    users: [],\n    extraInfo: {},\n    actions: [],\n    actionProps: {},\n    rowComponentType: UserListRow,\n};\n\nUserList.propTypes = {\n    users: PropTypes.arrayOf(PropTypes.object),\n    extraInfo: PropTypes.object,\n    actions: PropTypes.arrayOf(PropTypes.func),\n    actionProps: PropTypes.object,\n    actionUserProps: PropTypes.object,\n\n    // the type of user list row to render\n    rowComponentType: PropTypes.func,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport QuickInput from 'components/quick_input';\nimport UserList from 'components/user_list.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nconst NEXT_BUTTON_TIMEOUT = 500;\n\nexport default class SearchableUserList extends React.Component {\n    static propTypes = {\n        users: PropTypes.arrayOf(PropTypes.object),\n        usersPerPage: PropTypes.number,\n        total: PropTypes.number,\n        extraInfo: PropTypes.object,\n        nextPage: PropTypes.func.isRequired,\n        previousPage: PropTypes.func.isRequired,\n        search: PropTypes.func.isRequired,\n        actions: PropTypes.arrayOf(PropTypes.func),\n        actionProps: PropTypes.object,\n        actionUserProps: PropTypes.object,\n        focusOnMount: PropTypes.bool,\n        renderCount: PropTypes.func,\n        renderFilterRow: PropTypes.func,\n\n        page: PropTypes.number.isRequired,\n        term: PropTypes.string.isRequired,\n        onTermChange: PropTypes.func.isRequired,\n\n        // the type of user list row to render\n        rowComponentType: PropTypes.func,\n    };\n\n    static defaultProps = {\n        users: [],\n        usersPerPage: 50, // eslint-disable-line no-magic-numbers\n        extraInfo: {},\n        actions: [],\n        actionProps: {},\n        actionUserProps: {},\n        showTeamToggle: false,\n        focusOnMount: false,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.nextPage = this.nextPage.bind(this);\n        this.previousPage = this.previousPage.bind(this);\n        this.focusSearchBar = this.focusSearchBar.bind(this);\n\n        this.handleInput = this.handleInput.bind(this);\n\n        this.renderCount = this.renderCount.bind(this);\n\n        this.nextTimeoutId = 0;\n\n        this.state = {\n            nextDisabled: false,\n        };\n    }\n\n    componentDidMount() {\n        this.focusSearchBar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.page !== prevProps.page || this.props.term !== prevProps.term) {\n            this.refs.userList.scrollToTop();\n        }\n\n        this.focusSearchBar();\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.nextTimeoutId);\n    }\n\n    nextPage(e) {\n        e.preventDefault();\n\n        this.setState({nextDisabled: true});\n        this.nextTimeoutId = setTimeout(() => this.setState({nextDisabled: false}), NEXT_BUTTON_TIMEOUT);\n\n        this.props.nextPage();\n        $(ReactDOM.findDOMNode(this.refs.channelListScroll)).scrollTop(0);\n    }\n\n    previousPage(e) {\n        e.preventDefault();\n\n        this.props.previousPage();\n        $(ReactDOM.findDOMNode(this.refs.channelListScroll)).scrollTop(0);\n    }\n\n    focusSearchBar() {\n        if (this.props.focusOnMount) {\n            this.refs.filter.focus();\n        }\n    }\n\n    handleInput(e) {\n        this.props.onTermChange(e.target.value);\n        this.props.search(e.target.value);\n    }\n\n    renderCount(users) {\n        if (!users) {\n            return null;\n        }\n\n        const count = users.length;\n        const total = this.props.total;\n        const isSearch = Boolean(this.props.term);\n\n        let startCount;\n        let endCount;\n        if (isSearch) {\n            startCount = -1;\n            endCount = -1;\n        } else {\n            startCount = this.props.page * this.props.usersPerPage;\n            endCount = Math.min(startCount + this.props.usersPerPage, total);\n        }\n\n        if (this.props.renderCount) {\n            return this.props.renderCount(count, this.props.total, startCount, endCount, isSearch);\n        }\n\n        if (this.props.total) {\n            if (isSearch) {\n                return (\n                    <FormattedMessage\n                        id='filtered_user_list.countTotal'\n                        defaultMessage='{count, number} {count, plural, one {member} other {members}} of {total, number} total'\n                        values={{\n                            count,\n                            total,\n                        }}\n                    />\n                );\n            }\n\n            return (\n                <FormattedMessage\n                    id='filtered_user_list.countTotalPage'\n                    defaultMessage='{startCount, number} - {endCount, number} {count, plural, one {member} other {members}} of {total, number} total'\n                    values={{\n                        count,\n                        startCount: startCount + 1,\n                        endCount,\n                        total,\n                    }}\n                />\n            );\n        }\n\n        return null;\n    }\n\n    render() {\n        let nextButton;\n        let previousButton;\n        let usersToDisplay;\n\n        if (this.props.term || !this.props.users) {\n            usersToDisplay = this.props.users;\n        } else if (!this.props.term) {\n            const pageStart = this.props.page * this.props.usersPerPage;\n            const pageEnd = pageStart + this.props.usersPerPage;\n            usersToDisplay = this.props.users.slice(pageStart, pageEnd);\n\n            if (pageEnd < this.props.users.length) {\n                nextButton = (\n                    <button\n                        className='btn btn-default filter-control filter-control__next'\n                        onClick={this.nextPage}\n                        disabled={this.state.nextDisabled}\n                    >\n                        <FormattedMessage\n                            id='filtered_user_list.next'\n                            defaultMessage='Next'\n                        />\n                    </button>\n                );\n            }\n\n            if (this.props.page > 0) {\n                previousButton = (\n                    <button\n                        className='btn btn-default filter-control filter-control__prev'\n                        onClick={this.previousPage}\n                    >\n                        <FormattedMessage\n                            id='filtered_user_list.prev'\n                            defaultMessage='Previous'\n                        />\n                    </button>\n                );\n            }\n        }\n\n        let filterRow;\n        if (this.props.renderFilterRow) {\n            filterRow = this.props.renderFilterRow(this.handleInput);\n        } else {\n            filterRow = (\n                <div className='col-xs-12'>\n                    <QuickInput\n                        ref='filter'\n                        className='form-control filter-textbox'\n                        placeholder={Utils.localizeMessage('filtered_user_list.search', 'Search users')}\n                        value={this.props.term}\n                        onInput={this.handleInput}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div className='filtered-user-list'>\n                <div className='filter-row'>\n                    {filterRow}\n                    <div className='col-sm-12'>\n                        <span className='member-count pull-left'>{this.renderCount(usersToDisplay)}</span>\n                    </div>\n                </div>\n                <div\n                    className='more-modal__list'\n                >\n                    <UserList\n                        ref='userList'\n                        users={usersToDisplay}\n                        extraInfo={this.props.extraInfo}\n                        actions={this.props.actions}\n                        actionProps={this.props.actionProps}\n                        actionUserProps={this.props.actionUserProps}\n                        rowComponentType={this.props.rowComponentType}\n                    />\n                </div>\n                <div className='filter-controls'>\n                    {previousButton}\n                    {nextButton}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nconst MAX_WEBSOCKET_FAILS = 7;\nconst MIN_WEBSOCKET_RETRY_TIME = 3000; // 3 sec\nconst MAX_WEBSOCKET_RETRY_TIME = 300000; // 5 mins\n\nexport default class WebSocketClient {\n    constructor() {\n        this.conn = null;\n        this.connectionUrl = null;\n        this.sequence = 1;\n        this.eventSequence = 0;\n        this.connectFailCount = 0;\n        this.eventCallback = null;\n        this.responseCallbacks = {};\n        this.firstConnectCallback = null;\n        this.reconnectCallback = null;\n        this.missedEventCallback = null;\n        this.errorCallback = null;\n        this.closeCallback = null;\n    }\n\n    initialize(connectionUrl = this.connectionUrl, token) {\n        if (this.conn) {\n            return;\n        }\n\n        if (connectionUrl == null) {\n            console.log('websocket must have connection url'); //eslint-disable-line no-console\n            return;\n        }\n\n        if (this.connectFailCount === 0) {\n            console.log('websocket connecting to ' + connectionUrl); //eslint-disable-line no-console\n        }\n\n        this.conn = new WebSocket(connectionUrl);\n        this.connectionUrl = connectionUrl;\n\n        this.conn.onopen = () => {\n            this.eventSequence = 0;\n\n            if (token) {\n                this.sendMessage('authentication_challenge', {token});\n            }\n\n            if (this.connectFailCount > 0) {\n                console.log('websocket re-established connection'); //eslint-disable-line no-console\n                if (this.reconnectCallback) {\n                    this.reconnectCallback();\n                }\n            } else if (this.firstConnectCallback) {\n                this.firstConnectCallback();\n            }\n\n            this.connectFailCount = 0;\n        };\n\n        this.conn.onclose = () => {\n            this.conn = null;\n            this.sequence = 1;\n\n            if (this.connectFailCount === 0) {\n                console.log('websocket closed'); //eslint-disable-line no-console\n            }\n\n            this.connectFailCount++;\n\n            if (this.closeCallback) {\n                this.closeCallback(this.connectFailCount);\n            }\n\n            let retryTime = MIN_WEBSOCKET_RETRY_TIME;\n\n            // If we've failed a bunch of connections then start backing off\n            if (this.connectFailCount > MAX_WEBSOCKET_FAILS) {\n                retryTime = MIN_WEBSOCKET_RETRY_TIME * this.connectFailCount * this.connectFailCount;\n                if (retryTime > MAX_WEBSOCKET_RETRY_TIME) {\n                    retryTime = MAX_WEBSOCKET_RETRY_TIME;\n                }\n            }\n\n            setTimeout(\n                () => {\n                    this.initialize(connectionUrl, token);\n                },\n                retryTime\n            );\n        };\n\n        this.conn.onerror = (evt) => {\n            if (this.connectFailCount <= 1) {\n                console.log('websocket error'); //eslint-disable-line no-console\n                console.log(evt); //eslint-disable-line no-console\n            }\n\n            if (this.errorCallback) {\n                this.errorCallback(evt);\n            }\n        };\n\n        this.conn.onmessage = (evt) => {\n            const msg = JSON.parse(evt.data);\n            if (msg.seq_reply) {\n                if (msg.error) {\n                    console.log(msg); //eslint-disable-line no-console\n                }\n\n                if (this.responseCallbacks[msg.seq_reply]) {\n                    this.responseCallbacks[msg.seq_reply](msg);\n                    Reflect.deleteProperty(this.responseCallbacks, msg.seq_reply);\n                }\n            } else if (this.eventCallback) {\n                if (msg.seq !== this.eventSequence && this.missedEventCallback) {\n                    console.log('missed websocket event, act_seq=' + msg.seq + ' exp_seq=' + this.eventSequence); //eslint-disable-line no-console\n                    this.missedEventCallback();\n                }\n                this.eventSequence = msg.seq + 1;\n                this.eventCallback(msg);\n            }\n        };\n    }\n\n    setEventCallback(callback) {\n        this.eventCallback = callback;\n    }\n\n    setFirstConnectCallback(callback) {\n        this.firstConnectCallback = callback;\n    }\n\n    setReconnectCallback(callback) {\n        this.reconnectCallback = callback;\n    }\n\n    setMissedEventCallback(callback) {\n        this.missedEventCallback = callback;\n    }\n\n    setErrorCallback(callback) {\n        this.errorCallback = callback;\n    }\n\n    setCloseCallback(callback) {\n        this.closeCallback = callback;\n    }\n\n    close() {\n        this.connectFailCount = 0;\n        this.sequence = 1;\n        if (this.conn && this.conn.readyState === WebSocket.OPEN) {\n            this.conn.onclose = () => {}; //eslint-disable-line no-empty-function\n            this.conn.close();\n            this.conn = null;\n            console.log('websocket closed'); //eslint-disable-line no-console\n        }\n    }\n\n    sendMessage(action, data, responseCallback) {\n        const msg = {\n            action,\n            seq: this.sequence++,\n            data,\n        };\n\n        if (responseCallback) {\n            this.responseCallbacks[msg.seq] = responseCallback;\n        }\n\n        if (this.conn && this.conn.readyState === WebSocket.OPEN) {\n            this.conn.send(JSON.stringify(msg));\n        } else if (!this.conn || this.conn.readyState === WebSocket.CLOSED) {\n            this.conn = null;\n            this.initialize();\n        }\n    }\n\n    userTyping(channelId, parentId, callback) {\n        const data = {};\n        data.channel_id = channelId;\n        data.parent_id = parentId;\n\n        this.sendMessage('user_typing', data, callback);\n    }\n\n    getStatuses(callback) {\n        this.sendMessage('get_statuses', null, callback);\n    }\n\n    getStatusesByIds(userIds, callback) {\n        const data = {};\n        data.user_ids = userIds;\n        this.sendMessage('get_statuses_by_ids', data, callback);\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport WebSocketClient from './websocket_client.jsx';\n\nvar WebClient = new WebSocketClient();\nexport default WebClient;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Overlay} from 'react-bootstrap';\nimport {Client4} from 'mattermost-redux/client';\nimport {displayUsername} from 'mattermost-redux/utils/user_utils';\n\nimport Pluggable from 'plugins/pluggable';\nimport ProfilePopover from 'components/profile_popover';\n\nimport {popOverOverlayPosition} from 'utils/position_utils.jsx';\nconst spaceRequiredForPopOver = 300;\n\nexport default class AtMention extends React.PureComponent {\n    static propTypes = {\n        children: PropTypes.node,\n        currentUserId: PropTypes.string.isRequired,\n        hasMention: PropTypes.bool,\n        isRHS: PropTypes.bool,\n        mentionName: PropTypes.string.isRequired,\n        teammateNameDisplay: PropTypes.string.isRequired,\n        usersByUsername: PropTypes.object.isRequired,\n    };\n\n    static defaultProps = {\n        isRHS: false,\n        hasMention: false,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.getUserFromMentionName(props),\n            show: false,\n        };\n\n        this.overlayRef = React.createRef();\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (nextProps.mentionName !== this.props.mentionName || nextProps.usersByUsername !== this.props.usersByUsername) {\n            this.setState({\n                user: this.getUserFromMentionName(nextProps),\n            });\n        }\n    }\n\n    handleClick = (e) => {\n        const targetBounds = this.overlayRef.current.getBoundingClientRect();\n        const placement = popOverOverlayPosition(targetBounds, window.innerHeight, {above: spaceRequiredForPopOver});\n\n        this.setState({target: e.target, show: !this.state.show, placement});\n    }\n\n    hideOverlay = () => {\n        this.setState({show: false});\n    }\n\n    getUserFromMentionName(props) {\n        const usersByUsername = props.usersByUsername;\n        let mentionName = props.mentionName.toLowerCase();\n\n        while (mentionName.length > 0) {\n            if (usersByUsername.hasOwnProperty(mentionName)) {\n                return usersByUsername[mentionName];\n            }\n\n            // Repeatedly trim off trailing punctuation in case this is at the end of a sentence\n            if ((/[._-]$/).test(mentionName)) {\n                mentionName = mentionName.substring(0, mentionName.length - 1);\n            } else {\n                break;\n            }\n        }\n\n        return '';\n    }\n\n    render() {\n        if (!this.state.user) {\n            return <React.Fragment>{this.props.children}</React.Fragment>;\n        }\n\n        const user = this.state.user;\n        const suffix = this.props.mentionName.substring(user.username.length);\n\n        let className = 'mention-link';\n        if (user.id === this.props.currentUserId) {\n            className += ' mention--highlight';\n        }\n\n        return (\n            <span>\n                <Overlay\n                    placement={this.state.placement}\n                    show={this.state.show}\n                    target={this.state.target}\n                    rootClose={true}\n                    onHide={this.hideOverlay}\n                >\n                    <Pluggable>\n                        <ProfilePopover\n                            user={user}\n                            src={Client4.getProfilePictureUrl(user.id, user.last_picture_update)}\n                            isRHS={this.props.isRHS}\n                            hasMention={this.props.hasMention}\n                        />\n                    </Pluggable>\n                </Overlay>\n                <a\n                    className={className}\n                    onClick={this.handleClick}\n                    ref={this.overlayRef}\n                >\n                    {'@' + displayUsername(user, this.props.teammateNameDisplay)}\n                </a>\n                {suffix}\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getTeammateNameDisplaySetting} from 'mattermost-redux/selectors/entities/preferences';\nimport {getCurrentUserId, getUsersByUsername} from 'mattermost-redux/selectors/entities/users';\n\nimport AtMention from './at_mention.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        currentUserId: getCurrentUserId(state),\n        teammateNameDisplay: getTeammateNameDisplaySetting(state),\n        usersByUsername: getUsersByUsername(state),\n    };\n}\n\nexport default connect(mapStateToProps)(AtMention);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedTime} from 'react-intl';\n\nexport default class LocalDateTime extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * The time to display\n         */\n        eventTime: PropTypes.number,\n\n        /*\n         * Set to display using 24 hour format\n         */\n        useMilitaryTime: PropTypes.bool,\n\n        /*\n         * Current timezone of the user\n         */\n        timeZone: PropTypes.string,\n\n        /*\n         * Enable timezone feature\n         */\n        enableTimezone: PropTypes.bool,\n    };\n\n    render() {\n        const {\n            enableTimezone,\n            eventTime,\n            timeZone,\n            useMilitaryTime,\n        } = this.props;\n\n        const date = eventTime ? new Date(eventTime) : new Date();\n\n        const timezoneProps = enableTimezone && timeZone ? {timeZone} : {};\n\n        return (\n            <time\n                className='post__time'\n                dateTime={date.toISOString()}\n                title={date}\n            >\n                <FormattedTime\n                    {...timezoneProps}\n                    hour12={!useMilitaryTime}\n                    value={date}\n                />\n            </time>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getUserTimezone} from 'mattermost-redux/selectors/entities/timezone';\nimport {getUserCurrentTimezone} from 'mattermost-redux/utils/timezone_utils';\nimport {getBool} from 'mattermost-redux/selectors/entities/preferences';\n\nimport {areTimezonesEnabledAndSupported} from 'selectors/general';\n\nimport {Preferences} from 'utils/constants.jsx';\n\nimport LocalDateTime from './local_date_time';\n\nfunction mapStateToProps(state, props) {\n    const currentUserId = getCurrentUserId(state);\n\n    let userTimezone;\n    if (props.userTimezone) {\n        userTimezone = props.userTimezone;\n    } else {\n        userTimezone = getUserTimezone(state, currentUserId);\n    }\n\n    return {\n        enableTimezone: areTimezonesEnabledAndSupported(state),\n        useMilitaryTime: getBool(state, Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.USE_MILITARY_TIME, false),\n        timeZone: getUserCurrentTimezone(userTimezone),\n    };\n}\n\nexport default connect(mapStateToProps)(LocalDateTime);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport reducerRegistry from 'mattermost-redux/store/reducer_registry';\n\nimport {\n    registerPluginWebSocketEvent,\n    unregisterPluginWebSocketEvent,\n    registerPluginReconnectHandler,\n    unregisterPluginReconnectHandler,\n} from 'actions/websocket_actions.jsx';\n\nimport store from 'stores/redux_store.jsx';\nimport {ActionTypes} from 'utils/constants.jsx';\nimport {generateId} from 'utils/utils.jsx';\n\nfunction dispatchPluginComponentAction(name, pluginId, component, id = generateId()) {\n    store.dispatch({\n        type: ActionTypes.RECEIVED_PLUGIN_COMPONENT,\n        name,\n        data: {\n            id,\n            pluginId,\n            component,\n        },\n    });\n\n    return id;\n}\n\nconst resolveReactElement = (element) => {\n    if (typeof element === 'function') {\n        // Allow element to be passed as the name of the component, instead of a React element.\n        return React.createElement(element);\n    }\n\n    return element;\n};\n\nexport default class PluginRegistry {\n    constructor(id) {\n        this.id = id;\n    }\n\n    // Register a component at the root of the channel view of the app.\n    // Accepts a React component. Returns a unique identifier.\n    registerRootComponent(component) {\n        return dispatchPluginComponentAction('Root', this.id, component);\n    }\n\n    // Register a component in the user attributes section of the profile popover (hovercard), below the default user attributes.\n    // Accepts a React component. Returns a unique identifier.\n    registerPopoverUserAttributesComponent(component) {\n        return dispatchPluginComponentAction('PopoverUserAttributes', this.id, component);\n    }\n\n    // Register a component in the user actions of the profile popover (hovercard), below the default actions.\n    // Accepts a React component. Returns a unique identifier.\n    registerPopoverUserActionsComponent(component) {\n        return dispatchPluginComponentAction('PopoverUserActions', this.id, component);\n    }\n\n    // Register a component fixed to the top of the left-hand channel sidebar.\n    // Accepts a React component. Returns a unique identifier.\n    registerLeftSidebarHeaderComponent(component) {\n        return dispatchPluginComponentAction('LeftSidebarHeader', this.id, component);\n    }\n\n    // Register a component fixed to the bottom of the team sidebar. Does not render if\n    // user is only on one team and the team sidebar is not shown.\n    // Accepts a React component. Returns a unique identifier.\n    registerBottomTeamSidebarComponent(component) {\n        return dispatchPluginComponentAction('BottomTeamSidebar', this.id, component);\n    }\n\n    // Register a component fixed to the bottom of the post message.\n    // Accepts a React component. Returns a unique identifier.\n    registerPostMessageAttachmentComponent(component) {\n        return dispatchPluginComponentAction('PostMessageAttachment', this.id, component);\n    }\n\n    // Add a button to the channel header. If there are more than one buttons registered by any\n    // plugin, a dropdown menu is created to contain all the plugin buttons.\n    // Accepts the following:\n    // - icon - React element to use as the button's icon\n    // - action - a function called when the button is clicked, passed the channel and channel member as arguments\n    // - dropdown_text - string or React element shown for the dropdown button description\n    registerChannelHeaderButtonAction(icon, action, dropdownText) {\n        const id = generateId();\n\n        const data = {\n            id,\n            pluginId: this.id,\n            icon: resolveReactElement(icon),\n            action,\n            dropdownText: resolveReactElement(dropdownText),\n        };\n\n        store.dispatch({\n            type: ActionTypes.RECEIVED_PLUGIN_COMPONENT,\n            name: 'ChannelHeaderButton',\n            data,\n        });\n\n        store.dispatch({\n            type: ActionTypes.RECEIVED_PLUGIN_COMPONENT,\n            name: 'MobileChannelHeaderButton',\n            data,\n        });\n\n        return id;\n    }\n\n    // Register a component to render a custom body for posts with a specific type.\n    // Custom post types must be prefixed with 'custom_'.\n    // Accepts a string type and a component.\n    // Returns a unique identifier.\n    registerPostTypeComponent(type, component) {\n        const id = generateId();\n\n        store.dispatch({\n            type: ActionTypes.RECEIVED_PLUGIN_POST_COMPONENT,\n            data: {\n                id,\n                pluginId: this.id,\n                type,\n                component,\n            },\n        });\n\n        return id;\n    }\n\n    // Register a main menu list item by providing some text and an action function.\n    // Accepts the following:\n    // - text - A string or React element to display in the menu\n    // - action - A function to trigger when component is clicked on\n    // - mobileIcon - A React element to display as the icon in the menu in mobile view\n    // Returns a unique identifier.\n    registerMainMenuAction(text, action, mobileIcon) {\n        const id = generateId();\n\n        store.dispatch({\n            type: ActionTypes.RECEIVED_PLUGIN_COMPONENT,\n            name: 'MainMenu',\n            data: {\n                id,\n                pluginId: this.id,\n                text: resolveReactElement(text),\n                action,\n                mobileIcon: resolveReactElement(mobileIcon),\n            },\n        });\n\n        return id;\n    }\n\n    // Register a post menu list item by providing some text and an action function.\n    // Accepts the following:\n    // - text - A string or React element to display in the menu\n    // - action - A function to trigger when component is clicked on\n    // - filter - A function whether to apply the plugin into the post' dropdown menu\n    // Returns a unique identifier.\n    registerPostDropdownMenuAction(text, action, filter) {\n        const id = generateId();\n\n        store.dispatch({\n            type: ActionTypes.RECEIVED_PLUGIN_COMPONENT,\n            name: 'PostDropdownMenu',\n            data: {\n                id,\n                pluginId: this.id,\n                text: resolveReactElement(text),\n                action,\n                filter,\n            },\n        });\n\n        return id;\n    }\n\n    // Register a component at the bottom of the post dropdown menu.\n    // Accepts a React component. Returns a unique identifier.\n    registerPostDropdownMenuComponent(component) {\n        return dispatchPluginComponentAction('PostDropdownMenuItem', this.id, component);\n    }\n\n    // Register a file upload method by providing some text, an icon, and an action function.\n    // Accepts the following:\n    // - icon - JSX element to use as the button's icon\n    // - text - A string or JSX element to display in the file upload menu\n    // - action - A function to trigger when the menu item is selected.\n    // Returns a unique identifier.\n    registerFileUploadMethod(icon, action, text) {\n        const id = generateId();\n\n        store.dispatch({\n            type: ActionTypes.RECEIVED_PLUGIN_COMPONENT,\n            name: 'FileUploadMethod',\n            data: {\n                id,\n                pluginId: this.id,\n                text,\n                action,\n                icon,\n            },\n        });\n\n        return id;\n    }\n\n    // Register a hook to intercept file uploads before they take place.\n    // Accepts a function to run before files get uploaded. Receives an array of\n    // files and a function to upload files at a later time as arguments. Must\n    // return an object that can contain two properties:\n    // - message - An error message to display, leave blank or null to display no message\n    // - files - Modified array of files to upload, set to null to reject all files\n    // Returns a unique identifier.\n    registerFilesWillUploadHook(hook) {\n        const id = generateId();\n\n        store.dispatch({\n            type: ActionTypes.RECEIVED_PLUGIN_COMPONENT,\n            name: 'FilesWillUploadHook',\n            data: {\n                id,\n                pluginId: this.id,\n                hook,\n            },\n        });\n\n        return id;\n    }\n\n    // Unregister a component, action or hook using the unique identifier returned after registration.\n    // Accepts a string id.\n    // Returns undefined in all cases.\n    unregisterComponent(componentId) {\n        store.dispatch({\n            type: ActionTypes.REMOVED_PLUGIN_COMPONENT,\n            id: componentId,\n        });\n    }\n\n    // Register a reducer against the Redux store. It will be accessible in redux state\n    // under \"state['plugins-<yourpluginid>']\"\n    // Accepts a reducer. Returns undefined.\n    registerReducer(reducer) {\n        reducerRegistry.register('plugins-' + this.id, reducer);\n    }\n\n    // Register a handler for WebSocket events.\n    // Accepts the following:\n    // - event - the event type, can be a regular server event or an event from plugins.\n    // Plugin events will have \"custom_<pluginid>_\" prepended\n    // - handler - a function to handle the event, receives the event message as an argument\n    // Returns undefined.\n    registerWebSocketEventHandler(event, handler) {\n        registerPluginWebSocketEvent(this.id, event, handler);\n    }\n\n    // Unregister a handler for a custom WebSocket event.\n    // Accepts a string event type.\n    // Returns undefined.\n    unregisterWebSocketEventHandler(event) {\n        unregisterPluginWebSocketEvent(this.id, event);\n    }\n\n    // Register a handler that will be called when the app reconnects to the\n    // internet after previously disconnecting.\n    // Accepts a function to handle the event. Returns undefined.\n    registerReconnectHandler(handler) {\n        registerPluginReconnectHandler(this.id, handler);\n    }\n\n    // Unregister a previously registered reconnect handler.\n    // Returns undefined.\n    unregisterReconnectHandler() {\n        unregisterPluginReconnectHandler(this.id);\n    }\n\n    registerMessageWillFormatHook(hook) {\n        const id = generateId();\n\n        store.dispatch({\n            type: ActionTypes.RECEIVED_PLUGIN_COMPONENT,\n            name: 'MessageWillFormat',\n            data: {\n                id,\n                pluginId: this.id,\n                hook,\n            },\n        });\n\n        return id;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {Client4} from 'mattermost-redux/client';\n\nimport store from 'stores/redux_store.jsx';\nimport {ActionTypes} from 'utils/constants.jsx';\nimport {getSiteURL} from 'utils/url.jsx';\nimport PluginRegistry from 'plugins/registry';\nimport {unregisterAllPluginWebSocketEvents, unregisterPluginReconnectHandler} from 'actions/websocket_actions.jsx';\n\n// plugins records all active web app plugins by id.\nwindow.plugins = {};\n\n// registerPlugin, on the global window object, should be invoked by a plugin's web app bundle as\n// it is loaded.\n//\n// During the beta, plugins manipulated the global window.plugins data structure directly. This\n// remains possible, but is officially deprecated and may be removed in a future release.\nfunction registerPlugin(id, plugin) {\n    window.plugins[id] = plugin;\n}\nwindow.registerPlugin = registerPlugin;\n\n// initializePlugins queries the server for all enabled plugins and loads each in turn.\nexport async function initializePlugins() {\n    if (store.getState().entities.general.config.PluginsEnabled !== 'true') {\n        return;\n    }\n\n    const {data, error} = await getPlugins()(store.dispatch);\n    if (error) {\n        console.error(error); //eslint-disable-line no-console\n        return;\n    }\n\n    if (data == null || data.length === 0) {\n        return;\n    }\n\n    data.forEach((m) => {\n        loadPlugin(m);\n    });\n}\n\n// getPlugins queries the server for all enabled plugins\nexport function getPlugins() {\n    return async (dispatch) => {\n        let plugins;\n        try {\n            plugins = await Client4.getWebappPlugins();\n        } catch (error) {\n            return {error};\n        }\n\n        dispatch({type: ActionTypes.RECEIVED_WEBAPP_PLUGINS, data: plugins});\n\n        return {data: plugins};\n    };\n}\n\n// loadedPlugins tracks which plugins have been added as script tags to the page\nconst loadedPlugins = {};\n\n// loadPlugin fetches the web app bundle described by the given manifest, waits for the bundle to\n// load, and then ensures the plugin has been initialized.\nexport function loadPlugin(manifest) {\n    // Don't load it again if previously loaded\n    if (loadedPlugins[manifest.id]) {\n        return;\n    }\n\n    function onLoad() {\n        initializePlugin(manifest);\n        console.log('Loaded ' + manifest.id + ' plugin'); //eslint-disable-line no-console\n    }\n\n    // Backwards compatibility for old plugins\n    let bundlePath = manifest.webapp.bundle_path;\n    if (bundlePath.includes('/static/') && !bundlePath.includes('/static/plugins/')) {\n        bundlePath = bundlePath.replace('/static/', '/static/plugins/');\n    }\n\n    const script = document.createElement('script');\n    script.id = 'plugin_' + manifest.id;\n    script.type = 'text/javascript';\n    script.src = getSiteURL() + bundlePath;\n    script.onload = onLoad;\n    console.log('Loading ' + manifest.id + ' plugin'); //eslint-disable-line no-console\n    document.getElementsByTagName('head')[0].appendChild(script);\n\n    loadedPlugins[manifest.id] = true;\n}\n\n// initializePlugin creates a registry specific to the plugin and invokes any initialize function\n// on the registered plugin class.\nfunction initializePlugin(manifest) {\n    // Initialize the plugin\n    const plugin = window.plugins[manifest.id];\n    const registry = new PluginRegistry(manifest.id);\n    if (plugin.initialize) {\n        plugin.initialize(registry, store);\n    }\n}\n\n// removePlugin triggers any uninitialize callback on the registered plugin, unregisters any\n// event handlers, and removes the plugin script from the DOM entirely. The plugin is responsible\n// for removing any of its registered components.\nexport function removePlugin(manifest) {\n    console.log('Removing ' + manifest.id + ' plugin'); //eslint-disable-line no-console\n\n    loadedPlugins[manifest.id] = false;\n\n    const plugin = window.plugins[manifest.id];\n    if (plugin && plugin.uninitialize) {\n        plugin.uninitialize();\n\n    // Support the deprecated deinitialize callback from the plugins beta.\n    } else if (plugin && plugin.deinitialize) {\n        plugin.deinitialize();\n    }\n    unregisterAllPluginWebSocketEvents(manifest.id);\n    unregisterPluginReconnectHandler(manifest.id);\n    const script = document.getElementById('plugin_' + manifest.id);\n    if (!script) {\n        return;\n    }\n    script.parentNode.removeChild(script);\n    console.log('Removed ' + manifest.id + ' plugin'); //eslint-disable-line no-console\n}\n\n// loadPluginsIfNecessary synchronizes the current state of loaded plugins with that of the server,\n// loading any newly added plugins and unloading any removed ones.\nexport async function loadPluginsIfNecessary() {\n    if (store.getState().entities.general.config.PluginsEnabled !== 'true') {\n        return;\n    }\n\n    const oldManifests = store.getState().plugins.plugins;\n\n    const {error} = await getPlugins()(store.dispatch);\n    if (error) {\n        console.error(error); //eslint-disable-line no-console\n        return;\n    }\n\n    const newManifests = store.getState().plugins.plugins;\n\n    // Get new plugins and update existing plugins if version changed\n    Object.values(newManifests).forEach((newManifest) => {\n        const oldManifest = oldManifests[newManifest.id];\n        if (!oldManifest || oldManifest.version !== newManifest.version) {\n            loadPlugin(newManifest);\n        }\n    });\n\n    // Remove old plugins\n    Object.keys(oldManifests).forEach((id) => {\n        if (!newManifests.hasOwnProperty(id)) {\n            const oldManifest = oldManifests[id];\n            store.dispatch({type: ActionTypes.REMOVED_WEBAPP_PLUGIN, data: oldManifest});\n            removePlugin(oldManifest);\n        }\n    });\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nrequire('perfect-scrollbar/jquery')($);\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport FastClick from 'fastclick';\nimport {Route, Switch, Redirect} from 'react-router-dom';\nimport {setUrl} from 'mattermost-redux/actions/general';\nimport {setSystemEmojis} from 'mattermost-redux/actions/emojis';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport {EmojiIndicesByAlias} from 'utils/emoji.jsx';\nimport {trackLoadTime} from 'actions/diagnostics_actions.jsx';\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport BrowserStore from 'stores/browser_store.jsx';\nimport ErrorStore from 'stores/error_store.jsx';\nimport {loadRecentlyUsedCustomEmojis} from 'actions/emoji_actions.jsx';\nimport * as I18n from 'i18n/i18n.jsx';\nimport {initializePlugins} from 'plugins';\nimport 'plugins/export.js';\nimport Constants, {StoragePrefixes} from 'utils/constants.jsx';\nimport {HFTRoute, LoggedInHFTRoute} from 'components/header_footer_template_route';\nimport IntlProvider from 'components/intl_provider';\nimport NeedsTeam from 'components/needs_team';\nimport {makeAsyncComponent} from 'components/async_load';\nimport loadErrorPage from 'bundle-loader?lazy!components/error_page';\nimport loadLoginController from 'bundle-loader?lazy!components/login/login_controller';\nimport loadAdminConsole from 'bundle-loader?lazy!components/admin_console';\nimport loadLoggedIn from 'bundle-loader?lazy!components/logged_in';\nimport loadPasswordResetSendLink from 'bundle-loader?lazy!components/password_reset_send_link';\nimport loadPasswordResetForm from 'bundle-loader?lazy!components/password_reset_form';\nimport loadSignupController from 'bundle-loader?lazy!components/signup/signup_controller';\nimport loadSignupEmail from 'bundle-loader?lazy!components/signup/signup_email';\nimport loadTermsOfService from 'bundle-loader?lazy!components/terms_of_service';\nimport loadShouldVerifyEmail from 'bundle-loader?lazy!components/should_verify_email';\nimport loadDoVerifyEmail from 'bundle-loader?lazy!components/do_verify_email';\nimport loadClaimController from 'bundle-loader?lazy!components/claim';\nimport loadHelpController from 'bundle-loader?lazy!components/help/help_controller';\nimport loadGetIosApp from 'bundle-loader?lazy!components/get_ios_app';\nimport loadGetAndroidApp from 'bundle-loader?lazy!components/get_android_app';\nimport loadSelectTeam from 'bundle-loader?lazy!components/select_team';\nimport loadAuthorize from 'bundle-loader?lazy!components/authorize';\nimport loadCreateTeam from 'bundle-loader?lazy!components/create_team';\nimport loadMfa from 'bundle-loader?lazy!components/mfa/mfa_controller';\nimport store from 'stores/redux_store.jsx';\nimport {getSiteURL} from 'utils/url.jsx';\n\nconst CreateTeam = makeAsyncComponent(loadCreateTeam);\nconst ErrorPage = makeAsyncComponent(loadErrorPage);\nconst TermsOfService = makeAsyncComponent(loadTermsOfService);\nconst LoginController = makeAsyncComponent(loadLoginController);\nconst AdminConsole = makeAsyncComponent(loadAdminConsole);\nconst LoggedIn = makeAsyncComponent(loadLoggedIn);\nconst PasswordResetSendLink = makeAsyncComponent(loadPasswordResetSendLink);\nconst PasswordResetForm = makeAsyncComponent(loadPasswordResetForm);\nconst SignupController = makeAsyncComponent(loadSignupController);\nconst SignupEmail = makeAsyncComponent(loadSignupEmail);\nconst ShouldVerifyEmail = makeAsyncComponent(loadShouldVerifyEmail);\nconst DoVerifyEmail = makeAsyncComponent(loadDoVerifyEmail);\nconst ClaimController = makeAsyncComponent(loadClaimController);\nconst HelpController = makeAsyncComponent(loadHelpController);\nconst GetIosApp = makeAsyncComponent(loadGetIosApp);\nconst GetAndroidApp = makeAsyncComponent(loadGetAndroidApp);\nconst SelectTeam = makeAsyncComponent(loadSelectTeam);\nconst Authorize = makeAsyncComponent(loadAuthorize);\nconst Mfa = makeAsyncComponent(loadMfa);\n\nconst LoggedInRoute = ({component: Component, ...rest}) => (\n    <Route\n        {...rest}\n        render={(props) => (\n            <LoggedIn {...props}>\n                <Component {...props}/>\n            </LoggedIn>\n        )}\n    />\n);\n\nexport default class Root extends React.Component {\n    static propTypes = {\n        diagnosticsEnabled: PropTypes.bool,\n        diagnosticId: PropTypes.string,\n        noAccounts: PropTypes.bool,\n        showTermsOfService: PropTypes.bool,\n        actions: PropTypes.shape({\n            loadMeAndConfig: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        // Redux\n        setUrl(getSiteURL());\n\n        setSystemEmojis(EmojiIndicesByAlias);\n\n        // Force logout of all tabs if one tab is logged out\n        $(window).bind('storage', (e) => {\n            // when one tab on a browser logs out, it sets __logout__ in localStorage to trigger other tabs to log out\n            if (e.originalEvent.key === StoragePrefixes.LOGOUT && e.originalEvent.storageArea === localStorage && e.originalEvent.newValue) {\n                // make sure it isn't this tab that is sending the logout signal (only necessary for IE11)\n                if (BrowserStore.isSignallingLogout(e.originalEvent.newValue)) {\n                    return;\n                }\n\n                console.log('detected logout from a different tab'); //eslint-disable-line no-console\n                GlobalActions.emitUserLoggedOutEvent('/', false, false);\n            }\n\n            if (e.originalEvent.key === StoragePrefixes.LOGIN && e.originalEvent.storageArea === localStorage && e.originalEvent.newValue) {\n                // make sure it isn't this tab that is sending the logout signal (only necessary for IE11)\n                if (BrowserStore.isSignallingLogin(e.originalEvent.newValue)) {\n                    return;\n                }\n\n                console.log('detected login from a different tab'); //eslint-disable-line no-console\n                location.reload();\n            }\n        });\n\n        // Prevent drag and drop files from navigating away from the app\n        document.addEventListener('drop', (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n        });\n\n        document.addEventListener('dragover', (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n        });\n\n        // Fastclick\n        FastClick.attach(document.body);\n\n        // Loading page so reset connection failure count\n        ErrorStore.setConnectionErrorCount(0);\n\n        this.state = {\n            configLoaded: false,\n        };\n    }\n\n    onConfigLoaded = () => {\n        const segmentKey = Constants.DIAGNOSTICS_SEGMENT_KEY;\n        const diagnosticId = this.props.diagnosticId;\n\n        /*eslint-disable */\n        if (segmentKey != null && segmentKey !== '' && this.props.diagnosticsEnabled) {\n            !function(){var analytics=global.window.analytics=global.window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error(\"Segment snippet included twice.\");else{analytics.invoked=!0;analytics.methods=[\"trackSubmit\",\"trackClick\",\"trackLink\",\"trackForm\",\"pageview\",\"identify\",\"group\",\"track\",\"ready\",\"alias\",\"page\",\"once\",\"off\",\"on\"];analytics.factory=function(t){return function(...args){var e=Array.prototype.slice.call(args);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t<analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t){var e=document.createElement(\"script\");e.type=\"text/javascript\";e.async=!0;e.src=(\"https:\"===document.location.protocol ? \"https://\":\"http://\")+\"cdn.segment.com/analytics.js/v1/\"+t+\"/analytics.min.js\";var n=document.getElementsByTagName(\"script\")[0];n.parentNode.insertBefore(e,n)};analytics.SNIPPET_VERSION=\"3.0.1\";\n                analytics.load(segmentKey);\n\n                analytics.identify(diagnosticId, {}, {\n                    context: {\n                        ip: '0.0.0.0',\n                    },\n                    page: {\n                        path: '',\n                        referrer: '',\n                        search: '',\n                        title: '',\n                        url: '',\n                    },\n                    anonymousId: '00000000000000000000000000',\n                });\n\n                analytics.page('ApplicationLoaded', {\n                        path: '',\n                        referrer: '',\n                        search: '',\n                        title: '',\n                        url: '',\n                    },\n                    {\n                        context: {\n                            ip: '0.0.0.0'\n                        },\n                        anonymousId: '00000000000000000000000000'\n                    });\n            }}();\n        }\n        /*eslint-enable */\n\n        const afterIntl = () => {\n            initializePlugins();\n\n            this.setState({configLoaded: true});\n        };\n        if (global.Intl) {\n            afterIntl();\n        } else {\n            I18n.safariFix(afterIntl);\n        }\n\n        loadRecentlyUsedCustomEmojis()(store.dispatch, store.getState);\n\n        const iosDownloadLink = getConfig(store.getState()).IosAppDownloadLink;\n        const androidDownloadLink = getConfig(store.getState()).AndroidAppDownloadLink;\n\n        const toResetPasswordScreen = this.props.location.pathname === '/reset_password_complete';\n\n        // redirect to the mobile landing page if the user hasn't seen it before\n        // if (iosDownloadLink && UserAgent.isIosWeb() && !BrowserStore.hasSeenLandingPage() && !toResetPasswordScreen) {\n        //     this.props.history.push('/get_ios_app');\n        //     BrowserStore.setLandingPageSeen(true);\n        // } else if (androidDownloadLink && UserAgent.isAndroidWeb() && !BrowserStore.hasSeenLandingPage() && !toResetPasswordScreen) {\n        //     this.props.history.push('/get_android_app');\n        //     BrowserStore.setLandingPageSeen(true);\n        // }\n    }\n\n    redirectIfNecessary = (props) => {\n        if (props.location.pathname === '/') {\n            if (this.props.noAccounts) {\n                this.props.history.push('/signup_user_complete');\n            } else if (props.showTermsOfService) {\n                this.props.history.push('/terms_of_service');\n            }\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) { // eslint-disable-line camelcase\n        this.redirectIfNecessary(newProps);\n    }\n\n    componentDidMount() {\n        this.props.actions.loadMeAndConfig().then((response) => {\n            if (response[2] && response[2].data) {\n                GlobalActions.redirectUserToDefaultTeam();\n            }\n            this.onConfigLoaded();\n        });\n        trackLoadTime();\n    }\n\n    componentWillUnmount() {\n        $(window).unbind('storage');\n    }\n\n    render() {\n        if (!this.state.configLoaded) {\n            return <div/>;\n        }\n\n        return (\n            <IntlProvider>\n                <Switch>\n                    <Route\n                        path={'/error'}\n                        component={ErrorPage}\n                    />\n                    <HFTRoute\n                        path={'/login'}\n                        component={LoginController}\n                    />\n                    <HFTRoute\n                        path={'/reset_password'}\n                        component={PasswordResetSendLink}\n                    />\n                    <HFTRoute\n                        path={'/reset_password_complete'}\n                        component={PasswordResetForm}\n                    />\n                    <HFTRoute\n                        path={'/signup_user_complete'}\n                        component={SignupController}\n                    />\n                    <HFTRoute\n                        path={'/signup_email'}\n                        component={SignupEmail}\n                    />\n                    <HFTRoute\n                        path={'/should_verify_email'}\n                        component={ShouldVerifyEmail}\n                    />\n                    <HFTRoute\n                        path={'/do_verify_email'}\n                        component={DoVerifyEmail}\n                    />\n                    <HFTRoute\n                        path={'/claim'}\n                        component={ClaimController}\n                    />\n                    <HFTRoute\n                        path={'/help'}\n                        component={HelpController}\n                    />\n                    <LoggedInHFTRoute\n                        path={'/terms_of_service'}\n                        component={TermsOfService}\n                    />\n                    <Route\n                        path={'/get_ios_app'}\n                        component={GetIosApp}\n                    />\n                    <Route\n                        path={'/get_android_app'}\n                        component={GetAndroidApp}\n                    />\n                    <LoggedInRoute\n                        path={'/admin_console'}\n                        component={AdminConsole}\n                    />\n                    <LoggedInHFTRoute\n                        path={'/select_team'}\n                        component={SelectTeam}\n                    />\n                    <LoggedInHFTRoute\n                        path={'/oauth/authorize'}\n                        component={Authorize}\n                    />\n                    <LoggedInHFTRoute\n                        path={'/create_team'}\n                        component={CreateTeam}\n                    />\n                    <LoggedInRoute\n                        path={'/mfa'}\n                        component={Mfa}\n                    />\n                    <LoggedInRoute\n                        path={'/:team'}\n                        component={NeedsTeam}\n                    />\n                    <Redirect\n                        to={{\n                            ...this.props.location,\n                            pathname: '/login',\n                        }}\n                    />\n                </Switch>\n            </IntlProvider>\n        );\n    }\n}\n","var map = {\n\t\"./af\": 887,\n\t\"./af.js\": 887,\n\t\"./ar\": 888,\n\t\"./ar-dz\": 889,\n\t\"./ar-dz.js\": 889,\n\t\"./ar-kw\": 890,\n\t\"./ar-kw.js\": 890,\n\t\"./ar-ly\": 891,\n\t\"./ar-ly.js\": 891,\n\t\"./ar-ma\": 892,\n\t\"./ar-ma.js\": 892,\n\t\"./ar-sa\": 893,\n\t\"./ar-sa.js\": 893,\n\t\"./ar-tn\": 894,\n\t\"./ar-tn.js\": 894,\n\t\"./ar.js\": 888,\n\t\"./az\": 895,\n\t\"./az.js\": 895,\n\t\"./be\": 896,\n\t\"./be.js\": 896,\n\t\"./bg\": 897,\n\t\"./bg.js\": 897,\n\t\"./bm\": 898,\n\t\"./bm.js\": 898,\n\t\"./bn\": 899,\n\t\"./bn.js\": 899,\n\t\"./bo\": 900,\n\t\"./bo.js\": 900,\n\t\"./br\": 901,\n\t\"./br.js\": 901,\n\t\"./bs\": 902,\n\t\"./bs.js\": 902,\n\t\"./ca\": 903,\n\t\"./ca.js\": 903,\n\t\"./cs\": 904,\n\t\"./cs.js\": 904,\n\t\"./cv\": 905,\n\t\"./cv.js\": 905,\n\t\"./cy\": 906,\n\t\"./cy.js\": 906,\n\t\"./da\": 907,\n\t\"./da.js\": 907,\n\t\"./de\": 908,\n\t\"./de-at\": 909,\n\t\"./de-at.js\": 909,\n\t\"./de-ch\": 910,\n\t\"./de-ch.js\": 910,\n\t\"./de.js\": 908,\n\t\"./dv\": 911,\n\t\"./dv.js\": 911,\n\t\"./el\": 912,\n\t\"./el.js\": 912,\n\t\"./en-au\": 913,\n\t\"./en-au.js\": 913,\n\t\"./en-ca\": 914,\n\t\"./en-ca.js\": 914,\n\t\"./en-gb\": 915,\n\t\"./en-gb.js\": 915,\n\t\"./en-ie\": 916,\n\t\"./en-ie.js\": 916,\n\t\"./en-il\": 917,\n\t\"./en-il.js\": 917,\n\t\"./en-nz\": 918,\n\t\"./en-nz.js\": 918,\n\t\"./eo\": 919,\n\t\"./eo.js\": 919,\n\t\"./es\": 920,\n\t\"./es-do\": 921,\n\t\"./es-do.js\": 921,\n\t\"./es-us\": 922,\n\t\"./es-us.js\": 922,\n\t\"./es.js\": 920,\n\t\"./et\": 923,\n\t\"./et.js\": 923,\n\t\"./eu\": 924,\n\t\"./eu.js\": 924,\n\t\"./fa\": 925,\n\t\"./fa.js\": 925,\n\t\"./fi\": 926,\n\t\"./fi.js\": 926,\n\t\"./fo\": 927,\n\t\"./fo.js\": 927,\n\t\"./fr\": 928,\n\t\"./fr-ca\": 929,\n\t\"./fr-ca.js\": 929,\n\t\"./fr-ch\": 930,\n\t\"./fr-ch.js\": 930,\n\t\"./fr.js\": 928,\n\t\"./fy\": 931,\n\t\"./fy.js\": 931,\n\t\"./gd\": 932,\n\t\"./gd.js\": 932,\n\t\"./gl\": 933,\n\t\"./gl.js\": 933,\n\t\"./gom-latn\": 934,\n\t\"./gom-latn.js\": 934,\n\t\"./gu\": 935,\n\t\"./gu.js\": 935,\n\t\"./he\": 936,\n\t\"./he.js\": 936,\n\t\"./hi\": 937,\n\t\"./hi.js\": 937,\n\t\"./hr\": 938,\n\t\"./hr.js\": 938,\n\t\"./hu\": 939,\n\t\"./hu.js\": 939,\n\t\"./hy-am\": 940,\n\t\"./hy-am.js\": 940,\n\t\"./id\": 941,\n\t\"./id.js\": 941,\n\t\"./is\": 942,\n\t\"./is.js\": 942,\n\t\"./it\": 943,\n\t\"./it.js\": 943,\n\t\"./ja\": 944,\n\t\"./ja.js\": 944,\n\t\"./jv\": 945,\n\t\"./jv.js\": 945,\n\t\"./ka\": 946,\n\t\"./ka.js\": 946,\n\t\"./kk\": 947,\n\t\"./kk.js\": 947,\n\t\"./km\": 948,\n\t\"./km.js\": 948,\n\t\"./kn\": 949,\n\t\"./kn.js\": 949,\n\t\"./ko\": 950,\n\t\"./ko.js\": 950,\n\t\"./ky\": 951,\n\t\"./ky.js\": 951,\n\t\"./lb\": 952,\n\t\"./lb.js\": 952,\n\t\"./lo\": 953,\n\t\"./lo.js\": 953,\n\t\"./lt\": 954,\n\t\"./lt.js\": 954,\n\t\"./lv\": 955,\n\t\"./lv.js\": 955,\n\t\"./me\": 956,\n\t\"./me.js\": 956,\n\t\"./mi\": 957,\n\t\"./mi.js\": 957,\n\t\"./mk\": 958,\n\t\"./mk.js\": 958,\n\t\"./ml\": 959,\n\t\"./ml.js\": 959,\n\t\"./mn\": 960,\n\t\"./mn.js\": 960,\n\t\"./mr\": 961,\n\t\"./mr.js\": 961,\n\t\"./ms\": 962,\n\t\"./ms-my\": 963,\n\t\"./ms-my.js\": 963,\n\t\"./ms.js\": 962,\n\t\"./mt\": 964,\n\t\"./mt.js\": 964,\n\t\"./my\": 965,\n\t\"./my.js\": 965,\n\t\"./nb\": 966,\n\t\"./nb.js\": 966,\n\t\"./ne\": 967,\n\t\"./ne.js\": 967,\n\t\"./nl\": 968,\n\t\"./nl-be\": 969,\n\t\"./nl-be.js\": 969,\n\t\"./nl.js\": 968,\n\t\"./nn\": 970,\n\t\"./nn.js\": 970,\n\t\"./pa-in\": 971,\n\t\"./pa-in.js\": 971,\n\t\"./pl\": 972,\n\t\"./pl.js\": 972,\n\t\"./pt\": 973,\n\t\"./pt-br\": 974,\n\t\"./pt-br.js\": 974,\n\t\"./pt.js\": 973,\n\t\"./ro\": 975,\n\t\"./ro.js\": 975,\n\t\"./ru\": 976,\n\t\"./ru.js\": 976,\n\t\"./sd\": 977,\n\t\"./sd.js\": 977,\n\t\"./se\": 978,\n\t\"./se.js\": 978,\n\t\"./si\": 979,\n\t\"./si.js\": 979,\n\t\"./sk\": 980,\n\t\"./sk.js\": 980,\n\t\"./sl\": 981,\n\t\"./sl.js\": 981,\n\t\"./sq\": 982,\n\t\"./sq.js\": 982,\n\t\"./sr\": 983,\n\t\"./sr-cyrl\": 984,\n\t\"./sr-cyrl.js\": 984,\n\t\"./sr.js\": 983,\n\t\"./ss\": 985,\n\t\"./ss.js\": 985,\n\t\"./sv\": 986,\n\t\"./sv.js\": 986,\n\t\"./sw\": 987,\n\t\"./sw.js\": 987,\n\t\"./ta\": 988,\n\t\"./ta.js\": 988,\n\t\"./te\": 989,\n\t\"./te.js\": 989,\n\t\"./tet\": 990,\n\t\"./tet.js\": 990,\n\t\"./tg\": 991,\n\t\"./tg.js\": 991,\n\t\"./th\": 992,\n\t\"./th.js\": 992,\n\t\"./tl-ph\": 993,\n\t\"./tl-ph.js\": 993,\n\t\"./tlh\": 994,\n\t\"./tlh.js\": 994,\n\t\"./tr\": 995,\n\t\"./tr.js\": 995,\n\t\"./tzl\": 996,\n\t\"./tzl.js\": 996,\n\t\"./tzm\": 997,\n\t\"./tzm-latn\": 998,\n\t\"./tzm-latn.js\": 998,\n\t\"./tzm.js\": 997,\n\t\"./ug-cn\": 999,\n\t\"./ug-cn.js\": 999,\n\t\"./uk\": 1000,\n\t\"./uk.js\": 1000,\n\t\"./ur\": 1001,\n\t\"./ur.js\": 1001,\n\t\"./uz\": 1002,\n\t\"./uz-latn\": 1003,\n\t\"./uz-latn.js\": 1003,\n\t\"./uz.js\": 1002,\n\t\"./vi\": 1004,\n\t\"./vi.js\": 1004,\n\t\"./x-pseudo\": 1005,\n\t\"./x-pseudo.js\": 1005,\n\t\"./yo\": 1006,\n\t\"./yo.js\": 1006,\n\t\"./zh-cn\": 1007,\n\t\"./zh-cn.js\": 1007,\n\t\"./zh-hk\": 1008,\n\t\"./zh-hk.js\": 1008,\n\t\"./zh-tw\": 1009,\n\t\"./zh-tw.js\": 1009\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1262;","module.exports = __webpack_public_path__ + \"files/3812df668bb0144f7ae51853b202315b.mp3\";","module.exports = __webpack_public_path__ + \"files/f01ff3d5ecdd14a914464f89607526df.png\";","module.exports = __webpack_public_path__ + \"i18n/de.31fa941d675030ff5f2eae64103caf6a.json\";","module.exports = __webpack_public_path__ + \"i18n/es.bab5aad30bbff8fcdaa25a47e58bd67b.json\";","module.exports = __webpack_public_path__ + \"i18n/fr.b4b2edeec55ad48d81b6560d2d6724c6.json\";","module.exports = __webpack_public_path__ + \"i18n/it.80115509de0f5a6d2ff1131e474f09aa.json\";","module.exports = __webpack_public_path__ + \"i18n/ja.3356bfe5c8d804cf4f968579b83dbc52.json\";","module.exports = __webpack_public_path__ + \"i18n/ko.e85314dc5bd4f471407ce76031b1c591.json\";","module.exports = __webpack_public_path__ + \"i18n/nl.ae01ab3f58b6c2c00aa8e0a33aadaf29.json\";","module.exports = __webpack_public_path__ + \"i18n/pl.12c1ee0b3e62363db2c108dcbbdd0433.json\";","module.exports = __webpack_public_path__ + \"i18n/pt-BR.b80eca533beaa4d43e408e2124682878.json\";","module.exports = __webpack_public_path__ + \"i18n/ro.0deb825c53e3a81bd833f66e708bb46b.json\";","module.exports = __webpack_public_path__ + \"i18n/ru.1cb35e204e22d6cc3c5bd5780650606a.json\";","module.exports = __webpack_public_path__ + \"i18n/tr.364aa9a29997425d6e08899e4db9d085.json\";","module.exports = __webpack_public_path__ + \"i18n/zh-TW.be5ced0ab59eed8d3dad5f89ab63bde4.json\";","module.exports = __webpack_public_path__ + \"i18n/zh-CN.114815526fbeb87b8d68db055e40e846.json\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport messageHtmlToComponent from 'utils/message_html_to_component';\nimport {formatText} from 'utils/text_formatting.jsx';\n\n// Common libraries exposed on window for plugins to use as Webpack externals.\nwindow.React = require('react');\nwindow.ReactDOM = require('react-dom');\nwindow.Redux = require('redux');\nwindow.ReactRedux = require('react-redux');\nwindow.ReactBootstrap = require('react-bootstrap');\nwindow.PostUtils = {formatText, messageHtmlToComponent};\nwindow.PropTypes = require('prop-types');","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../../node_modules/babel-loader/lib/index.js??ref--4!./index.js\"));\n\t});\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Route} from 'react-router-dom';\n\nimport HeaderFooterTemplate from 'bundle-loader?lazy!components/header_footer_template';\nimport loadLoggedIn from 'bundle-loader?lazy!components/logged_in';\nimport {AsyncComponent} from 'components/async_load';\n\nexport const HFTRoute = ({component: Component, ...rest}) => (\n    <Route\n        {...rest}\n        render={(props) => (\n            <AsyncComponent\n                doLoad={HeaderFooterTemplate}\n                {...props}\n            >\n                <Component {...props}/>\n            </AsyncComponent>\n        )}\n    />\n);\n\nexport const LoggedInHFTRoute = ({component: Component, ...rest}) => (\n    <Route\n        {...rest}\n        render={(props) => (\n            <AsyncComponent\n                doLoad={loadLoggedIn}\n                {...props}\n            >\n                <AsyncComponent\n                    doLoad={HeaderFooterTemplate}\n                    {...props}\n                >\n                    <Component {...props}/>\n                </AsyncComponent>\n            </AsyncComponent>\n        )}\n    />\n);\n","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../../node_modules/babel-loader/lib/index.js??ref--4!./index.js\"));\n\t});\n}","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../../node_modules/babel-loader/lib/index.js??ref--4!./index.js\"));\n\t});\n}","module.exports = __webpack_public_path__ + \"files/aa8f68721d6eb2b283a28d5535dc4e40.png\";","module.exports = __webpack_public_path__ + \"files/0a94430239002b5e6a93452b720d4297.png\";","// 1.0.3\n/*\nThe MIT License (MIT)\n\nCopyright (c) 2015 Jan Martin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n(function ($) {\n\n    $.fn.dragster = function (options) {\n        var settings = $.extend({\n            enter: $.noop,\n            leave: $.noop,\n            over: $.noop,\n            drop: $.noop\n        }, options);\n\n        return this.each(function () {\n            var first = false,\n                second = false,\n                $this = $(this);\n\n            $this.on({\n                dragenter: function (event) {\n                    if (first) {\n                        second = true;\n                        return;\n                    } else {\n                        first = true;\n                        $this.trigger('dragster:enter', event);\n                    }\n                    event.preventDefault();\n                },\n                dragleave: function (event) {\n                    if (second) {\n                        second = false;\n                    } else if (first) {\n                        first = false;\n                    }\n                    if (!first && !second) {\n                        $this.trigger('dragster:leave', event);\n                    }\n                    event.preventDefault();\n                },\n                dragover: function (event) {\n                    $this.trigger('dragster:over', event);\n                    event.preventDefault();\n                },\n                drop: function (event) {\n                    if (second) {\n                        second = false;\n                    } else if (first) {\n                        first = false;\n                    }\n                    if (!first && !second) {\n                        $this.trigger('dragster:drop', event);\n                    }\n                    event.preventDefault();\n                },\n                'dragster:enter': settings.enter,\n                'dragster:leave': settings.leave,\n                'dragster:over': settings.over,\n                'dragster:drop': settings.drop\n            });\n        });\n    };\n\n}(jQuery));\n","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../node_modules/babel-loader/lib/index.js??ref--4!./pdf_preview.jsx\"));\n\t});\n}","module.exports = __webpack_public_path__ + \"files/bd956aafccffed574da236f21af209ef.gif\";","module.exports = __webpack_public_path__ + \"files/8b03642d36741ba3030a9004a1d56bb0.gif\";","module.exports = __webpack_public_path__ + \"files/a8e8415f3244fdcbab79cbc5bfeae52f.png\";","module.exports = __webpack_public_path__ + \"files/a8e8415f3244fdcbab79cbc5bfeae52f.png\";","module.exports = __webpack_public_path__ + \"files/1e3af4d072a53dfd298d2e416e68335a.png\";","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../../node_modules/babel-loader/lib/index.js??ref--4!./index.jsx\"));\n\t});\n}","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../../../node_modules/babel-loader/lib/index.js??ref--4!./index.js\"));\n\t});\n}","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../../node_modules/babel-loader/lib/index.js??ref--4!./index.js\"));\n\t});\n}","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../node_modules/babel-loader/lib/index.js??ref--4!./password_reset_send_link.jsx\"));\n\t});\n}","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../../node_modules/babel-loader/lib/index.js??ref--4!./index.js\"));\n\t});\n}","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../../../node_modules/babel-loader/lib/index.js??ref--4!./index.js\"));\n\t});\n}","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../../../node_modules/babel-loader/lib/index.js??ref--4!./index.js\"));\n\t});\n}","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../../node_modules/babel-loader/lib/index.js??ref--4!./index.js\"));\n\t});\n}","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../../node_modules/babel-loader/lib/index.js??ref--4!./index.js\"));\n\t});\n}","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../../node_modules/babel-loader/lib/index.js??ref--4!./index.js\"));\n\t});\n}","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../../node_modules/babel-loader/lib/index.js??ref--4!./index.js\"));\n\t});\n}","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../../node_modules/babel-loader/lib/index.js??ref--4!./help_controller.jsx\"));\n\t});\n}","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../../node_modules/babel-loader/lib/index.js??ref--4!./index.js\"));\n\t});\n}","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../../node_modules/babel-loader/lib/index.js??ref--4!./index.js\"));\n\t});\n}","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../../node_modules/babel-loader/lib/index.js??ref--4!./index.js\"));\n\t});\n}","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../node_modules/babel-loader/lib/index.js??ref--4!./authorize.jsx\"));\n\t});\n}","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../../node_modules/babel-loader/lib/index.js??ref--4!./index.js\"));\n\t});\n}","module.exports = function(cb) {\n\trequire.ensure([], function(require) {\n\t\tcb(require(\"!!../../../node_modules/babel-loader/lib/index.js??ref--4!./index.js\"));\n\t});\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\n\nimport LocalStorageStore from 'stores/local_storage_store';\n\n// setPreviousTeamId is a pseudo-action that writes not to the Redux store, but back to local\n// storage.\n//\n// See LocalStorageStore for context.\nexport function setPreviousTeamId(teamId) {\n    return (dispatch, getState) => {\n        const userId = getCurrentUserId(getState());\n\n        LocalStorageStore.setPreviousTeamId(userId, teamId);\n\n        return {data: true};\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport * as PostActions from 'mattermost-redux/actions/posts';\n\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport {ActionTypes} from 'utils/constants.jsx';\n\nexport function editPost(post) {\n    return async (dispatch, getState) => {\n        const result = await PostActions.editPost(post)(dispatch, getState);\n\n        if (result.error) {\n            AppDispatcher.handleServerAction({\n                type: ActionTypes.RECEIVED_ERROR,\n                err: {\n                    id: result.error.server_error_id,\n                    ...result.error,\n                },\n            });\n        }\n\n        return result;\n    };\n}\n\nexport function selectAttachmentMenuAction(postId, actionId, dataSource, displayText, value) {\n    return async (dispatch) => {\n        dispatch({\n            type: ActionTypes.SELECT_ATTACHMENT_MENU_ACTION,\n            postId,\n            data: {displayText, value},\n        });\n\n        dispatch(PostActions.doPostAction(postId, actionId, value));\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport * as UserAgent from 'utils/user_agent.jsx';\n\nexport default class DeletePostModal extends React.PureComponent {\n    static propTypes = {\n\n        channelName: PropTypes.string,\n        focusedPostId: PropTypes.string,\n        teamName: PropTypes.string,\n        post: PropTypes.object.isRequired,\n        commentCount: PropTypes.number.isRequired,\n\n        /**\n         * Does the post come from RHS mode\n         */\n        isRHS: PropTypes.bool.isRequired,\n\n        /**\n        * Function called when modal is dismissed\n        */\n        onHide: PropTypes.func.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * Function called for deleting post\n            */\n            deleteAndRemovePost: PropTypes.func.isRequired,\n        }),\n    }\n\n    constructor(props) {\n        super(props);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.onHide = this.onHide.bind(this);\n        this.state = {\n            show: true,\n        };\n    }\n\n    handleDelete = async () => {\n        const {\n            actions,\n            channelName,\n            focusedPostId,\n            post,\n            teamName,\n        } = this.props;\n\n        const result = await actions.deleteAndRemovePost(post);\n\n        if (post.id === focusedPostId && channelName) {\n            browserHistory.push('/' + teamName + '/channels/' + channelName);\n        }\n\n        if (result.data) {\n            this.onHide();\n        }\n    }\n\n    onHide() {\n        this.setState({show: false});\n\n        if (!UserAgent.isMobile()) {\n            var element;\n            if (this.props.isRHS) {\n                element = document.getElementById('reply_textbox');\n            } else {\n                element = document.getElementById('post_textbox');\n            }\n            if (element) {\n                element.focus();\n            }\n        }\n    }\n\n    render() {\n        var commentWarning = '';\n        if (this.props.commentCount > 0) {\n            commentWarning = (\n                <FormattedMessage\n                    id='delete_post.warning'\n                    defaultMessage='This post has {count, number} {count, plural, one {comment} other {comments}} on it.'\n                    values={{\n                        count: this.props.commentCount,\n                    }}\n                />\n            );\n        }\n\n        const postTerm = this.props.post.root_id ? (\n            <FormattedMessage\n                id='delete_post.comment'\n                defaultMessage='Comment'\n            />\n        ) : (\n            <FormattedMessage\n                id='delete_post.post'\n                defaultMessage='Post'\n            />\n        );\n\n        return (\n            <Modal\n                show={this.state.show}\n                onHide={this.onHide}\n                onExited={this.props.onHide}\n                enforceFocus={false}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title>\n                        <FormattedMessage\n                            id='delete_post.confirm'\n                            defaultMessage='Confirm {term} Delete'\n                            values={{\n                                term: (postTerm),\n                            }}\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <FormattedMessage\n                        id='delete_post.question'\n                        defaultMessage='Are you sure you want to delete this {term}?'\n                        values={{\n                            term: (postTerm),\n                        }}\n                    />\n                    <br/>\n                    <br/>\n                    {commentWarning}\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        type='button'\n                        className='btn btn-default'\n                        onClick={this.onHide}\n                    >\n                        <FormattedMessage\n                            id='delete_post.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </button>\n                    <button\n                        ref={(deletePostBtn) => {\n                            this.deletePostBtn = deletePostBtn;\n                        }}\n                        type='button'\n                        autoFocus={true}\n                        className='btn btn-danger'\n                        onClick={this.handleDelete}\n                    >\n                        <FormattedMessage\n                            id='delete_post.del'\n                            defaultMessage='Delete'\n                        />\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {getChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {deleteAndRemovePost} from 'actions/post_actions.jsx';\n\nimport DeletePostModal from './delete_post_modal.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const channel = getChannel(state, ownProps.post.channel_id);\n    let channelName = '';\n    if (channel) {\n        channelName = channel.name;\n    }\n\n    const {focusedPostId} = state.views.channel;\n\n    return {\n        channelName,\n        focusedPostId,\n        teamName: getCurrentTeam(state).name,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            deleteAndRemovePost,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeletePostModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nexport default {\n    ItemTapAction: {\n        OPEN_EMBED_PAGE: 1,\n        SHARE: 2,\n    },\n\n    Tab: {\n        TRENDING: 0,\n        REACTIONS: 1,\n    },\n\n    appName: {\n        mattermost: 'mattermost',\n    },\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class GifSearchIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='100%'\n                    height='100%'\n                    viewBox='-10 -10 40 40'\n                    version='1.1'\n                >\n                    <g\n                        id='ic_search'\n                        transform='matrix(0.959095,-9.6091e-18,-1.00189e-17,0.959095,-0.0633002,-0.777826)'\n                    >\n                        <path\n                            d='M2.648,15.872C3.433,16.658 4.376,17.287 5.454,17.758C6.553,18.229 7.698,18.454 8.888,18.454C10.728,18.454 12.389,17.938 13.893,16.905L18.18,21.192C18.494,21.506 18.854,21.664 19.302,21.664C19.751,21.664 20.111,21.506 20.447,21.192C20.761,20.855 20.919,20.496 20.919,20.047C20.919,19.621 20.761,19.239 20.447,18.925L16.16,14.638C17.193,13.134 17.709,11.473 17.709,9.633C17.709,8.443 17.484,7.298 17.013,6.198C16.542,5.121 15.913,4.178 15.128,3.393C14.342,2.607 13.399,1.979 12.322,1.507C11.222,1.036 10.077,0.811 8.888,0.811C7.698,0.811 6.553,1.036 5.454,1.507C4.376,1.979 3.433,2.607 2.648,3.393C1.862,4.178 1.234,5.121 0.762,6.198C0.291,7.298 0.066,8.443 0.066,9.633C0.066,10.822 0.291,11.967 0.762,13.067C1.234,14.144 1.862,15.087 2.648,15.872ZM8.888,4.021C10.436,4.021 11.761,4.56 12.861,5.66C13.96,6.76 14.499,8.084 14.499,9.633C14.499,11.181 13.96,12.506 12.861,13.606C11.761,14.705 10.436,15.244 8.888,15.244C7.339,15.244 6.015,14.705 4.915,13.606C3.815,12.506 3.276,11.181 3.276,9.633C3.276,8.084 3.815,6.76 4.915,5.66C6.015,4.56 7.339,4.021 8.888,4.021Z'\n                            style={{fill: 'inherit'}}\n                        />\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class GifSearchClearIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='100%'\n                    height='100%'\n                    viewBox='-10 -10 40 40'\n                    enableBackground='new 0 0 20 20'\n                    version='1.1'\n                >\n                    <g transform='matrix(0.952381,0,0,1,0,0)'>\n                        <path\n                            fill='inherit'\n                            d='M10.5 11.7L2.2 19.8C2 19.9 1.9 20 1.7 20 1.6 20 1.4 19.9 1.3 19.8L0.2 18.8C0.1 18.7 0 18.5 0 18.3 0 18.2 0.1 18 0.2 17.9L8.3 10 0.2 2.1C0.1 2 0 1.8 0 1.7 0 1.5 0.1 1.3 0.2 1.2L1.3 0.2C1.4 0.1 1.6 0 1.7 0 1.9 0 2 0.1 2.2 0.2L10.5 8.3 18.8 0.2C19 0.1 19.1 0 19.3 0 19.4 0 19.6 0.1 19.7 0.2L20.8 1.2C20.9 1.3 21 1.5 21 1.7 21 1.8 20.9 2 20.8 2.1L12.7 10 20.8 17.9C20.9 18 21 18.2 21 18.3 21 18.5 20.9 18.7 20.8 18.8L19.7 19.8C19.6 19.9 19.4 20 19.3 20 19.1 20 19 19.9 18.8 19.8L10.5 11.7Z'\n                        />\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport {saveSearchScrollPosition, saveSearchBarText, searchTextUpdate} from 'mattermost-redux/actions/gifs';\nimport {getTheme} from 'mattermost-redux/selectors/entities/preferences';\nimport {changeOpacity, makeStyleFromTheme} from 'mattermost-redux/utils/theme_utils';\n\nimport GifSearchIcon from 'components/svg/gif_search_icon';\nimport GifSearchClearIcon from 'components/svg/gif_search_clear_icon';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport './SearchBar.scss';\n\nfunction mapStateToProps(state) {\n    return {\n        ...state.entities.gifs.categories,\n        ...state.entities.gifs.search,\n        theme: getTheme(state),\n        appProps: state.entities.gifs.app,\n    };\n}\n\nconst mapDispatchToProps = ({\n    saveSearchBarText,\n    saveSearchScrollPosition,\n    searchTextUpdate,\n});\n\nconst getStyle = makeStyleFromTheme((theme) => {\n    return {\n        background: {\n            backgroundColor: theme.centerChannelBg,\n        },\n        icon: {\n            fill: changeOpacity(theme.centerChannelColor, 0.4),\n        },\n        inputBackground: {\n            backgroundColor: theme.centerChannelBg,\n        },\n        input: {\n            borderColor: changeOpacity(theme.centerChannelColor, 0.12),\n        },\n    };\n});\n\nexport class SearchBar extends Component {\n    static propTypes = {\n        searchBarText: PropTypes.string,\n        tagsList: PropTypes.array,\n        theme: PropTypes.object.isRequired,\n        onTrending: PropTypes.func,\n        onSearch: PropTypes.func,\n        onCategories: PropTypes.func,\n        action: PropTypes.string,\n        saveSearchScrollPosition: PropTypes.func,\n        saveSearchBarText: PropTypes.func,\n        searchTextUpdate: PropTypes.func,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inputFocused: false,\n        };\n\n        this.searchTimeout = null;\n        this.props.saveSearchBarText('');\n        this.props.searchTextUpdate('');\n    }\n\n    componentDidUpdate(prevProps) {\n        const {searchBarText} = this.props;\n\n        if (searchBarText !== prevProps.searchBarText) {\n            if (searchBarText === 'trending') {\n                this.updateSearchInputValue('');\n            } else {\n                this.updateSearchInputValue(searchBarText);\n            }\n        }\n    }\n\n    /**\n     * Returns text request with hyphens\n     */\n    parseSearchText = (searchText) => {\n        return searchText.trim().split(/ +/).join('-');\n    }\n\n    removeExtraSpaces = (searchText) => {\n        return searchText.trim().split(/ +/).join(' ');\n    }\n\n    updateSearchInputValue = (searchText) => {\n        this.searchInput.value = searchText;\n        this.props.saveSearchBarText(searchText);\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.triggerSearch(this.searchInput.value);\n        this.searchInput.blur();\n    }\n\n    triggerSearch = (searchText) => {\n        const {onSearch} = this.props;\n        this.props.searchTextUpdate(this.parseSearchText(searchText));\n        onSearch();\n        this.props.saveSearchScrollPosition(0);\n    }\n\n    handleChange = (event) => {\n        clearTimeout(this.searchTimeout);\n\n        const searchText = event.target.value;\n\n        const {onCategories, action} = this.props;\n        this.props.saveSearchBarText(searchText);\n\n        if (searchText === '') {\n            onCategories();\n        } else if (action !== 'reactions' || !this.isFilteredTags(searchText)) {\n            // not reactions page or there's no reactions for this search request\n            this.searchTimeout = setTimeout(() => {\n                this.triggerSearch(searchText);\n            }, 500);\n        }\n    }\n\n    focusInput = () => {\n        this.setState({inputFocused: true});\n    }\n\n    blurInput = () => {\n        this.setState({inputFocused: false});\n    }\n\n    /**\n     * Checks if there're reactions for a current searchText\n     */\n    isFilteredTags = (searchText) => {\n        var text = this.removeExtraSpaces(searchText);\n\n        const {tagsList} = this.props;\n        const substr = text.toLowerCase();\n        const filteredTags = tagsList && tagsList.length ? tagsList.filter((tag) => {\n            if (!text || tag.tagName.indexOf(substr) !== -1) {\n                return tag;\n            }\n            return '';\n        }) : [];\n\n        return Boolean(filteredTags.length);\n    }\n\n    clearSearchHandle = () => {\n        const {action, onTrending, onCategories} = this.props;\n        this.updateSearchInputValue('');\n        if (action === 'reactions') {\n            onCategories();\n        } else {\n            onTrending();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return ((!nextProps.searchBarText && this.props.searchBarText) ||\n            (nextProps.searchBarText && !this.props.searchBarText) ||\n            (nextState.inputFocused !== this.state.inputFocused));\n    }\n\n    render() {\n        const style = getStyle(this.props.theme);\n        const {searchBarText} = this.props;\n        const clearSearchButton = searchBarText ?\n            (\n                <GifSearchClearIcon\n                    className='ic-clear-search'\n                    style={style.icon}\n                    onClick={this.clearSearchHandle}\n                />\n            ) : null;\n\n        return (\n            <form\n                className='gfycat-search'\n                method='get'\n                target='_top'\n                noValidate=''\n                onSubmit={this.handleSubmit}\n            >\n                <div\n                    className='search-bar'\n                    style={style.background}\n                >\n                    <div\n                        className='search-input-bg'\n                        style={style.inputBackground}\n                    />\n                    <input\n                        className='search-input'\n                        name='searchText'\n                        autoFocus={true}\n                        placeholder={localizeMessage('gif_picker.gfycat', 'Search Gfycat')}\n                        onChange={this.handleChange}\n                        autoComplete='off'\n                        autoCapitalize='off'\n                        onFocus={this.focusInput}\n                        onBlur={this.blurInput}\n                        ref={(input) => {\n                            this.searchInput = input;\n                            return input;\n                        }}\n                        style={style.input}\n                    />\n                    <GifSearchIcon\n                        className='ic ic-search'\n                        style={style.icon}\n                    />\n                    {clearSearchButton}\n                </div>\n                <button\n                    type='submit'\n                    className='submit-button'\n                />\n            </form>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class GifTrendingIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    className='ic-svg ic-trending-svg'\n                    width='11px'\n                    height='15px'\n                    viewBox='0 0 11 15'\n                    version='1.1'\n                >\n                    <g\n                        id='Finalized-Design'\n                        stroke='none'\n                        fill='inherit'\n                    >\n                        <g\n                            id='GfyCat---Gycat-Tab'\n                            transform='translate(-1212.000000, -619.000000)'\n                            fill='inherit'\n                        >\n                            <g\n                                id='modal---emojis'\n                                transform='translate(1147.000000, 542.000000)'\n                            >\n                                <g\n                                    id='tabs---gfycat'\n                                    transform='translate(1.000000, 68.000000)'\n                                >\n                                    <g id='tab---trending---selected'>\n                                        <path\n                                            d='M69.90625,10.4062776 C69.90625,10.9531513 70.0976562,11.4909106 70.4804688,12.019555 C70.6992188,12.32945 71.1276043,12.7760638 71.765625,13.3593956 C72.3489582,13.9062693 72.7773438,14.3346538 73.0507812,14.6445488 C73.5065106,15.1731932 73.8528644,15.7109525 74.0898438,16.2578262 C74.3632812,16.9505327 74.5,17.6979271 74.5,18.5000083 C74.5,19.4479229 74.2630207,20.3229208 73.7890625,21.1250021 C73.3151043,21.9270834 72.6770832,22.565103 71.875,23.03906 C71.0729168,23.5130171 70.1979168,23.7499958 69.25,23.7499958 C68.3020832,23.7499958 67.4270832,23.5130171 66.625,23.03906 C65.8229168,22.565103 65.1848957,21.9270834 64.7109375,21.1250021 C64.2369793,20.3229208 64,19.4479229 64,18.5000083 C64,17.6432397 64.2005207,16.8320436 64.6015625,16.0664204 C65.0026043,15.3007972 65.5494793,14.6718925 66.2421875,14.1797061 C66.4609375,14.0338733 66.6888019,14.0247585 66.9257812,14.1523625 C67.1627606,14.2799665 67.28125,14.4713723 67.28125,14.7265798 L67.28125,17.6250104 C67.28125,17.9349054 67.3860676,18.1946704 67.5957031,18.4043054 C67.8053387,18.6139405 68.0651043,18.7187578 68.375,18.7187578 C68.6848957,18.7187578 68.9446613,18.6139405 69.1542969,18.4043054 C69.3639324,18.1946704 69.46875,17.9349054 69.46875,17.6250104 C69.46875,17.4427191 69.4049481,17.2330844 69.2773438,16.9961057 C69.2044269,16.8320436 69.0677082,16.576836 68.8671875,16.2304825 C68.4661457,15.5742341 68.1835938,15.0547041 68.0195312,14.6718925 C67.7643231,13.9791859 67.6640625,13.2955938 67.71875,12.6211161 C67.8098957,11.7825763 68.1380207,10.9258077 68.703125,10.0508097 C68.8125,9.86851837 68.9628906,9.76825847 69.1542969,9.75002921 C69.3457031,9.73179994 69.5188801,9.78648731 69.6738281,9.91409132 C69.8287762,10.0416953 69.90625,10.2057574 69.90625,10.4062776 Z M69.2499875,22.437499 C69.9609233,22.437499 70.6171717,22.259765 71.2187328,21.9042971 C71.8202939,21.5488292 72.2988083,21.0703147 72.6542762,20.4687537 C73.0097441,19.8671926 73.1874781,19.2109441 73.1874781,18.5000083 C73.1874781,17.880218 73.0781034,17.3060006 72.8593539,16.7773562 C72.6588337,16.3398572 72.376282,15.9023583 72.0116996,15.4648593 C71.7929502,15.1914225 71.4329248,14.8131683 70.9316241,14.3300964 C70.4303233,13.8470245 70.070298,13.4687703 69.8515485,13.1953335 C69.4869662,12.7760638 69.2135294,12.3567937 69.031238,11.937524 C68.8671759,12.5573143 68.8945196,13.1953335 69.1132691,13.8515819 C69.2408731,14.2343935 69.5143099,14.7812672 69.9335796,15.492203 C70.2252457,15.9661601 70.4166515,16.321628 70.507797,16.5586067 C70.6900884,16.9414183 70.7812338,17.2968862 70.7812338,17.6250104 C70.7812338,18.2812589 70.5442551,18.8463618 70.070298,19.3203189 C69.596341,19.794276 69.031238,20.0312547 68.3749896,20.0312547 C67.7187411,20.0312547 67.1536382,19.794276 66.6796811,19.3203189 C66.205724,18.8463618 65.9687453,18.2812589 65.9687453,17.6250104 L65.9687453,16.0937641 C65.7682251,16.403659 65.60872,16.7819136 65.4902308,17.228527 C65.3717417,17.6751404 65.3124969,18.0989675 65.3124969,18.5000083 C65.3124969,19.2109441 65.4902308,19.8671926 65.8456987,20.4687537 C66.2011666,21.0703147 66.6796811,21.5488292 67.2812422,21.9042971 C67.8828032,22.259765 68.5390517,22.437499 69.2499875,22.437499 Z'\n                                            id='icon---trending'\n                                        />\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class GifReactionsIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    className='ic-svg ic-reactions-svg'\n                    width='14px'\n                    height='14px'\n                    viewBox='0 0 14 14'\n                    version='1.1'\n                >\n                    <g\n                        id='Finalized-Design'\n                        stroke='none'\n                        fill='inherit'\n                    >\n                        <g\n                            id='GfyCat---Gycat-Tab'\n                            transform='translate(-1348.000000, -620.000000)'\n                            fill='inherit'\n                        >\n                            <g\n                                id='modal---emojis'\n                                transform='translate(1147.000000, 542.000000)'\n                            >\n                                <g\n                                    id='tabs---gfycat'\n                                    transform='translate(1.000000, 68.000000)'\n                                >\n                                    <g\n                                        id='tab---category---deselected'\n                                        transform='translate(138.000000, 0.000000)'\n                                    >\n                                        <path\n                                            d='M62,16 L62,10 L68,10 L68,16 L62,16 Z M64,12 L64,14 L66,14 L66,12 L64,12 Z M70,24 L70,18 L76,18 L76,24 L70,24 Z M72,20 L72,22 L74,22 L74,20 L72,20 Z M70,10 L76,10 L76,16 L70,16 L70,10 Z M74,14 L74,12 L72,12 L72,14 L74,14 Z M62,24 L62,18 L68,18 L68,24 L62,24 Z M64,20 L64,22 L66,22 L66,20 L64,20 Z'\n                                            id='icon---categories'\n                                        />\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport {saveSearchBarText, searchTextUpdate} from 'mattermost-redux/actions/gifs';\nimport {getTheme} from 'mattermost-redux/selectors/entities/preferences';\nimport {changeOpacity, makeStyleFromTheme} from 'mattermost-redux/utils/theme_utils';\n\nimport constants from 'components/gif_picker/utils/constants';\nimport SearchBar from 'components/gif_picker/components/SearchBar';\nimport GifTrendingIcon from 'components/svg/gif_trending_icon';\nimport GifReactionsIcon from 'components/svg/gif_reactions_icon';\nimport './Header.scss';\n\nfunction mapStateToProps(state) {\n    return {\n        theme: getTheme(state),\n    };\n}\n\nconst mapDispatchToProps = ({\n    saveSearchBarText,\n    searchTextUpdate,\n});\n\nconst getStyle = makeStyleFromTheme((theme) => {\n    return {\n        background: {\n            backgroundColor: theme.centerChannelBg,\n        },\n        header: {\n            borderBottomColor: changeOpacity(theme.centerChannelColor, 0.2),\n        },\n        icon: {\n            fill: changeOpacity(theme.centerChannelColor, 0.3),\n        },\n        iconActive: {\n            fill: theme.centerChannelColor,\n        },\n        iconHover: {\n            fill: changeOpacity(theme.centerChannelColor, 0.8),\n        },\n    };\n});\n\nexport class Header extends PureComponent {\n    static propTypes = {\n        action: PropTypes.string,\n        appProps: PropTypes.object,\n        saveSearchBarText: PropTypes.func,\n        searchTextUpdate: PropTypes.func,\n        theme: PropTypes.object.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hovering: '',\n        };\n    }\n\n    render() {\n        const style = getStyle(this.props.theme);\n\n        return (\n            <header\n                className='header-container'\n                style={style.background}\n            >\n                <SearchBar {...this.props}/>\n                <nav\n                    className='nav-bar'\n                    style={style.header}\n                >\n                    {this.renderTabs(this.props, style)}\n                </nav>\n            </header>\n        );\n    }\n\n    renderTabs(props, style) {\n        const {appProps, onTrending, onCategories} = props;\n        const {header} = appProps;\n        return header.tabs.map((tab, index) => {\n            let link;\n            if (tab === constants.Tab.TRENDING) {\n                link = this.renderTab('trending', onTrending, GifTrendingIcon, index, style);\n            } else if (tab === constants.Tab.REACTIONS) {\n                link = this.renderTab('reactions', onCategories, GifReactionsIcon, index, style);\n            }\n            return link;\n        });\n    }\n\n    renderTab(name, callback, Icon, index, style) {\n        var props = this.props;\n        const {action} = props;\n        function callbackWrapper() {\n            props.searchTextUpdate('');\n            props.saveSearchBarText('');\n            callback();\n        }\n        return (\n            <a\n                onClick={callbackWrapper}\n                onMouseOver={() => {\n                    this.setState({hovering: name});\n                }}\n                onMouseOut={() => {\n                    this.setState({hovering: ''});\n                }}\n                style={{cursor: 'pointer'}}\n                key={index}\n            >\n                <div style={{paddingTop: '2px'}}>\n                    <Icon\n                        style={(() => {\n                            if (this.state.hovering === name) {\n                                return style.iconHover;\n                            }\n                            return action === name ? style.iconActive : style.icon;\n                        })()}\n                    />\n                </div>\n            </a>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport {saveAppProps} from 'mattermost-redux/actions/gifs';\n\nimport Header from 'components/gif_picker/components/Header';\n\nconst mapDispatchToProps = ({\n    saveAppProps,\n});\n\nexport class App extends PureComponent {\n    static propTypes = {\n        appProps: PropTypes.object,\n        action: PropTypes.string,\n        onCategories: PropTypes.func,\n        onSearch: PropTypes.func,\n        onTrending: PropTypes.func,\n        children: PropTypes.object,\n        saveAppProps: PropTypes.func,\n        authenticateSdk: PropTypes.func,\n    }\n\n    constructor(props) {\n        super(props);\n        const {appProps} = this.props;\n        this.props.saveAppProps(appProps);\n    }\n\n    render() {\n        const {\n            appProps,\n            action,\n            onCategories,\n            onSearch,\n            onTrending,\n            children,\n        } = this.props;\n        const appClassName = 'main-container ' + (appProps.appClassName || '');\n        return (\n            <div className={appClassName}>\n                <Header\n                    appProps={appProps}\n                    action={action}\n                    onCategories={onCategories}\n                    onSearch={onSearch}\n                    onTrending={onTrending}\n                />\n                <div className='component-container'>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class InfiniteScroll extends PureComponent {\n    static propTypes = {\n        children: PropTypes.array,\n        element: PropTypes.string,\n        hasMore: PropTypes.bool,\n        initialLoad: PropTypes.bool,\n        loader: PropTypes.object,\n        loadMore: PropTypes.func.isRequired,\n        pageStart: PropTypes.number,\n        threshold: PropTypes.number,\n        useWindow: PropTypes.bool,\n        isReverse: PropTypes.bool,\n        containerHeight: PropTypes.number,\n        scrollPosition: PropTypes.number,\n    }\n\n    static defaultProps = {\n        element: 'div',\n        hasMore: false,\n        initialLoad: true,\n        pageStart: 0,\n        threshold: 250,\n        useWindow: true,\n        isReverse: false,\n        containerHeight: null,\n        scrollPosition: null,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.scrollListener = this.scrollListener.bind(this);\n    }\n\n    componentDidMount() {\n        this.pageLoaded = this.props.pageStart;\n        this.attachScrollListener();\n        this.setScrollPosition();\n    }\n\n    componentDidUpdate() {\n        this.attachScrollListener();\n    }\n\n    render() {\n        const {\n            children,\n            element,\n            hasMore,\n            initialLoad, // eslint-disable-line no-unused-vars\n            loader,\n            loadMore, // eslint-disable-line no-unused-vars\n            pageStart, // eslint-disable-line no-unused-vars\n            threshold, // eslint-disable-line no-unused-vars\n            useWindow, // eslint-disable-line no-unused-vars\n            isReverse, // eslint-disable-line no-unused-vars\n            scrollPosition, // eslint-disable-line no-unused-vars\n            containerHeight,\n            ...props\n        } = this.props;\n\n        props.ref = (node) => {\n            this.scrollComponent = node;\n        };\n\n        const elementProps = containerHeight ? {...props, style: {height: containerHeight}} : props;\n\n        return React.createElement(element, elementProps, children, hasMore && (loader || this.defaultLoader));\n    }\n\n    calculateTopPosition(el) {\n        if (!el) {\n            return 0;\n        }\n        return el.offsetTop + this.calculateTopPosition(el.offsetParent);\n    }\n\n    setScrollPosition() {\n        const {scrollPosition} = this.props;\n        if (scrollPosition !== null) {\n            window.scrollTo(0, scrollPosition);\n        }\n    }\n\n    scrollListener() {\n        const el = this.scrollComponent;\n        const scrollEl = window;\n\n        let offset;\n        if (this.props.useWindow) {\n            var scrollTop = ('pageYOffset' in scrollEl) ? scrollEl.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n            if (this.props.isReverse) {\n                offset = scrollTop;\n            } else {\n                offset = this.calculateTopPosition(el) + (el.offsetHeight - scrollTop - window.innerHeight);\n            }\n        } else if (this.props.isReverse) {\n            offset = el.parentNode.scrollTop;\n        } else {\n            offset = el.scrollHeight - el.parentNode.scrollTop - el.parentNode.clientHeight;\n        }\n\n        if (offset < Number(this.props.threshold)) {\n            this.detachScrollListener();\n\n            // Call loadMore after detachScrollListener to allow for non-async loadMore functions\n            if (typeof this.props.loadMore === 'function') {\n                this.props.loadMore(this.pageLoaded += 1);\n            }\n        }\n    }\n\n    attachScrollListener() {\n        if (!this.props.hasMore) {\n            return;\n        }\n\n        let scrollEl = window;\n        if (this.props.useWindow === false) {\n            scrollEl = this.scrollComponent.parentNode;\n        }\n\n        scrollEl.addEventListener('scroll', this.scrollListener);\n        scrollEl.addEventListener('resize', this.scrollListener);\n\n        if (this.props.initialLoad) {\n            this.scrollListener();\n        }\n    }\n\n    detachScrollListener() {\n        var scrollEl = window;\n        if (this.props.useWindow === false) {\n            scrollEl = this.scrollComponent.parentNode;\n        }\n\n        scrollEl.removeEventListener('scroll', this.scrollListener);\n        scrollEl.removeEventListener('resize', this.scrollListener);\n    }\n\n    componentWillUnmount() {\n        this.detachScrollListener();\n    }\n\n    // Set a defaut loader for all your `InfiniteScroll` components\n    setDefaultLoader(loader) {\n        this.defaultLoader = loader;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport {requestCategoriesList, requestCategoriesListIfNeeded, saveSearchBarText, saveSearchScrollPosition, searchTextUpdate} from 'mattermost-redux/actions/gifs';\nimport {getTheme} from 'mattermost-redux/selectors/entities/preferences';\nimport {changeOpacity, makeStyleFromTheme} from 'mattermost-redux/utils/theme_utils';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport * as PostUtils from 'utils/post_utils.jsx';\n\nimport InfiniteScroll from 'components/gif_picker/components/InfiniteScroll';\n\nimport './Categories.scss';\n\nfunction mapStateToProps(state) {\n    return {\n        ...state.entities.gifs.categories,\n        ...state.entities.gifs.cache,\n        theme: getTheme(state),\n        appProps: state.entities.gifs.app,\n        searchText: state.entities.gifs.search.searchText,\n        searchBarText: state.entities.gifs.search.searchBarText,\n        hasImageProxy: state.entities.general.config.HasImageProxy,\n    };\n}\n\nconst mapDispatchToProps = ({\n    saveSearchBarText,\n    saveSearchScrollPosition,\n    searchTextUpdate,\n    requestCategoriesList,\n    requestCategoriesListIfNeeded,\n});\n\nconst getStyle = makeStyleFromTheme((theme) => {\n    return {\n        background: {\n            backgroundColor: changeOpacity(theme.centerChannelColor, 0.05),\n        },\n    };\n});\n\nexport class Categories extends PureComponent {\n    static propTypes = {\n        appProps: PropTypes.object,\n        gifs: PropTypes.object,\n        hasMore: PropTypes.bool,\n        onSearch: PropTypes.func,\n        onTrending: PropTypes.func,\n        requestCategoriesList: PropTypes.func,\n        requestCategoriesListIfNeeded: PropTypes.func,\n        saveSearchBarText: PropTypes.func,\n        saveSearchScrollPosition: PropTypes.func,\n        searchTextUpdate: PropTypes.func,\n        searchBarText: PropTypes.string,\n        tagsList: PropTypes.array,\n        hasImageProxy: PropTypes.string,\n        theme: PropTypes.object.isRequired,\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n        this.props.requestCategoriesListIfNeeded();\n        this.sendImpressions();\n    }\n\n    sendImpressions = () => {\n        const {tagsList} = this.props;\n        const gfycats = tagsList.map((tag) => {\n            return {gfyId: tag.gfyId};\n        });\n\n        if (gfycats.length) {\n            trackEvent('gfycat', 'views', {context: 'category_list', count: gfycats.length});\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.saveSearchScrollPosition(0);\n    }\n\n    filterTagsList = () => {\n        const {searchBarText, tagsList} = this.props;\n\n        const substr = searchBarText.toLowerCase().trim().split(/ +/).join(' ');\n        return tagsList && tagsList.length ? tagsList.filter((tag) => {\n            if (!searchBarText || tag.tagName.indexOf(substr) !== -1) {\n                return tag;\n            }\n            return '';\n        }) : [];\n    }\n\n    loadMore = () => {\n        this.props.requestCategoriesList();\n    }\n\n    render() {\n        const style = getStyle(this.props.theme);\n\n        const {hasMore, tagsList, gifs, onSearch, onTrending, hasImageProxy} = this.props;\n\n        const content = tagsList && tagsList.length ? this.filterTagsList(tagsList).map((item, index) => {\n            const {tagName, gfyId} = item;\n\n            if (!gifs[gfyId]) {\n                return null;\n            }\n\n            const gfyItem = gifs[gfyId];\n            const {max1mbGif, avgColor} = gfyItem;\n            const url = PostUtils.getImageSrc(max1mbGif, hasImageProxy === 'true');\n            const searchText = tagName.replace(/\\s/g, '-');\n            const backgroundImage = {backgroundImage: `url(${url}`};\n            const backgroundColor = {backgroundColor: avgColor};\n            const props = this.props;\n            function callback() {\n                props.searchTextUpdate(tagName);\n                props.saveSearchBarText(tagName);\n                if (searchText === 'trending') {\n                    onTrending();\n                } else {\n                    onSearch();\n                }\n            }\n            return (\n                <a\n                    onClick={callback}\n                    key={index}\n                >\n                    <div className='category-container'>\n                        <div\n                            className='category'\n                            style={{...backgroundImage, ...backgroundColor}}\n                        >\n                            <div className='category-name'>{tagName}</div>\n                        </div>\n                    </div>\n                </a>\n            );\n        }) : [];\n\n        return content && content.length ? (\n            <div\n                className='categories-container'\n                style={style.background}\n            >\n                <InfiniteScroll\n                    hasMore={hasMore}\n                    loadMore={this.loadMore}\n                    threshold={1}\n                >\n                    {content}\n                </InfiniteScroll>\n            </div>\n        ) : (\n            <div\n                className='categories-container'\n                style={style.background}\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {PureComponent} from 'react';\nimport {connect} from 'react-redux';\n\nimport PropTypes from 'prop-types';\n\nimport './SearchItem.scss';\nimport * as PostUtils from 'utils/post_utils.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        hasImageProxy: state.entities.general.config.HasImageProxy,\n    };\n}\n\nexport class SearchItem extends PureComponent {\n    static propTypes = {\n        gfyItem: PropTypes.object,\n        top: PropTypes.string,\n        left: PropTypes.string,\n        itemWidth: PropTypes.number,\n        itemClickHandler: PropTypes.func,\n        hasImageProxy: PropTypes.string,\n    }\n\n    render() {\n        const {\n            gfyItem,\n            top,\n            left,\n            itemWidth,\n            itemClickHandler,\n        } = this.props;\n\n        const {width, height, max1mbGif, avgColor} = gfyItem;\n        const {hasImageProxy} = this.props;\n        const url = PostUtils.getImageSrc(max1mbGif, hasImageProxy === 'true');\n\n        const backgroundImage = {backgroundImage: `url(${url})`};\n        const backgroundColor = {backgroundColor: avgColor};\n        const paddingBottom = {paddingBottom: ((itemWidth / width) * height) + 'px'};\n\n        return (\n            <div\n                className='search-item-wrapper'\n                style={{top, left, width: itemWidth ? `${itemWidth}px` : ''}}\n            >\n                <div\n                    className='search-item'\n                    style={{...backgroundImage, ...backgroundColor, ...paddingBottom}}\n                    onClick={() => itemClickHandler(gfyItem)}\n                />\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(SearchItem);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport {saveSearchScrollPosition} from 'mattermost-redux/actions/gifs';\nimport {getTheme} from 'mattermost-redux/selectors/entities/preferences';\nimport {changeOpacity, makeStyleFromTheme} from 'mattermost-redux/utils/theme_utils';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\n\nimport InfiniteScroll from 'components/gif_picker/components/InfiniteScroll';\nimport SearchItem from 'components/gif_picker/components/SearchItem';\n\nimport './SearchGrid.scss';\n\nconst ITEMS_PADDING = 8;\nconst NUMBER_OF_COLUMNS_PORTRAIT = 2;\nconst NUMBER_OF_COLUMNS_LANDSCAPE = 2;\nconst WEBKIT_SCROLLBAR_WIDTH = 8;\n\nfunction mapStateToProps(state) {\n    return {\n        ...state.entities.gifs.cache,\n        ...state.entities.gifs.search,\n        theme: getTheme(state),\n        appProps: state.entities.gifs.app,\n    };\n}\n\nconst mapDispatchToProps = ({\n    saveSearchScrollPosition,\n});\n\nconst getStyle = makeStyleFromTheme((theme) => {\n    return {\n        background: {\n            backgroundColor: changeOpacity(theme.centerChannelColor, 0.05),\n        },\n    };\n});\n\nexport class SearchGrid extends PureComponent {\n    static propTypes = {\n        appProps: PropTypes.object,\n        gifs: PropTypes.object,\n        resultsByTerm: PropTypes.object,\n        containerClassName: PropTypes.string,\n        keyword: PropTypes.string, // searchText, tagName\n        handleItemClick: PropTypes.func,\n        onCategories: PropTypes.func,\n        loadMore: PropTypes.func,\n        numberOfColumns: PropTypes.number,\n        scrollPosition: PropTypes.number,\n        saveSearchScrollPosition: PropTypes.func,\n        theme: PropTypes.object.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            containerWidth: null,\n        };\n        this.scrollPosition = this.props.scrollPosition;\n        this.setNumberOfColumns();\n\n        /**\n         * Inital values for columns heights\n         */\n        this.columnsHeights = Array(this.numberOfColumns).fill(0);\n\n        /**\n         * Items padding value\n         */\n        this.padding = ITEMS_PADDING;\n    }\n\n    componentDidMount() {\n        this.container = document.getElementById('search-grid-container');\n        // eslint-disable-next-line react/no-did-mount-set-state\n        this.setState({\n            ...this.state,\n            containerWidth: this.container.offsetWidth - WEBKIT_SCROLLBAR_WIDTH,\n        });\n        window.addEventListener('resize', this.resizeHandler);\n        window.addEventListener('scroll', this.scrollHandler);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.keyword !== this.props.keyword) {\n            window.scrollTo(0, 0);\n        }\n    }\n\n    componentWillUnmount() {\n        const {keyword} = this.props;\n        if (keyword !== 'trending') {\n            this.props.saveSearchScrollPosition(this.scrollPosition);\n        }\n\n        window.removeEventListener('resize', this.resizeHandler);\n        window.removeEventListener('scroll', this.scrollHandler);\n    }\n\n    setNumberOfColumns = () => {\n        if (window.matchMedia('(orientation: portrait)').matches) {\n            this.numberOfColumns = NUMBER_OF_COLUMNS_PORTRAIT;\n        } else {\n            this.numberOfColumns = NUMBER_OF_COLUMNS_LANDSCAPE;\n        }\n    }\n\n    itemClickHandler = (gfyItem) => {\n        const {keyword, handleItemClick} = this.props;\n        this.props.saveSearchScrollPosition(this.scrollPosition);\n\n        trackEvent('gfycat', 'shares', {gfyid: gfyItem.gfyId, keyword});\n        handleItemClick(gfyItem);\n    }\n\n    minHeightColumnIndex = () => {\n        return this.columnsHeights.indexOf(Math.min(...this.columnsHeights));\n    }\n\n    maxHeightColumnIndex = () => {\n        return this.columnsHeights.indexOf(Math.max(...this.columnsHeights));\n    }\n\n    maxColumnHeight = () => {\n        return Math.max(...this.columnsHeights);\n    }\n\n    resizeHandler = () => {\n        if (this.state.containerWidth !== this.container.offsetWidth - WEBKIT_SCROLLBAR_WIDTH) {\n            this.setNumberOfColumns();\n            this.setState({\n                ...this.state,\n                containerWidth: this.container.offsetWidth - WEBKIT_SCROLLBAR_WIDTH,\n            });\n            this.columnsHeights = Array(this.numberOfColumns).fill(0);\n        }\n    }\n\n    scrollHandler = () => {\n        this.scrollPosition = window.scrollY;\n    }\n\n    render() {\n        const style = getStyle(this.props.theme);\n        const {\n            containerClassName,\n            gifs,\n            keyword,\n            resultsByTerm,\n            scrollPosition,\n            loadMore,\n            onCategories,\n        } = this.props;\n\n        const {containerWidth} = this.state;\n        const {moreRemaining, items = [], isEmpty} = resultsByTerm[keyword] ? resultsByTerm[keyword] : {};\n\n        /**\n         * Columns 'left' values\n         */\n        const columnWidth = parseInt(containerWidth / this.numberOfColumns, 10);\n        const leftPosition = Array(this.numberOfColumns).fill(0).map((item, index) => this.padding + ((index * columnWidth) - (index * (this.padding / 2))));\n\n        this.columnsHeights = Array(this.numberOfColumns).fill(this.padding);\n\n        // Item width in %\n        //const itemWidth = this.numberOfColumns === NUMBER_OF_COLUMNS_PORTRAIT ? 100 / NUMBER_OF_COLUMNS_PORTRAIT : 100 / this.numberOfColumns;\n        const itemWidth = 140;\n\n        const searchItems = containerWidth && items.length ?\n            items.map((item, index) => {\n                const gfyItem = gifs[item];\n                const {gfyId} = gfyItem;\n\n                // Position calculation\n                const colIndex = this.minHeightColumnIndex();\n                const top = this.columnsHeights[colIndex] + 'px';\n                const left = leftPosition[colIndex] + 'px';\n                const itemHeight = ((itemWidth / gfyItem.width) * gfyItem.height) + this.padding;\n                this.columnsHeights[colIndex] += itemHeight;\n\n                return (\n                    <SearchItem\n                        gfyItem={gfyItem}\n                        top={top}\n                        left={left}\n                        itemWidth={itemWidth}\n                        itemClickHandler={this.itemClickHandler}\n                        key={`${index}-${gfyId}`}\n                    />\n                );\n            }) : null;\n\n        this.containerHeight = this.maxColumnHeight();\n\n        const content = searchItems ? (\n            <InfiniteScroll\n                className='search-grid-infinite-scroll'\n                pageStart={0}\n                loadMore={loadMore}\n                initialLoad={false}\n                hasMore={moreRemaining}\n                threshold={1}\n                containerHeight={this.containerHeight}\n                scrollPosition={scrollPosition}\n                useWindow={false}\n            >\n                {searchItems}\n            </InfiniteScroll>\n        ) : null;\n\n        const emptySearch = isEmpty ? (\n            <div className='empty-search'>\n                <div className='empty-search-image'/>\n                <p>{'0 Gifs found for '}<strong>{keyword}</strong></p>\n                <a onClick={onCategories}>\n                    <div className='empty-search-button'>{'Go to Reactions'}</div>\n                </a>\n            </div>\n        ) : null;\n\n        return (\n            <div\n                id='search-grid-container'\n                className={`search-grid-container ${containerClassName}`}\n                style={style.background}\n            >\n                {content}\n                {emptySearch}\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchGrid);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {saveSearchScrollPosition} from 'mattermost-redux/actions/gifs';\n\nimport SearchGrid from './SearchGrid';\n\nfunction mapStateToProps(state) {\n    return {\n        ...state.entities.gifs.cache,\n        ...state.entities.gifs.search,\n        appProps: state.entities.gifs.app,\n    };\n}\n\nfunction mapDispatchToProps() {\n    return {\n        saveSearchScrollPosition,\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchGrid);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport {searchIfNeededInitial, searchGfycat} from 'mattermost-redux/actions/gifs';\n\nimport SearchGrid from 'components/gif_picker/components/SearchGrid';\n\nfunction mapStateToProps(state) {\n    return {\n        ...state.entities.gifs.search,\n    };\n}\n\nconst mapDispatchToProps = ({\n    searchGfycat,\n    searchIfNeededInitial,\n});\n\nexport class Search extends PureComponent {\n    static propTypes = {\n        handleItemClick: PropTypes.func,\n        onCategories: PropTypes.func,\n        searchText: PropTypes.string,\n        searchIfNeededInitial: PropTypes.func,\n        searchGfycat: PropTypes.func,\n    }\n\n    componentDidMount() {\n        const {searchText} = this.props;\n        this.props.searchIfNeededInitial(searchText.split('-').join(' '));\n    }\n\n    componentDidUpdate(prevProps) {\n        const {searchText} = this.props;\n        if (prevProps.searchText !== searchText) {\n            this.props.searchIfNeededInitial(searchText.split('-').join(' '));\n        }\n    }\n\n    loadMore = () => {\n        const {searchText} = this.props;\n        this.props.searchGfycat({searchText});\n    }\n\n    render() {\n        const {handleItemClick, searchText, onCategories} = this.props;\n\n        return (\n            <SearchGrid\n                keyword={searchText}\n                handleItemClick={handleItemClick}\n                onCategories={onCategories}\n                loadMore={this.loadMore}\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport {\n    searchCategory,\n    searchIfNeededInitial,\n    saveSearchScrollPosition,\n} from 'mattermost-redux/actions/gifs';\n\nimport SearchGrid from 'components/gif_picker/components/SearchGrid';\n\nconst mapDispatchToProps = ({\n    searchCategory,\n    searchIfNeededInitial,\n    saveSearchScrollPosition,\n});\n\nexport class Trending extends PureComponent {\n    static propTypes = {\n        handleItemClick: PropTypes.func,\n        onCategories: PropTypes.func,\n        searchCategory: PropTypes.func,\n        searchIfNeededInitial: PropTypes.func,\n        saveSearchScrollPosition: PropTypes.func,\n    }\n\n    componentDidMount() {\n        this.props.searchIfNeededInitial('trending');\n    }\n\n    componentWillUnmount() {\n        this.props.saveSearchScrollPosition(0);\n    }\n\n    loadMore = () => {\n        this.props.searchCategory({tagName: 'trending'});\n    }\n\n    render() {\n        const {handleItemClick, onCategories} = this.props;\n        return (\n            <SearchGrid\n                keyword='trending'\n                handleItemClick={handleItemClick}\n                onCategories={onCategories}\n                loadMore={this.loadMore}\n            />\n        );\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Trending);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PureRenderMixin from 'react-addons-pure-render-mixin';\n\nimport App from 'components/gif_picker/components/App';\nimport Categories from 'components/gif_picker/components/Categories';\nimport Search from 'components/gif_picker/components/Search';\nimport Trending from 'components/gif_picker/components/Trending';\nimport constants from 'components/gif_picker/utils/constants';\n\nexport const appProps = {\n    appName: constants.appName.mattermost,\n    basePath: '/mattermost',\n    itemTapType: constants.ItemTapAction.SHARE,\n    appClassName: 'gfycat',\n    shareEvent: 'shareMattermost',\n    appId: 'mattermostwebviews',\n    enableHistory: true,\n    header: {\n        tabs: [constants.Tab.TRENDING, constants.Tab.REACTIONS],\n        displayText: false,\n    },\n};\n\nexport default class GifPicker extends React.Component {\n    static propTypes = {\n        onGifClick: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        // All props are primitives or treated as immutable\n        this.shouldComponentUpdate = PureRenderMixin.shouldComponentUpdate.bind(this);\n\n        this.handleTrending = this.handleTrending.bind(this);\n        this.handleCategories = this.handleCategories.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.handleItemClick = this.handleItemClick.bind(this);\n\n        this.state = {\n            action: 'trending',\n        };\n    }\n\n    handleTrending() {\n        this.setState({\n            action: 'trending',\n        });\n    }\n\n    handleCategories() {\n        this.setState({\n            action: 'reactions',\n        });\n    }\n\n    handleSearch() {\n        this.setState({\n            action: 'search',\n        });\n    }\n\n    handleItemClick(gif) {\n        this.props.onGifClick(gif.max5mbGif);\n    }\n\n    render() {\n        const {action} = this.state;\n        let component;\n        switch (action) {\n        case 'reactions':\n            component = (\n                <Categories\n                    appProps={appProps}\n                    onTrending={this.handleTrending}\n                    onSearch={this.handleSearch}\n                />\n            );\n            break;\n        case 'search':\n            component = (\n                <Search\n                    appProps={appProps}\n                    onCategories={this.handleCategories}\n                    handleItemClick={this.handleItemClick}\n                />\n            );\n            break;\n        case 'trending':\n            component = (\n                <Trending\n                    appProps={appProps}\n                    onCategories={this.handleCategories}\n                    handleItemClick={this.handleItemClick}\n                />\n            );\n            break;\n        }\n        return (\n            <div>\n                <App\n                    appProps={appProps}\n                    action={action}\n                    onTrending={this.handleTrending}\n                    onCategories={this.handleCategories}\n                    onSearch={this.handleSearch}\n                >\n                    {component}\n                </App>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class EmojiIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='16px'\n                    height='16px'\n                    viewBox='0 0 15 15'\n                    role='icon'\n                    aria-label='Emoji icon'\n                >\n                    <g\n                        stroke='none'\n                        strokeWidth='1'\n                        fill='inherit'\n                        fillRule='evenodd'\n                    >\n                        <g\n                            transform='translate(-1071.000000, -954.000000)'\n                            fill='inherit'\n                        >\n                            <g transform='translate(25.000000, 937.000000)'>\n                                <g transform='translate(1046.000000, 17.000000)'>\n                                    <path d='M7.5,0.0852272727 C3.405,0.0852272727 0.0852272727,3.405 0.0852272727,7.5 C0.0852272727,11.595 3.405,14.9147727 7.5,14.9147727 C11.595,14.9147727 14.9147727,11.595 14.9147727,7.5 C14.9147727,3.405 11.595,0.0852272727 7.5,0.0852272727 Z M7.5,14.0663436 C3.87926951,14.0663436 0.933656417,11.1207305 0.933656417,7.5 C0.933656417,3.87926951 3.87926951,0.933656417 7.5,0.933656417 C11.1207305,0.933656417 14.0663436,3.87926951 14.0663436,7.5 C14.0663436,11.1207305 11.1207305,14.0663436 7.5,14.0663436 Z'/>\n                                    <path d='M11.7732955,8.95397727 C12.0119318,8.90488636 12.2159659,9.11778409 12.1684091,9.35676136 C11.8063636,11.1790909 9.85346591,12.5710227 7.49846591,12.5710227 C5.15096591,12.5710227 3.20284091,11.1877841 2.83193182,9.37397727 C2.78181818,9.129375 2.99267045,8.911875 3.23744318,8.96198864 C4.85369318,9.29232955 10.1786932,9.28142045 11.7732955,8.95397727 Z'/>\n                                    <ellipse\n                                        cx='4.94318182'\n                                        cy='5.50431818'\n                                        rx='1'\n                                        ry='1.06534091'\n                                    />\n                                    <ellipse\n                                        cx='10.0568182'\n                                        cy='5.50431818'\n                                        rx='1'\n                                        ry='1.06534091'\n                                    />\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class GfycatIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='22px'\n                    height='14px'\n                    viewBox='0 0 22 14'\n                >\n                    <g\n                        stroke='none'\n                        strokeWidth='1'\n                        fill='inherit'\n                        fillRule='evenodd'\n                    >\n                        <g\n                            transform='translate(-1344.000000, -552.000000)'\n                            fill='inherit'\n                        >\n                            <g transform='translate(1147.000000, 542.000000)'>\n                                <g transform='translate(1.000000, 1.000000)'>\n                                    <g transform='translate(138.000000, 0.000000)'>\n                                        <path d='M63.6748519,23 L62.2292481,23 C61.8176589,23 61.4619872,22.8510143 61.1631497,22.5539741 C60.8633954,22.2569338 60.71306,21.8993681 60.71306,21.4831393 C60.71306,21.0678417 60.8597287,20.710276 61.1539829,20.4132358 C61.4473204,20.1161955 61.800242,19.9672098 62.2118312,19.9672098 L63.6565183,19.9672098 C64.0681075,19.9672098 64.4182791,19.8219488 64.7061166,19.5304955 C64.993954,19.2390422 65.1378727,18.8917193 65.1378727,18.4866644 L65.1378727,15.4371134 C65.1378727,15.0208846 64.993954,14.6670436 64.7061166,14.3755903 C64.4182791,14.084137 64.0745243,13.938876 63.6748519,13.938876 C63.2632628,13.938876 62.9103411,14.0869305 62.6170036,14.3849019 C62.3227494,14.6819421 62.1760807,15.0329897 62.1760807,15.4371134 C62.1760807,15.7294978 62.3016658,16.0563352 62.5519193,16.4185567 L62.575753,16.4530096 C62.8269232,16.8143 62.9515917,17.1420685 62.9515917,17.4344529 C62.9515917,17.8506817 62.8049229,18.2073163 62.5115854,18.5043565 C62.2173313,18.8023279 61.8653263,18.9503824 61.4537371,18.9503824 C60.7836443,18.9503824 60.2198863,18.5164616 59.7615465,17.6486199 C59.373791,16.9232458 59.1794549,16.1857665 59.1794549,15.4371134 C59.1794549,14.188427 59.6176278,13.1213169 60.4930568,12.234852 C61.3684859,11.3493183 62.4226675,10.9060858 63.6565183,10.9060858 C64.8912858,10.9060858 65.9482175,11.3493183 66.8300633,12.234852 C67.7109925,13.1213169 68.1519154,14.188427 68.1519154,15.4371134 L68.1519154,18.4866644 C68.1519154,19.7353508 67.7137425,20.7996674 66.8383134,21.6796142 C65.9628844,22.559561 64.9087028,23 63.6748519,23 Z M80,15.9269039 C80,16.3068174 79.8689148,16.6317925 79.6076611,16.9027602 C79.3454907,17.173728 79.0319863,17.3096774 78.6653144,17.3096774 L76.8438719,17.3096774 L76.8438719,18.6589292 C76.8438719,19.0388427 76.7127867,19.3638178 76.4506164,19.6347855 C76.1893627,19.9057532 75.8749415,20.0417027 75.5082697,20.0417027 C75.1315143,20.0417027 74.8125098,19.9057532 74.5503394,19.6347855 C74.2890857,19.3638178 74.1580005,19.0388427 74.1580005,18.6589292 L74.1580005,13.1464583 C74.1580005,12.00858 74.5485061,11.0355171 75.3276838,10.2272697 C76.1077782,9.41995344 77.0473748,9.01582973 78.1473904,9.01582973 L78.6653144,9.01582973 C79.0319863,9.01582973 79.3454907,9.15177918 79.6076611,9.42274692 C79.8689148,9.69371467 80,10.0186897 80,10.3986033 C80,10.7775856 79.8689148,11.1034919 79.6076611,11.3744596 C79.3454907,11.6454273 79.0319863,11.7804456 78.6653144,11.7804456 L78.162974,11.7804456 C77.7963021,11.7804456 77.481881,11.9163951 77.2206273,12.1873628 C76.9584569,12.4583306 76.8282884,12.7777187 76.8282884,13.1464583 L76.8282884,14.5450615 L78.6653144,14.5450615 C79.0319863,14.5450615 79.3454907,14.681011 79.6076611,14.9519787 C79.8689148,15.2229465 80,15.5479215 80,15.9269039 Z M72.6344789,18.6589292 C72.6344789,19.0388427 72.5043104,19.3638178 72.24214,19.6347855 C71.9808863,19.9057532 71.6664652,20.0417027 71.2997933,20.0417027 C70.9340382,20.0417027 70.616867,19.9057532 70.3501132,19.6347855 C70.0833594,19.3638178 69.9495242,19.0388427 69.9495242,18.6589292 L69.9495242,14.170735 C69.9495242,13.7917526 70.0806094,13.4667775 70.3418631,13.1958098 C70.6040335,12.9239109 70.9175379,12.7888926 71.2842098,12.7888926 C71.6508817,12.7888926 71.9671361,12.9239109 72.2348066,13.1958098 C72.5015604,13.4667775 72.6344789,13.7917526 72.6344789,14.170735 L72.6344789,18.6589292 Z M58.3370263,12.5356169 C58.1023563,11.7441304 58.0042716,10.9163286 58.0042716,10.9163286 C57.9721878,10.6937812 58.1243566,10.547589 58.3425264,10.5904223 C58.3425264,10.5904223 58.5350291,10.6267376 58.8017829,10.6807449 C59.0767868,10.7375457 59.4324585,10.8139009 59.7404628,10.8921184 C60.3473048,11.0448287 60.95323,11.2720319 60.95323,11.2720319 C60.95323,11.2720319 60.2904706,11.6621882 59.7239626,12.3018956 C59.1565379,12.9406718 58.8650338,13.8420353 58.8650338,13.8420353 C58.8650338,13.8420353 58.5716963,13.3280346 58.3370263,12.5356169 Z M69.088762,12.5356169 C69.323432,11.7441304 69.4224334,10.9163286 69.4224334,10.9163286 C69.4536005,10.6937812 69.3014317,10.547589 69.0832619,10.5904223 C69.0832619,10.5904223 68.2921674,10.7384769 67.6853254,10.8921184 C67.0794002,11.0448287 66.4725583,11.2720319 66.4725583,11.2720319 C66.4725583,11.2720319 67.1353177,11.6621882 67.7027424,12.3018956 C68.2692504,12.9406718 68.5616712,13.8420353 68.5616712,13.8420353 C68.5616712,13.8420353 68.8550087,13.3280346 69.088762,12.5356169 Z M72.6344789,10.3818424 C72.6344789,10.7617559 72.5043104,11.086731 72.24214,11.3576987 C71.9808863,11.6286664 71.6664652,11.7646159 71.2997933,11.7646159 C70.9340382,11.7646159 70.616867,11.6286664 70.3501132,11.3576987 C70.0833594,11.086731 69.9495242,10.7617559 69.9495242,10.3818424 C69.9495242,10.00286 70.0806094,9.67788494 70.3418631,9.40691719 C70.6040335,9.13594945 70.9175379,9 71.2842098,9 C71.6508817,9 71.9671361,9.13594945 72.2348066,9.40691719 C72.5015604,9.67788494 72.6344789,10.00286 72.6344789,10.3818424 Z'/>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class EmojiPickerCategory extends React.Component {\n    static propTypes = {\n        category: PropTypes.string.isRequired,\n        icon: PropTypes.node.isRequired,\n        onCategoryClick: PropTypes.func.isRequired,\n        selected: PropTypes.bool.isRequired,\n        enable: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n    shouldComponentUpdate(nextProps) {\n        return nextProps.selected !== this.props.selected ||\n            nextProps.enable !== this.props.enable;\n    }\n\n    handleClick(e) {\n        e.preventDefault();\n        this.props.onCategoryClick(this.props.category);\n    }\n\n    render() {\n        let className = 'emoji-picker__category';\n        if (this.props.selected) {\n            className += ' emoji-picker__category--selected';\n        }\n\n        if (!this.props.enable) {\n            className += ' disable';\n        }\n\n        return (\n            <a\n                className={className}\n                href='#'\n                onClick={this.handleClick}\n            >\n                {this.props.icon}\n            </a>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport debounce from 'lodash/debounce';\nimport {getEmojiImageUrl} from 'mattermost-redux/utils/emoji_utils';\n\nimport imgTrans from 'images/img_trans.gif';\n\nconst SCROLLING_ADDITIONAL_VISUAL_SPACING = 10; // to make give the emoji some visual 'breathing room'\nconst EMOJI_LAZY_LOAD_SCROLL_THROTTLE = 150;\n\nexport default class EmojiPickerItem extends React.Component {\n    static propTypes = {\n        emoji: PropTypes.object.isRequired,\n        onItemOver: PropTypes.func.isRequired,\n        onItemClick: PropTypes.func.isRequired,\n        category: PropTypes.string.isRequired,\n        isSelected: PropTypes.bool,\n        categoryIndex: PropTypes.number.isRequired,\n        emojiIndex: PropTypes.number.isRequired,\n        containerRef: PropTypes.any,\n        containerTop: PropTypes.number.isRequired,\n        containerBottom: PropTypes.number.isRequired,\n    };\n\n    shouldComponentUpdate(nextProps) {\n        return nextProps.isSelected !== this.props.isSelected;\n    }\n\n    emojiItemRef = (emojiItem) => {\n        this.emojiItem = emojiItem;\n    };\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (!this.props.isSelected && nextProps.isSelected) {\n            const topOfTheEmojiItem = this.emojiItem.offsetTop;\n            const bottomOfTheEmojiItem = topOfTheEmojiItem + this.emojiItem.offsetHeight;\n            const {containerRef, containerTop, containerBottom} = nextProps;\n            if (topOfTheEmojiItem < containerTop) {\n                containerRef.scrollTop = topOfTheEmojiItem - SCROLLING_ADDITIONAL_VISUAL_SPACING;\n            } else if (bottomOfTheEmojiItem > containerBottom) {\n                containerRef.scrollTop = (bottomOfTheEmojiItem - containerRef.offsetHeight) + SCROLLING_ADDITIONAL_VISUAL_SPACING;\n            }\n        }\n    }\n\n    handleMouseOver = () => {\n        if (!this.props.isSelected) {\n            this.props.onItemOver(this.props.categoryIndex, this.props.emojiIndex);\n        }\n    };\n\n    handleMouseOverThrottle = debounce(this.handleMouseOver, EMOJI_LAZY_LOAD_SCROLL_THROTTLE, {leading: true, trailing: true});\n\n    handleClick = () => {\n        this.props.onItemClick(this.props.emoji);\n    };\n\n    render() {\n        const {emoji} = this.props;\n\n        let itemClassName = 'emoji-picker__item';\n        if (this.props.isSelected) {\n            itemClassName += ' selected';\n        }\n\n        let spriteClassName = 'emojisprite';\n        spriteClassName += ' emoji-category-' + emoji.category + '-' + emoji.batch;\n        spriteClassName += ' emoji-' + emoji.filename;\n\n        let image;\n        if (emoji.category && emoji.batch) {\n            image = (\n                <img\n                    onMouseOver={this.handleMouseOverThrottle}\n                    src={imgTrans}\n                    className={spriteClassName}\n                    onClick={this.handleClick}\n                />\n            );\n        } else {\n            image = (\n                <img\n                    onMouseOver={this.handleMouseOver}\n                    src={getEmojiImageUrl(emoji)}\n                    className={'emoji-category--custom'}\n                    onClick={this.handleClick}\n                />\n            );\n        }\n\n        return (\n            <div\n                className={itemClassName}\n                ref={this.emojiItemRef}\n            >\n                <div>\n                    {image}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class EmojiPickerCategorySection extends React.PureComponent {\n    static propTypes = {\n        categoryName: PropTypes.string.isRequired,\n        children: PropTypes.any,\n        updateCategoryOffset: PropTypes.func.isRequired,\n    };\n\n    componentDidMount() {\n        this.props.updateCategoryOffset(this.props.categoryName, this.div.offsetTop);\n    }\n    divRef = (div) => {\n        this.div = div;\n    };\n\n    render() {\n        return (\n            <div\n                ref={this.divRef}\n            >\n                <div className='emoji-picker-items__container'>\n                    <div\n                        className='emoji-picker__category-header'\n                        id={`emojipickercat-${this.props.categoryName}`}\n                    >\n                        <FormattedMessage id={'emoji_picker.' + this.props.categoryName}/>\n                    </div>\n                </div>\n                <div className='emoji-picker-items__container'>\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {getEmojiImageUrl} from 'mattermost-redux/utils/emoji_utils';\n\nimport imgTrans from 'images/img_trans.gif';\n\nexport default class EmojiPickerPreview extends React.Component {\n    static propTypes = {\n        emoji: PropTypes.object,\n    }\n\n    render() {\n        const emoji = this.props.emoji;\n\n        if (emoji) {\n            let name;\n            let aliases;\n            let previewImage;\n\n            if (emoji.aliases && emoji.category && emoji.batch) {\n                // This is a system emoji which only has a list of aliases\n                name = emoji.aliases[0];\n                aliases = emoji.aliases;\n\n                previewImage = (\n                    <span className='sprite-preview'>\n                        <img\n                            src={imgTrans}\n                            className={'emojisprite-preview emoji-category-' + emoji.category + '-' + emoji.batch + ' emoji-' + emoji.filename}\n                        />\n                    </span>\n                );\n            } else {\n                // This is a custom emoji that matches the model on the server\n                name = emoji.name;\n                aliases = [emoji.name];\n                previewImage = (\n                    <img\n                        className='emoji-picker__preview-image'\n                        src={getEmojiImageUrl(emoji)}\n                    />\n                );\n            }\n\n            return (\n                <div className='emoji-picker__preview'>\n                    <div className='emoji-picker__preview-image-box'>\n                        {previewImage}\n                    </div>\n                    <div className='emoji-picker__preview-image-label-box'>\n                        <span className='emoji-picker__preview-name'>{name}</span>\n                        <span className='emoji-picker__preview-aliases'>\n                            {':' + aliases[0] + ':'}\n                        </span>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className='emoji-picker__preview emoji-picker__preview-placeholder'>\n                <FormattedMessage\n                    id='emoji_picker.emojiPicker'\n                    defaultMessage='Emoji Picker'\n                />\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport throttle from 'lodash/throttle';\n\nimport * as Emoji from 'utils/emoji.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\nimport imgTrans from 'images/img_trans.gif';\n\nimport EmojiPickerCategory from './components/emoji_picker_category';\nimport EmojiPickerItem from './components/emoji_picker_item';\nimport EmojiPickerCategorySection from './emoji_picker_category_section';\nimport EmojiPickerPreview from './components/emoji_picker_preview';\n\nconst CATEGORY_SEARCH_RESULTS = 'searchResults';\nt('emoji_picker.searchResults');\n\nconst EMOJI_HEIGHT = 27;\n\n// If this changes, the spaceRequiredAbove and spaceRequiredBelow props passed to the EmojiPickerOverlay must be updated\nconst EMOJI_CONTAINER_HEIGHT = 290;\nconst EMOJI_CONTAINER_STYLE = {\n    height: EMOJI_CONTAINER_HEIGHT,\n};\n\nconst EMOJI_LAZY_LOAD_BUFFER = 75;\nconst EMOJI_PER_ROW = 9;\nconst EMOJI_TO_LOAD_PER_UPDATE = 135;\nconst SYSTEM_EMOJIS_COUNT = 1476;\nconst EMOJI_LAZY_LOAD_SCROLL_THROTTLE = 100;\n\nconst CATEGORIES = {\n    recent: {\n        name: 'recent',\n        className: 'fa fa-clock-o',\n        id: t('emoji_picker.recent'),\n        message: 'Recently Used',\n        offset: 0,\n    },\n    people: {\n        name: 'people',\n        className: 'fa fa-smile-o',\n        id: t('emoji_picker.people'),\n        message: 'People',\n        offset: 0,\n    },\n    nature: {\n        name: 'nature',\n        className: 'fa fa-leaf',\n        id: t('emoji_picker.nature'),\n        message: 'Nature',\n        offset: 0,\n    },\n    foods: {\n        name: 'foods',\n        className: 'fa fa-cutlery',\n        id: t('emoji_picker.foods'),\n        message: 'Foods',\n        offset: 0,\n    },\n    activity: {\n        name: 'activity',\n        className: 'fa fa-futbol-o',\n        id: t('emoji_picker.activity'),\n        message: 'Activity',\n        offset: 0,\n    },\n    places: {\n        name: 'places',\n        className: 'fa fa-plane',\n        id: t('emoji_picker.places'),\n        message: 'Places',\n        offset: 0,\n    },\n    objects: {\n        name: 'objects',\n        className: 'fa fa-lightbulb-o',\n        id: t('emoji_picker.objects'),\n        message: 'Objects',\n        offset: 0,\n    },\n    symbols: {\n        name: 'symbols',\n        className: 'fa fa-heart-o',\n        id: t('emoji_picker.symbols'),\n        message: 'Symbols',\n        offset: 0,\n    },\n    flags: {\n        name: 'flags',\n        className: 'fa fa-flag-o',\n        id: t('emoji_picker.flags'),\n        message: 'Flags',\n        offset: 0,\n    },\n    custom: {\n        name: 'custom',\n        className: 'fa fa-at',\n        id: t('emoji_picker.custom'),\n        message: 'Custom',\n        offset: 0,\n    },\n};\n\nfunction getEmojiFilename(emoji) {\n    return emoji.filename || emoji.id;\n}\n\nconst EMOJIS_PER_PAGE = 200;\nconst LOAD_MORE_AT_PIXELS_FROM_BOTTOM = 500;\n\nexport default class EmojiPicker extends React.PureComponent {\n    static propTypes = {\n        listHeight: PropTypes.number,\n        onEmojiClick: PropTypes.func.isRequired,\n        customEmojisEnabled: PropTypes.bool,\n        emojiMap: PropTypes.object.isRequired,\n        recentEmojis: PropTypes.array.isRequired,\n        customEmojiPage: PropTypes.number.isRequired,\n        visible: PropTypes.bool,\n        actions: PropTypes.shape({\n            getCustomEmojis: PropTypes.func.isRequired,\n            searchCustomEmojis: PropTypes.func.isRequired,\n            incrementEmojiPickerPage: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    static defaultProps = {\n        listHeight: 245,\n        customEmojiPage: 0,\n        customEmojisEnabled: false,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.handleCategoryClick = this.handleCategoryClick.bind(this);\n        this.handleFilterChange = this.handleFilterChange.bind(this);\n        this.handleItemOver = this.handleItemOver.bind(this);\n        this.handleItemClick = this.handleItemClick.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.handleScroll = this.handleScroll.bind(this);\n        this.handleScrollThrottle = throttle(this.handleScroll, EMOJI_LAZY_LOAD_SCROLL_THROTTLE, {leading: false, trailing: true});\n        this.updateCategoryOffset = this.updateCategoryOffset.bind(this);\n\n        this.divHeight = 0;\n        this.missingPages = true;\n        this.loadingMoreEmojis = false;\n        this.state = {\n            allEmojis: {},\n            categories: CATEGORIES,\n            filter: '',\n            cursor: [0, 0], // categoryIndex, emojiIndex\n            divTopOffset: 0,\n            emojisToShow: SYSTEM_EMOJIS_COUNT,\n        };\n    }\n\n    UNSAFE_componentWillMount() { // eslint-disable-line camelcase\n        if (this.props.customEmojiPage === 0) {\n            this.loadMoreCustomEmojis();\n        }\n        this.getEmojis();\n    }\n\n    componentDidMount() {\n        // Delay taking focus because this briefly renders offscreen when using an Overlay\n        // so focusing it immediately on mount can cause weird scrolling\n        requestAnimationFrame(() => {\n            if (this.searchInput) {\n                this.searchInput.focus();\n            }\n        });\n        this.divHeight = this.emojiPickerContainer.offsetHeight;\n    }\n\n    UNSAFE_componentWillUpdate(nextProps, nextState) { // eslint-disable-line camelcase\n        if (this.state.divTopOffset === nextState.divTopOffset) {\n            return;\n        }\n\n        if (this.lastVisibleEmoji) {\n            const difference = this.lastVisibleEmoji.offsetTop - (nextState.divTopOffset + EMOJI_CONTAINER_HEIGHT + EMOJI_LAZY_LOAD_BUFFER);\n            if (difference <= 0) {\n                const numToLoad = EMOJI_TO_LOAD_PER_UPDATE + Math.ceil((difference / EMOJI_HEIGHT) * EMOJI_PER_ROW * -1);\n                this.setState((state) => ({\n                    emojisToShow: state.emojisToShow + numToLoad,\n                }));\n            }\n        }\n\n        if (!this.missingPages || !this.emojiPickerContainer) {\n            return;\n        }\n\n        const pixelsFromBottom = this.emojiPickerContainer.scrollHeight - nextState.divTopOffset - this.emojiPickerContainer.clientHeight;\n        if (pixelsFromBottom <= LOAD_MORE_AT_PIXELS_FROM_BOTTOM) {\n            this.loadMoreCustomEmojis();\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.emojiMap !== nextProps.emojiMap) {\n            this.getEmojis(nextProps);\n        }\n    }\n\n    loadMoreCustomEmojis = async () => {\n        if (!this.props.customEmojisEnabled || this.loadingMoreEmojis) {\n            return;\n        }\n\n        this.loadingMoreEmojis = true;\n\n        const {data} = await this.props.actions.getCustomEmojis(this.props.customEmojiPage, EMOJIS_PER_PAGE);\n        if (!data) {\n            this.loadingMoreEmojis = false;\n            return;\n        }\n\n        if (data.length < EMOJIS_PER_PAGE) {\n            this.missingPages = false;\n            this.loadingMoreEmojis = false;\n            return;\n        }\n\n        await this.props.actions.incrementEmojiPickerPage();\n\n        this.loadingMoreEmojis = false;\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.visible && !prevProps.visible) {\n            this.searchInput.focus();\n        }\n    }\n\n    lastVisibleEmojiRef = (lastVisibleEmoji) => {\n        this.lastVisibleEmoji = lastVisibleEmoji;\n    };\n    emojiPickerContainerRef = (emojiPickerContainer) => {\n        this.emojiPickerContainer = emojiPickerContainer;\n    };\n    emojiSearchInput = (input) => {\n        this.searchInput = input;\n    };\n\n    handleCategoryClick(categoryName) {\n        this.emojiPickerContainer.scrollTop = this.state.categories[categoryName].offset;\n    }\n\n    handleFilterChange(e) {\n        e.preventDefault();\n        const filter = e.target.value.toLowerCase();\n\n        if (this.props.customEmojisEnabled && filter && filter.trim() !== '') {\n            this.props.actions.searchCustomEmojis(filter);\n        }\n\n        this.setState(() => ({\n            filter,\n            cursor: [0, 0],\n        }));\n    }\n\n    handleItemOver(categoryIndex, emojiIndex) {\n        this.setState({\n            cursor: [categoryIndex, emojiIndex],\n        });\n    }\n\n    handleItemClick(emoji) {\n        this.props.onEmojiClick(emoji);\n    }\n\n    handleKeyDown(e) {\n        switch (e.key) {\n        case 'ArrowRight':\n            e.preventDefault();\n            this.selectNextEmoji();\n            break;\n        case 'ArrowLeft':\n            e.preventDefault();\n            this.selectPrevEmoji();\n            break;\n        case 'ArrowUp':\n            e.preventDefault();\n            this.selectPrevEmoji(EMOJI_PER_ROW);\n            break;\n        case 'ArrowDown':\n            e.preventDefault();\n            this.selectNextEmoji(EMOJI_PER_ROW);\n            break;\n        case 'Enter':\n            e.preventDefault();\n            if (this.getCurrentEmojiByCursor(this.state.cursor)) {\n                this.props.onEmojiClick(this.getCurrentEmojiByCursor(this.state.cursor));\n            }\n            break;\n        }\n    }\n\n    handleScroll() {\n        this.setState({divTopOffset: this.emojiPickerContainer.scrollTop});\n    }\n\n    selectNextEmoji(offset = 1) {\n        const {cursor} = this.state;\n\n        // try moving to next emoji in index\n        let newCursor = [cursor[0], cursor[1] + offset];\n        if (this.getCurrentEmojiByCursor(newCursor)) {\n            this.setState({cursor: newCursor});\n            return;\n        }\n\n        // try moving to next category\n        newCursor = [cursor[0] + 1, 0];\n        if (this.getCurrentEmojiByCursor(newCursor)) {\n            this.setState({cursor: newCursor});\n        }\n    }\n\n    selectPrevEmoji(offset = 1) {\n        const {cursor} = this.state;\n\n        // try moving to prev emoji in index\n        let newCursor = [cursor[0], cursor[1] - offset];\n        if (this.getCurrentEmojiByCursor(newCursor)) {\n            this.setState({cursor: newCursor});\n            return;\n        }\n\n        // try moving to end of prev category\n        if (cursor[0] !== 0) {\n            const newCategory = this.getCategoryByIndex(cursor[0] - 1);\n            const lastVisibleEmojiInNewCategory = this.state.categories[newCategory.name].emojiIds.length - 1;\n            newCursor = [cursor[0] - 1, lastVisibleEmojiInNewCategory];\n            if (this.getCurrentEmojiByCursor(newCursor)) {\n                this.setState({cursor: newCursor});\n            }\n        }\n    }\n\n    getCategoryByIndex(index) {\n        if (this.state.filter && index !== 0) {\n            return null;\n        }\n        return this.getCategoriesByKey(Object.keys(this.state.categories)[index]);\n    }\n\n    getCurrentEmojiByCursor(cursor) {\n        const category = this.getCategoryByIndex(cursor[0]);\n        if (!category) {\n            return null;\n        }\n        return this.getEmojisByCategory(category)[cursor[1]];\n    }\n\n    getCategoriesByKey(key) {\n        return this.state.filter ? {\n            id: CATEGORY_SEARCH_RESULTS,\n            name: CATEGORY_SEARCH_RESULTS,\n        } : this.state.categories[key];\n    }\n\n    getEmojisByCategory(category) {\n        if (this.state.filter) {\n            return Object.values(this.state.allEmojis).filter((emoji) => {\n                for (let i = 0; i < emoji.aliases.length; i++) {\n                    if (emoji.aliases[i].toLowerCase().includes(this.state.filter)) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n        }\n        return this.state.categories[category.name].emojiIds.map((emojiId) =>\n            this.state.allEmojis[emojiId]);\n    }\n\n    getEmojis(props = this.props) {\n        const {categories, allEmojis} = this.state;\n        const emojiMap = props.emojiMap;\n        const customEmojiMap = emojiMap.customEmojis;\n\n        for (const category of Object.keys(categories)) {\n            let categoryEmojis = [];\n            if (category === 'recent') {\n                const recentEmojis = [...this.props.recentEmojis].reverse();\n                categoryEmojis = recentEmojis.filter((name) => {\n                    return emojiMap.has(name);\n                }).map((name) => {\n                    return emojiMap.get(name);\n                });\n            } else {\n                const indices = Emoji.EmojiIndicesByCategory.get(category) || [];\n                categoryEmojis = indices.map((index) => Emoji.Emojis[index]);\n                if (category === 'custom') {\n                    categoryEmojis = categoryEmojis.concat([...customEmojiMap.values()]);\n                }\n            }\n            categories[category].emojiIds = categoryEmojis.map((emoji) => getEmojiFilename(emoji));\n            for (let i = 0; i < categoryEmojis.length; i++) {\n                const currentEmoji = categoryEmojis[i];\n                const fileName = getEmojiFilename(currentEmoji);\n                allEmojis[fileName] = {\n                    ...currentEmoji,\n                    visible: false,\n                    offset: null,\n                };\n                if (!currentEmoji.filename) {\n                    // if custom emoji, set proper attributes\n                    allEmojis[fileName] = {\n                        ...allEmojis[fileName],\n                        aliases: [currentEmoji.name],\n                        category: 'custom',\n                        filename: fileName,\n                    };\n                }\n            }\n        }\n        this.setState({\n            categories,\n            allEmojis,\n        });\n    }\n\n    getCurrentEmojiCategoryName() {\n        const categories = Object.keys(this.state.categories);\n        let currentCategoryName = '';\n        for (let i = categories.length - 1; i >= 0; i--) {\n            // go through in reverse so that you get the last category that matches\n            const category = this.state.categories[categories[i]];\n            if (this.state.divTopOffset > category.offset - 20) {\n                currentCategoryName = categories[i];\n                break;\n            }\n        }\n        return currentCategoryName;\n    }\n\n    emojiCategories() {\n        const categories = this.state.categories;\n        const categoryKeys = Object.keys(categories);\n        const currentCategoryName = this.state.filter ? categoryKeys[0] : this.getCurrentEmojiCategoryName();\n        const emojiPickerCategories = categoryKeys.map((categoryName) => {\n            const category = categories[categoryName];\n            return (\n                <EmojiPickerCategory\n                    key={'header-' + category.name}\n                    category={category.name}\n                    icon={\n                        <i\n                            className={category.className}\n                            title={Utils.localizeMessage(category.id, category.message)}\n                        />\n                    }\n                    onCategoryClick={this.handleCategoryClick}\n                    selected={currentCategoryName === category.name}\n                    enable={!this.state.filter}\n                />\n            );\n        });\n        return <div className='emoji-picker__categories'>{emojiPickerCategories}</div>;\n    }\n\n    emojiSearch() {\n        return (\n            <div className='emoji-picker__search-container'>\n                <span className='fa fa-search emoji-picker__search-icon'/>\n                <input\n                    aria-label={Utils.localizeMessage('emoji_picker.search_emoji', 'Search for an emoji')}\n                    ref={this.emojiSearchInput}\n                    className='emoji-picker__search'\n                    type='text'\n                    onChange={this.handleFilterChange}\n                    onKeyDown={this.handleKeyDown}\n                    placeholder={Utils.localizeMessage('emoji_picker.search', 'search')}\n                />\n            </div>\n        );\n    }\n\n    emojiCurrentResults() {\n        const {filter} = this.state;\n        const categories = filter ? [CATEGORY_SEARCH_RESULTS] : Object.keys(this.state.categories);\n        let numEmojisLoaded = 0;\n\n        let categoryComponents = [];\n\n        for (let i = 0; i < categories.length; i++) {\n            const category = this.getCategoriesByKey(categories[i]);\n            const emojis = this.getEmojisByCategory(category);\n            const items = this.emojiCurrentResultsItems(i, emojis, numEmojisLoaded);\n            numEmojisLoaded += items.length;\n            categoryComponents = [...categoryComponents, (\n                <EmojiPickerCategorySection\n                    key={category.id}\n                    categoryName={category.name}\n                    updateCategoryOffset={this.updateCategoryOffset}\n                >\n                    {items}\n                </EmojiPickerCategorySection>\n            )];\n        }\n\n        return (\n            <div\n                ref={this.emojiPickerContainerRef}\n                onScroll={this.handleScrollThrottle}\n                className='emoji-picker__items'\n                style={EMOJI_CONTAINER_STYLE}\n            >\n                <div className='emoji-picker__container'>\n                    {categoryComponents}\n                </div>\n            </div>\n        );\n    }\n    emojiCurrentResultsItems = (categoryIndex, emojis, currentEmojiLoadedCount) => {\n        const {cursor, emojisToShow} = this.state;\n        let numEmojisLoaded = currentEmojiLoadedCount;\n\n        return emojis.map((emoji, emojiIndex) => {\n            numEmojisLoaded++;\n\n            // set ref on first unloaded emoji\n            let ref;\n            if (numEmojisLoaded === emojisToShow) {\n                ref = this.lastVisibleEmojiRef;\n            }\n            if (numEmojisLoaded >= emojisToShow) {\n                return (\n                    <div\n                        key={numEmojisLoaded}\n                        className='emoji-picker__item'\n                        ref={ref}\n                    >\n                        <img\n                            src={imgTrans}\n                            className='emojisprite'\n                        />\n                    </div>\n                );\n            }\n            return (\n                <EmojiPickerItem\n                    key={emoji.filename + ':' + emoji.id}\n                    emoji={emoji}\n                    onItemOver={this.handleItemOver}\n                    onItemClick={this.handleItemClick}\n                    onItemUnmount={emoji}\n                    category={emoji.category}\n                    isSelected={cursor[0] === (categoryIndex) && cursor[1] === emojiIndex}\n                    categoryIndex={categoryIndex}\n                    emojiIndex={emojiIndex}\n                    containerRef={this.emojiPickerContainer}\n                    containerTop={this.state.divTopOffset}\n                    containerBottom={this.state.divTopOffset + this.divHeight}\n                />\n            );\n        });\n    };\n\n    updateCategoryOffset(categoryName, offset) {\n        if (categoryName !== CATEGORY_SEARCH_RESULTS) {\n            this.setState((state) => ({\n                categories: {\n                    ...state.categories,\n                    [categoryName]: {\n                        ...state.categories[categoryName],\n                        offset,\n                    },\n                }}));\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.emojiSearch()}\n                {this.emojiCategories()}\n                {this.emojiCurrentResults()}\n                <EmojiPickerPreview emoji={this.getCurrentEmojiByCursor(this.state.cursor)}/>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getCustomEmojis, searchCustomEmojis} from 'mattermost-redux/actions/emojis';\n\nimport {incrementEmojiPickerPage} from 'actions/emoji_actions.jsx';\nimport {getEmojiMap, getRecentEmojis} from 'selectors/emojis';\n\nimport EmojiPicker from './emoji_picker.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        customEmojisEnabled: state.entities.general.config.EnableCustomEmoji === 'true',\n        customEmojiPage: state.views.emoji.emojiPickerCustomPage,\n        emojiMap: getEmojiMap(state),\n        recentEmojis: getRecentEmojis(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getCustomEmojis,\n            searchCustomEmojis,\n            incrementEmojiPickerPage,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiPicker);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React, {PureComponent} from 'react';\nimport {Tab, Tabs} from 'react-bootstrap';\n\nimport GifPicker from 'components/gif_picker/gif_picker.jsx';\nimport EmojiIcon from 'components/svg/emoji_icon';\nimport GfycatIcon from 'components/svg/gfycat_icon';\n\nimport EmojiPicker from './';\n\nexport default class EmojiPickerTabs extends PureComponent {\n    static propTypes = {\n        style: PropTypes.object,\n        rightOffset: PropTypes.number,\n        topOffset: PropTypes.number,\n        placement: PropTypes.oneOf(['top', 'bottom', 'left']),\n        customEmojis: PropTypes.object,\n        onEmojiClick: PropTypes.func.isRequired,\n        onGifClick: PropTypes.func,\n        enableGifPicker: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        rightOffset: 0,\n        topOffset: 0,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            emojiTabVisible: true,\n        };\n    }\n\n    handleEnterEmojiTab = () => {\n        this.setState({\n            emojiTabVisible: true,\n        });\n    };\n\n    handleExitEmojiTab = () => {\n        this.setState({\n            emojiTabVisible: false,\n        });\n    };\n\n    render() {\n        let pickerStyle;\n        if (this.props.style && !(this.props.style.left === 0 && this.props.style.top === 0)) {\n            if (this.props.placement === 'top' || this.props.placement === 'bottom') {\n                // Only take the top/bottom position passed by React Bootstrap since we want to be right-aligned\n                pickerStyle = {\n                    top: this.props.style.top,\n                    bottom: this.props.style.bottom,\n                    right: this.props.rightOffset,\n                };\n            } else {\n                pickerStyle = {...this.props.style};\n            }\n\n            if (pickerStyle.top) {\n                pickerStyle.top += this.props.topOffset;\n            }\n        }\n\n        let pickerClass = 'emoji-picker';\n        if (this.props.placement === 'bottom') {\n            pickerClass += ' bottom';\n        }\n\n        if (this.props.enableGifPicker && typeof this.props.onGifClick != 'undefined') {\n            return (\n                <Tabs\n                    defaultActiveKey={1}\n                    id='emoji-picker-tabs'\n                    style={pickerStyle}\n                    className={pickerClass}\n                    justified={true}\n                >\n                    <Tab\n                        eventKey={1}\n                        onEnter={this.handleEnterEmojiTab}\n                        onExit={this.handleExitEmojiTab}\n                        title={<EmojiIcon/>}\n                    >\n                        <EmojiPicker\n                            style={this.props.style}\n                            onEmojiClick={this.props.onEmojiClick}\n                            customEmojis={this.props.customEmojis}\n                            visible={this.state.emojiTabVisible}\n                        />\n                    </Tab>\n                    <Tab\n                        eventKey={2}\n                        title={<GfycatIcon/>}\n                        mountOnEnter={true}\n                        unmountOnExit={true}\n                    >\n                        <GifPicker\n                            onGifClick={this.props.onGifClick}\n                        />\n                    </Tab>\n                </Tabs>\n            );\n        }\n        return (\n            <div\n                style={pickerStyle}\n                className={pickerClass}\n            >\n                <EmojiPicker\n                    style={this.props.style}\n                    onEmojiClick={this.props.onEmojiClick}\n                    customEmojis={this.props.customEmojis}\n                />\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Overlay} from 'react-bootstrap';\n\nimport {popOverOverlayPosition} from 'utils/position_utils.jsx';\n\nimport EmojiPickerTabs from './emoji_picker_tabs.jsx';\n\nexport default class EmojiPickerOverlay extends React.PureComponent {\n    // An emoji picker in the center channel is contained within the post list, so it needs space\n    // above for the channel header and below for the post textbox\n    static CENTER_SPACE_REQUIRED_ABOVE = 476;\n    static CENTER_SPACE_REQUIRED_BELOW = 497;\n\n    // An emoji picker in the RHS isn't constrained by the RHS, so it just needs space to fit\n    // the emoji picker itself\n    static RHS_SPACE_REQUIRED_ABOVE = 420;\n    static RHS_SPACE_REQUIRED_BELOW = 420;\n\n    static propTypes = {\n        show: PropTypes.bool.isRequired,\n        container: PropTypes.func,\n        target: PropTypes.func.isRequired,\n        onEmojiClick: PropTypes.func.isRequired,\n        onGifClick: PropTypes.func,\n        onHide: PropTypes.func.isRequired,\n        rightOffset: PropTypes.number,\n        topOffset: PropTypes.number,\n        spaceRequiredAbove: PropTypes.number,\n        spaceRequiredBelow: PropTypes.number,\n        enableGifPicker: PropTypes.bool,\n    };\n\n    // Reasonable defaults calculated from from the center channel\n    static defaultProps = {\n        spaceRequiredAbove: EmojiPickerOverlay.CENTER_SPACE_REQUIRED_ABOVE,\n        spaceRequiredBelow: EmojiPickerOverlay.CENTER_SPACE_REQUIRED_BELOW,\n        enableGifPicker: false,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            placement: 'top',\n        };\n    }\n\n    UNSAFE_componentWillUpdate(nextProps) { // eslint-disable-line camelcase\n        if (nextProps.show && !this.props.show) {\n            const targetBounds = nextProps.target().getBoundingClientRect();\n            const placement = popOverOverlayPosition(targetBounds, window.innerHeight, {above: nextProps.spaceRequiredAbove, below: nextProps.spaceRequiredBelow});\n\n            this.setState({placement});\n        }\n    }\n\n    render() {\n        return (\n            <Overlay\n                show={this.props.show}\n                placement={this.state.placement}\n                rootClose={true}\n                container={this.props.container}\n                onHide={this.props.onHide}\n                target={this.props.target}\n                animation={false}\n            >\n                <EmojiPickerTabs\n                    enableGifPicker={this.props.enableGifPicker}\n                    onEmojiClick={this.props.onEmojiClick}\n                    onGifClick={this.props.onGifClick}\n                    rightOffset={this.props.rightOffset}\n                    topOffset={this.props.topOffset}\n                />\n            </Overlay>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport messageHtmlToComponent from 'utils/message_html_to_component';\nimport * as TextFormatting from 'utils/text_formatting.jsx';\n\nexport default class Markdown extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * An object mapping channel names to channels for the current team\n         */\n        channelNamesMap: PropTypes.object.isRequired,\n\n        /*\n         * An array of URL schemes that should be turned into links. Anything that looks\n         * like a link will be turned into a link if this is not provided.\n         */\n        autolinkedUrlSchemes: PropTypes.array,\n\n        /*\n         * Whether or not to do Markdown rendering\n         */\n        enableFormatting: PropTypes.bool.isRequired,\n\n        /*\n         * Whether or not this text is part of the RHS\n         */\n        isRHS: PropTypes.bool,\n\n        /*\n         * An array of words that can be used to mention a user\n         */\n        mentionKeys: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n        /*\n         * The text to be rendered\n         */\n        message: PropTypes.string.isRequired,\n\n        /*\n         * Any additional text formatting options to be used\n         */\n        options: PropTypes.object,\n\n        /*\n         * The root Site URL for the page\n         */\n        siteURL: PropTypes.string.isRequired,\n\n        /*\n         * The current team\n         */\n        team: PropTypes.object.isRequired,\n\n        /**\n         * If an image proxy is enabled.\n         */\n        hasImageProxy: PropTypes.bool.isRequired,\n\n        /**\n         * Whether or not to proxy image URLs\n         */\n        proxyImages: PropTypes.bool,\n\n        /**\n         * Any extra props that should be passed into the MarkdownImage component\n         */\n        imageProps: PropTypes.object,\n    };\n\n    static defaultProps = {\n        options: {},\n        isRHS: false,\n        proxyImages: true,\n    };\n\n    render() {\n        if (!this.props.enableFormatting) {\n            return <span>{this.props.message}</span>;\n        }\n\n        const options = Object.assign({\n            autolinkedUrlSchemes: this.props.autolinkedUrlSchemes,\n            siteURL: this.props.siteURL,\n            mentionKeys: this.props.mentionKeys,\n            atMentions: true,\n            channelNamesMap: this.props.channelNamesMap,\n            proxyImages: this.props.hasImageProxy && this.props.proxyImages,\n            team: this.props.team,\n        }, this.props.options);\n\n        const htmlFormattedText = TextFormatting.formatText(this.props.message, options);\n        return messageHtmlToComponent(htmlFormattedText, this.props.isRHS, {\n            imageProps: this.props.imageProps,\n        });\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {createSelector} from 'reselect';\n\nimport {Preferences} from 'mattermost-redux/constants';\nimport {getChannelsNameMapInCurrentTeam} from 'mattermost-redux/selectors/entities/channels';\nimport {getAutolinkedUrlSchemes, getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getBool} from 'mattermost-redux/selectors/entities/preferences';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {getCurrentUserMentionKeys} from 'mattermost-redux/selectors/entities/users';\n\nimport {getSiteURL} from 'utils/url.jsx';\n\nimport Markdown from './markdown';\n\nfunction makeGetChannelNamesMap() {\n    return createSelector(\n        getChannelsNameMapInCurrentTeam,\n        (state, props) => props && props.channelNamesMap,\n        (channelNamesMap, channelMentions) => {\n            if (channelMentions) {\n                return Object.assign({}, channelMentions, channelNamesMap);\n            }\n\n            return channelNamesMap;\n        }\n    );\n}\n\nfunction makeMapStateToProps() {\n    const getChannelNamesMap = makeGetChannelNamesMap();\n\n    return function mapStateToProps(state, ownProps) {\n        const config = getConfig(state);\n\n        return {\n            autolinkedUrlSchemes: getAutolinkedUrlSchemes(state),\n            channelNamesMap: getChannelNamesMap(state, ownProps),\n            enableFormatting: getBool(state, Preferences.CATEGORY_ADVANCED_SETTINGS, 'formatting', true),\n            mentionKeys: getCurrentUserMentionKeys(state),\n            siteURL: getSiteURL(),\n            team: getCurrentTeam(state),\n            hasImageProxy: config.HasImageProxy === 'true',\n        };\n    };\n}\n\nexport default connect(makeMapStateToProps)(Markdown);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {intlShape} from 'react-intl';\n\nimport {Posts} from 'mattermost-redux/constants';\n\nimport {t} from 'utils/i18n';\n\nimport Markdown from 'components/markdown';\n\nconst typeMessage = {\n    [Posts.POST_TYPES.ADD_TO_CHANNEL]: {\n        id: t('last_users_message.added_to_channel.type'),\n        defaultMessage: 'were **added to the channel** by {actor}.',\n    },\n    [Posts.POST_TYPES.JOIN_CHANNEL]: {\n        id: t('last_users_message.joined_channel.type'),\n        defaultMessage: '**joined the channel**.',\n    },\n    [Posts.POST_TYPES.LEAVE_CHANNEL]: {\n        id: t('last_users_message.left_channel.type'),\n        defaultMessage: '**left the channel**.',\n    },\n    [Posts.POST_TYPES.REMOVE_FROM_CHANNEL]: {\n        id: t('last_users_message.removed_from_channel.type'),\n        defaultMessage: 'were **removed from the channel**.',\n    },\n    [Posts.POST_TYPES.ADD_TO_TEAM]: {\n        id: t('last_users_message.added_to_team.type'),\n        defaultMessage: 'were **added to the team** by {actor}.',\n    },\n    [Posts.POST_TYPES.JOIN_TEAM]: {\n        id: t('last_users_message.joined_team.type'),\n        defaultMessage: '**joined the team**.',\n    },\n    [Posts.POST_TYPES.LEAVE_TEAM]: {\n        id: t('last_users_message.left_team.type'),\n        defaultMessage: '**left the team**.',\n    },\n    [Posts.POST_TYPES.REMOVE_FROM_TEAM]: {\n        id: t('last_users_message.removed_from_team.type'),\n        defaultMessage: 'were **removed from the team**.',\n    },\n};\n\nexport default class LastUsers extends React.PureComponent {\n    static propTypes = {\n        actor: PropTypes.string,\n        expandedLocale: PropTypes.object.isRequired,\n        formatOptions: PropTypes.object.isRequired,\n        postType: PropTypes.string.isRequired,\n        usernames: PropTypes.array.isRequired,\n    };\n\n    static contextTypes = {\n        intl: intlShape,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            expand: false,\n        };\n    }\n\n    handleOnClick = (e) => {\n        e.preventDefault();\n\n        this.setState({expand: true});\n    }\n\n    renderMessage = (formattedMessage) => {\n        return (\n            <Markdown\n                message={formattedMessage}\n                options={this.props.formatOptions}\n            />\n        );\n    }\n\n    render() {\n        const {formatMessage} = this.context.intl;\n        const {expand} = this.state;\n        const {\n            actor,\n            expandedLocale,\n            postType,\n            usernames,\n        } = this.props;\n\n        const firstUser = usernames[0];\n        const lastIndex = usernames.length - 1;\n        const lastUser = usernames[lastIndex];\n\n        if (expand) {\n            const formattedMessage = formatMessage(expandedLocale, {\n                users: usernames.slice(0, lastIndex).join(', '),\n                lastUser,\n                actor,\n            });\n\n            return this.renderMessage(formattedMessage);\n        }\n\n        const firstUserMessage = formatMessage(\n            {id: 'last_users_message.first', defaultMessage: '{firstUser} and '},\n            {firstUser}\n        );\n\n        const otherUsersMessage = formatMessage(\n            {id: 'last_users_message.others', defaultMessage: '{numOthers} others '},\n            {numOthers: lastIndex}\n        );\n\n        const actorMessage = formatMessage(\n            {id: typeMessage[postType].id, defaultMessage: typeMessage[postType].defaultMessage},\n            {actor}\n        );\n\n        return (\n            <span>\n                {this.renderMessage(firstUserMessage)}\n                <a onClick={this.handleOnClick}>\n                    {otherUsersMessage}\n                </a>\n                {this.renderMessage(actorMessage)}\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {intlShape} from 'react-intl';\n\nimport {Posts} from 'mattermost-redux/constants';\n\nimport {t} from 'utils/i18n';\n\nimport Markdown from 'components/markdown';\n\nimport LastUsers from './last_users';\n\nconst {\n    JOIN_CHANNEL, ADD_TO_CHANNEL, REMOVE_FROM_CHANNEL, LEAVE_CHANNEL,\n    JOIN_TEAM, ADD_TO_TEAM, REMOVE_FROM_TEAM, LEAVE_TEAM,\n} = Posts.POST_TYPES;\n\nconst postTypeMessage = {\n    [JOIN_CHANNEL]: {\n        one: {\n            id: t('combined_system_message.joined_channel.one'),\n            defaultMessage: '{firstUser} **joined the channel**.',\n        },\n        two: {\n            id: t('combined_system_message.joined_channel.two'),\n            defaultMessage: '{firstUser} and {secondUser} **joined the channel**.',\n        },\n        many_expanded: {\n            id: t('combined_system_message.joined_channel.many_expanded'),\n            defaultMessage: '{users} and {lastUser} **joined the channel**.',\n        },\n    },\n    [ADD_TO_CHANNEL]: {\n        one: {\n            id: t('combined_system_message.added_to_channel.one'),\n            defaultMessage: '{firstUser} **added to the channel** by {actor}.',\n        },\n        one_you: {\n            id: t('combined_system_message.added_to_channel.one_you'),\n            defaultMessage: 'You were **added to the channel** by {actor}.',\n        },\n        two: {\n            id: t('combined_system_message.added_to_channel.two'),\n            defaultMessage: '{firstUser} and {secondUser} **added to the channel** by {actor}.',\n        },\n        many_expanded: {\n            id: t('combined_system_message.added_to_channel.many_expanded'),\n            defaultMessage: '{users} and {lastUser} were **added to the channel** by {actor}.',\n        },\n    },\n    [REMOVE_FROM_CHANNEL]: {\n        one: {\n            id: t('combined_system_message.removed_from_channel.one'),\n            defaultMessage: '{firstUser} was **removed from the channel**.',\n        },\n        one_you: {\n            id: t('combined_system_message.removed_from_channel.one_you'),\n            defaultMessage: 'You were **removed from the channel**.',\n        },\n        two: {\n            id: t('combined_system_message.removed_from_channel.two'),\n            defaultMessage: '{firstUser} and {secondUser} were **removed from the channel**.',\n        },\n        many_expanded: {\n            id: t('combined_system_message.removed_from_channel.many_expanded'),\n            defaultMessage: '{users} and {lastUser} were **removed from the channel**.',\n        },\n    },\n    [LEAVE_CHANNEL]: {\n        one: {\n            id: t('combined_system_message.left_channel.one'),\n            defaultMessage: '{firstUser} **left the channel**.',\n        },\n        two: {\n            id: t('combined_system_message.left_channel.two'),\n            defaultMessage: '{firstUser} and {secondUser} **left the channel**.',\n        },\n        many_expanded: {\n            id: t('combined_system_message.left_channel.many_expanded'),\n            defaultMessage: '{users} and {lastUser} **left the channel**.',\n        },\n    },\n    [JOIN_TEAM]: {\n        one: {\n            id: t('combined_system_message.joined_team.one'),\n            defaultMessage: '{firstUser} **joined the team**.',\n        },\n        two: {\n            id: t('combined_system_message.joined_team.two'),\n            defaultMessage: '{firstUser} and {secondUser} **joined the team**.',\n        },\n        many_expanded: {\n            id: t('combined_system_message.joined_team.many_expanded'),\n            defaultMessage: '{users} and {lastUser} **joined the team**.',\n        },\n    },\n    [ADD_TO_TEAM]: {\n        one: {\n            id: t('combined_system_message.added_to_team.one'),\n            defaultMessage: '{firstUser} **added to the team** by {actor}.',\n        },\n        one_you: {\n            id: t('combined_system_message.added_to_team.one_you'),\n            defaultMessage: 'You were **added to the team** by {actor}.',\n        },\n        two: {\n            id: t('combined_system_message.added_to_team.two'),\n            defaultMessage: '{firstUser} and {secondUser} **added to the team** by {actor}.',\n        },\n        many_expanded: {\n            id: t('combined_system_message.added_to_team.many_expanded'),\n            defaultMessage: '{users} and {lastUser} were **added to the team** by {actor}.',\n        },\n    },\n    [REMOVE_FROM_TEAM]: {\n        one: {\n            id: t('combined_system_message.removed_from_team.one'),\n            defaultMessage: '{firstUser} was **removed from the team**.',\n        },\n        one_you: {\n            id: t('combined_system_message.removed_from_team.one_you'),\n            defaultMessage: 'You were **removed from the team**.',\n        },\n        two: {\n            id: t('combined_system_message.removed_from_team.two'),\n            defaultMessage: '{firstUser} and {secondUser} were **removed from the team**.',\n        },\n        many_expanded: {\n            id: t('combined_system_message.removed_from_team.many_expanded'),\n            defaultMessage: '{users} and {lastUser} were **removed from the team**.',\n        },\n    },\n    [LEAVE_TEAM]: {\n        one: {\n            id: t('combined_system_message.left_team.one'),\n            defaultMessage: '{firstUser} **left the team**.',\n        },\n        two: {\n            id: t('combined_system_message.left_team.two'),\n            defaultMessage: '{firstUser} and {secondUser} **left the team**.',\n        },\n        many_expanded: {\n            id: t('combined_system_message.left_team.many_expanded'),\n            defaultMessage: '{users} and {lastUser} **left the team**.',\n        },\n    },\n};\n\nexport default class CombinedSystemMessage extends React.PureComponent {\n    static propTypes = {\n        allUserIds: PropTypes.array.isRequired,\n        allUsernames: PropTypes.array.isRequired,\n        currentUserId: PropTypes.string.isRequired,\n        currentUsername: PropTypes.string.isRequired,\n        messageData: PropTypes.array.isRequired,\n        showJoinLeave: PropTypes.bool.isRequired,\n        userProfiles: PropTypes.array.isRequired,\n        actions: PropTypes.shape({\n            getMissingProfilesByIds: PropTypes.func.isRequired,\n            getMissingProfilesByUsernames: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    static defaultProps = {\n        allUserIds: [],\n        allUsernames: [],\n    };\n\n    static contextTypes = {\n        intl: intlShape,\n    };\n\n    componentDidMount() {\n        this.loadUserProfiles(this.props.allUserIds, this.props.allUsernames);\n    }\n\n    componentDidUpdate(prevProps) {\n        const {allUserIds, allUsernames} = this.props;\n        if (allUserIds !== prevProps.allUserIds || allUsernames !== prevProps.allUsernames) {\n            this.loadUserProfiles(allUserIds, allUsernames);\n        }\n    }\n\n    loadUserProfiles = (allUserIds, allUsernames) => {\n        if (allUserIds.length > 0) {\n            this.props.actions.getMissingProfilesByIds(allUserIds);\n        }\n\n        if (allUsernames.length > 0) {\n            this.props.actions.getMissingProfilesByUsernames(allUsernames);\n        }\n    }\n\n    getAllUsernames = () => {\n        const {\n            allUserIds,\n            allUsernames,\n            currentUserId,\n            currentUsername,\n            userProfiles,\n        } = this.props;\n        const {formatMessage} = this.context.intl;\n        const usernames = userProfiles.reduce((acc, user) => {\n            acc[user.id] = user.username;\n            acc[user.username] = user.username;\n            return acc;\n        }, {});\n\n        const currentUserDisplayName = formatMessage({id: t('combined_system_message.you'), defaultMessage: 'You'});\n        if (allUserIds.includes(currentUserId)) {\n            usernames[currentUserId] = currentUserDisplayName;\n        } else if (allUsernames.includes(currentUsername)) {\n            usernames[currentUsername] = currentUserDisplayName;\n        }\n\n        return usernames;\n    }\n\n    getUsernamesByIds = (userIds = []) => {\n        const {currentUserId, currentUsername} = this.props;\n        const allUsernames = this.getAllUsernames();\n        const usernames = userIds.\n            filter((userId) => {\n                return userId !== currentUserId && userId !== currentUsername;\n            }).\n            map((userId) => {\n                return `@${allUsernames[userId]}`;\n            }).filter((username) => {\n                return username && username !== '';\n            });\n\n        if (userIds.includes(currentUserId)) {\n            usernames.unshift(allUsernames[currentUserId]);\n        } else if (userIds.includes(currentUsername)) {\n            usernames.unshift(allUsernames[currentUsername]);\n        }\n\n        return usernames;\n    }\n\n    renderFormattedMessage(postType, userIds, actorId) {\n        const {formatMessage} = this.context.intl;\n        const {currentUserId, currentUsername} = this.props;\n        const usernames = this.getUsernamesByIds(userIds);\n        let actor = actorId ? this.getUsernamesByIds([actorId])[0] : '';\n        if (actor && (actorId === currentUserId || actorId === currentUsername)) {\n            actor = actor.toLowerCase();\n        }\n\n        const firstUser = usernames[0];\n        const secondUser = usernames[1];\n        const numOthers = usernames.length - 1;\n\n        const options = {\n            atMentions: true,\n            mentionKeys: [{key: firstUser}, {key: secondUser}, {key: actor}],\n            mentionHighlight: false,\n            singleline: true,\n        };\n\n        if (numOthers > 1) {\n            return (\n                <LastUsers\n                    actor={actor}\n                    expandedLocale={postTypeMessage[postType].many_expanded}\n                    formatOptions={options}\n                    postType={postType}\n                    usernames={usernames}\n                />\n            );\n        }\n\n        let localeHolder;\n        if (numOthers === 0) {\n            localeHolder = postTypeMessage[postType].one;\n\n            if (\n                (userIds[0] === this.props.currentUserId || userIds[0] === this.props.currentUsername) &&\n                postTypeMessage[postType].one_you\n            ) {\n                localeHolder = postTypeMessage[postType].one_you;\n            }\n        } else if (numOthers === 1) {\n            localeHolder = postTypeMessage[postType].two;\n        }\n\n        const formattedMessage = formatMessage(localeHolder, {firstUser, secondUser, actor});\n\n        return (\n            <Markdown\n                message={formattedMessage}\n                options={options}\n            />\n        );\n    }\n\n    renderMessage(postType, userIds, actorId) {\n        return (\n            <React.Fragment key={postType + actorId}>\n                {this.renderFormattedMessage(postType, userIds, actorId)}\n                <br/>\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        const {\n            currentUserId,\n            messageData,\n        } = this.props;\n\n        const content = [];\n        const removedUserIds = [];\n        for (const message of messageData) {\n            const {\n                postType,\n                actorId,\n            } = message;\n            let userIds = message.userIds;\n\n            if (!this.props.showJoinLeave && actorId !== currentUserId) {\n                const affectsCurrentUser = userIds.indexOf(currentUserId) !== -1;\n\n                if (affectsCurrentUser) {\n                    // Only show the message that the current user was added, etc\n                    userIds = [currentUserId];\n                } else {\n                    // Not something the current user did or was affected by\n                    continue;\n                }\n            }\n\n            if (postType === REMOVE_FROM_CHANNEL) {\n                removedUserIds.push(...userIds);\n                continue;\n            }\n\n            content.push(this.renderMessage(postType, userIds, actorId));\n        }\n\n        if (removedUserIds.length > 0) {\n            const uniqueRemovedUserIds = removedUserIds.filter((id, index, arr) => arr.indexOf(id) === index);\n            content.push(this.renderMessage(REMOVE_FROM_CHANNEL, uniqueRemovedUserIds, currentUserId));\n        }\n\n        return (\n            <React.Fragment>\n                {content}\n            </React.Fragment>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getMissingProfilesByIds, getMissingProfilesByUsernames} from 'mattermost-redux/actions/users';\nimport {Preferences} from 'mattermost-redux/constants';\nimport {getBool} from 'mattermost-redux/selectors/entities/preferences';\nimport {getCurrentUser, makeGetProfilesByIdsAndUsernames} from 'mattermost-redux/selectors/entities/users';\n\nimport CombinedSystemMessage from './combined_system_message.jsx';\n\nfunction makeMapStateToProps() {\n    const getProfilesByIdsAndUsernames = makeGetProfilesByIdsAndUsernames();\n\n    return (state, ownProps) => {\n        const currentUser = getCurrentUser(state);\n        const {allUserIds, allUsernames} = ownProps;\n\n        return {\n            currentUserId: currentUser.id,\n            currentUsername: currentUser.username,\n            showJoinLeave: getBool(state, Preferences.CATEGORY_ADVANCED_SETTINGS, Preferences.ADVANCED_FILTER_JOIN_LEAVE, true),\n            userProfiles: getProfilesByIdsAndUsernames(state, {allUserIds, allUsernames}),\n        };\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getMissingProfilesByIds,\n            getMissingProfilesByUsernames,\n        }, dispatch),\n    };\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(CombinedSystemMessage);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {sendAddToChannelEphemeralPost} from 'actions/global_actions.jsx';\nimport {Constants} from 'utils/constants.jsx';\nimport {t} from 'utils/i18n';\nimport AtMention from 'components/at_mention';\n\nexport default class PostAddChannelMember extends React.PureComponent {\n    static propTypes = {\n\n        /*\n        * Current user\n        */\n        currentUser: PropTypes.object.isRequired,\n\n        /*\n        * Type of current channel\n        */\n        channelType: PropTypes.string.isRequired,\n\n        /*\n        * ID of ephemeral post (at-mention's \"add to channel\" post)\n        */\n        postId: PropTypes.string.isRequired,\n\n        /*\n        * Ephemeral post (at-mention's \"add to channel\" post)\n        */\n        post: PropTypes.object.isRequired,\n\n        /*\n        * user ids to add to channel\n        */\n        userIds: PropTypes.array.isRequired,\n\n        /*\n        * usernames to add to channel\n        */\n        usernames: PropTypes.array.isRequired,\n\n        actions: PropTypes.shape({\n\n            /*\n            * Function to add members to channel\n            */\n            addChannelMember: PropTypes.func.isRequired,\n\n            /*\n            * Function to remove post (ephemeral)\n            */\n            removePost: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    handleAddChannelMember = () => {\n        const {currentUser, post, userIds, usernames} = this.props;\n\n        if (post && post.channel_id) {\n            let createAt = post.create_at;\n            userIds.forEach((userId, index) => {\n                createAt++;\n                this.props.actions.addChannelMember(post.channel_id, userId);\n                sendAddToChannelEphemeralPost(currentUser, usernames[index], userId, post.channel_id, post.root_id, createAt);\n            });\n\n            this.props.actions.removePost(post);\n        }\n    }\n\n    generateAtMentions(usernames = []) {\n        if (usernames.length === 1) {\n            return (\n                <AtMention mentionName={usernames[0]}/>\n            );\n        } else if (usernames.length > 1) {\n            function andSeparator(key) {\n                return (\n                    <FormattedMessage\n                        key={key}\n                        id={'post_body.check_for_out_of_channel_mentions.link.and'}\n                        defaultMessage={' and '}\n                    />\n                );\n            }\n\n            function commaSeparator(key) {\n                return <span key={key}>{', '}</span>;\n            }\n\n            return (\n                <span>\n                    {\n                        usernames.map((username) => {\n                            return (\n                                <AtMention\n                                    key={username}\n                                    mentionName={username}\n                                />\n                            );\n                        }).reduce((acc, el, idx, arr) => {\n                            if (idx === 0) {\n                                return [el];\n                            } else if (idx === arr.length - 1) {\n                                return [...acc, andSeparator(idx), el];\n                            }\n\n                            return [...acc, commaSeparator(idx), el];\n                        }, [])\n                    }\n                </span>\n            );\n        }\n\n        return '';\n    }\n\n    render() {\n        const {channelType, postId, usernames} = this.props;\n        if (!postId || !channelType) {\n            return null;\n        }\n\n        let linkId;\n        let linkText;\n        if (channelType === Constants.PRIVATE_CHANNEL) {\n            linkId = t('post_body.check_for_out_of_channel_mentions.link.private');\n            linkText = 'add them to this private channel';\n        } else if (channelType === Constants.OPEN_CHANNEL) {\n            linkId = t('post_body.check_for_out_of_channel_mentions.link.public');\n            linkText = 'add them to the channel';\n        }\n\n        let messageId;\n        let messageText;\n        if (usernames.length === 1) {\n            messageId = t('post_body.check_for_out_of_channel_mentions.message.one');\n            messageText = 'was mentioned but is not in the channel. Would you like to ';\n        } else if (usernames.length > 1) {\n            messageId = t('post_body.check_for_out_of_channel_mentions.message.multiple');\n            messageText = 'were mentioned but they are not in the channel. Would you like to ';\n        }\n\n        const atMentions = this.generateAtMentions(usernames);\n\n        return (\n            <p>\n                {atMentions}\n                {' '}\n                <FormattedMessage\n                    id={messageId}\n                    defaultMessage={messageText}\n                />\n                <a\n                    id='add_channel_member_link'\n                    onClick={this.handleAddChannelMember}\n                >\n                    <FormattedMessage\n                        id={linkId}\n                        defaultMessage={linkText}\n                    />\n                </a>\n                <FormattedMessage\n                    id={'post_body.check_for_out_of_channel_mentions.message_last'}\n                    defaultMessage={'? They will have access to all message history.'}\n                />\n            </p>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {addChannelMember} from 'mattermost-redux/actions/channels';\nimport {removePost} from 'mattermost-redux/actions/posts';\nimport {getPost} from 'mattermost-redux/selectors/entities/posts';\nimport {getChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\n\nimport PostAddChannelMember from './post_add_channel_member.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const post = getPost(state, ownProps.postId) || {};\n    let channelType = '';\n    if (post && post.channel_id) {\n        const channel = getChannel(state, post.channel_id);\n        if (channel && channel.type) {\n            channelType = channel.type;\n        }\n    }\n\n    return {\n        channelType,\n        currentUser: getCurrentUser(state),\n        post,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            addChannelMember,\n            removePost,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostAddChannelMember);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {General, Posts} from 'mattermost-redux/constants';\n\nimport ChannelStore from 'stores/channel_store.jsx';\n\nimport {canManageMembers} from 'utils/channel_utils.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport Markdown from 'components/markdown';\nimport CombinedSystemMessage from 'components/post_view/combined_system_message';\nimport PostAddChannelMember from 'components/post_view/post_add_channel_member';\n\nfunction renderUsername(value) {\n    const username = (value[0] === '@') ? value : `@${value}`;\n\n    const options = {\n        markdown: false,\n    };\n\n    return renderFormattedText(username, options);\n}\n\nfunction renderFormattedText(value, options) {\n    return (\n        <Markdown\n            message={value}\n            options={options}\n        />\n    );\n}\n\nfunction renderJoinChannelMessage(post) {\n    const username = renderUsername(post.props.username);\n\n    return (\n        <FormattedMessage\n            id='api.channel.join_channel.post_and_forget'\n            defaultMessage='{username} joined the channel.'\n            values={{username}}\n        />\n    );\n}\n\nfunction renderLeaveChannelMessage(post) {\n    const username = renderUsername(post.props.username);\n\n    return (\n        <FormattedMessage\n            id='api.channel.leave.left'\n            defaultMessage='{username} has left the channel.'\n            values={{username}}\n        />\n    );\n}\n\nfunction renderAddToChannelMessage(post) {\n    const username = renderUsername(post.props.username);\n    const addedUsername = renderUsername(post.props.addedUsername);\n\n    return (\n        <FormattedMessage\n            id='api.channel.add_member.added'\n            defaultMessage='{addedUsername} added to the channel by {username}.'\n            values={{\n                username,\n                addedUsername,\n            }}\n        />\n    );\n}\n\nfunction renderRemoveFromChannelMessage(post) {\n    const removedUsername = renderUsername(post.props.removedUsername);\n\n    return (\n        <FormattedMessage\n            id='api.channel.remove_member.removed'\n            defaultMessage='{removedUsername} was removed from the channel'\n            values={{\n                removedUsername,\n            }}\n        />\n    );\n}\n\nfunction renderJoinTeamMessage(post) {\n    const username = renderUsername(post.props.username);\n\n    return (\n        <FormattedMessage\n            id='api.team.join_team.post_and_forget'\n            defaultMessage='{username} joined the team.'\n            values={{username}}\n        />\n    );\n}\n\nfunction renderLeaveTeamMessage(post) {\n    const username = renderUsername(post.props.username);\n\n    return (\n        <FormattedMessage\n            id='api.team.leave.left'\n            defaultMessage='{username} left the team.'\n            values={{username}}\n        />\n    );\n}\n\nfunction renderAddToTeamMessage(post) {\n    const username = renderUsername(post.props.username);\n    const addedUsername = renderUsername(post.props.addedUsername);\n\n    return (\n        <FormattedMessage\n            id='api.team.add_member.added'\n            defaultMessage='{addedUsername} added to the team by {username}.'\n            values={{\n                username,\n                addedUsername,\n            }}\n        />\n    );\n}\n\nfunction renderRemoveFromTeamMessage(post) {\n    const removedUsername = renderUsername(post.props.username);\n\n    return (\n        <FormattedMessage\n            id='api.team.remove_user_from_team.removed'\n            defaultMessage='{removedUsername} was removed from the team.'\n            values={{\n                removedUsername,\n            }}\n        />\n    );\n}\n\nfunction renderHeaderChangeMessage(post) {\n    if (!post.props.username) {\n        return null;\n    }\n\n    const headerOptions = {\n        singleline: true,\n        channelNamesMap: post.props && post.props.channel_mentions,\n    };\n\n    const username = renderUsername(post.props.username);\n    const oldHeader = post.props.old_header ? renderFormattedText(post.props.old_header, headerOptions) : null;\n    const newHeader = post.props.new_header ? renderFormattedText(post.props.new_header, headerOptions) : null;\n\n    if (post.props.new_header) {\n        if (post.props.old_header) {\n            return (\n                <FormattedMessage\n                    id='api.channel.post_update_channel_header_message_and_forget.updated_from'\n                    defaultMessage='{username} updated the channel header from: {old} to: {new}'\n                    values={{\n                        username,\n                        old: oldHeader,\n                        new: newHeader,\n                    }}\n                />\n            );\n        }\n\n        return (\n            <FormattedMessage\n                id='api.channel.post_update_channel_header_message_and_forget.updated_to'\n                defaultMessage='{username} updated the channel header to: {new}'\n                values={{\n                    username,\n                    new: newHeader,\n                }}\n            />\n        );\n    } else if (post.props.old_header) {\n        return (\n            <FormattedMessage\n                id='api.channel.post_update_channel_header_message_and_forget.removed'\n                defaultMessage='{username} removed the channel header (was: {old})'\n                values={{\n                    username,\n                    old: oldHeader,\n                }}\n            />\n        );\n    }\n\n    return null;\n}\n\nfunction renderDisplayNameChangeMessage(post) {\n    if (!(post.props.username && post.props.old_displayname && post.props.new_displayname)) {\n        return null;\n    }\n\n    const username = renderUsername(post.props.username);\n    const oldDisplayName = post.props.old_displayname;\n    const newDisplayName = post.props.new_displayname;\n\n    return (\n        <FormattedMessage\n            id='api.channel.post_update_channel_displayname_message_and_forget.updated_from'\n            defaultMessage='{username} updated the channel display name from: {old} to: {new}'\n            values={{\n                username,\n                old: oldDisplayName,\n                new: newDisplayName,\n            }}\n        />\n    );\n}\n\nfunction renderConvertChannelToPrivateMessage(post) {\n    if (!(post.props.username)) {\n        return null;\n    }\n\n    const username = renderUsername(post.props.username);\n\n    return (\n        <FormattedMessage\n            id='api.channel.post_convert_channel_to_private.updated_from'\n            defaultMessage='{username} converted the channel from public to private'\n            values={{\n                username,\n            }}\n        />\n    );\n}\n\nfunction renderPurposeChangeMessage(post) {\n    if (!post.props.username) {\n        return null;\n    }\n\n    const username = renderUsername(post.props.username);\n    const oldPurpose = post.props.old_purpose;\n    const newPurpose = post.props.new_purpose;\n\n    if (post.props.new_purpose) {\n        if (post.props.old_purpose) {\n            return (\n                <FormattedMessage\n                    id='app.channel.post_update_channel_purpose_message.updated_from'\n                    defaultMessage='{username} updated the channel purpose from: {old} to: {new}'\n                    values={{\n                        username,\n                        old: oldPurpose,\n                        new: newPurpose,\n                    }}\n                />\n            );\n        }\n\n        return (\n            <FormattedMessage\n                id='app.channel.post_update_channel_purpose_message.updated_to'\n                defaultMessage='{username} updated the channel purpose to: {new}'\n                values={{\n                    username,\n                    new: newPurpose,\n                }}\n            />\n        );\n    } else if (post.props.old_purpose) {\n        return (\n            <FormattedMessage\n                id='app.channel.post_update_channel_purpose_message.removed'\n                defaultMessage='{username} removed the channel purpose (was: {old})'\n                values={{\n                    username,\n                    old: oldPurpose,\n                }}\n            />\n        );\n    }\n\n    return null;\n}\n\nfunction renderChannelDeletedMessage(post) {\n    if (!post.props.username) {\n        return null;\n    }\n\n    const username = renderUsername(post.props.username);\n\n    return (\n        <FormattedMessage\n            id='api.channel.delete_channel.archived'\n            defaultMessage='{username} has archived the channel.'\n            values={{username}}\n        />\n    );\n}\n\nconst systemMessageRenderers = {\n    [Posts.POST_TYPES.JOIN_CHANNEL]: renderJoinChannelMessage,\n    [Posts.POST_TYPES.LEAVE_CHANNEL]: renderLeaveChannelMessage,\n    [Posts.POST_TYPES.ADD_TO_CHANNEL]: renderAddToChannelMessage,\n    [Posts.POST_TYPES.REMOVE_FROM_CHANNEL]: renderRemoveFromChannelMessage,\n    [Posts.POST_TYPES.JOIN_TEAM]: renderJoinTeamMessage,\n    [Posts.POST_TYPES.LEAVE_TEAM]: renderLeaveTeamMessage,\n    [Posts.POST_TYPES.ADD_TO_TEAM]: renderAddToTeamMessage,\n    [Posts.POST_TYPES.REMOVE_FROM_TEAM]: renderRemoveFromTeamMessage,\n    [Posts.POST_TYPES.HEADER_CHANGE]: renderHeaderChangeMessage,\n    [Posts.POST_TYPES.DISPLAYNAME_CHANGE]: renderDisplayNameChangeMessage,\n    [Posts.POST_TYPES.CONVERT_CHANNEL]: renderConvertChannelToPrivateMessage,\n    [Posts.POST_TYPES.PURPOSE_CHANGE]: renderPurposeChangeMessage,\n    [Posts.POST_TYPES.CHANNEL_DELETED]: renderChannelDeletedMessage,\n};\n\nexport function renderSystemMessage(post) {\n    if (post.props && post.props.add_channel_member) {\n        const channel = ChannelStore.getCurrent();\n        const isUserCanManageMembers = canManageMembers(channel);\n        const isEphemeral = Utils.isPostEphemeral(post);\n\n        if ((channel.type === General.PRIVATE_CHANNEL || channel.type === General.OPEN_CHANNEL) &&\n            isUserCanManageMembers &&\n            isEphemeral\n        ) {\n            const addMemberProps = post.props.add_channel_member;\n            return (\n                <PostAddChannelMember\n                    postId={addMemberProps.post_id}\n                    userIds={addMemberProps.user_ids}\n                    usernames={addMemberProps.usernames}\n                />\n            );\n        }\n\n        return null;\n    } else if (systemMessageRenderers[post.type]) {\n        return systemMessageRenderers[post.type](post);\n    } else if (post.type === Posts.POST_TYPES.EPHEMERAL_ADD_TO_CHANNEL) {\n        return renderAddToChannelMessage(post);\n    } else if (post.type === Posts.POST_TYPES.COMBINED_USER_ACTIVITY) {\n        const {allUserIds, allUsernames, messageData} = post.props.user_activity;\n\n        return (\n            <CombinedSystemMessage\n                allUserIds={allUserIds}\n                allUsernames={allUsernames}\n                messageData={messageData}\n            />\n        );\n    }\n\n    return null;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Markdown from 'components/markdown';\n\nimport {renderSystemMessage} from './system_message_helpers.jsx';\n\nexport default class PostMarkdown extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Any extra props that should be passed into the MarkdownImage component\n         */\n        imageProps: PropTypes.object,\n\n        /*\n         * Whether or not this text is part of the RHS\n         */\n        isRHS: PropTypes.bool,\n\n        /*\n         * The post text to be rendered\n         */\n        message: PropTypes.string.isRequired,\n\n        /*\n         * The optional post for which this message is being rendered\n         */\n        post: PropTypes.object,\n\n        options: PropTypes.object,\n\n        pluginHooks: PropTypes.arrayOf(PropTypes.object),\n    };\n\n    static defaultProps = {\n        isRHS: false,\n        pluginHooks: [],\n    };\n\n    render() {\n        if (this.props.post) {\n            const renderedSystemMessage = renderSystemMessage(this.props.post);\n            if (renderedSystemMessage) {\n                return <div>{renderedSystemMessage}</div>;\n            }\n        }\n\n        // Proxy images if we have an image proxy and the server hasn't already rewritten the post's image URLs.\n        const proxyImages = !this.props.post || !this.props.post.message_source || this.props.post.message === this.props.post.message_source;\n        const channelNamesMap = this.props.post && this.props.post.props && this.props.post.props.channel_mentions;\n\n        let {message} = this.props;\n        const {post} = this.props;\n\n        this.props.pluginHooks.forEach((o) => {\n            if (o && o.hook) {\n                message = o.hook(post, message);\n            }\n        });\n\n        return (\n            <Markdown\n                imageProps={this.props.imageProps}\n                isRHS={this.props.isRHS}\n                message={message}\n                proxyImages={proxyImages}\n                options={this.props.options}\n                channelNamesMap={channelNamesMap}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport PostMarkdown from './post_markdown';\n\nfunction mapStateToProps(state) {\n    return {\n        pluginHooks: state.plugins.components.MessageWillFormat,\n    };\n}\n\nexport default connect(mapStateToProps)(PostMarkdown);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport XRegExp from 'xregexp';\n\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\n\nimport {autocompleteUsersInChannel} from 'actions/user_actions.jsx';\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport {ActionTypes, Constants} from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport store from 'stores/redux_store.jsx';\n\nimport Provider from './provider.jsx';\nimport Suggestion from './suggestion.jsx';\n\nclass AtMentionSuggestion extends Suggestion {\n    render() {\n        const isSelection = this.props.isSelection;\n        const user = this.props.item;\n\n        let username;\n        let description;\n        let icon;\n        if (user.username === 'all') {\n            username = 'all';\n            description = (\n                <FormattedMessage\n                    id='suggestion.mention.all'\n                    defaultMessage='CAUTION: This mentions everyone in channel'\n                />\n            );\n            icon = (\n                <i\n                    className='mention__image fa fa-users fa-2x'\n                    title={Utils.localizeMessage('generic_icons.member', 'Member Icon')}\n                />\n            );\n        } else if (user.username === 'channel') {\n            username = 'channel';\n            description = (\n                <FormattedMessage\n                    id='suggestion.mention.channel'\n                    defaultMessage='Notifies everyone in the channel'\n                />\n            );\n            icon = (\n                <i\n                    className='mention__image fa fa-users fa-2x'\n                    title={Utils.localizeMessage('generic_icons.member', 'Member Icon')}\n                />\n            );\n        } else if (user.username === 'here') {\n            username = 'here';\n            description = (\n                <FormattedMessage\n                    id='suggestion.mention.here'\n                    defaultMessage='Notifies everyone in the channel and online'\n                />\n            );\n            icon = (\n                <i\n                    className='mention__image fa fa-users fa-2x'\n                    title={Utils.localizeMessage('generic_icons.member', 'Member Icon')}\n                />\n            );\n        } else {\n            username = user.username;\n\n            if ((user.first_name || user.last_name) && user.nickname) {\n                description = `- ${Utils.getFullName(user)} (${user.nickname})`;\n            } else if (user.nickname) {\n                description = `- (${user.nickname})`;\n            } else if (user.first_name || user.last_name) {\n                description = `- ${Utils.getFullName(user)}`;\n            }\n\n            icon = (\n                <img\n                    className='mention__image'\n                    src={Utils.imageURLForUser(user)}\n                />\n            );\n        }\n\n        let className = 'mentions__name';\n        if (isSelection) {\n            className += ' suggestion--selected';\n        }\n\n        return (\n            <div\n                className={className}\n                onClick={this.handleClick}\n                {...Suggestion.baseProps}\n            >\n                {icon}\n                <span className='mention--align'>\n                    {'@' + username}\n                </span>\n                <span className='mention__fullname'>\n                    {' '}\n                    {description}\n                </span>\n            </div>\n        );\n    }\n}\n\nexport default class AtMentionProvider extends Provider {\n    constructor(channelId) {\n        super();\n\n        this.channelId = channelId;\n    }\n\n    handlePretextChanged(suggestionId, pretext) {\n        const captured = XRegExp.cache('(?:^|\\\\W)@([\\\\pL\\\\d\\\\-_.]*)$', 'i').exec(pretext.toLowerCase());\n        if (!captured) {\n            return false;\n        }\n\n        const prefix = captured[1];\n\n        this.startNewRequest(suggestionId, prefix);\n\n        autocompleteUsersInChannel(\n            prefix,\n            this.channelId,\n            (data) => {\n                if (this.shouldCancelDispatch(prefix)) {\n                    return;\n                }\n\n                const members = Object.assign([], data.users);\n                for (const id of Object.keys(members)) {\n                    members[id] = {...members[id], type: Constants.MENTION_MEMBERS};\n                }\n\n                const nonmembers = data.out_of_channel || [];\n                for (const id of Object.keys(nonmembers)) {\n                    nonmembers[id] = {...nonmembers[id], type: Constants.MENTION_NONMEMBERS};\n                }\n\n                let specialMentions = [];\n                if (!pretext.startsWith('/msg')) {\n                    specialMentions = ['here', 'channel', 'all'].filter((item) => {\n                        return item.startsWith(prefix);\n                    }).map((name) => {\n                        return {username: name, type: Constants.MENTION_SPECIAL};\n                    });\n                }\n\n                let users = members.concat(specialMentions).concat(nonmembers);\n                const currentUserId = getCurrentUserId(store.getState());\n                users = users.filter((user) => {\n                    return user.id !== currentUserId;\n                });\n\n                const mentions = users.map((user) => '@' + user.username);\n\n                AppDispatcher.handleServerAction({\n                    type: ActionTypes.SUGGESTION_RECEIVED_SUGGESTIONS,\n                    id: suggestionId,\n                    matchedPretext: `@${captured[1]}`,\n                    terms: mentions,\n                    items: users,\n                    component: AtMentionSuggestion,\n                });\n            }\n        );\n\n        return true;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {getMyChannels, getChannel, getMyChannelMemberships} from 'mattermost-redux/selectors/entities/channels';\n\nimport {sortChannelsByTypeAndDisplayName} from 'mattermost-redux/utils/channel_utils';\n\nimport {autocompleteChannels} from 'actions/channel_actions.jsx';\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport SuggestionStore from 'stores/suggestion_store.jsx';\nimport store from 'stores/redux_store.jsx';\n\nimport {ActionTypes, Constants} from 'utils/constants.jsx';\n\nimport Provider from './provider.jsx';\nimport Suggestion from './suggestion.jsx';\n\nclass ChannelMentionSuggestion extends Suggestion {\n    render() {\n        const isSelection = this.props.isSelection;\n        const item = this.props.item;\n\n        const channelName = item.channel.display_name;\n        const purpose = item.channel.purpose;\n\n        let className = 'mentions__name no-flex';\n        if (isSelection) {\n            className += ' suggestion--selected';\n        }\n\n        const description = '(~' + item.channel.name + ')';\n\n        return (\n            <div\n                className={className}\n                onClick={this.handleClick}\n                {...Suggestion.baseProps}\n            >\n                <div className='mention__align'>\n                    <span>\n                        {channelName}\n                    </span>\n                    <span className='mention__channelname'>\n                        {' '}\n                        {description}\n                    </span>\n                </div>\n                <div className='mention__purpose'>\n                    {purpose}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class ChannelMentionProvider extends Provider {\n    constructor() {\n        super();\n\n        this.lastPrefixTrimmed = '';\n        this.lastPrefixWithNoResults = '';\n        this.lastCompletedWord = '';\n    }\n\n    handlePretextChanged(suggestionId, pretext) {\n        this.resetRequest();\n\n        const captured = (/\\B(~([^~\\r\\n]*))$/i).exec(pretext.toLowerCase());\n\n        if (!captured) {\n            // Not a channel mention\n            return false;\n        }\n\n        if (captured.index > 0 && pretext[captured.index - 1] === '~') {\n            // Multiple ~'s in a row so let's return and not show the autocomplete\n            return false;\n        }\n\n        const prefix = captured[2];\n\n        if (this.lastPrefixTrimmed && prefix.trim() === this.lastPrefixTrimmed) {\n            // Don't keep searching if the user keeps typing spaces\n            return true;\n        }\n\n        this.lastPrefixTrimmed = prefix.trim();\n\n        if (this.lastPrefixWithNoResults && prefix.startsWith(this.lastPrefixWithNoResults)) {\n            // Just give up since we know it won't return any results\n            return false;\n        }\n\n        if (this.lastCompletedWord && captured[0].startsWith(this.lastCompletedWord)) {\n            // It appears we're still matching a channel handle that we already completed\n            return false;\n        }\n\n        // Clear the last completed word since we've started to match new text\n        this.lastCompletedWord = '';\n\n        this.startNewRequest(suggestionId, prefix);\n\n        SuggestionStore.clearSuggestions(suggestionId);\n\n        const words = prefix.toLowerCase().split(/\\s+/);\n        const wrappedChannelIds = {};\n        var wrappedChannels = [];\n        getMyChannels(store.getState()).forEach((item) => {\n            if (item.type !== 'O' || item.delete_at > 0) {\n                return;\n            }\n            const nameWords = item.name.toLowerCase().split(/\\s+/).concat(item.display_name.toLowerCase().split(/\\s+/));\n            var matched = true;\n            for (var j = 0; matched && j < words.length; j++) {\n                if (!words[j]) {\n                    continue;\n                }\n                var wordMatched = false;\n                for (var i = 0; i < nameWords.length; i++) {\n                    if (nameWords[i].startsWith(words[j])) {\n                        wordMatched = true;\n                        break;\n                    }\n                }\n                if (!wordMatched) {\n                    matched = false;\n                    break;\n                }\n            }\n            if (!matched) {\n                return;\n            }\n            wrappedChannelIds[item.id] = true;\n            wrappedChannels.push({\n                type: Constants.MENTION_CHANNELS,\n                channel: item,\n            });\n        });\n        wrappedChannels = wrappedChannels.sort((a, b) => {\n            //\n            // MM-12677 When this is migrated this needs to be fixed to pull the user's locale\n            //\n            return sortChannelsByTypeAndDisplayName('en', a.channel, b.channel);\n        });\n        const channelMentions = wrappedChannels.map((item) => '~' + item.channel.name);\n        if (channelMentions.length > 0) {\n            SuggestionStore.addSuggestions(suggestionId, channelMentions, wrappedChannels, ChannelMentionSuggestion, captured[1]);\n        }\n\n        SuggestionStore.addSuggestions(suggestionId, [''], [{\n            type: Constants.MENTION_MORE_CHANNELS,\n            loading: true,\n        }], ChannelMentionSuggestion, captured[1]);\n\n        autocompleteChannels(\n            prefix,\n            (channels) => {\n                const myMembers = getMyChannelMemberships(store.getState());\n                if (this.shouldCancelDispatch(prefix)) {\n                    return;\n                }\n\n                if (channels.length === 0) {\n                    this.lastPrefixWithNoResults = prefix;\n                }\n\n                // Wrap channels in an outer object to avoid overwriting the 'type' property.\n                const wrappedMoreChannels = [];\n                const moreChannels = [];\n                channels.forEach((item) => {\n                    if (item.delete_at > 0 && !myMembers[item.id]) {\n                        return;\n                    }\n                    if (getChannel(store.getState(), item.id)) {\n                        if (!wrappedChannelIds[item.id]) {\n                            wrappedChannelIds[item.id] = true;\n                            wrappedChannels.push({\n                                type: Constants.MENTION_CHANNELS,\n                                channel: item,\n                            });\n                        }\n                        return;\n                    }\n\n                    wrappedMoreChannels.push({\n                        type: Constants.MENTION_MORE_CHANNELS,\n                        channel: item,\n                    });\n\n                    moreChannels.push(item);\n                });\n\n                wrappedChannels = wrappedChannels.sort((a, b) => {\n                    //\n                    // MM-12677 When this is migrated this needs to be fixed to pull the user's locale\n                    //\n                    return sortChannelsByTypeAndDisplayName('en', a.channel, b.channel);\n                });\n                const wrapped = wrappedChannels.concat(wrappedMoreChannels);\n                const mentions = wrapped.map((item) => '~' + item.channel.name);\n\n                AppDispatcher.handleServerAction({\n                    type: ActionTypes.RECEIVED_MORE_CHANNELS,\n                    channels: moreChannels,\n                });\n\n                AppDispatcher.handleServerAction({\n                    type: ActionTypes.SUGGESTION_RECEIVED_SUGGESTIONS,\n                    id: suggestionId,\n                    matchedPretext: captured[1],\n                    terms: mentions,\n                    items: wrapped,\n                    component: ChannelMentionSuggestion,\n                });\n            }\n        );\n\n        return true;\n    }\n\n    handleCompleteWord(term) {\n        this.lastCompletedWord = term;\n        this.lastPrefixWithNoResults = '';\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport request from 'superagent';\nimport * as IntegrationActions from 'mattermost-redux/actions/integrations';\nimport {getProfilesByIds, getUser} from 'mattermost-redux/actions/users';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {Client4} from 'mattermost-redux/client';\n\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport store from 'stores/redux_store.jsx';\nimport {ActionTypes} from 'utils/constants.jsx';\nimport * as UserAgent from 'utils/user_agent.jsx';\n\nconst dispatch = store.dispatch;\nconst getState = store.getState;\n\nexport async function loadIncomingHooks(complete) {\n    const {data} = await IntegrationActions.getIncomingHooks('', 0, 10000)(dispatch, getState);\n    if (data) {\n        loadProfilesForIncomingHooks(data);\n    }\n\n    if (complete) {\n        complete(data);\n    }\n}\n\nexport async function loadIncomingHooksForTeam(teamId, complete) {\n    const {data} = await IntegrationActions.getIncomingHooks(teamId, 0, 10000)(dispatch, getState);\n    if (data) {\n        loadProfilesForIncomingHooks(data);\n    }\n\n    if (complete) {\n        complete(data);\n    }\n}\n\nfunction loadProfilesForIncomingHooks(hooks) {\n    const state = getState();\n    const profilesToLoad = {};\n    for (let i = 0; i < hooks.length; i++) {\n        const hook = hooks[i];\n        if (!getUser(state, hook.user_id)) {\n            profilesToLoad[hook.user_id] = true;\n        }\n    }\n\n    const list = Object.keys(profilesToLoad);\n    if (list.length === 0) {\n        return;\n    }\n\n    getProfilesByIds(list)(dispatch, getState);\n}\n\nexport async function loadOutgoingHooks(complete) {\n    const {data} = await IntegrationActions.getOutgoingHooks('', '', 0, 10000)(dispatch, getState);\n    if (data) {\n        loadProfilesForOutgoingHooks(data);\n    }\n\n    if (complete) {\n        complete(data);\n    }\n}\n\nexport async function loadOutgoingHooksForTeam(teamId, complete) {\n    const {data} = await IntegrationActions.getOutgoingHooks('', teamId, 0, 10000)(dispatch, getState);\n    if (data) {\n        loadProfilesForOutgoingHooks(data);\n    }\n\n    if (complete) {\n        complete(data);\n    }\n}\n\nfunction loadProfilesForOutgoingHooks(hooks) {\n    const state = getState();\n    const profilesToLoad = {};\n    for (let i = 0; i < hooks.length; i++) {\n        const hook = hooks[i];\n        if (!getUser(state, hook.creator_id)) {\n            profilesToLoad[hook.creator_id] = true;\n        }\n    }\n\n    const list = Object.keys(profilesToLoad);\n    if (list.length === 0) {\n        return;\n    }\n\n    getProfilesByIds(list)(dispatch, getState);\n}\n\nexport async function loadTeamCommands(complete) {\n    const {data} = await dispatch(IntegrationActions.getCustomTeamCommands(getCurrentTeamId(getState())));\n    if (data) {\n        loadProfilesForCommands(data);\n    }\n\n    if (complete) {\n        complete(data);\n    }\n}\n\nfunction loadProfilesForCommands(commands) {\n    const state = getState();\n    const profilesToLoad = {};\n    for (let i = 0; i < commands.length; i++) {\n        const command = commands[i];\n        if (!getUser(state, command.creator_id)) {\n            profilesToLoad[command.creator_id] = true;\n        }\n    }\n\n    const list = Object.keys(profilesToLoad);\n    if (list.length === 0) {\n        return;\n    }\n\n    getProfilesByIds(list)(dispatch, getState);\n}\n\nexport async function addIncomingHook(hook, success, error) {\n    const {data, error: err} = await IntegrationActions.createIncomingHook(hook)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function updateIncomingHook(hook, success, error) {\n    const {data, error: err} = await IntegrationActions.updateIncomingHook(hook)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function addOutgoingHook(hook, success, error) {\n    const {data, error: err} = await IntegrationActions.createOutgoingHook(hook)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function updateOutgoingHook(hook, success, error) {\n    const {data, error: err} = await IntegrationActions.updateOutgoingHook(hook)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport function deleteIncomingHook(id) {\n    IntegrationActions.removeIncomingHook(id)(dispatch, getState);\n}\n\nexport function deleteOutgoingHook(id) {\n    IntegrationActions.removeOutgoingHook(id)(dispatch, getState);\n}\n\nexport function regenOutgoingHookToken(id) {\n    IntegrationActions.regenOutgoingHookToken(id)(dispatch, getState);\n}\n\nexport async function addCommand(command, success, error) {\n    const {data, error: err} = await IntegrationActions.addCommand(command)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function editCommand(command, success, error) {\n    const {data, error: err} = await IntegrationActions.editCommand(command)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport function deleteCommand(id) {\n    IntegrationActions.deleteCommand(id)(dispatch, getState);\n}\n\nexport function regenCommandToken(id) {\n    IntegrationActions.regenCommandToken(id)(dispatch, getState);\n}\n\nexport function getSuggestedCommands(command, suggestionId, component) {\n    Client4.getCommandsList(getCurrentTeamId(getState())).then(\n        (data) => {\n            let matches = [];\n            data.forEach((cmd) => {\n                if (!cmd.auto_complete) {\n                    return;\n                }\n\n                if (cmd.trigger !== 'shortcuts' || !UserAgent.isMobile()) {\n                    if (('/' + cmd.trigger).indexOf(command) === 0) {\n                        const s = '/' + cmd.trigger;\n                        let hint = '';\n                        if (cmd.auto_complete_hint && cmd.auto_complete_hint.length !== 0) {\n                            hint = cmd.auto_complete_hint;\n                        }\n                        matches.push({\n                            suggestion: s,\n                            hint,\n                            description: cmd.auto_complete_desc,\n                        });\n                    }\n                }\n            });\n\n            matches = matches.sort((a, b) => a.suggestion.localeCompare(b.suggestion));\n\n            // pull out the suggested commands from the returned data\n            const terms = matches.map((suggestion) => suggestion.suggestion);\n\n            AppDispatcher.handleServerAction({\n                type: ActionTypes.SUGGESTION_RECEIVED_SUGGESTIONS,\n                id: suggestionId,\n                matchedPretext: command,\n                terms,\n                items: matches,\n                component,\n            });\n        }\n    ).catch(\n        () => {} //eslint-disable-line no-empty-function\n    );\n}\n\nexport function getYoutubeVideoInfo(googleKey, videoId, success, error) {\n    request.get('https://www.googleapis.com/youtube/v3/videos').\n        query({part: 'snippet', id: videoId, key: googleKey}).\n        end((err, res) => {\n            if (err) {\n                return error(err);\n            }\n\n            if (!res.body) {\n                console.error('Missing response body for getYoutubeVideoInfo'); // eslint-disable-line no-console\n            }\n\n            return success(res.body);\n        });\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {getSuggestedCommands} from 'actions/integration_actions.jsx';\n\nimport Suggestion from './suggestion.jsx';\n\nclass CommandSuggestion extends Suggestion {\n    render() {\n        const {item, isSelection} = this.props;\n\n        let className = 'command';\n        if (isSelection) {\n            className += ' suggestion--selected';\n        }\n\n        return (\n            <div\n                className={className}\n                onClick={this.handleClick}\n                {...Suggestion.baseProps}\n            >\n                <div className='command__title'>\n                    <string>{item.suggestion} {item.hint}</string>\n                </div>\n                <div className='command__desc'>\n                    {item.description}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class CommandProvider {\n    handlePretextChanged(suggestionId, pretext) {\n        if (pretext.startsWith('/')) {\n            getSuggestedCommands(pretext.toLowerCase(), suggestionId, CommandSuggestion, pretext.toLowerCase());\n\n            return true;\n        }\n        return false;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {autocompleteCustomEmojis} from 'mattermost-redux/actions/emojis';\nimport {getEmojiImageUrl} from 'mattermost-redux/utils/emoji_utils';\n\nimport {getEmojiMap} from 'selectors/emojis';\n\nimport store from 'stores/redux_store.jsx';\nimport SuggestionStore from 'stores/suggestion_store.jsx';\n\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport * as Emoticons from 'utils/emoticons.jsx';\nimport {ActionTypes} from 'utils/constants.jsx';\n\nimport Suggestion from './suggestion.jsx';\n\nconst MIN_EMOTICON_LENGTH = 2;\nconst EMOJI_CATEGORY_SUGGESTION_BLACKLIST = ['skintone'];\n\nclass EmoticonSuggestion extends Suggestion {\n    render() {\n        const text = this.props.term;\n        const emoji = this.props.item.emoji;\n\n        let className = 'emoticon-suggestion';\n        if (this.props.isSelection) {\n            className += ' suggestion--selected';\n        }\n\n        return (\n            <div\n                className={className}\n                onClick={this.handleClick}\n                {...Suggestion.baseProps}\n            >\n                <div className='pull-left'>\n                    <img\n                        alt={text}\n                        className='emoticon-suggestion__image'\n                        src={getEmojiImageUrl(emoji)}\n                        title={text}\n                    />\n                </div>\n                <div className='pull-left'>\n                    {text}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class EmoticonProvider {\n    handlePretextChanged(suggestionId, pretext) {\n        // Look for the potential emoticons at the start of the text, after whitespace, and at the start of emoji reaction commands\n        const captured = (/(^|\\s|^\\+|^-)(:([^:\\s]*))$/g).exec(pretext);\n        if (!captured) {\n            return false;\n        }\n\n        const prefix = captured[1];\n        const text = captured[2];\n        const partialName = captured[3];\n\n        if (partialName.length < MIN_EMOTICON_LENGTH) {\n            SuggestionStore.clearSuggestions(suggestionId);\n            return false;\n        }\n\n        // Check for text emoticons if this isn't for an emoji reaction\n        if (prefix !== '-' && prefix !== '+') {\n            for (const emoticon of Object.keys(Emoticons.emoticonPatterns)) {\n                if (Emoticons.emoticonPatterns[emoticon].test(text)) {\n                    // Don't show the autocomplete for text emoticons\n                    return false;\n                }\n            }\n        }\n\n        if (store.getState().entities.general.config.EnableCustomEmoji === 'true') {\n            autocompleteCustomEmojis(partialName)(store.dispatch, store.getState).then(() => this.findAndSuggestEmojis(suggestionId, text, partialName));\n        }\n\n        this.findAndSuggestEmojis(suggestionId, text, partialName);\n\n        return true;\n    }\n\n    findAndSuggestEmojis(suggestionId, text, partialName) {\n        const matched = [];\n\n        const emojiMap = getEmojiMap(store.getState());\n\n        // Check for named emoji\n        for (const [name, emoji] of emojiMap) {\n            if (emoji.aliases) {\n                // This is a system emoji so it may have multiple names\n                for (const alias of emoji.aliases) {\n                    if (!EMOJI_CATEGORY_SUGGESTION_BLACKLIST.includes(emoji.category) && alias.indexOf(partialName) !== -1) {\n                        matched.push({name: alias, emoji});\n                        break;\n                    }\n                }\n            } else if (name.indexOf(partialName) !== -1) {\n                // This is a custom emoji so it only has one name\n                if (emojiMap.hasSystemEmoji(name)) {\n                    // System emojis take precedence over custom ones\n                    continue;\n                }\n\n                matched.push({name, emoji});\n            }\n        }\n\n        // Sort the emoticons so that emoticons starting with the entered text come first\n        matched.sort((a, b) => {\n            const aName = a.name;\n            const bName = b.name;\n\n            const aPrefix = aName.startsWith(partialName);\n            const bPrefix = bName.startsWith(partialName);\n\n            if (aPrefix === bPrefix) {\n                return aName.localeCompare(bName);\n            } else if (aPrefix) {\n                return -1;\n            }\n\n            return 1;\n        });\n\n        const terms = matched.map((item) => ':' + item.name + ':');\n\n        // Required to get past the dispatch during dispatch error\n        setTimeout(() => {\n            AppDispatcher.handleServerAction({\n                type: ActionTypes.SUGGESTION_RECEIVED_SUGGESTIONS,\n                id: suggestionId,\n                matchedPretext: text,\n                terms,\n                items: matched,\n                component: EmoticonSuggestion,\n            });\n        }, 0);\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport AutosizeTextarea from 'components/autosize_textarea.jsx';\nimport PostMarkdown from 'components/post_markdown';\nimport AtMentionProvider from 'components/suggestion/at_mention_provider.jsx';\nimport ChannelMentionProvider from 'components/suggestion/channel_mention_provider.jsx';\nimport CommandProvider from 'components/suggestion/command_provider.jsx';\nimport EmoticonProvider from 'components/suggestion/emoticon_provider.jsx';\nimport SuggestionBox from 'components/suggestion/suggestion_box.jsx';\nimport SuggestionList from 'components/suggestion/suggestion_list.jsx';\nimport ErrorStore from 'stores/error_store.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nconst PreReleaseFeatures = Constants.PRE_RELEASE_FEATURES;\n\nexport default class Textbox extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        channelId: PropTypes.string,\n        value: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n        onKeyPress: PropTypes.func.isRequired,\n        createMessage: PropTypes.string.isRequired,\n        previewMessageLink: PropTypes.string,\n        onKeyDown: PropTypes.func,\n        onBlur: PropTypes.func,\n        supportsCommands: PropTypes.bool.isRequired,\n        handlePostError: PropTypes.func,\n        suggestionListStyle: PropTypes.string,\n        emojiEnabled: PropTypes.bool,\n        isRHS: PropTypes.bool,\n        popoverMentionKeyClick: PropTypes.bool,\n        characterLimit: PropTypes.number.isRequired,\n        disabled: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        supportsCommands: true,\n        isRHS: false,\n        popoverMentionKeyClick: false,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            connection: '',\n        };\n\n        this.suggestionProviders = [\n            new AtMentionProvider(this.props.channelId),\n            new ChannelMentionProvider(),\n            new EmoticonProvider(),\n        ];\n        if (props.supportsCommands) {\n            this.suggestionProviders.push(new CommandProvider());\n        }\n    }\n\n    componentDidMount() {\n        ErrorStore.addChangeListener(this.onReceivedError);\n    }\n\n    UNSAFE_componentWillMount() { // eslint-disable-line camelcase\n        this.checkMessageLength(this.props.value);\n    }\n\n    componentWillUnmount() {\n        ErrorStore.removeChangeListener(this.onReceivedError);\n    }\n\n    onReceivedError = () => {\n        const errorCount = ErrorStore.getConnectionErrorCount();\n\n        if (errorCount > 1) {\n            this.setState({connection: 'bad-connection'});\n        } else {\n            this.setState({connection: ''});\n        }\n    }\n\n    handleChange = (e) => {\n        this.props.onChange(e);\n    }\n\n    checkMessageLength = (message) => {\n        if (this.props.handlePostError) {\n            if (message.length > this.props.characterLimit) {\n                const errorMessage = (\n                    <FormattedMessage\n                        id='create_post.error_message'\n                        defaultMessage='Your message is too long. Character count: {length}/{limit}'\n                        values={{\n                            length: message.length,\n                            limit: this.props.characterLimit,\n                        }}\n                    />);\n                this.props.handlePostError(errorMessage);\n            } else {\n                this.props.handlePostError(null);\n            }\n        }\n    }\n\n    handleKeyDown = (e) => {\n        if (this.props.onKeyDown) {\n            this.props.onKeyDown(e);\n        }\n    }\n\n    handleBlur = (e) => {\n        if (this.props.onBlur) {\n            this.props.onBlur(e);\n        }\n    }\n\n    handleHeightChange = (height, maxHeight) => {\n        const wrapper = $(this.refs.wrapper);\n\n        // Move over attachment icon to compensate for the scrollbar\n        if (height > maxHeight) {\n            wrapper.closest('.post-create').addClass('scroll');\n        } else {\n            wrapper.closest('.post-create').removeClass('scroll');\n        }\n    }\n\n    focus = () => {\n        const textbox = this.refs.message.getTextbox();\n\n        textbox.focus();\n        Utils.placeCaretAtEnd(textbox);\n\n        // reset character count warning\n        this.checkMessageLength(textbox.value);\n    }\n\n    blur = () => {\n        const textbox = this.refs.message.getTextbox();\n        textbox.blur();\n    };\n\n    recalculateSize = () => {\n        this.refs.message.recalculateSize();\n    }\n\n    togglePreview = (e) => {\n        e.preventDefault();\n        e.target.blur();\n        this.setState((prevState) => {\n            return {preview: !prevState.preview};\n        });\n    }\n\n    hidePreview = () => {\n        this.setState({preview: false});\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (nextProps.channelId !== this.props.channelId) {\n            // Update channel id for AtMentionProvider.\n            const providers = this.suggestionProviders;\n            for (let i = 0; i < providers.length; i++) {\n                if (providers[i] instanceof AtMentionProvider) {\n                    providers[i] = new AtMentionProvider(nextProps.channelId);\n                }\n            }\n        }\n        if (this.props.value !== nextProps.value) {\n            this.checkMessageLength(nextProps.value);\n        }\n    }\n\n    render() {\n        const hasText = this.props.value && this.props.value.length > 0;\n\n        let editHeader;\n        let helpTextClass = '';\n\n        if (this.props.value && this.props.value.length > this.props.characterLimit) {\n            helpTextClass = 'hidden';\n        }\n\n        if (this.props.previewMessageLink) {\n            editHeader = (\n                <span>\n                    {this.props.previewMessageLink}\n                </span>\n            );\n        } else {\n            editHeader = (\n                <FormattedMessage\n                    id='textbox.edit'\n                    defaultMessage='Edit message'\n                />\n            );\n        }\n\n        let previewLink = null;\n        if (Utils.isFeatureEnabled(PreReleaseFeatures.MARKDOWN_PREVIEW)) {\n            previewLink = (\n                <a\n                    id='previewLink'\n                    onClick={this.togglePreview}\n                    className='textbox-preview-link'\n                >\n                    {this.state.preview ? (\n                        editHeader\n                    ) : (\n                        <FormattedMessage\n                            id='textbox.preview'\n                            defaultMessage='Preview'\n                        />\n                    )}\n                </a>\n            );\n        }\n\n        const helpText = (\n            <div\n                id='helpText'\n                style={{visibility: hasText ? 'visible' : 'hidden', opacity: hasText ? '0.45' : '0'}}\n                className='help__format-text'\n            >\n                <b>\n                    <FormattedMessage\n                        id='textbox.bold'\n                        defaultMessage='**bold**'\n                    />\n                </b>\n                <i>\n                    <FormattedMessage\n                        id='textbox.italic'\n                        defaultMessage='_italic_'\n                    />\n                </i>\n                <span>\n                    {'~~'}\n                    <strike>\n                        <FormattedMessage\n                            id='textbox.strike'\n                            defaultMessage='strike'\n                        />\n                    </strike>\n                    {'~~ '}\n                </span>\n                <span>\n                    <FormattedMessage\n                        id='textbox.inlinecode'\n                        defaultMessage='`inline code`'\n                    />\n                </span>\n                <span>\n                    <FormattedMessage\n                        id='textbox.preformatted'\n                        defaultMessage='```preformatted```'\n                    />\n                </span>\n                <span>\n                    <FormattedMessage\n                        id='textbox.quote'\n                        defaultMessage='>quote'\n                    />\n                </span>\n            </div>\n        );\n\n        let preview = null;\n\n        let textboxClassName = 'form-control custom-textarea';\n        if (this.props.emojiEnabled) {\n            textboxClassName += ' custom-textarea--emoji-picker';\n        }\n        if (this.state.connection) {\n            textboxClassName += ' ' + this.state.connection;\n        }\n        if (this.state.preview) {\n            textboxClassName += ' custom-textarea--preview';\n\n            preview = (\n                <div\n                    ref='preview'\n                    className='form-control custom-textarea textbox-preview-area'\n                    style={{display: this.state.preview ? 'block' : 'none'}}\n                >\n                    <PostMarkdown\n                        isRHS={this.props.isRHS}\n                        message={this.props.value}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div\n                ref='wrapper'\n                className='textarea-wrapper'\n            >\n                <SuggestionBox\n                    id={this.props.id}\n                    ref='message'\n                    className={textboxClassName}\n                    spellCheck='true'\n                    placeholder={this.props.createMessage}\n                    onChange={this.handleChange}\n                    onKeyPress={this.props.onKeyPress}\n                    onKeyDown={this.handleKeyDown}\n                    onBlur={this.handleBlur}\n                    onHeightChange={this.handleHeightChange}\n                    style={{visibility: this.state.preview ? 'hidden' : 'visible'}}\n                    inputComponent={AutosizeTextarea}\n                    listComponent={SuggestionList}\n                    listStyle={this.props.suggestionListStyle}\n                    providers={this.suggestionProviders}\n                    channelId={this.props.channelId}\n                    value={this.props.value}\n                    renderDividers={true}\n                    isRHS={this.props.isRHS}\n                    popoverMentionKeyClick={this.props.popoverMentionKeyClick}\n                    disabled={this.props.disabled}\n                />\n                {preview}\n                <div className={'help__text ' + helpTextClass}>\n                    {helpText}\n                    {previewLink}\n                    <Link\n                        id='helpTextLink'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        to='/help/messaging'\n                        className='textbox-help-link'\n                    >\n                        <FormattedMessage\n                            id='textbox.help'\n                            defaultMessage='Help'\n                        />\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport {Constants, ModalIdentifiers} from 'utils/constants.jsx';\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport DeletePostModal from 'components/delete_post_modal';\nimport EmojiPickerOverlay from 'components/emoji_picker/emoji_picker_overlay.jsx';\nimport EmojiIcon from 'components/svg/emoji_icon';\nimport Textbox from 'components/textbox.jsx';\n\nconst KeyCodes = Constants.KeyCodes;\n\nexport default class EditPostModal extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Set to force form submission on CTRL/CMD + ENTER instead of ENTER\n         */\n        ctrlSend: PropTypes.bool,\n\n        /**\n         * Global config object\n         */\n        config: PropTypes.object.isRequired,\n\n        /**\n         * The maximum length of a post\n         */\n        maxPostSize: PropTypes.number.isRequired,\n\n        /**\n         * Editing post information\n         */\n        editingPost: PropTypes.shape({\n\n            /**\n             * The post being edited\n             */\n            post: PropTypes.object,\n\n            /**\n             * The ID of the post being edited\n             */\n            postId: PropTypes.string,\n\n            /**\n             * The ID of a DOM node to focus with the keyboard when this modal closes\n             */\n            refocusId: PropTypes.string,\n\n            /**\n             * Whether or not to show the modal\n             */\n            show: PropTypes.bool.isRequired,\n\n            /**\n             * What to show in the title of the modal as \"Edit {title}\"\n             */\n            title: PropTypes.string,\n\n            /**\n             * Whether or not the modal was open from RHS\n             */\n            isRHS: PropTypes.bool,\n        }).isRequired,\n\n        actions: PropTypes.shape({\n            addMessageIntoHistory: PropTypes.func.isRequired,\n            editPost: PropTypes.func.isRequired,\n            hideEditPostModal: PropTypes.func.isRequired,\n            openModal: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editText: '',\n            postError: '',\n            errorClass: null,\n            showEmojiPicker: false,\n        };\n    }\n\n    UNSAFE_componentWillUpdate(nextProps) { // eslint-disable-line camelcase\n        if (!this.props.editingPost.show && nextProps.editingPost.show) {\n            this.setState({\n                editText: nextProps.editingPost.post.message_source || nextProps.editingPost.post.message,\n            });\n        }\n    }\n\n    getContainer = () => {\n        return this.refs.editModalBody;\n    }\n\n    toggleEmojiPicker = () => {\n        this.setState({showEmojiPicker: !this.state.showEmojiPicker});\n        if (!this.state.showEmojiPicker && this.editbox) {\n            this.editbox.focus();\n        }\n    }\n\n    hideEmojiPicker = () => {\n        this.setState({showEmojiPicker: false});\n        if (this.editbox) {\n            this.editbox.focus();\n        }\n    }\n\n    handleEmojiClick = (emoji) => {\n        const emojiAlias = emoji && (emoji.name || (emoji.aliases && emoji.aliases[0]));\n\n        if (!emojiAlias) {\n            //Oops.. There went something wrong\n            return;\n        }\n\n        if (this.state.editText === '') {\n            this.setState({editText: ':' + emojiAlias + ': '});\n        } else {\n            //check whether there is already a blank at the end of the current message\n            const newMessage = ((/\\s+$/).test(this.state.editText)) ?\n                this.state.editText + ':' + emojiAlias + ': ' : this.state.editText + ' :' + emojiAlias + ': ';\n\n            this.setState({editText: newMessage});\n        }\n\n        this.setState({showEmojiPicker: false});\n\n        this.editbox.focus();\n    }\n\n    handleGifClick = (gif) => {\n        if (this.state.editText === '') {\n            this.setState({editText: gif});\n        } else {\n            const newMessage = ((/\\s+$/).test(this.state.editText)) ? this.state.editText + gif : this.state.editText + ' ' + gif;\n            this.setState({editText: newMessage});\n        }\n        this.setState({showEmojiPicker: false});\n        this.editbox.focus();\n    }\n\n    getEditPostControls = () => {\n        return this.refs.editPostEmoji;\n    }\n\n    handlePostError = (postError) => {\n        if (this.state.postError !== postError) {\n            this.setState({postError});\n        }\n    }\n\n    handleEdit = async () => {\n        const {actions, editingPost} = this.props;\n        const updatedPost = {\n            message: this.state.editText,\n            id: editingPost.postId,\n            channel_id: editingPost.post.channel_id,\n        };\n\n        if (this.state.postError) {\n            this.setState({errorClass: 'animation--highlight'});\n            setTimeout(() => {\n                this.setState({errorClass: null});\n            }, Constants.ANIMATION_TIMEOUT);\n            return;\n        }\n\n        if (updatedPost.message === (editingPost.post.message_source || editingPost.post.message)) {\n            // no changes so just close the modal\n            this.handleHide();\n            return;\n        }\n\n        const hasAttachment = editingPost.post.file_ids && editingPost.post.file_ids.length > 0;\n        if (updatedPost.message.trim().length === 0 && !hasAttachment) {\n            this.handleHide(false);\n\n            const deletePostModalData = {\n                ModalId: ModalIdentifiers.DELETE_POST,\n                dialogType: DeletePostModal,\n                dialogProps: {\n                    post: editingPost.post,\n                    commentCount: editingPost.commentCount,\n                    isRHS: editingPost.isRHS,\n                },\n            };\n\n            this.props.actions.openModal(deletePostModalData);\n            return;\n        }\n\n        actions.addMessageIntoHistory(updatedPost.message);\n\n        const data = await actions.editPost(updatedPost);\n        if (data) {\n            window.scrollTo(0, 0);\n        }\n\n        this.handleHide();\n    }\n\n    handleChange = (e) => {\n        const message = e.target.value;\n        this.setState({\n            editText: message,\n        });\n    }\n\n    handleEditKeyPress = (e) => {\n        if (!UserAgent.isMobile() && !this.props.ctrlSend && Utils.isKeyPressed(e, KeyCodes.ENTER) && !e.shiftKey && !e.altKey) {\n            e.preventDefault();\n            this.editbox.blur();\n            this.handleEdit();\n        } else if (this.props.ctrlSend && e.ctrlKey && Utils.isKeyPressed(e, KeyCodes.ENTER)) {\n            e.preventDefault();\n            this.editbox.blur();\n            this.handleEdit();\n        }\n    }\n\n    handleKeyDown = (e) => {\n        if (this.props.ctrlSend && Utils.isKeyPressed(e, KeyCodes.ENTER) && e.ctrlKey === true) {\n            this.handleEdit();\n        } else if (Utils.isKeyPressed(e, KeyCodes.ESCAPE) && !this.state.showEmojiPicker) {\n            this.handleHide();\n        }\n    }\n\n    handleHide = (doRefocus = true) => {\n        this.refocusId = doRefocus ? this.props.editingPost.refocusId : null;\n        this.props.actions.hideEditPostModal();\n    }\n\n    handleEntered = () => {\n        this.editbox.focus();\n        this.editbox.recalculateSize();\n    }\n\n    handleExit = () => {\n        this.editbox.hidePreview();\n    }\n\n    handleExited = () => {\n        const refocusId = this.refocusId;\n        if (refocusId) {\n            setTimeout(() => {\n                const element = document.getElementById(refocusId);\n                if (element) {\n                    element.focus();\n                }\n            });\n        }\n\n        this.refocusId = null;\n        this.setState({editText: '', postError: '', errorClass: null, showEmojiPicker: false});\n    }\n\n    setEditboxRef = (ref) => {\n        this.editbox = ref;\n        if (this.editbox) {\n            this.editbox.focus();\n        }\n    }\n\n    render() {\n        const errorBoxClass = 'edit-post-footer' + (this.state.postError ? ' has-error' : '');\n        let postError = null;\n        if (this.state.postError) {\n            const postErrorClass = 'post-error' + (this.state.errorClass ? (' ' + this.state.errorClass) : '');\n            postError = (<label className={postErrorClass}>{this.state.postError}</label>);\n        }\n\n        let emojiPicker = null;\n        if (this.props.config.EnableEmojiPicker === 'true') {\n            emojiPicker = (\n                <span className='emoji-picker__container'>\n                    <EmojiPickerOverlay\n                        show={this.state.showEmojiPicker}\n                        container={this.getContainer}\n                        target={this.getEditPostControls}\n                        onHide={this.hideEmojiPicker}\n                        onEmojiClick={this.handleEmojiClick}\n                        onGifClick={this.handleGifClick}\n                        enableGifPicker={this.props.config.EnableGifPicker === 'true'}\n                        rightOffset={50}\n                        topOffset={-20}\n                    />\n                    <EmojiIcon\n                        className='icon icon--emoji'\n                        onClick={this.toggleEmojiPicker}\n                    />\n                </span>\n            );\n        }\n\n        return (\n            <Modal\n                dialogClassName='edit-modal'\n                show={this.props.editingPost.show}\n                onKeyDown={this.handleKeyDown}\n                onHide={this.handleHide}\n                onEntered={this.handleEntered}\n                onExit={this.handleExit}\n                onExited={this.handleExited}\n                keyboard={false}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title>\n                        <FormattedMessage\n                            id='edit_post.edit'\n                            defaultMessage='Edit {title}'\n                            values={{\n                                title: this.props.editingPost.title,\n                            }}\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body\n                    bsClass='modal-body edit-modal-body'\n                    ref='editModalBody'\n                >\n                    <Textbox\n                        onChange={this.handleChange}\n                        onKeyPress={this.handleEditKeyPress}\n                        onKeyDown={this.handleKeyDown}\n                        handlePostError={this.handlePostError}\n                        value={this.state.editText}\n                        channelId={this.props.editingPost.post && this.props.editingPost.post.channel_id}\n                        emojiEnabled={this.props.config.EnableEmojiPicker === 'true'}\n                        createMessage={Utils.localizeMessage('edit_post.editPost', 'Edit the post...')}\n                        supportsCommands={false}\n                        suggestionListStyle='bottom'\n                        id='edit_textbox'\n                        ref={this.setEditboxRef}\n                        characterLimit={this.props.maxPostSize}\n                    />\n                    <span\n                        ref='editPostEmoji'\n                        className='edit-post__actions'\n                    >\n                        {emojiPicker}\n                    </span>\n                    <div className={errorBoxClass}>\n                        {postError}\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        type='button'\n                        className='btn btn-default'\n                        onClick={this.handleHide}\n                    >\n                        <FormattedMessage\n                            id='edit_post.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </button>\n                    <button\n                        type='button'\n                        className='btn btn-primary'\n                        onClick={this.handleEdit}\n                    >\n                        <FormattedMessage\n                            id='edit_post.save'\n                            defaultMessage='Save'\n                        />\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {addMessageIntoHistory} from 'mattermost-redux/actions/posts';\nimport {Preferences} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getBool} from 'mattermost-redux/selectors/entities/preferences';\n\nimport {openModal} from 'actions/views/modals';\nimport {hideEditPostModal} from 'actions/post_actions';\nimport {editPost} from 'actions/views/posts';\nimport {getEditingPost} from 'selectors/posts';\nimport Constants from 'utils/constants';\n\nimport EditPostModal from './edit_post_modal.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    return {\n        ctrlSend: getBool(state, Preferences.CATEGORY_ADVANCED_SETTINGS, 'send_on_ctrl_enter'),\n        config,\n        editingPost: getEditingPost(state),\n        maxPostSize: parseInt(config.MaxPostSize, 10) || Constants.DEFAULT_CHARACTER_LIMIT,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            addMessageIntoHistory,\n            editPost,\n            hideEditPostModal,\n            openModal,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPostModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport EventEmitter from 'events';\n\nimport Constants from 'utils/constants.jsx';\nimport AppDispatcher from '../dispatcher/app_dispatcher.jsx';\n\nconst ActionTypes = Constants.ActionTypes;\n\nclass ModalStoreClass extends EventEmitter {\n    constructor() {\n        super();\n\n        this.dispatchToken = AppDispatcher.register(this.handleEventPayload);\n    }\n\n    addModalListener = (action, callback) => {\n        this.on(action, callback);\n    }\n\n    removeModalListener = (action, callback) => {\n        this.removeListener(action, callback);\n    }\n\n    handleEventPayload = (payload) => {\n        // toggle event handlers should accept a boolean show/hide value and can accept a map of arguments\n        const {type, value, ...args} = payload.action; //eslint-disable-line no-use-before-define\n\n        switch (type) {\n        case ActionTypes.TOGGLE_SHORTCUTS_MODAL:\n        case ActionTypes.TOGGLE_IMPORT_THEME_MODAL:\n        case ActionTypes.TOGGLE_INVITE_MEMBER_MODAL:\n        case ActionTypes.TOGGLE_DELETE_POST_MODAL:\n        case ActionTypes.TOGGLE_GET_POST_LINK_MODAL:\n        case ActionTypes.TOGGLE_GET_TEAM_INVITE_LINK_MODAL:\n        case ActionTypes.TOGGLE_GET_PUBLIC_LINK_MODAL:\n        case ActionTypes.TOGGLE_QUICK_SWITCH_MODAL:\n        case ActionTypes.TOGGLE_CHANNEL_PURPOSE_UPDATE_MODAL:\n        case ActionTypes.TOGGLE_CHANNEL_NAME_UPDATE_MODAL:\n        case ActionTypes.TOGGLE_LEAVE_PRIVATE_CHANNEL_MODAL:\n            this.emit(type, value, args);\n            break;\n        }\n    }\n}\n\nconst ModalStore = new ModalStoreClass();\nexport default ModalStore;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class GetLinkModal extends React.PureComponent {\n    static propTypes = {\n        show: PropTypes.bool.isRequired,\n        onHide: PropTypes.func.isRequired,\n        title: PropTypes.string.isRequired,\n        helpText: PropTypes.string,\n        link: PropTypes.string.isRequired,\n    };\n\n    static defaultProps = {\n        helpText: null,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            copiedLink: false,\n        };\n    }\n\n    onHide = () => {\n        this.setState({copiedLink: false});\n        this.props.onHide();\n    }\n\n    copyLink = () => {\n        const textarea = this.refs.textarea;\n        textarea.focus();\n        textarea.setSelectionRange(0, this.props.link.length);\n\n        try {\n            if (document.execCommand('copy')) {\n                this.setState({copiedLink: true});\n            } else {\n                this.setState({copiedLink: false});\n            }\n        } catch (err) {\n            this.setState({copiedLink: false});\n        }\n    }\n\n    render() {\n        let helpText = null;\n        if (this.props.helpText) {\n            helpText = (\n                <p>\n                    {this.props.helpText}\n                    <br/>\n                    <br/>\n                </p>\n            );\n        }\n\n        let copyLink = null;\n\n        if (document.queryCommandSupported('copy')) {\n            copyLink = (\n                <button\n                    id='linkModalCopyLink'\n                    data-copy-btn='true'\n                    type='button'\n                    className='btn btn-primary pull-left'\n                    onClick={this.copyLink}\n                >\n                    <FormattedMessage\n                        id='get_link.copy'\n                        defaultMessage='Copy Link'\n                    />\n                </button>\n            );\n        }\n\n        const linkText = (\n            <textarea\n                id='linkModalTextArea'\n                className='form-control no-resize min-height'\n                ref='textarea'\n                value={this.props.link}\n                onClick={this.copyLink}\n                readOnly={true}\n            />\n        );\n\n        let copyLinkConfirm = null;\n        if (this.state.copiedLink) {\n            copyLinkConfirm = (\n                <p className='alert alert-success alert--confirm'>\n                    <i\n                        className='fa fa-check'\n                        title={localizeMessage('generic_icons.success', 'Success Icon')}\n                    />\n                    <FormattedMessage\n                        id='get_link.clipboard'\n                        defaultMessage=' Link copied'\n                    />\n                </p>\n            );\n        }\n\n        return (\n            <Modal\n                show={this.props.show}\n                onHide={this.onHide}\n            >\n                <Modal.Header closeButton={true}>\n                    <h4 className='modal-title'>{this.props.title}</h4>\n                </Modal.Header>\n                <Modal.Body>\n                    {helpText}\n                    {linkText}\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        id='linkModalCloseButton'\n                        type='button'\n                        className='btn btn-default'\n                        onClick={this.onHide}\n                    >\n                        <FormattedMessage\n                            id='get_link.close'\n                            defaultMessage='Close'\n                        />\n                    </button>\n                    {copyLink}\n                    {copyLinkConfirm}\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ModalStore from 'stores/modal_store.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport GetLinkModal from 'components/get_link_modal.jsx';\n\nexport default class GetPostLinkModal extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * URL of current team\n         */\n        currentTeamUrl: PropTypes.string.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.handleToggle = this.handleToggle.bind(this);\n        this.hide = this.hide.bind(this);\n\n        this.state = {\n            show: false,\n            post: {},\n        };\n    }\n\n    componentDidMount() {\n        ModalStore.addModalListener(Constants.ActionTypes.TOGGLE_GET_POST_LINK_MODAL, this.handleToggle);\n    }\n\n    componentWillUnmount() {\n        ModalStore.removeModalListener(Constants.ActionTypes.TOGGLE_GET_POST_LINK_MODAL, this.handleToggle);\n    }\n\n    handleToggle(value, args) {\n        this.setState({\n            show: value,\n            post: args.post,\n        });\n    }\n\n    hide() {\n        this.setState({\n            show: false,\n        });\n    }\n\n    render() {\n        const postUrl = this.props.currentTeamUrl + '/pl/' + this.state.post.id;\n        return (\n            <GetLinkModal\n                show={this.state.show}\n                onHide={this.hide}\n                title={Utils.localizeMessage('get_post_link_modal.title', 'Copy Permalink')}\n                helpText={Utils.localizeMessage('get_post_link_modal.help', 'The link below allows authorized users to see your post.')}\n                link={postUrl}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {getSiteURL} from 'utils/url.jsx';\n\nimport GetPostLinkModal from './get_post_link_modal';\n\nfunction mapStateToProps(state) {\n    const currentTeam = getCurrentTeam(state) || {};\n    const currentTeamUrl = `${getSiteURL()}/${currentTeam.name}`;\n    return {\n        currentTeamUrl,\n    };\n}\n\nexport default connect(mapStateToProps)(GetPostLinkModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ModalStore from 'stores/modal_store.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport {getSiteURL} from 'utils/url.jsx';\nimport GetLinkModal from 'components/get_link_modal.jsx';\n\nexport default class GetTeamInviteLinkModal extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Current team object\n         */\n        currentTeam: PropTypes.object.isRequired,\n\n        /**\n         * Global config object\n         */\n        config: PropTypes.object.isRequired,\n    }\n\n    static defaultProps = {\n        currentTeam: {},\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false,\n        };\n    }\n\n    componentDidMount() {\n        ModalStore.addModalListener(Constants.ActionTypes.TOGGLE_GET_TEAM_INVITE_LINK_MODAL, this.handleToggle);\n    }\n\n    componentWillUnmount() {\n        ModalStore.removeModalListener(Constants.ActionTypes.TOGGLE_GET_TEAM_INVITE_LINK_MODAL, this.handleToggle);\n    }\n\n    handleToggle = (value) => {\n        this.setState({\n            show: value,\n        });\n    }\n\n    onHide = () => {\n        this.handleToggle(false);\n    }\n\n    render() {\n        const inviteUrl = getSiteURL() + '/signup_user_complete/?id=' + this.props.currentTeam.invite_id;\n\n        let helpText;\n        if (this.props.config.EnableUserCreation === 'true') {\n            helpText = Utils.localizeMessage('get_team_invite_link_modal.help', 'Send teammates the link below for them to sign-up to this team site. The Team Invite Link can be shared with multiple teammates as it does not change unless it\\'s regenerated in Team Settings by a Team Admin.');\n        } else {\n            helpText = Utils.localizeMessage('get_team_invite_link_modal.helpDisabled', 'User creation has been disabled for your team. Please ask your team administrator for details.');\n        }\n\n        return (\n            <GetLinkModal\n                show={this.state.show}\n                onHide={this.onHide}\n                title={Utils.localizeMessage('get_team_invite_link_modal.title', 'Team Invite Link')}\n                helpText={helpText}\n                link={inviteUrl}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {connect} from 'react-redux';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport GetTeamInviteLinkModal from './get_team_invite_link_modal.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        currentTeam: getCurrentTeam(state),\n        config: getConfig(state),\n    };\n}\n\nexport default connect(mapStateToProps)(GetTeamInviteLinkModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ModalStore from 'stores/modal_store.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport GetLinkModal from 'components/get_link_modal.jsx';\n\nexport default class GetPublicLinkModal extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Public link of the file\n         */\n        link: PropTypes.string,\n\n        actions: PropTypes.shape({\n\n            /**\n             * An action to get public link\n             */\n            getFilePublicLink: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        link: '',\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false,\n            fileId: '',\n        };\n    }\n\n    componentWillUnmount() {\n        ModalStore.removeModalListener(Constants.ActionTypes.TOGGLE_GET_PUBLIC_LINK_MODAL, this.handleToggle);\n    }\n\n    componentDidMount() {\n        ModalStore.addModalListener(Constants.ActionTypes.TOGGLE_GET_PUBLIC_LINK_MODAL, this.handleToggle);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.show && !prevState.show) {\n            this.props.actions.getFilePublicLink(this.state.fileId);\n        }\n    }\n\n    handleToggle = (value, args) => {\n        this.setState({\n            show: value,\n            fileId: args.fileId,\n        });\n    }\n\n    onHide = () => {\n        this.setState({\n            show: false,\n        });\n    }\n\n    render() {\n        return (\n            <GetLinkModal\n                show={this.state.show}\n                onHide={this.onHide}\n                title={Utils.localizeMessage('get_public_link_modal.title', 'Copy Public Link')}\n                helpText={Utils.localizeMessage('get_public_link_modal.help', 'The link below allows anyone to see this file without being registered on this server.')}\n                link={this.props.link}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getFilePublicLink} from 'mattermost-redux/actions/files';\nimport * as Selectors from 'mattermost-redux/selectors/entities/files';\n\nimport GetPublicLinkModal from './get_public_link_modal.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        link: Selectors.getFilePublicLink(state).link,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getFilePublicLink,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GetPublicLinkModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport ReactDOM from 'react-dom';\nimport {defineMessages, FormattedMessage, injectIntl, intlShape} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport {isEmail} from 'mattermost-redux/utils/helpers';\n\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport {inviteMembers} from 'actions/team_actions.jsx';\nimport ChannelStore from 'stores/channel_store.jsx';\nimport ModalStore from 'stores/modal_store.jsx';\nimport TeamStore from 'stores/team_store.jsx';\nimport UserStore from 'stores/user_store.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport ConfirmModal from 'components/confirm_modal.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nconst ActionTypes = Constants.ActionTypes;\n\nconst holders = defineMessages({\n    emailError: {\n        id: t('invite_member.emailError'),\n        defaultMessage: 'Please enter a valid email address',\n    },\n    firstname: {\n        id: t('invite_member.firstname'),\n        defaultMessage: 'First name',\n    },\n    lastname: {\n        id: t('invite_member.lastname'),\n        defaultMessage: 'Last name',\n    },\n    modalTitle: {\n        id: t('invite_member.modalTitle'),\n        defaultMessage: 'Discard Invitations?',\n    },\n    modalMessage: {\n        id: t('invite_member.modalMessage'),\n        defaultMessage: 'You have unsent invitations, are you sure you want to discard them?',\n    },\n    modalButton: {\n        id: t('invite_member.modalButton'),\n        defaultMessage: 'Yes, Discard',\n    },\n});\n\nclass InviteMemberModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const team = TeamStore.getCurrent();\n\n        this.state = {\n            show: false,\n            inviteIds: [0],\n            idCount: 0,\n            emailErrors: {},\n            firstNameErrors: {},\n            lastNameErrors: {},\n            showConfirmModal: false,\n            isSendingEmails: false,\n            teamType: team ? team.type : null,\n        };\n    }\n\n    teamChange = () => {\n        const team = TeamStore.getCurrent();\n        const teamType = team ? team.type : null;\n        this.setState({\n            teamType,\n        });\n    }\n\n    componentDidMount() {\n        ModalStore.addModalListener(ActionTypes.TOGGLE_INVITE_MEMBER_MODAL, this.handleToggle);\n        TeamStore.addChangeListener(this.teamChange);\n    }\n\n    componentWillUnmount() {\n        ModalStore.removeModalListener(ActionTypes.TOGGLE_INVITE_MEMBER_MODAL, this.handleToggle);\n        TeamStore.removeChangeListener(this.teamChange);\n    }\n\n    handleToggle = (value) => {\n        this.setState({\n            show: value,\n            serverError: null,\n        });\n    }\n\n    handleSubmit = () => {\n        if (!this.props.sendEmailNotifications) {\n            return;\n        }\n\n        var inviteIds = this.state.inviteIds;\n        var count = inviteIds.length;\n        var invites = [];\n        var emailErrors = this.state.emailErrors;\n        var firstNameErrors = this.state.firstNameErrors;\n        var lastNameErrors = this.state.lastNameErrors;\n        var valid = true;\n\n        for (var i = 0; i < count; i++) {\n            var invite = {};\n            var index = inviteIds[i];\n            invite.email = ReactDOM.findDOMNode(this.refs['email' + index]).value.trim();\n            invite.firstName = ReactDOM.findDOMNode(this.refs['first_name' + index]).value.trim();\n            invite.lastName = ReactDOM.findDOMNode(this.refs['last_name' + index]).value.trim();\n            if (invite.email !== '' || index === 0) {\n                if (!invite.email || !isEmail(invite.email)) {\n                    emailErrors[index] = this.props.intl.formatMessage(holders.emailError);\n                    valid = false;\n                } else {\n                    emailErrors[index] = '';\n                }\n                invites.push(invite);\n            }\n        }\n\n        this.setState({emailErrors, firstNameErrors, lastNameErrors});\n\n        if (!valid || invites.length === 0) {\n            return;\n        }\n\n        var data = {};\n        data.invites = invites;\n\n        this.setState({isSendingEmails: true});\n\n        inviteMembers(\n            data,\n            () => {\n                this.handleHide(false);\n                this.setState({isSendingEmails: false});\n            },\n            (err) => {\n                if (err.id === 'api.team.invite_members.already.app_error') {\n                    emailErrors[err.detailed_error] = err.message;\n                    this.setState({emailErrors});\n                } else {\n                    this.setState({serverError: err.message});\n                }\n\n                this.setState({isSendingEmails: false});\n            }\n        );\n    }\n\n    handleHide = (requireConfirm) => {\n        if (requireConfirm) {\n            var notEmpty = false;\n            for (var i = 0; i < this.state.inviteIds.length; i++) {\n                var index = this.state.inviteIds[i];\n                if (ReactDOM.findDOMNode(this.refs['email' + index]).value.trim() !== '') {\n                    notEmpty = true;\n                    break;\n                }\n            }\n\n            if (notEmpty) {\n                this.setState({\n                    showConfirmModal: true,\n                });\n\n                return;\n            }\n        }\n\n        this.clearFields();\n\n        this.setState({\n            show: false,\n            showConfirmModal: false,\n        });\n    }\n\n    addInviteFields = () => {\n        var count = this.state.idCount + 1;\n        var inviteIds = this.state.inviteIds;\n        inviteIds.push(count);\n        this.setState({inviteIds, idCount: count});\n    }\n\n    clearFields = () => {\n        var inviteIds = this.state.inviteIds;\n\n        for (var i = 0; i < inviteIds.length; i++) {\n            var index = inviteIds[i];\n            ReactDOM.findDOMNode(this.refs['email' + index]).value = '';\n            ReactDOM.findDOMNode(this.refs['first_name' + index]).value = '';\n            ReactDOM.findDOMNode(this.refs['last_name' + index]).value = '';\n        }\n\n        this.setState({\n            inviteIds: [0],\n            idCount: 0,\n            emailErrors: {},\n            firstNameErrors: {},\n            lastNameErrors: {},\n        });\n    }\n\n    removeInviteFields = (index) => {\n        var count = this.state.idCount;\n        var inviteIds = this.state.inviteIds;\n        var i = inviteIds.indexOf(index);\n        if (i > -1) {\n            inviteIds.splice(i, 1);\n        }\n        if (!inviteIds.length) {\n            inviteIds.push(++count);\n        }\n        this.setState({inviteIds, idCount: count});\n    }\n\n    showGetTeamInviteLinkModal = () => {\n        this.handleHide(false);\n\n        GlobalActions.showGetTeamInviteLinkModal();\n    }\n\n    handleKeyDown = (e) => {\n        if (utils.isKeyPressed(e, Constants.KeyCodes.ENTER)) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    }\n\n    hideConfirmModal = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    render() {\n        var currentUser = UserStore.getCurrentUser();\n        const {formatMessage} = this.props.intl;\n\n        if (currentUser != null && this.state.teamType != null) {\n            var inviteSections = [];\n            var inviteIds = this.state.inviteIds;\n            for (var i = 0; i < inviteIds.length; i++) {\n                var index = inviteIds[i];\n                var emailError = null;\n                if (this.state.emailErrors[index]) {\n                    emailError = <label className='control-label'>{this.state.emailErrors[index]}</label>;\n                }\n                var firstNameError = null;\n                if (this.state.firstNameErrors[index]) {\n                    firstNameError = <label className='control-label'>{this.state.firstNameErrors[index]}</label>;\n                }\n                var lastNameError = null;\n                if (this.state.lastNameErrors[index]) {\n                    lastNameError = <label className='control-label'>{this.state.lastNameErrors[index]}</label>;\n                }\n\n                var removeButton = null;\n                if (index) {\n                    removeButton = (\n                        <div>\n                            <button\n                                type='button'\n                                className='btn btn-link remove__member'\n                                onClick={this.removeInviteFields.bind(this, index)}\n                            >\n                                <span\n                                    className='fa fa-trash'\n                                    title={utils.localizeMessage('generic_icons.remove', 'Remove Icon')}\n                                />\n                            </button>\n                        </div>\n                    );\n                }\n                var emailClass = 'form-group invite';\n                if (emailError) {\n                    emailClass += ' has-error';\n                }\n\n                var nameFields = null;\n\n                var firstNameClass = 'form-group';\n                if (firstNameError) {\n                    firstNameClass += ' has-error';\n                }\n                var lastNameClass = 'form-group';\n                if (lastNameError) {\n                    lastNameClass += ' has-error';\n                }\n                nameFields = (\n                    <div className='row row--invite'>\n                        <div className='col-sm-6'>\n                            <div className={firstNameClass}>\n                                <input\n                                    onKeyDown={this.handleKeyDown}\n                                    type='text'\n                                    className='form-control'\n                                    ref={'first_name' + index}\n                                    placeholder={formatMessage(holders.firstname)}\n                                    maxLength='64'\n                                    disabled={!this.props.sendEmailNotifications || !this.props.enableUserCreation}\n                                    spellCheck='false'\n                                />\n                                {firstNameError}\n                            </div>\n                        </div>\n                        <div className='col-sm-6'>\n                            <div className={lastNameClass}>\n                                <input\n                                    onKeyDown={this.handleKeyDown}\n                                    type='text'\n                                    className='form-control'\n                                    ref={'last_name' + index}\n                                    placeholder={formatMessage(holders.lastname)}\n                                    maxLength='64'\n                                    disabled={!this.props.sendEmailNotifications || !this.props.enableUserCreation}\n                                    spellCheck='false'\n                                />\n                                {lastNameError}\n                            </div>\n                        </div>\n                    </div>\n                );\n\n                inviteSections[index] = (\n                    <div key={'key' + index}>\n                        {removeButton}\n                        <div className={emailClass}>\n                            <input\n                                onKeyUp={this.displayNameKeyUp}\n                                onKeyDown={this.handleKeyDown}\n                                type='text'\n                                ref={'email' + index}\n                                className='form-control'\n                                placeholder='email@domain.com'\n                                maxLength='64'\n                                disabled={!this.props.sendEmailNotifications || !this.props.enableUserCreation}\n                                spellCheck='false'\n                                autoFocus={true}\n                            />\n                            {emailError}\n                        </div>\n                        {nameFields}\n                    </div>\n                );\n            }\n\n            var serverError = null;\n            if (this.state.serverError) {\n                serverError = <div className='form-group has-error'><label className='control-label'>{this.state.serverError}</label></div>;\n            }\n\n            var content = null;\n            var sendButton = null;\n\n            var defaultChannelName = '';\n            if (ChannelStore.getByName(Constants.DEFAULT_CHANNEL)) {\n                defaultChannelName = ChannelStore.getByName(Constants.DEFAULT_CHANNEL).display_name;\n            }\n\n            if (this.props.sendEmailNotifications && this.props.enableUserCreation) {\n                content = (\n                    <div>\n                        {serverError}\n                        <button\n                            type='button'\n                            className='btn btn-default'\n                            onClick={this.addInviteFields}\n                        >\n                            <FormattedMessage\n                                id='invite_member.addAnother'\n                                defaultMessage='Add another'\n                            />\n                        </button>\n                        <br/>\n                        <br/>\n                        <span>\n                            <FormattedMarkdownMessage\n                                id='invite_member.autoJoin'\n                                defaultMessage='People invited automatically join the **{channel}** channel.'\n                                values={{\n                                    channel: defaultChannelName,\n                                }}\n                            />\n                        </span>\n                    </div>\n                );\n\n                var sendButtonLabel = (\n                    <FormattedMessage\n                        id='invite_member.send'\n                        defaultMessage='Send Invitation'\n                    />\n                );\n                if (this.state.isSendingEmails) {\n                    sendButtonLabel = (\n                        <span>\n                            <i\n                                className='fa fa-spinner fa-spin'\n                                title={utils.localizeMessage('generic_icons.loading', 'Loading Icon')}\n                            />\n                            <FormattedMessage\n                                id='invite_member.sending'\n                                defaultMessage=' Sending'\n                            />\n                        </span>\n                    );\n                } else if (this.state.inviteIds.length > 1) {\n                    sendButtonLabel = (\n                        <FormattedMessage\n                            id='invite_member.send2'\n                            defaultMessage='Send Invitations'\n                        />\n                    );\n                }\n\n                sendButton = (\n                    <button\n                        onClick={this.handleSubmit}\n                        type='button'\n                        className='btn btn-primary'\n                        disabled={this.state.isSendingEmails}\n                    >\n                        {sendButtonLabel}\n                    </button>\n                );\n            } else if (this.props.enableUserCreation) {\n                var teamInviteLink = null;\n                if (currentUser && this.state.teamType === 'O') {\n                    var link = (\n                        <button\n                            className='color--link style--none'\n                            onClick={this.showGetTeamInviteLinkModal}\n                        >\n                            <FormattedMessage\n                                id='invite_member.inviteLink'\n                                defaultMessage='Team Invite Link'\n                            />\n                        </button>\n                    );\n\n                    teamInviteLink = (\n                        <p>\n                            <FormattedMessage\n                                id='invite_member.teamInviteLink'\n                                defaultMessage='You can also invite people using the {link}.'\n                                values={{\n                                    link,\n                                }}\n                            />\n                        </p>\n                    );\n                }\n\n                content = (\n                    <div>\n                        <p>\n                            <FormattedMessage\n                                id='invite_member.content'\n                                defaultMessage='Email is currently disabled for your team, and email invitations cannot be sent. Contact your System Administrator to enable email and email invitations.'\n                            />\n                        </p>\n                        {teamInviteLink}\n                    </div>\n                );\n            } else {\n                content = (\n                    <div>\n                        <p>\n                            <FormattedMessage\n                                id='invite_member.disabled'\n                                defaultMessage='User creation has been disabled for your team. Please ask your Team Administrator for details.'\n                            />\n                        </p>\n                    </div>\n                );\n            }\n\n            return (\n                <div>\n                    <Modal\n                        dialogClassName='modal-invite-member'\n                        show={this.state.show}\n                        onHide={this.handleHide.bind(this, true)}\n                        enforceFocus={!this.state.showConfirmModal}\n                        backdrop={this.state.isSendingEmails ? 'static' : true}\n                    >\n                        <Modal.Header closeButton={!this.state.isSendingEmails}>\n                            <Modal.Title>\n                                <FormattedMessage\n                                    id='invite_member.newMember'\n                                    defaultMessage='Send Email Invite'\n                                />\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body ref='modalBody'>\n                            <form role='form'>\n                                {inviteSections}\n                            </form>\n                            {content}\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <button\n                                type='button'\n                                className='btn btn-default'\n                                onClick={this.handleHide.bind(this, true)}\n                                disabled={this.state.isSendingEmails}\n                            >\n                                <FormattedMessage\n                                    id='invite_member.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </button>\n                            {sendButton}\n                        </Modal.Footer>\n                    </Modal>\n                    <ConfirmModal\n                        title={formatMessage(holders.modalTitle)}\n                        message={formatMessage(holders.modalMessage)}\n                        confirmButtonText={formatMessage(holders.modalButton)}\n                        show={this.state.showConfirmModal}\n                        onConfirm={this.handleHide.bind(this, false)}\n                        onCancel={this.hideConfirmModal}\n                    />\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nInviteMemberModal.propTypes = {\n    intl: intlShape.isRequired,\n    sendEmailNotifications: PropTypes.bool.isRequired,\n    enableUserCreation: PropTypes.bool.isRequired,\n};\n\nexport default injectIntl(InviteMemberModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport InviteMemberModal from './invite_member_modal.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    const sendEmailNotifications = config.SendEmailNotifications === 'true';\n    const enableUserCreation = config.EnableUserCreation === 'true';\n\n    return {\n        sendEmailNotifications,\n        enableUserCreation,\n    };\n}\n\nexport default connect(mapStateToProps)(InviteMemberModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {getCurrentTeamId, getTeamByName} from 'mattermost-redux/selectors/entities/teams';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\n\nimport localStorageStore from 'stores/local_storage_store';\n\n// getLastViewedChannelName combines data from the Redux store and localStorage to return the\n// previously selected channel name, returning the default channel if none exists.\n//\n// See LocalStorageStore for context.\nexport const getLastViewedChannelName = (state) => {\n    const userId = getCurrentUserId(state);\n    const teamId = getCurrentTeamId(state);\n\n    return localStorageStore.getPreviousChannelName(userId, teamId);\n};\n\nexport const getPenultimateViewedChannelName = (state) => {\n    const userId = getCurrentUserId(state);\n    const teamId = getCurrentTeamId(state);\n\n    return localStorageStore.getPenultimateChannelName(userId, teamId);\n};\n\n// getLastViewedChannelNameByTeamName combines data from the Redux store and localStorage to return\n// the url to the previously selected channel, returning the path to the default channel if none\n// exists.\n//\n// See LocalStorageStore for context.\nexport const getLastViewedChannelNameByTeamName = (state, teamName) => {\n    const userId = getCurrentUserId(state);\n    const team = getTeamByName(state, teamName);\n    const teamId = team && team.id;\n\n    return localStorageStore.getPreviousChannelName(userId, teamId);\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {batchActions} from 'redux-batched-actions';\nimport {PreferenceTypes} from 'mattermost-redux/action_types';\nimport {createDirectChannel, leaveChannel as leaveChannelRedux, unfavoriteChannel} from 'mattermost-redux/actions/channels';\nimport {savePreferences} from 'mattermost-redux/actions/preferences';\nimport {getChannel, getChannelByName} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentRelativeTeamUrl} from 'mattermost-redux/selectors/entities/teams';\nimport {getCurrentUserId, getUserByUsername} from 'mattermost-redux/selectors/entities/users';\nimport {getMyPreferences} from 'mattermost-redux/selectors/entities/preferences';\nimport {isFavoriteChannel} from 'mattermost-redux/utils/channel_utils';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport {getLastViewedChannelName} from 'selectors/local_storage';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {ActionTypes, Preferences} from 'utils/constants.jsx';\nimport {getDirectChannelName, isMobile} from 'utils/utils.jsx';\n\nexport function checkAndSetMobileView() {\n    return (dispatch) => {\n        dispatch({\n            type: ActionTypes.UPDATE_MOBILE_VIEW,\n            data: isMobile(),\n        });\n    };\n}\n\nexport function goToLastViewedChannel() {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const lastViewedChannel = getChannelByName(state, getLastViewedChannelName(state));\n        return dispatch(switchToChannel(lastViewedChannel));\n    };\n}\n\nexport function switchToChannelById(channelId) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const channel = getChannel(state, channelId);\n        return dispatch(switchToChannel(channel));\n    };\n}\n\nexport function switchToChannel(channel) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const teamUrl = getCurrentRelativeTeamUrl(state);\n\n        if (channel.fake || channel.userId) {\n            const username = channel.userId ? channel.name : channel.display_name;\n            const user = getUserByUsername(state, username);\n            if (!user) {\n                return {error: true};\n            }\n\n            const direct = await dispatch(openDirectChannelToUserId(user.id));\n            if (direct.error) {\n                return {error: true};\n            }\n            browserHistory.push(`${teamUrl}/messages/@${channel.name}`);\n        } else {\n            browserHistory.push(`${teamUrl}/channels/${channel.name}`);\n        }\n\n        return {data: true};\n    };\n}\n\nexport function openDirectChannelToUserId(userId) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const currentUserId = getCurrentUserId(state);\n        const channelName = getDirectChannelName(currentUserId, userId);\n        const channel = getChannelByName(state, channelName);\n\n        if (!channel) {\n            return dispatch(createDirectChannel(currentUserId, userId));\n        }\n\n        trackEvent('api', 'api_channels_join_direct');\n        const now = Date.now();\n        const prefDirect = {\n            category: Preferences.CATEGORY_DIRECT_CHANNEL_SHOW,\n            name: userId,\n            value: 'true',\n        };\n        const prefOpenTime = {\n            category: Preferences.CATEGORY_CHANNEL_OPEN_TIME,\n            name: channel.id,\n            value: now.toString(),\n        };\n        const actions = [{\n            type: PreferenceTypes.RECEIVED_PREFERENCES,\n            data: [prefDirect],\n        }, {\n            type: PreferenceTypes.RECEIVED_PREFERENCES,\n            data: [prefOpenTime],\n        }];\n        dispatch(batchActions(actions));\n\n        dispatch(savePreferences(currentUserId, [\n            {user_id: currentUserId, ...prefDirect},\n            {user_id: currentUserId, ...prefOpenTime},\n        ]));\n\n        return {data: channel};\n    };\n}\n\nexport function leaveChannel(channelId) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const myPreferences = getMyPreferences(state);\n\n        if (isFavoriteChannel(myPreferences, channelId)) {\n            dispatch(unfavoriteChannel(channelId));\n        }\n\n        const {error} = await dispatch(leaveChannelRedux(channelId));\n        if (error) {\n            return {error};\n        }\n\n        return {\n            data: true,\n        };\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage, injectIntl, intlShape} from 'react-intl';\n\nimport ModalStore from 'stores/modal_store.jsx';\nimport Constants from 'utils/constants.jsx';\nimport ConfirmModal from 'components/confirm_modal.jsx';\n\nclass LeavePrivateChannelModal extends React.Component {\n    static propTypes = {\n        actions: PropTypes.shape({\n            leaveChannel: PropTypes.func.isRequired,\n        }).isRequired,\n        intl: intlShape.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            show: false,\n            channel: null,\n        };\n    }\n\n    componentDidMount() {\n        ModalStore.addModalListener(Constants.ActionTypes.TOGGLE_LEAVE_PRIVATE_CHANNEL_MODAL, this.handleToggle);\n    }\n\n    componentWillUnmount() {\n        ModalStore.removeModalListener(Constants.ActionTypes.TOGGLE_LEAVE_PRIVATE_CHANNEL_MODAL, this.handleToggle);\n    }\n\n    handleKeyPress = (e) => {\n        if (e.key === 'Enter' && this.state.show) {\n            this.handleSubmit();\n        }\n    };\n\n    handleSubmit = () => {\n        const {actions} = this.props;\n        const {channel} = this.state;\n\n        if (channel) {\n            const channelId = channel.id;\n            actions.leaveChannel(channelId).then((result) => {\n                if (result.data) {\n                    this.handleHide();\n                }\n            });\n        }\n    };\n\n    handleToggle = (value) => {\n        this.setState({\n            channel: value,\n            show: value !== null,\n        });\n    };\n\n    handleHide = () => {\n        this.setState({\n            show: false,\n            channel: null,\n        });\n    };\n\n    render() {\n        let title = '';\n        let message = '';\n        if (this.state.channel) {\n            title = (\n                <FormattedMessage\n                    id='leave_private_channel_modal.title'\n                    defaultMessage='Leave Private Channel {channel}'\n                    values={{\n                        channel: <b>{this.state.channel.display_name}</b>,\n                    }}\n                />\n            );\n\n            message = (\n                <FormattedMessage\n                    id='leave_private_channel_modal.message'\n                    defaultMessage='Are you sure you wish to leave the private channel {channel}? You must be re-invited in order to re-join this channel in the future.'\n                    values={{\n                        channel: <b>{this.state.channel.display_name}</b>,\n                    }}\n                />\n            );\n        }\n\n        const buttonClass = 'btn btn-danger';\n        const button = (\n            <FormattedMessage\n                id='leave_private_channel_modal.leave'\n                defaultMessage='Yes, leave channel'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.show}\n                title={title}\n                message={message}\n                confirmButtonClass={buttonClass}\n                confirmButtonText={button}\n                onConfirm={this.handleSubmit}\n                onCancel={this.handleHide}\n            />\n        );\n    }\n}\n\nexport default injectIntl(LeavePrivateChannelModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {leaveChannel} from 'actions/views/channel';\n\nimport LeavePrivateChannelModal from './leave_private_channel_modal.jsx';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            leaveChannel,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(LeavePrivateChannelModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport BrowserStore from 'stores/browser_store.jsx';\n\nexport default class RemovedFromChannelModal extends React.Component {\n    static propTypes = {\n        currentUserId: PropTypes.string.isRequired,\n        actions: PropTypes.shape({\n            goToLastViewedChannel: PropTypes.func.isRequired,\n        }),\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n\n        this.state = {\n            channelName: '',\n            remover: '',\n        };\n    }\n\n    handleShow() {\n        var newState = {};\n        if (BrowserStore.getItem('channel-removed-state')) {\n            newState = BrowserStore.getItem('channel-removed-state');\n            BrowserStore.removeItem('channel-removed-state');\n        }\n\n        setTimeout(this.props.actions.goToLastViewedChannel, 1);\n\n        this.setState(newState);\n    }\n\n    handleClose() {\n        this.setState({channelName: '', remover: ''});\n    }\n\n    componentDidMount() {\n        $(ReactDOM.findDOMNode(this)).on('show.bs.modal', this.handleShow);\n        $(ReactDOM.findDOMNode(this)).on('hidden.bs.modal', this.handleClose);\n    }\n\n    componentWillUnmount() {\n        $(ReactDOM.findDOMNode(this)).off('show.bs.modal', this.handleShow);\n        $(ReactDOM.findDOMNode(this)).off('hidden.bs.modal', this.handleClose);\n    }\n\n    render() {\n        var channelName = (\n            <FormattedMessage\n                id='removed_channel.channelName'\n                defaultMessage='the channel'\n            />\n        );\n        if (this.state.channelName) {\n            channelName = this.state.channelName;\n        }\n\n        var remover = (\n            <FormattedMessage\n                id='removed_channel.someone'\n                defaultMessage='Someone'\n            />\n        );\n        if (this.state.remover) {\n            remover = this.state.remover;\n        }\n\n        if (this.props.currentUserId !== '') {\n            return (\n                <div\n                    className='modal fade'\n                    ref='modal'\n                    id='removed_from_channel'\n                    tabIndex='-1'\n                    role='dialog'\n                    aria-hidden='true'\n                >\n                    <div className='modal-dialog'>\n                        <div className='modal-content'>\n                            <div className='modal-header'>\n                                <button\n                                    type='button'\n                                    className='close'\n                                    data-dismiss='modal'\n                                    aria-label='Close'\n                                >\n                                    <span aria-hidden='true'>\n                                        {'×'}\n                                    </span>\n                                </button>\n                                <h4 className='modal-title'>\n                                    <FormattedMessage\n                                        id='removed_channel.from'\n                                        defaultMessage='Removed from '\n                                    />\n                                    <span className='name'>{channelName}</span></h4>\n                            </div>\n                            <div className='modal-body'>\n                                <p>\n                                    <FormattedMessage\n                                        id='removed_channel.remover'\n                                        defaultMessage='{remover} removed you from {channel}'\n                                        values={{\n                                            remover,\n                                            channel: (channelName),\n                                        }}\n                                    />\n                                </p>\n                            </div>\n                            <div className='modal-footer'>\n                                <button\n                                    type='button'\n                                    className='btn btn-primary'\n                                    data-dismiss='modal'\n                                >\n                                    <FormattedMessage\n                                        id='removed_channel.okay'\n                                        defaultMessage='Okay'\n                                    />\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return <div/>;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\n\nimport {goToLastViewedChannel} from 'actions/views/channel';\n\nimport RemovedFromChannelModal from './removed_from_channel_modal.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        currentUserId: getCurrentUserId(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            goToLastViewedChannel,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemovedFromChannelModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Preferences} from 'mattermost-redux/constants';\n\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport {toTitleCase} from 'utils/utils.jsx';\nimport {UserStatuses} from 'utils/constants.jsx';\nimport {t} from 'utils/i18n';\n\nexport default class ResetStatusModal extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * The user's preference for whether their status is automatically reset\n         */\n        autoResetPref: PropTypes.string,\n\n        /*\n         * Props value is used to update currentUserStatus\n         */\n        currentUserStatus: PropTypes.string,\n\n        /*\n         * Props value is used to reset status from status_dropdown\n         */\n        newStatus: PropTypes.string,\n\n        /**\n         * Function called when modal is dismissed\n         */\n        onHide: PropTypes.func,\n        actions: PropTypes.shape({\n\n            /*\n             * Function to get and then reset the user's status if needed\n             */\n            autoResetStatus: PropTypes.func.isRequired,\n\n            /*\n             * Function to set the status for a user\n             */\n            setStatus: PropTypes.func.isRequired,\n\n            /*\n             * Function to save user preferences\n             */\n            savePreferences: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            show: false,\n            currentUserStatus: {},\n            newStatus: props.newStatus || 'online',\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.autoResetStatus().then(\n            (status) => {\n                const statusIsManual = status.manual;\n                const autoResetPrefNotSet = this.props.autoResetPref === '';\n\n                this.setState({\n                    currentUserStatus: status, // Set in state until status refactor where we store 'manual' field in redux\n                    show: Boolean(statusIsManual && autoResetPrefNotSet),\n                });\n            }\n        );\n    }\n\n    hideModal = () => {\n        this.setState({show: false});\n    };\n\n    onConfirm = (checked) => {\n        this.hideModal();\n\n        const newStatus = {...this.state.currentUserStatus};\n        newStatus.status = this.state.newStatus;\n        this.props.actions.setStatus(newStatus);\n\n        if (checked) {\n            const pref = {category: Preferences.CATEGORY_AUTO_RESET_MANUAL_STATUS, user_id: newStatus.user_id, name: newStatus.user_id, value: 'true'};\n            this.props.actions.savePreferences(pref.user_id, [pref]);\n        }\n    };\n\n    onCancel = (checked) => {\n        this.hideModal();\n\n        if (checked) {\n            const status = {...this.state.currentUserStatus};\n            const pref = {category: Preferences.CATEGORY_AUTO_RESET_MANUAL_STATUS, user_id: status.user_id, name: status.user_id, value: 'false'};\n            this.props.actions.savePreferences(pref.user_id, [pref]);\n        }\n    };\n\n    renderModalMessage = () => {\n        if (this.props.currentUserStatus === UserStatuses.OUT_OF_OFFICE) {\n            return (\n                <FormattedMessage\n                    id={`modal.manual_status.auto_responder.message_${this.state.newStatus}`}\n                    defaultMessage='Would you like to switch your status to \"{status}\" and disable Automatic Replies?'\n                    values={{\n                        status: toTitleCase(this.state.newStatus),\n                    }}\n                />\n            );\n        }\n\n        return (\n            <FormattedMessage\n                id={`modal.manual_status.message_${this.state.newStatus}`}\n                defaultMessage='Would you like to switch your status to \"{status}\"?'\n                values={{\n                    status: toTitleCase(this.state.newStatus),\n                }}\n            />\n        );\n    };\n\n    render() {\n        const userStatus = this.state.currentUserStatus.status || '';\n        const userStatusId = 'modal.manual_status.title_' + userStatus;\n        const manualStatusTitle = (\n            <FormattedMessage\n                id={userStatusId}\n                defaultMessage='Your status is set to \"{status}\"'\n                values={{\n                    status: toTitleCase(userStatus),\n                }}\n            />\n        );\n\n        const manualStatusMessage = this.renderModalMessage();\n\n        const manualStatusButton = (\n            <FormattedMessage\n                id={`modal.manual_status.button_${this.state.newStatus}`}\n                defaultMessage='Yes, set my status to \"{status}\"'\n                values={{\n                    status: toTitleCase(this.state.newStatus),\n                }}\n            />\n        );\n        const manualStatusId = 'modal.manual_status.cancel_' + userStatus;\n        const manualStatusCancel = (\n            <FormattedMessage\n                id={manualStatusId}\n                defaultMessage='No, keep it as \"{status}\"'\n                values={{\n                    status: toTitleCase(userStatus),\n                }}\n            />\n        );\n\n        const manualStatusCheckbox = (\n            <FormattedMessage\n                id='modal.manual_status.ask'\n                defaultMessage='Do not ask me again'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.show}\n                title={manualStatusTitle}\n                message={manualStatusMessage}\n                confirmButtonText={manualStatusButton}\n                onConfirm={this.onConfirm}\n                cancelButtonText={manualStatusCancel}\n                onCancel={this.onCancel}\n                onExited={this.props.onHide}\n                showCheckbox={true}\n                checkboxText={manualStatusCheckbox}\n            />\n        );\n    }\n}\n\nt('modal.manual_status.auto_responder.message_');\nt('modal.manual_status.auto_responder.message_away');\nt('modal.manual_status.auto_responder.message_dnd');\nt('modal.manual_status.auto_responder.message_offline');\nt('modal.manual_status.auto_responder.message_online');\nt('modal.manual_status.button_');\nt('modal.manual_status.button_away');\nt('modal.manual_status.button_dnd');\nt('modal.manual_status.button_offline');\nt('modal.manual_status.button_online');\nt('modal.manual_status.cancel_');\nt('modal.manual_status.cancel_away');\nt('modal.manual_status.cancel_dnd');\nt('modal.manual_status.cancel_offline');\nt('modal.manual_status.cancel_ooo');\nt('modal.manual_status.message_');\nt('modal.manual_status.message_away');\nt('modal.manual_status.message_dnd');\nt('modal.manual_status.message_offline');\nt('modal.manual_status.message_online');\nt('modal.manual_status.title_');\nt('modal.manual_status.title_away');\nt('modal.manual_status.title_dnd');\nt('modal.manual_status.title_offline');\nt('modal.manual_status.title_ooo');\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {savePreferences} from 'mattermost-redux/actions/preferences';\nimport {setStatus} from 'mattermost-redux/actions/users';\nimport {Preferences} from 'mattermost-redux/constants';\nimport {get} from 'mattermost-redux/selectors/entities/preferences';\nimport {getStatusForUserId} from 'mattermost-redux/selectors/entities/users';\n\nimport {autoResetStatus} from 'actions/user_actions.jsx';\n\nimport ResetStatusModal from './reset_status_modal.jsx';\n\nfunction mapStateToProps(state) {\n    const {currentUserId} = state.entities.users;\n    return {\n        autoResetPref: get(state, Preferences.CATEGORY_AUTO_RESET_MANUAL_STATUS, currentUserId, ''),\n        currentUserStatus: getStatusForUserId(state, currentUserId),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            autoResetStatus,\n            setStatus,\n            savePreferences,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetStatusModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {defineMessages, injectIntl, intlShape} from 'react-intl';\n\nimport ModalStore from 'stores/modal_store.jsx';\nimport Constants from 'utils/constants.jsx';\nimport {t} from 'utils/i18n';\n\nconst allShortcuts = defineMessages({\n    mainHeader: {\n        default: {\n            id: t('shortcuts.header'),\n            defaultMessage: 'Keyboard Shortcuts\\tCtrl|/',\n        },\n        mac: {\n            id: t('shortcuts.header.mac'),\n            defaultMessage: 'Keyboard Shortcuts\\t⌘|/',\n        },\n    },\n    navHeader: {\n        id: t('shortcuts.nav.header'),\n        defaultMessage: 'Navigation',\n    },\n    navPrev: {\n        default: {\n            id: t('shortcuts.nav.prev'),\n            defaultMessage: 'Previous channel:\\tAlt|Up',\n        },\n        mac: {\n            id: t('shortcuts.nav.prev.mac'),\n            defaultMessage: 'Previous channel:\\t⌥|Up',\n        },\n    },\n    navNext: {\n        default: {\n            id: t('shortcuts.nav.next'),\n            defaultMessage: 'Next channel:\\tAlt|Down',\n        },\n        mac: {\n            id: t('shortcuts.nav.next.mac'),\n            defaultMessage: 'Next channel:\\t⌥|Down',\n        },\n    },\n    navUnreadPrev: {\n        default: {\n            id: t('shortcuts.nav.unread_prev'),\n            defaultMessage: 'Previous unread channel:\\tAlt|Shift|Up',\n        },\n        mac: {\n            id: t('shortcuts.nav.unread_prev.mac'),\n            defaultMessage: 'Previous unread channel:\\t⌥|Shift|Up',\n        },\n    },\n    navUnreadNext: {\n        default: {\n            id: t('shortcuts.nav.unread_next'),\n            defaultMessage: 'Next unread channel:\\tAlt|Shift|Down',\n        },\n        mac: {\n            id: t('shortcuts.nav.unread_next.mac'),\n            defaultMessage: 'Next unread channel:\\t⌥|Shift|Down',\n        },\n    },\n    navSwitcher: {\n        default: {\n            id: t('shortcuts.nav.switcher'),\n            defaultMessage: 'Quick channel switcher:\\tCtrl|K',\n        },\n        mac: {\n            id: t('shortcuts.nav.switcher.mac'),\n            defaultMessage: 'Quick channel switcher:\\t⌘|K',\n        },\n    },\n    navDMMenu: {\n        default: {\n            id: t('shortcuts.nav.direct_messages_menu'),\n            defaultMessage: 'Direct messages menu:\\tCtrl|Shift|K',\n        },\n        mac: {\n            id: t('shortcuts.nav.direct_messages_menu.mac'),\n            defaultMessage: 'Direct messages menu:\\t⌘|Shift|K',\n        },\n    },\n    navSettings: {\n        default: {\n            id: t('shortcuts.nav.settings'),\n            defaultMessage: 'Account settings:\\tCtrl|Shift|A',\n        },\n        mac: {\n            id: t('shortcuts.nav.settings.mac'),\n            defaultMessage: 'Account settings:\\t⌘|Shift|A',\n        },\n    },\n    navMentions: {\n        default: {\n            id: t('shortcuts.nav.recent_mentions'),\n            defaultMessage: 'Recent mentions:\\tCtrl|Shift|M',\n        },\n        mac: {\n            id: t('shortcuts.nav.recent_mentions.mac'),\n            defaultMessage: 'Recent mentions:\\t⌘|Shift|M',\n        },\n    },\n    navFocusCenter: {\n        default: {\n            id: t('shortcuts.nav.focus_center'),\n            defaultMessage: 'Set focus to input field:\\tCtrl|Shift|L',\n        },\n        mac: {\n            id: t('shortcuts.nav.focus_center.mac'),\n            defaultMessage: 'Set focus to input field:\\t⌘|Shift|L',\n        },\n    },\n    msgHeader: {\n        id: t('shortcuts.msgs.header'),\n        defaultMessage: 'Messages',\n    },\n    msgInputHeader: {\n        id: t('shortcuts.msgs.input.header'),\n        defaultMessage: 'Works inside an empty input field',\n    },\n    msgEdit: {\n        id: t('shortcuts.msgs.edit'),\n        defaultMessage: 'Edit last message in channel:\\tUp',\n    },\n    msgReply: {\n        id: t('shortcuts.msgs.reply'),\n        defaultMessage: 'Reply to last message in channel:\\tShift|Up',\n    },\n    msgReprintPrev: {\n        default: {\n            id: t('shortcuts.msgs.reprint_prev'),\n            defaultMessage: 'Reprint previous message:\\tCtrl|Up',\n        },\n        mac: {\n            id: t('shortcuts.msgs.reprint_prev.mac'),\n            defaultMessage: 'Reprint previous message:\\t⌘|Up',\n        },\n    },\n    msgReprintNext: {\n        default: {\n            id: t('shortcuts.msgs.reprint_next'),\n            defaultMessage: 'Reprint next message:\\tCtrl|Down',\n        },\n        mac: {\n            id: t('shortcuts.msgs.reprint_next.mac'),\n            defaultMessage: 'Reprint next message:\\t⌘|Down',\n        },\n    },\n    msgCompHeader: {\n        id: t('shortcuts.msgs.comp.header'),\n        defaultMessage: 'Autocomplete',\n    },\n    msgCompUsername: {\n        id: t('shortcuts.msgs.comp.username'),\n        defaultMessage: 'Username:\\t@|[a-z]|Tab',\n    },\n    msgCompChannel: {\n        id: t('shortcuts.msgs.comp.channel'),\n        defaultMessage: 'Channel:\\t~|[a-z]|Tab',\n    },\n    msgCompEmoji: {\n        id: t('shortcuts.msgs.comp.emoji'),\n        defaultMessage: 'Emoji:\\t:|[a-z]|Tab',\n    },\n    filesHeader: {\n        id: t('shortcuts.files.header'),\n        defaultMessage: 'Files',\n    },\n    filesUpload: {\n        default: {\n            id: t('shortcuts.files.upload'),\n            defaultMessage: 'Upload files:\\tCtrl|U',\n        },\n        mac: {\n            id: t('shortcuts.files.upload.mac'),\n            defaultMessage: 'Upload files:\\t⌘|U',\n        },\n    },\n    browserHeader: {\n        id: t('shortcuts.browser.header'),\n        defaultMessage: 'Built-in Browser Commands',\n    },\n    browserChannelPrev: {\n        default: {\n            id: t('shortcuts.browser.channel_prev'),\n            defaultMessage: 'Back in history:\\tAlt|Left',\n        },\n        mac: {\n            id: t('shortcuts.browser.channel_prev.mac'),\n            defaultMessage: 'Back in history:\\t⌘|[',\n        },\n    },\n    browserChannelNext: {\n        default: {\n            id: t('shortcuts.browser.channel_next'),\n            defaultMessage: 'Forward in history:\\tAlt|Right',\n        },\n        mac: {\n            id: t('shortcuts.browser.channel_next.mac'),\n            defaultMessage: 'Forward in history:\\t⌘|]',\n        },\n    },\n    browserFontIncrease: {\n        default: {\n            id: t('shortcuts.browser.font_increase'),\n            defaultMessage: 'Zoom in:\\tCtrl|+',\n        },\n        mac: {\n            id: t('shortcuts.browser.font_increase.mac'),\n            defaultMessage: 'Zoom in:\\t⌘|+',\n        },\n    },\n    browserFontDecrease: {\n        default: {\n            id: t('shortcuts.browser.font_decrease'),\n            defaultMessage: 'Zoom out:\\tCtrl|-',\n        },\n        mac: {\n            id: t('shortcuts.browser.font_decrease.mac'),\n            defaultMessage: 'Zoom out:\\t⌘|-',\n        },\n    },\n    browserInputHeader: {\n        id: t('shortcuts.browser.input.header'),\n        defaultMessage: 'Works inside an input field',\n    },\n    browserHighlightPrev: {\n        id: t('shortcuts.browser.highlight_prev'),\n        defaultMessage: 'Highlight text to the previous line:\\tShift|Up',\n    },\n    browserHighlightNext: {\n        id: t('shortcuts.browser.highlight_next'),\n        defaultMessage: 'Highlight text to the next line:\\tShift|Down',\n    },\n    browserNewline: {\n        id: t('shortcuts.browser.newline'),\n        defaultMessage: 'Create a new line:\\tShift|Enter',\n    },\n    info: {\n        id: t('shortcuts.info'),\n        defaultMessage: 'Begin a message with / for a list of all the commands at your disposal.',\n    },\n});\n\nclass ShortcutsModal extends React.PureComponent {\n    static propTypes = {\n        intl: intlShape.isRequired,\n        isMac: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            show: false,\n        };\n    }\n\n    componentDidMount() {\n        ModalStore.addModalListener(Constants.ActionTypes.TOGGLE_SHORTCUTS_MODAL, this.handleToggle);\n    }\n\n    componentWillUnmount() {\n        ModalStore.removeModalListener(Constants.ActionTypes.TOGGLE_SHORTCUTS_MODAL, this.handleToggle);\n    }\n\n    handleToggle = () => {\n        //toggles the state of shortcut dialog\n        this.setState({\n            show: !this.state.show,\n        });\n    }\n\n    handleHide = () => {\n        this.setState({show: false});\n    }\n\n    getShortcuts() {\n        const {isMac} = this.props;\n        const shortcuts = {};\n        Object.keys(allShortcuts).forEach((s) => {\n            if (isMac && allShortcuts[s].mac) {\n                shortcuts[s] = allShortcuts[s].mac;\n            } else if (!isMac && allShortcuts[s].default) {\n                shortcuts[s] = allShortcuts[s].default;\n            } else {\n                shortcuts[s] = allShortcuts[s];\n            }\n        });\n\n        return shortcuts;\n    }\n\n    render() {\n        const shortcuts = this.getShortcuts();\n        const {formatMessage} = this.props.intl;\n\n        return (\n            <Modal\n                dialogClassName='shortcuts-modal'\n                show={this.state.show}\n                onHide={this.handleHide}\n                onExited={this.handleHide}\n            >\n                <div className='shortcuts-content'>\n                    <Modal.Header closeButton={true}>\n                        <Modal.Title>\n                            <strong>{renderShortcut(formatMessage(shortcuts.mainHeader))}</strong>\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body ref='modalBody'>\n                        <div className='row'>\n                            <div className='col-sm-4'>\n                                <div className='section'>\n                                    <div>\n                                        <h4 className='section-title'><strong>{formatMessage(shortcuts.navHeader)}</strong></h4>\n                                        {renderShortcut(formatMessage(shortcuts.navPrev))}\n                                        {renderShortcut(formatMessage(shortcuts.navNext))}\n                                        {renderShortcut(formatMessage(shortcuts.navUnreadPrev))}\n                                        {renderShortcut(formatMessage(shortcuts.navUnreadNext))}\n                                        {renderShortcut(formatMessage(shortcuts.navSwitcher))}\n                                        {renderShortcut(formatMessage(shortcuts.navDMMenu))}\n                                        {renderShortcut(formatMessage(shortcuts.navSettings))}\n                                        {renderShortcut(formatMessage(shortcuts.navMentions))}\n                                        {renderShortcut(formatMessage(shortcuts.navFocusCenter))}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className='col-sm-4'>\n                                <div className='section'>\n                                    <div>\n                                        <h4 className='section-title'><strong>{formatMessage(shortcuts.msgHeader)}</strong></h4>\n                                        <span><strong>{formatMessage(shortcuts.msgInputHeader)}</strong></span>\n                                        <div className='subsection'>\n                                            {renderShortcut(formatMessage(shortcuts.msgEdit))}\n                                            {renderShortcut(formatMessage(shortcuts.msgReply))}\n                                            {renderShortcut(formatMessage(shortcuts.msgReprintPrev))}\n                                            {renderShortcut(formatMessage(shortcuts.msgReprintNext))}\n                                        </div>\n                                        <span><strong>{formatMessage(shortcuts.msgCompHeader)}</strong></span>\n                                        <div className='subsection'>\n                                            {renderShortcut(formatMessage(shortcuts.msgCompUsername))}\n                                            {renderShortcut(formatMessage(shortcuts.msgCompChannel))}\n                                            {renderShortcut(formatMessage(shortcuts.msgCompEmoji))}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className='col-sm-4'>\n                                <div className='section'>\n                                    <div>\n                                        <h4 className='section-title'><strong>{formatMessage(shortcuts.filesHeader)}</strong></h4>\n                                        {renderShortcut(formatMessage(shortcuts.filesUpload))}\n                                    </div>\n                                    <div className='section--lower'>\n                                        <h4 className='section-title'><strong>{formatMessage(shortcuts.browserHeader)}</strong></h4>\n                                        {renderShortcut(formatMessage(shortcuts.browserChannelPrev))}\n                                        {renderShortcut(formatMessage(shortcuts.browserChannelNext))}\n                                        {renderShortcut(formatMessage(shortcuts.browserFontIncrease))}\n                                        {renderShortcut(formatMessage(shortcuts.browserFontDecrease))}\n                                        <span><strong>{formatMessage(shortcuts.browserInputHeader)}</strong></span>\n                                        <div className='subsection'>\n                                            {renderShortcut(formatMessage(shortcuts.browserHighlightPrev))}\n                                            {renderShortcut(formatMessage(shortcuts.browserHighlightNext))}\n                                            {renderShortcut(formatMessage(shortcuts.browserNewline))}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='info__label'>{formatMessage(shortcuts.info)}</div>\n                    </Modal.Body>\n                </div>\n            </Modal>\n        );\n    }\n}\n\nfunction renderShortcut(text) {\n    if (!text) {\n        return null;\n    }\n\n    const shortcut = text.split('\\t');\n    const description = <span>{shortcut[0]}</span>;\n\n    let keys = null;\n    if (shortcut.length > 1) {\n        keys = shortcut[1].split('|').map((key) => (\n            <span\n                className='shortcut-key'\n                key={key}\n            >\n                {key}\n            </span>\n        ));\n    }\n\n    return (\n        <div className='shortcut-line'>\n            {description}\n            {keys}\n        </div>\n    );\n}\n\nexport default injectIntl(ShortcutsModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport EventEmitter from 'events';\n\nimport * as Selectors from 'mattermost-redux/selectors/entities/posts';\nimport {PostTypes} from 'mattermost-redux/action_types';\n\nimport BrowserStore from 'stores/browser_store.jsx';\nimport ChannelStore from 'stores/channel_store.jsx';\nimport store from 'stores/redux_store.jsx';\nimport UserStore from 'stores/user_store.jsx';\nimport {Constants} from 'utils/constants.jsx';\nimport AppDispatcher from '../dispatcher/app_dispatcher.jsx';\n\nconst ActionTypes = Constants.ActionTypes;\n\nconst FOCUSED_POST_CHANGE = 'focused_post_change';\nconst POST_PINNED_CHANGE_EVENT = 'post_pinned_change';\n\nconst dispatch = store.dispatch;\nconst getState = store.getState;\n\nclass PostStoreClass extends EventEmitter {\n    constructor() {\n        super();\n        this.selectedPostId = null;\n        this.currentFocusedPostId = null;\n    }\n\n    emitPostFocused() {\n        this.emit(FOCUSED_POST_CHANGE);\n    }\n\n    addPostFocusedListener(callback) {\n        this.on(FOCUSED_POST_CHANGE, callback);\n    }\n\n    removePostFocusedListener(callback) {\n        this.removeListener(FOCUSED_POST_CHANGE, callback);\n    }\n\n    emitPostPinnedChange() {\n        this.emit(POST_PINNED_CHANGE_EVENT);\n    }\n\n    addPostPinnedChangeListener(callback) {\n        this.on(POST_PINNED_CHANGE_EVENT, callback);\n    }\n\n    removePostPinnedChangeListener(callback) {\n        this.removeListener(POST_PINNED_CHANGE_EVENT, callback);\n    }\n\n    getMostRecentPostIdInChannel(channelId) {\n        return Selectors.getMostRecentPostIdInChannel(getState(), channelId);\n    }\n\n    getVisiblePosts() {\n        const posts = Selectors.getPostsInCurrentChannel(getState());\n        const currentChannelId = getState().entities.channels.currentChannelId;\n        return posts.slice(0, getState().views.channel.postVisibility[currentChannelId]);\n    }\n\n    getFocusedPostId() {\n        return this.currentFocusedPostId;\n    }\n\n    storeFocusedPostId(postId) {\n        this.currentFocusedPostId = postId;\n    }\n\n    clearFocusedPost() {\n        this.currentFocusedPostId = null;\n    }\n\n    getCurrentUsersLatestPost(channelId, rootId) {\n        const userId = UserStore.getCurrentId();\n\n        const postIds = getState().entities.posts.postsInChannel[channelId] || [];\n\n        let lastPost = null;\n\n        for (const id of postIds) {\n            const post = Selectors.getPost(getState(), id) || {};\n\n            // don't edit webhook posts, deleted posts, or system messages\n            if (post.user_id !== userId ||\n                (post.props && post.props.from_webhook) ||\n                post.state === Constants.POST_DELETED ||\n                (post.type && post.type.startsWith(Constants.SYSTEM_MESSAGE_PREFIX))) {\n                continue;\n            }\n\n            if (rootId) {\n                if (post.root_id === rootId || post.id === rootId) {\n                    lastPost = post;\n                    break;\n                }\n            } else {\n                lastPost = post;\n                break;\n            }\n        }\n\n        return lastPost;\n    }\n\n    normalizeDraft(originalDraft) {\n        let draft = {\n            message: '',\n            uploadsInProgress: [],\n            fileInfos: [],\n        };\n\n        // Make sure that the post draft is non-null and has all the required fields\n        if (originalDraft) {\n            draft = {\n                message: originalDraft.message || draft.message,\n                uploadsInProgress: originalDraft.uploadsInProgress || draft.uploadsInProgress,\n                fileInfos: originalDraft.fileInfos || draft.fileInfos,\n            };\n        }\n\n        return draft;\n    }\n\n    storeCurrentDraft(draft) {\n        var channelId = ChannelStore.getCurrentId();\n        BrowserStore.setGlobalItem('draft_' + channelId, draft);\n    }\n\n    getCurrentDraft() {\n        var channelId = ChannelStore.getCurrentId();\n        return this.getDraft(channelId);\n    }\n\n    storeDraft(channelId, draft) {\n        BrowserStore.setGlobalItem('draft_' + channelId, draft);\n    }\n\n    getDraft(channelId) {\n        // deep clone because many components need to modify the draft\n        return JSON.parse(JSON.stringify(this.normalizeDraft(BrowserStore.getGlobalItem('draft_' + channelId))));\n    }\n\n    storeCommentDraft(parentPostId, draft) {\n        BrowserStore.setGlobalItem('comment_draft_' + parentPostId, draft);\n    }\n\n    getCommentDraft(parentPostId) {\n        // deep clone because many components need to modify the draft\n        return JSON.parse(JSON.stringify(this.normalizeDraft(BrowserStore.getGlobalItem('comment_draft_' + parentPostId))));\n    }\n\n    getCommentCount(rootPost) {\n        const postIds = getState().entities.posts.postsInChannel[rootPost.channel_id] || [];\n\n        let commentCount = 0;\n        for (const postId of postIds) {\n            const post = Selectors.getPost(getState(), postId) || {};\n            if (post.root_id === rootPost.id) {\n                commentCount += 1;\n            }\n        }\n\n        return commentCount;\n    }\n}\n\nvar PostStore = new PostStoreClass();\n\nPostStore.dispatchToken = AppDispatcher.register((payload) => {\n    var action = payload.action;\n\n    switch (action.type) {\n    case ActionTypes.RECEIVED_FOCUSED_POST:\n        PostStore.storeFocusedPostId(action.postId);\n        PostStore.emitPostFocused();\n        break;\n    case ActionTypes.CLICK_CHANNEL:\n        PostStore.clearFocusedPost();\n        break;\n    case ActionTypes.RECEIVED_EDIT_POST:\n        dispatch({...action, type: ActionTypes.EDIT_POST});\n        break;\n    case ActionTypes.RECEIVED_POST_SELECTED:\n        dispatch({data: action.postId, type: PostTypes.RECEIVED_POST_SELECTED});\n        dispatch({...action, type: ActionTypes.SELECT_POST});\n        break;\n    case ActionTypes.RECEIVED_POST_PINNED:\n    case ActionTypes.RECEIVED_POST_UNPINNED:\n        PostStore.emitPostPinnedChange();\n        break;\n    default:\n    }\n});\n\nexport default PostStore;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport fileOverlayImage from 'images/filesOverlay.png';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport overlayLogoImage from 'images/logoWhite.png';\n\nexport default function FileUploadOverlay(props) {\n    var overlayClass = 'file-overlay hidden';\n    if (props.overlayType === 'right') {\n        overlayClass += ' right-file-overlay';\n    } else if (props.overlayType === 'center') {\n        overlayClass += ' center-file-overlay';\n    }\n\n    return (\n        <div className={overlayClass}>\n            <div className='overlay__indent'>\n                <div className='overlay__circle'>\n                    <img\n                        className='overlay__files'\n                        src={fileOverlayImage}\n                        alt='Files'\n                    />\n                    <span>\n                        <i\n                            className='fa fa-upload'\n                            title={localizeMessage('generic_icons.upload', 'Upload Icon')}\n                        />\n                        <FormattedMessage\n                            id='upload_overlay.info'\n                            defaultMessage='Drop a file to upload it.'\n                        />\n                    </span>\n                    <img\n                        className='overlay__logo'\n                        src={overlayLogoImage}\n                        width='100'\n                        alt='Logo'\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nFileUploadOverlay.propTypes = {\n    overlayType: PropTypes.string,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nexport default class DelayedAction {\n    constructor(action) {\n        this.action = action;\n\n        this.timer = -1;\n\n        // bind fire since it doesn't get passed the correct this value with setTimeout\n        this.fire = this.fire.bind(this);\n    }\n\n    fire() {\n        this.action();\n\n        this.timer = -1;\n    }\n\n    fireAfter(timeout) {\n        if (this.timer >= 0) {\n            window.clearTimeout(this.timer);\n        }\n\n        this.timer = window.setTimeout(this.fire, timeout);\n    }\n\n    cancel() {\n        window.clearTimeout(this.timer);\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {Client4} from 'mattermost-redux/client';\nimport {unfavoriteChannel} from 'mattermost-redux/actions/channels';\nimport {savePreferences} from 'mattermost-redux/actions/preferences';\nimport {getCurrentChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getCurrentRelativeTeamUrl} from 'mattermost-redux/selectors/entities/teams';\n\nimport {openModal} from 'actions/views/modals';\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport * as PostActions from 'actions/post_actions.jsx';\n\nimport {isUrlSafe, getSiteURL} from 'utils/url.jsx';\nimport {localizeMessage, getUserIdFromChannelName} from 'utils/utils.jsx';\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport {Constants, ModalIdentifiers} from 'utils/constants.jsx';\nimport {isFavoriteChannel} from 'utils/channel_utils.jsx';\nimport {browserHistory} from 'utils/browser_history';\n\nimport UserSettingsModal from 'components/user_settings/modal';\n\nexport function executeCommand(message, args) {\n    return async (dispatch, getState) => {\n        const state = getState();\n\n        let msg = message;\n\n        let cmdLength = msg.indexOf(' ');\n        if (cmdLength < 0) {\n            cmdLength = msg.length;\n        }\n        const cmd = msg.substring(0, cmdLength).toLowerCase();\n        msg = cmd + ' ' + msg.substring(cmdLength, msg.length).trim();\n\n        switch (cmd) {\n        case '/search':\n            PostActions.searchForTerm(msg.substring(cmdLength + 1, msg.length));\n            return {data: true};\n        case '/shortcuts':\n            if (UserAgent.isMobile()) {\n                const error = {message: localizeMessage('create_post.shortcutsNotSupported', 'Keyboard shortcuts are not supported on your device')};\n                return {error};\n            }\n\n            GlobalActions.toggleShortcutsModal();\n            return {data: true};\n        case '/leave': {\n        // /leave command not supported in reply threads.\n            if (args.channel_id && (args.root_id || args.parent_id)) {\n                GlobalActions.sendEphemeralPost('/leave is not supported in reply threads. Use it in the center channel instead.', args.channel_id, args.parent_id);\n                return {data: true};\n            }\n            const channel = getCurrentChannel(state);\n            if (channel.type === Constants.PRIVATE_CHANNEL) {\n                GlobalActions.showLeavePrivateChannelModal(channel);\n                return {data: true};\n            } else if (\n                channel.type === Constants.DM_CHANNEL ||\n                channel.type === Constants.GM_CHANNEL\n            ) {\n                let name;\n                let category;\n                if (channel.type === Constants.DM_CHANNEL) {\n                    name = getUserIdFromChannelName(channel);\n                    category = Constants.Preferences.CATEGORY_DIRECT_CHANNEL_SHOW;\n                } else {\n                    name = channel.id;\n                    category = Constants.Preferences.CATEGORY_GROUP_CHANNEL_SHOW;\n                }\n                const currentUserId = getCurrentUserId(state);\n                dispatch(savePreferences(currentUserId, [{category, name, user_id: currentUserId, value: 'false'}]));\n                if (isFavoriteChannel(channel)) {\n                    dispatch(unfavoriteChannel(channel.id));\n                }\n                browserHistory.push(`${getCurrentRelativeTeamUrl(state)}/channels/${Constants.DEFAULT_CHANNEL}`);\n                return {data: true};\n            }\n            break;\n        }\n        case '/settings':\n            dispatch(openModal({ModalId: ModalIdentifiers.USER_SETTINGS, dialogType: UserSettingsModal}));\n            return {data: true};\n        case '/collapse':\n        case '/expand':\n            dispatch(PostActions.resetEmbedVisibility());\n        }\n\n        let data;\n        try {\n            data = await Client4.executeCommand(msg, args);\n        } catch (err) {\n            return {error: err};\n        }\n\n        const hasGotoLocation = data.goto_location && isUrlSafe(data.goto_location);\n\n        if (msg.trim() === '/logout') {\n            GlobalActions.emitUserLoggedOutEvent(hasGotoLocation ? data.goto_location : '/');\n            return {data: true};\n        }\n\n        if (hasGotoLocation) {\n            if (data.goto_location.startsWith('/')) {\n                browserHistory.push(data.goto_location);\n            } else if (data.goto_location.startsWith(getSiteURL())) {\n                browserHistory.push(data.goto_location.substr(getSiteURL().length));\n            } else {\n                window.open(data.goto_location);\n            }\n        }\n\n        return {data: true};\n    };\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {createSelector} from 'reselect';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {makeGetMessageInHistoryItem, makeGetCommentCountForPost, getPost} from 'mattermost-redux/selectors/entities/posts';\nimport {getCustomEmojisByName} from 'mattermost-redux/selectors/entities/emojis';\nimport {\n    addReaction,\n    removeReaction,\n    addMessageIntoHistory,\n    moveHistoryIndexBack,\n    moveHistoryIndexForward,\n} from 'mattermost-redux/actions/posts';\nimport {Posts} from 'mattermost-redux/constants';\nimport {isPostPendingOrFailed} from 'mattermost-redux/utils/post_utils';\n\nimport * as PostActions from 'actions/post_actions.jsx';\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport {executeCommand} from 'actions/command';\nimport {setGlobalItem, actionOnGlobalItemsWithPrefix} from 'actions/storage';\nimport EmojiMap from 'utils/emoji_map';\nimport {getPostDraft} from 'selectors/rhs';\n\nimport * as Utils from 'utils/utils.jsx';\nimport {Constants, StoragePrefixes} from 'utils/constants.jsx';\n\nexport function clearCommentDraftUploads() {\n    return actionOnGlobalItemsWithPrefix(StoragePrefixes.COMMENT_DRAFT, (key, value) => {\n        if (value) {\n            return {...value, uploadsInProgress: []};\n        }\n        return value;\n    });\n}\n\nexport function updateCommentDraft(rootId, draft) {\n    return setGlobalItem(`${StoragePrefixes.COMMENT_DRAFT}${rootId}`, draft);\n}\n\nexport function makeOnMoveHistoryIndex(rootId, direction) {\n    const getMessageInHistory = makeGetMessageInHistoryItem(Posts.MESSAGE_TYPES.COMMENT);\n\n    return () => (dispatch, getState) => {\n        const draft = getPostDraft(getState(), StoragePrefixes.COMMENT_DRAFT, rootId);\n        if (draft.message !== '' && draft.message !== getMessageInHistory(getState())) {\n            return;\n        }\n\n        if (direction === -1) {\n            dispatch(moveHistoryIndexBack(Posts.MESSAGE_TYPES.COMMENT));\n        } else if (direction === 1) {\n            dispatch(moveHistoryIndexForward(Posts.MESSAGE_TYPES.COMMENT));\n        }\n\n        const nextMessageInHistory = getMessageInHistory(getState());\n\n        dispatch(updateCommentDraft(rootId, {...draft, message: nextMessageInHistory}));\n    };\n}\n\nexport function submitPost(channelId, rootId, draft) {\n    return (dispatch, getState) => {\n        const state = getState();\n\n        const userId = getCurrentUserId(state);\n\n        const time = Utils.getTimestamp();\n\n        const post = {\n            file_ids: [],\n            message: draft.message,\n            channel_id: channelId,\n            root_id: rootId,\n            parent_id: rootId,\n            pending_post_id: `${userId}:${time}`,\n            user_id: userId,\n            create_at: time,\n        };\n\n        GlobalActions.emitUserCommentedEvent(post);\n\n        PostActions.createPost(post, draft.fileInfos);\n    };\n}\n\nexport function submitReaction(postId, action, emojiName) {\n    return (dispatch) => {\n        if (action === '+') {\n            dispatch(addReaction(postId, emojiName));\n            PostActions.emitEmojiPosted(emojiName);\n        } else if (action === '-') {\n            dispatch(removeReaction(postId, emojiName));\n        }\n    };\n}\n\nexport function submitCommand(channelId, rootId, draft) {\n    return async (dispatch, getState) => {\n        const state = getState();\n\n        const teamId = getCurrentTeamId(state);\n\n        const args = {\n            channel_id: channelId,\n            team_id: teamId,\n            root_id: rootId,\n            parent_id: rootId,\n        };\n\n        const {message} = draft;\n\n        const {error} = await dispatch(executeCommand(message, args));\n\n        if (error) {\n            if (error.sendMessage) {\n                dispatch(submitPost(channelId, rootId, draft));\n            } else {\n                throw (error);\n            }\n        }\n    };\n}\n\nexport function makeOnSubmit(channelId, rootId, latestPostId) {\n    return () => async (dispatch, getState) => {\n        const draft = getPostDraft(getState(), StoragePrefixes.COMMENT_DRAFT, rootId);\n        const {message} = draft;\n\n        dispatch(addMessageIntoHistory(message));\n\n        dispatch(updateCommentDraft(rootId, null));\n\n        const isReaction = Utils.REACTION_PATTERN.exec(message);\n\n        const emojis = getCustomEmojisByName(getState());\n        const emojiMap = new EmojiMap(emojis);\n\n        if (isReaction && emojiMap.has(isReaction[2])) {\n            dispatch(submitReaction(latestPostId, isReaction[1], isReaction[2]));\n        } else if (message.indexOf('/') === 0) {\n            await dispatch(submitCommand(channelId, rootId, draft));\n        } else {\n            dispatch(submitPost(channelId, rootId, draft));\n        }\n    };\n}\n\nfunction makeGetCurrentUsersLatestPost(channelId, rootId) {\n    return createSelector(\n        getCurrentUserId,\n        (state) => state.entities.posts.postsInChannel[channelId],\n        (state) => (id) => getPost(state, id),\n        (userId, postIds, getPostById) => {\n            let lastPost = null;\n\n            if (!postIds) {\n                return lastPost;\n            }\n\n            for (const id of postIds) {\n                const post = getPostById(id) || {};\n\n                // don't edit webhook posts, deleted posts, or system messages\n                if (\n                    post.user_id !== userId ||\n                    (post.props && post.props.from_webhook) ||\n                    post.state === Constants.POST_DELETED ||\n                    (post.type && post.type.startsWith(Constants.SYSTEM_MESSAGE_PREFIX)) ||\n                    isPostPendingOrFailed(post)\n                ) {\n                    continue;\n                }\n\n                if (rootId) {\n                    if (post.root_id === rootId || post.id === rootId) {\n                        lastPost = post;\n                        break;\n                    }\n                } else {\n                    lastPost = post;\n                    break;\n                }\n            }\n\n            return lastPost;\n        }\n    );\n}\n\nexport function makeOnEditLatestPost(channelId, rootId) {\n    const getCurrentUsersLatestPost = makeGetCurrentUsersLatestPost(channelId, rootId);\n    const getCommentCount = makeGetCommentCountForPost();\n\n    return () => (dispatch, getState) => {\n        const state = getState();\n\n        const lastPost = getCurrentUsersLatestPost(state);\n\n        if (!lastPost) {\n            return {data: false};\n        }\n\n        return dispatch(PostActions.setEditingPost(\n            lastPost.id,\n            getCommentCount(state, {post: lastPost}),\n            'reply_textbox',\n            Utils.localizeMessage('create_comment.commentTitle', 'Comment'),\n            true\n        ));\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class AttachmentIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='18px'\n                    height='18px'\n                    viewBox='0 0 18 15'\n                    role='icon'\n                    aria-label={localizeMessage('generic_icons.attach', 'Attachment Icon')}\n                >\n                    <g\n                        fill='inherit'\n                        fillRule='evenodd'\n                    >\n                        <g\n                            transform='translate(-1029.000000, -954.000000)'\n                            fillRule='nonzero'\n                            fill='inherit'\n                        >\n                            <g transform='translate(25.000000, 937.000000)'>\n                                <g transform='translate(1004.000000, 17.000000)'>\n                                    <path d='M5.35,15.56 C3.98,15.56 2.61,15.039 1.567,13.997 C0.557,12.984 0,11.642 0,10.212 C0,8.783 0.557,7.44 1.566,6.429 L6.869,1.126 C8.371,-0.376 10.812,-0.375 12.314,1.125 C13.815,2.627 13.815,5.069 12.314,6.57 L7.011,11.873 C6.094,12.792 4.603,12.79 3.687,11.873 C2.771,10.958 2.771,9.467 3.687,8.551 L8.99,3.248 C9.323,2.916 9.861,2.916 10.193,3.248 C10.525,3.579 10.525,4.118 10.193,4.449 L4.89,9.752 C4.637,10.006 4.637,10.418 4.89,10.672 C5.143,10.923 5.555,10.925 5.809,10.672 L11.113,5.369 C11.952,4.53 11.952,3.166 11.113,2.327 C10.276,1.49 8.911,1.488 8.073,2.327 L2.769,7.631 C2.079,8.32 1.699,9.237 1.699,10.212 C1.699,11.188 2.079,12.104 2.768,12.794 C4.19,14.216 6.502,14.216 7.925,12.798 L7.929,12.794 C7.929,12.793 7.929,12.793 7.929,12.793 L15.355,5.369 C15.687,5.037 16.224,5.037 16.556,5.369 C16.888,5.7 16.888,6.239 16.556,6.57 L8.779,14.348 L8.761,14.332 C7.776,15.15 6.562,15.56 5.35,15.56 Z'/>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {getFileDownloadUrl} from 'mattermost-redux/utils/file_utils';\n\nimport AttachmentIcon from 'components/svg/attachment_icon';\nimport {trimFilename} from 'utils/file_utils';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class FilenameOverlay extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * File detailed information\n         */\n        fileInfo: PropTypes.object.isRequired,\n\n        /*\n         * Handler for when the thumbnail is clicked passed the index above\n         */\n        handleImageClick: PropTypes.func,\n\n        /*\n         * Display in compact format\n         */\n        compactDisplay: PropTypes.bool,\n\n        /*\n         * If it should display link to download on file name\n         */\n        canDownload: PropTypes.bool,\n\n        /**\n         * Optional children like download icon\n         */\n        children: PropTypes.element,\n\n        /**\n         * Optional class like for icon\n         */\n        iconClass: PropTypes.string,\n    };\n\n    render() {\n        const {\n            canDownload,\n            children,\n            compactDisplay,\n            fileInfo,\n            handleImageClick,\n            iconClass,\n        } = this.props;\n\n        const fileName = fileInfo.name;\n        const trimmedFilename = trimFilename(fileName);\n\n        let filenameOverlay;\n        if (compactDisplay) {\n            filenameOverlay = (\n                <OverlayTrigger\n                    trigger={['hover', 'focus']}\n                    delayShow={1000}\n                    placement='top'\n                    overlay={<Tooltip id='file-name__tooltip'>{fileName}</Tooltip>}\n                >\n                    <a\n                        href='#'\n                        onClick={handleImageClick}\n                        className='post-image__name'\n                        rel='noopener noreferrer'\n                    >\n                        <AttachmentIcon className='icon'/>\n                        {trimmedFilename}\n                    </a>\n                </OverlayTrigger>\n            );\n        } else if (canDownload) {\n            filenameOverlay = (\n                <a\n                    href={getFileDownloadUrl(fileInfo.id)}\n                    download={fileName}\n                    className={iconClass || 'post-image__name'}\n                    target='_blank'\n                    rel='noopener noreferrer'\n                >\n                    <OverlayTrigger\n                        trigger={['hover', 'focus']}\n                        delayShow={1000}\n                        placement='top'\n                        overlay={\n                            <Tooltip id='file-name__tooltip'>\n                                {localizeMessage('file_attachment.download', 'Download')}\n                            </Tooltip>\n                        }\n                    >\n                        {children || trimmedFilename}\n                    </OverlayTrigger>\n                </a>\n            );\n        } else {\n            filenameOverlay = (\n                <span className='post-image__name'>\n                    {trimmedFilename}\n                </span>\n            );\n        }\n\n        return (filenameOverlay);\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {getFileThumbnailUrl, getFileUrl} from 'mattermost-redux/utils/file_utils';\n\nimport FilenameOverlay from 'components/file_attachment/filename_overlay.jsx';\nimport Constants, {FileTypes} from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport loadingGif from 'images/load.gif';\n\nexport default class FilePreview extends React.PureComponent {\n    static propTypes = {\n        onRemove: PropTypes.func.isRequired,\n        fileInfos: PropTypes.arrayOf(PropTypes.object).isRequired,\n        uploadsInProgress: PropTypes.array,\n    };\n\n    static defaultProps = {\n        fileInfos: [],\n        uploadsInProgress: [],\n    };\n\n    componentDidUpdate() {\n        if (this.props.uploadsInProgress.length > 0) {\n            this.refs[this.props.uploadsInProgress[0]].scrollIntoView();\n        }\n    }\n\n    handleRemove = (id) => {\n        this.props.onRemove(id);\n    }\n\n    render() {\n        const previews = [];\n        this.props.fileInfos.forEach((info, idx) => {\n            const type = Utils.getFileType(info.extension);\n\n            let className = 'file-preview post-image__column';\n            let previewImage;\n            if (type === FileTypes.SVG) {\n                previewImage = (\n                    <img\n                        className='post-image normal'\n                        src={getFileUrl(info.id)}\n                    />\n                );\n            } else if (type === FileTypes.IMAGE) {\n                let imageClassName = 'post-image';\n\n                if (info.width < Constants.THUMBNAIL_WIDTH && info.height < Constants.THUMBNAIL_HEIGHT) {\n                    imageClassName += ' small';\n                } else {\n                    imageClassName += ' normal';\n                }\n\n                let thumbnailUrl = getFileThumbnailUrl(info.id);\n                if (Utils.isGIFImage(info.extension) && !info.has_preview_image) {\n                    thumbnailUrl = getFileUrl(info.id);\n                }\n\n                previewImage = (\n                    <div\n                        className={imageClassName}\n                        style={{\n                            backgroundImage: `url(${thumbnailUrl})`,\n                            backgroundSize: 'cover',\n                        }}\n                    />\n                );\n            } else {\n                className += ' custom-file';\n                previewImage = <div className={'file-icon ' + Utils.getIconClassName(type)}/>;\n            }\n\n            previews.push(\n                <div\n                    key={info.id}\n                    className={className}\n                >\n                    <div className='post-image__thumbnail'>\n                        {previewImage}\n                    </div>\n                    <div className='post-image__details'>\n                        <div className='post-image__detail_wrapper'>\n                            <div className='post-image__detail'>\n                                <FilenameOverlay\n                                    fileInfo={info}\n                                    index={idx}\n                                    handleImageClick={null}\n                                    compactDisplay={false}\n                                    canDownload={false}\n                                />\n                                <span className='post-image__type'>{info.extension.toUpperCase()}</span>\n                                <span className='post-image__size'>{Utils.fileSizeToString(info.size)}</span>\n                            </div>\n                        </div>\n                        <div>\n                            <a\n                                className='file-preview__remove'\n                                onClick={this.handleRemove.bind(this, info.id)}\n                            >\n                                <i\n                                    className='fa fa-remove'\n                                    title={Utils.localizeMessage('generic_icons.remove', 'Remove Icon')}\n                                />\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            );\n        });\n\n        this.props.uploadsInProgress.forEach((clientId) => {\n            previews.push(\n                <div\n                    ref={clientId}\n                    key={clientId}\n                    className='file-preview'\n                    data-client-id={clientId}\n                >\n                    <img\n                        className='spinner'\n                        src={loadingGif}\n                    />\n                    <a\n                        className='file-preview__remove'\n                        onClick={this.handleRemove.bind(this, clientId)}\n                    >\n                        <i\n                            className='fa fa-remove'\n                            title={Utils.localizeMessage('generic_icons.remove', 'Remove Icon')}\n                        />\n                    </a>\n                </div>\n            );\n        });\n\n        return (\n            <div\n                className='file-preview__container'\n                ref='container'\n            >\n                {previews}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {batchActions} from 'redux-batched-actions';\nimport request from 'superagent';\nimport {FileTypes} from 'mattermost-redux/action_types';\nimport {getLogErrorAction} from 'mattermost-redux/actions/errors';\nimport {forceLogoutIfNecessary} from 'mattermost-redux/actions/helpers';\nimport {Client4} from 'mattermost-redux/client';\n\nimport * as Utils from 'utils/utils.jsx';\n\nexport function uploadFile(file, name, channelId, rootId, clientId) {\n    return (dispatch) => {\n        dispatch({type: FileTypes.UPLOAD_FILES_REQUEST});\n\n        return request.\n            post(Client4.getFilesRoute()).\n            set(Client4.getOptions().headers).\n            attach('files', file, name).\n            field('channel_id', channelId).\n            field('client_ids', clientId).\n            accept('application/json');\n    };\n}\n\nexport function handleFileUploadEnd(file, name, channelId, rootId, clientId, {err, res}) {\n    return (dispatch, getState) => {\n        if (err) {\n            let e;\n            if (res && res.body && res.body.id) {\n                e = res.body;\n            } else if (err.status === 0 || !err.status) {\n                e = {message: Utils.localizeMessage('channel_loader.connection_error', 'There appears to be a problem with your internet connection.')};\n            } else {\n                e = {message: Utils.localizeMessage('channel_loader.unknown_error', 'We received an unexpected status code from the server.') + ' (' + err.status + ')'};\n            }\n\n            forceLogoutIfNecessary(err, dispatch, getState);\n\n            const failure = {\n                type: FileTypes.UPLOAD_FILES_FAILURE,\n                clientIds: [clientId],\n                channelId,\n                rootId,\n                error: err,\n            };\n\n            dispatch(batchActions([failure, getLogErrorAction(err)]));\n            return {error: e};\n        }\n        const data = res.body.file_infos.map((fileInfo, index) => {\n            return {\n                ...fileInfo,\n                clientId: res.body.client_ids[index],\n            };\n        });\n\n        dispatch(batchActions([\n            {\n                type: FileTypes.RECEIVED_UPLOAD_FILES,\n                data,\n                channelId,\n                rootId,\n            },\n            {\n                type: FileTypes.UPLOAD_FILES_SUCCESS,\n            },\n        ]));\n\n        return {data: res.body};\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React, {PureComponent} from 'react';\nimport ReactDOM from 'react-dom';\nimport {defineMessages, intlShape, FormattedMessage} from 'react-intl';\nimport 'jquery-dragster/jquery.dragster.js';\nimport {Dropdown} from 'react-bootstrap';\n\nimport Constants from 'utils/constants.jsx';\nimport DelayedAction from 'utils/delayed_action.jsx';\nimport {t} from 'utils/i18n';\nimport {\n    isIosChrome,\n    isMobileApp,\n} from 'utils/user_agent.jsx';\nimport {\n    clearFileInput,\n    cmdOrCtrlPressed,\n    isKeyPressed,\n    generateId,\n    isFileTransfer,\n    localizeMessage,\n} from 'utils/utils.jsx';\n\nimport AttachmentIcon from 'components/svg/attachment_icon';\n\nconst holders = defineMessages({\n    limited: {\n        id: t('file_upload.limited'),\n        defaultMessage: 'Uploads limited to {count, number} files maximum. Please use additional posts for more files.',\n    },\n    filesAbove: {\n        id: t('file_upload.filesAbove'),\n        defaultMessage: 'Files above {max}MB could not be uploaded: {filenames}',\n    },\n    fileAbove: {\n        id: t('file_upload.fileAbove'),\n        defaultMessage: 'File above {max}MB could not be uploaded: {filename}',\n    },\n    zeroBytesFiles: {\n        id: t('file_upload.zeroBytesFiles'),\n        defaultMessage: 'You are uploading empty files: {filenames}',\n    },\n    zeroBytesFile: {\n        id: t('file_upload.zeroBytesFile'),\n        defaultMessage: 'You are uploading an empty file: {filename}',\n    },\n    pasted: {\n        id: t('file_upload.pasted'),\n        defaultMessage: 'Image Pasted at ',\n    },\n    uploadFile: {\n        id: t('file_upload.upload_files'),\n        defaultMessage: 'Upload files',\n    },\n});\n\nconst OVERLAY_TIMEOUT = 500;\n\nexport default class FileUpload extends PureComponent {\n    static propTypes = {\n\n        /**\n         * Current channel's ID\n         */\n        currentChannelId: PropTypes.string.isRequired,\n\n        /**\n         * Current root post's ID\n         */\n        rootId: PropTypes.string,\n\n        /**\n         * Number of files to attach\n         */\n        fileCount: PropTypes.number.isRequired,\n\n        /**\n         * Function to get file upload targeted input\n         */\n        getTarget: PropTypes.func.isRequired,\n\n        locale: PropTypes.string.isRequired,\n\n        /**\n         * Function to be called when file upload input is clicked\n         */\n        onClick: PropTypes.func,\n\n        /**\n         * Function to be called when file upload is complete\n         */\n        onFileUpload: PropTypes.func,\n\n        /**\n         * Function to be called when file upload input's change event is fired\n         */\n        onFileUploadChange: PropTypes.func,\n\n        /**\n         * Function to be called when upload fails\n         */\n        onUploadError: PropTypes.func,\n\n        /**\n         * Function to be called when file upload starts\n         */\n        onUploadStart: PropTypes.func,\n\n        /**\n         * Type of the object which the uploaded file is attached to\n         */\n        postType: PropTypes.string,\n\n        /**\n         * The maximum uploaded file size.\n         */\n        maxFileSize: PropTypes.number,\n\n        /**\n         * Whether or not file upload is allowed.\n         */\n        canUploadFiles: PropTypes.bool.isRequired,\n\n        /**\n         * Plugin file upload methods to be added\n         */\n        pluginFileUploadMethods: PropTypes.arrayOf(PropTypes.object),\n        pluginFilesWillUploadHooks: PropTypes.arrayOf(PropTypes.object),\n\n        actions: PropTypes.shape({\n\n            /**\n             * Function to be called to upload file\n             */\n            uploadFile: PropTypes.func.isRequired,\n\n            /**\n             * Function to be called when file is uploaded or failed\n             */\n            handleFileUploadEnd: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    static contextTypes = {\n        intl: intlShape,\n    };\n\n    static defaultProps = {\n        pluginFileUploadMethods: [],\n        pluginFilesWillUploadHooks: [],\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            requests: {},\n            menuOpen: false,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.postType === 'post') {\n            this.registerDragEvents('.row.main', '.center-file-overlay');\n        } else if (this.props.postType === 'comment') {\n            this.registerDragEvents('.post-right__container', '.right-file-overlay');\n        }\n\n        document.addEventListener('paste', this.pasteUpload);\n        document.addEventListener('keydown', this.keyUpload);\n    }\n\n    componentWillUnmount() {\n        let target;\n        if (this.props.postType === 'post') {\n            target = $('.row.main');\n        } else {\n            target = $('.post-right__container');\n        }\n\n        document.removeEventListener('paste', this.pasteUpload);\n        document.removeEventListener('keydown', this.keyUpload);\n\n        // jquery-dragster doesn't provide a function to unregister itself so do it manually\n        target.off('dragenter dragleave dragover drop dragster:enter dragster:leave dragster:over dragster:drop');\n    }\n\n    fileUploadSuccess = (data, channelId, currentRootId) => {\n        if (data) {\n            this.props.onFileUpload(data.file_infos, data.client_ids, channelId, currentRootId);\n\n            const requests = Object.assign({}, this.state.requests);\n            for (var j = 0; j < data.client_ids.length; j++) {\n                Reflect.deleteProperty(requests, data.client_ids[j]);\n            }\n            this.setState({requests});\n        }\n    }\n\n    fileUploadFail = (err, clientId, channelId, currentRootId) => {\n        this.props.onUploadError(err, clientId, channelId, currentRootId);\n    }\n\n    pluginUploadFiles = (files) => {\n        // clear any existing errors\n        this.props.onUploadError(null);\n        this.uploadFiles(files);\n    }\n\n    checkPluginHooksAndUploadFiles = (files) => {\n        // clear any existing errors\n        this.props.onUploadError(null);\n\n        let sortedFiles = Array.from(files).sort((a, b) => a.name.localeCompare(b.name, this.props.locale, {numeric: true}));\n\n        const willUploadHooks = this.props.pluginFilesWillUploadHooks;\n        for (const h of willUploadHooks) {\n            const result = h.hook(sortedFiles, this.pluginUploadFiles);\n\n            // Display an error message if there is one but don't reject the upload\n            if (result.message) {\n                this.props.onUploadError(result.message);\n            }\n\n            sortedFiles = result.files;\n        }\n\n        if (sortedFiles) {\n            this.uploadFiles(sortedFiles);\n        }\n    }\n\n    uploadFiles = (sortedFiles) => {\n        const {currentChannelId, rootId} = this.props;\n\n        const uploadsRemaining = Constants.MAX_UPLOAD_FILES - this.props.fileCount;\n        let numUploads = 0;\n\n        // keep track of how many files have been too large\n        const tooLargeFiles = [];\n        const zeroFiles = [];\n        const clientIds = [];\n\n        for (let i = 0; i < sortedFiles.length && numUploads < uploadsRemaining; i++) {\n            if (sortedFiles[i].size > this.props.maxFileSize) {\n                tooLargeFiles.push(sortedFiles[i]);\n                continue;\n            }\n            if (sortedFiles[i].size === 0) {\n                zeroFiles.push(sortedFiles[i]);\n            }\n\n            // generate a unique id that can be used by other components to refer back to this upload\n            const clientId = generateId();\n\n            const request = this.props.actions.uploadFile(\n                sortedFiles[i],\n                sortedFiles[i].name,\n                currentChannelId,\n                rootId,\n                clientId,\n            );\n\n            request.end((err, res) => {\n                const {error, data} = this.props.actions.handleFileUploadEnd(\n                    sortedFiles[i],\n                    sortedFiles[i].name,\n                    currentChannelId,\n                    rootId,\n                    clientId,\n                    {err, res},\n                );\n\n                if (error) {\n                    this.fileUploadFail(error, clientId, currentChannelId, rootId);\n                } else if (data) {\n                    this.fileUploadSuccess(data, currentChannelId, rootId);\n                }\n            });\n\n            this.setState({requests: {...this.state.requests, [clientId]: request}});\n            clientIds.push(clientId);\n\n            numUploads += 1;\n        }\n\n        this.props.onUploadStart(clientIds, currentChannelId);\n\n        const {formatMessage} = this.context.intl;\n        const errors = [];\n        if (sortedFiles.length > uploadsRemaining) {\n            errors.push(formatMessage(holders.limited, {count: Constants.MAX_UPLOAD_FILES}));\n        }\n\n        if (tooLargeFiles.length > 1) {\n            var tooLargeFilenames = tooLargeFiles.map((file) => file.name).join(', ');\n\n            errors.push(formatMessage(holders.filesAbove, {max: (this.props.maxFileSize / 1048576), filenames: tooLargeFilenames}));\n        } else if (tooLargeFiles.length > 0) {\n            errors.push(formatMessage(holders.fileAbove, {max: (this.props.maxFileSize / 1048576), filename: tooLargeFiles[0].name}));\n        }\n\n        if (zeroFiles.length > 1) {\n            var zeroFilenames = zeroFiles.map((file) => file.name).join(', ');\n\n            errors.push(formatMessage(holders.zeroBytesFiles, {filenames: zeroFilenames}));\n        } else if (zeroFiles.length > 0) {\n            errors.push(formatMessage(holders.zeroBytesFile, {filename: zeroFiles[0].name}));\n        }\n\n        if (errors.length > 0) {\n            this.props.onUploadError(errors.join(', '));\n        }\n    }\n\n    handleChange = (e) => {\n        if (e.target.files.length > 0) {\n            this.checkPluginHooksAndUploadFiles(e.target.files);\n\n            clearFileInput(e.target);\n        }\n\n        this.props.onFileUploadChange();\n    }\n\n    handleDrop = (e) => {\n        if (!this.props.canUploadFiles) {\n            this.props.onUploadError(localizeMessage('file_upload.disabled', 'File attachments are disabled.'));\n            return;\n        }\n\n        this.props.onUploadError(null);\n\n        var files = e.originalEvent.dataTransfer.files;\n\n        if (typeof files !== 'string' && files.length) {\n            this.checkPluginHooksAndUploadFiles(files);\n        }\n\n        this.props.onFileUploadChange();\n    }\n\n    registerDragEvents = (containerSelector, overlaySelector) => {\n        const self = this;\n\n        const overlay = $(overlaySelector);\n\n        const dragTimeout = new DelayedAction(() => {\n            if (!overlay.hasClass('hidden')) {\n                overlay.addClass('hidden');\n            }\n        });\n\n        let dragsterActions = {};\n        if (this.props.canUploadFiles) {\n            dragsterActions = {\n                enter(dragsterEvent, e) {\n                    var files = e.originalEvent.dataTransfer;\n\n                    if (isFileTransfer(files)) {\n                        $(overlaySelector).removeClass('hidden');\n                    }\n                },\n                leave(dragsterEvent, e) {\n                    var files = e.originalEvent.dataTransfer;\n\n                    if (isFileTransfer(files) && !overlay.hasClass('hidden')) {\n                        overlay.addClass('hidden');\n                    }\n\n                    dragTimeout.cancel();\n                },\n                over() {\n                    dragTimeout.fireAfter(OVERLAY_TIMEOUT);\n                },\n                drop(dragsterEvent, e) {\n                    if (!overlay.hasClass('hidden')) {\n                        overlay.addClass('hidden');\n                    }\n\n                    dragTimeout.cancel();\n\n                    self.handleDrop(e);\n                },\n            };\n        } else {\n            dragsterActions = {\n                drop(dragsterEvent, e) {\n                    self.handleDrop(e);\n                },\n            };\n        }\n\n        $(containerSelector).dragster(dragsterActions);\n    }\n\n    pasteUpload = (e) => {\n        const {formatMessage} = this.context.intl;\n\n        if (!e.clipboardData || !e.clipboardData.items) {\n            return;\n        }\n\n        const textarea = ReactDOM.findDOMNode(this.props.getTarget());\n        if (!textarea || !textarea.contains(e.target)) {\n            return;\n        }\n\n        this.props.onUploadError(null);\n\n        const items = [];\n        for (let i = 0; i < e.clipboardData.items.length; i++) {\n            const item = e.clipboardData.items[i];\n\n            if (item.kind !== 'file') {\n                continue;\n            }\n\n            items.push(item);\n        }\n\n        if (items && items.length > 0) {\n            if (!this.props.canUploadFiles) {\n                this.props.onUploadError(localizeMessage('file_upload.disabled', 'File attachments are disabled.'));\n                return;\n            }\n\n            const files = [];\n\n            for (let i = 0; i < items.length; i++) {\n                const file = items[i].getAsFile();\n                if (!file) {\n                    continue;\n                }\n\n                var d = new Date();\n                let hour = d.getHours();\n                hour = hour < 10 ? `0${hour}` : `${hour}`;\n\n                let minute = d.getMinutes();\n                minute = minute < 10 ? `0${minute}` : `${minute}`;\n\n                var ext = '';\n                if (file.name) {\n                    if (file.name.includes('.')) {\n                        ext = file.name.substr(file.name.lastIndexOf('.'));\n                    }\n                } else if (items[i].type.includes('/')) {\n                    ext = '.' + items[i].type.split('/')[1].toLowerCase();\n                }\n\n                const name = formatMessage(holders.pasted) + d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate() + ' ' + hour + '-' + minute + ext;\n\n                files.push(new File([file], name));\n            }\n\n            if (files.length > 0) {\n                this.checkPluginHooksAndUploadFiles(files);\n                this.props.onFileUploadChange();\n            }\n        }\n    }\n\n    keyUpload = (e) => {\n        if (cmdOrCtrlPressed(e) && isKeyPressed(e, Constants.KeyCodes.U)) {\n            e.preventDefault();\n\n            if (!this.props.canUploadFiles) {\n                this.props.onUploadError(localizeMessage('file_upload.disabled', 'File attachments are disabled.'));\n                return;\n            }\n            const postTextbox = this.props.postType === 'post' && document.activeElement.id === 'post_textbox';\n            const commentTextbox = this.props.postType === 'comment' && document.activeElement.id === 'reply_textbox';\n            if (postTextbox || commentTextbox) {\n                $(this.refs.fileInput).focus().trigger('click');\n            }\n        }\n    }\n\n    cancelUpload = (clientId) => {\n        const requests = Object.assign({}, this.state.requests);\n        const request = requests[clientId];\n\n        if (request) {\n            request.abort();\n\n            Reflect.deleteProperty(requests, clientId);\n            this.setState({requests});\n        }\n    }\n\n    handleMaxUploadReached = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        const {onUploadError} = this.props;\n        const {formatMessage} = this.context.intl;\n\n        onUploadError(formatMessage(holders.limited, {count: Constants.MAX_UPLOAD_FILES}));\n    }\n\n    toggleMenu = (open) => {\n        this.setState({menuOpen: open});\n    }\n\n    handleLocalFileUploaded = (e) => {\n        const uploadsRemaining = Constants.MAX_UPLOAD_FILES - this.props.fileCount;\n        if (uploadsRemaining > 0) {\n            if (this.props.onClick) {\n                this.props.onClick();\n            }\n        } else {\n            this.handleMaxUploadReached(e);\n        }\n        this.setState({menuOpen: false});\n    }\n\n    render() {\n        const {formatMessage} = this.context.intl;\n        let multiple = true;\n        if (isMobileApp()) {\n            // iOS WebViews don't upload videos properly in multiple mode\n            multiple = false;\n        }\n\n        let accept = '';\n        if (isIosChrome()) {\n            // iOS Chrome can't upload videos at all\n            accept = 'image/*';\n        }\n\n        const uploadsRemaining = Constants.MAX_UPLOAD_FILES - this.props.fileCount;\n\n        let bodyAction;\n        if (this.props.pluginFileUploadMethods.length === 0) {\n            bodyAction = (\n                <div\n                    id='fileUploadButton'\n                    className='icon icon--attachment'\n                >\n                    <AttachmentIcon/>\n                    <input\n                        aria-label={formatMessage(holders.uploadFile)}\n                        ref='fileInput'\n                        type='file'\n                        onChange={this.handleChange}\n                        onClick={this.handleLocalFileUploaded}\n                        multiple={multiple}\n                        accept={accept}\n                    />\n                </div>\n            );\n        } else {\n            const pluginFileUploadMethods = this.props.pluginFileUploadMethods.map((item) => {\n                return (\n                    <li\n                        key={item.pluginId + '_fileuploadpluginmenuitem'}\n                        onClick={() => {\n                            if (item.action) {\n                                item.action(this.checkPluginHooksAndUploadFiles);\n                            }\n                            this.setState({menuOpen: false});\n                        }}\n                    >\n                        <a>\n                            {item.icon}\n                            {item.text}\n                        </a>\n                    </li>\n                );\n            });\n            const FileDropdownComponent = (props) => {\n                return (\n                    <button\n                        onClick={props.onClick}\n                        className='style--none'\n                    >\n                        <div\n                            id='fileUploadButton'\n                            className='icon icon--attachment'\n                        >\n                            <AttachmentIcon/>\n                        </div>\n                    </button>\n                );\n            };\n            bodyAction = (\n                <Dropdown\n                    dropup={true}\n                    pullRight={true}\n                    id='fileInputDropdown'\n                    open={this.state.menuOpen}\n                    onToggle={this.toggleMenu}\n                >\n                    <FileDropdownComponent bsRole='toggle'/>\n                    <Dropdown.Menu className='dropdown-menu__icons'>\n                        <li>\n                            <a>\n                                <i className='fa fa-laptop'/>\n                                <FormattedMessage\n                                    id='yourcomputer'\n                                    defaultMessage='Your computer'\n                                />\n                                <input\n                                    aria-label={formatMessage(holders.uploadFile)}\n                                    ref='fileInput'\n                                    type='file'\n                                    className='file-attachment-menu-item-input'\n                                    onChange={this.handleChange}\n                                    onClick={this.handleLocalFileUploaded}\n                                    multiple={multiple}\n                                    accept={accept}\n                                />\n                            </a>\n                        </li>\n                        {pluginFileUploadMethods}\n                    </Dropdown.Menu>\n                </Dropdown>\n            );\n        }\n\n        if (!this.props.canUploadFiles) {\n            bodyAction = null;\n        }\n\n        return (\n            <span\n                ref='input'\n                className={uploadsRemaining <= 0 ? ' btn-file__disabled' : ''}\n            >\n                {bodyAction}\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getCurrentChannelId} from 'mattermost-redux/selectors/entities/channels';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {uploadFile, handleFileUploadEnd} from 'actions/file_actions.jsx';\nimport {getCurrentLocale} from 'selectors/i18n';\nimport {canUploadFiles} from 'utils/file_utils';\n\nimport FileUpload from './file_upload.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const maxFileSize = parseInt(config.MaxFileSize, 10);\n\n    return {\n        currentChannelId: getCurrentChannelId(state),\n        maxFileSize,\n        canUploadFiles: canUploadFiles(config),\n        locale: getCurrentLocale(state),\n        pluginFileUploadMethods: state.plugins.components.FileUploadMethod,\n        pluginFilesWillUploadHooks: state.plugins.components.FilesWillUploadHook,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            uploadFile,\n            handleFileUploadEnd,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {withRef: true})(FileUpload);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class MsgTyping extends React.Component {\n    static propTypes = {\n        typingUsers: PropTypes.array.isRequired,\n    }\n\n    getTypingText = () => {\n        let users = [];\n        let numUsers = 0;\n        if (this.props.typingUsers) {\n            users = [...this.props.typingUsers];\n            numUsers = users.length;\n        }\n\n        if (numUsers === 0) {\n            return '';\n        }\n        if (numUsers === 1) {\n            return (\n                <FormattedMessage\n                    id='msg_typing.isTyping'\n                    defaultMessage='{user} is typing...'\n                    values={{\n                        user: users[0],\n                    }}\n                />\n            );\n        }\n        const last = users.pop();\n        return (\n            <FormattedMessage\n                id='msg_typing.areTyping'\n                defaultMessage='{users} and {last} are typing...'\n                values={{\n                    users: (users.join(', ')),\n                    last,\n                }}\n            />\n        );\n    }\n\n    render() {\n        return (\n            <span className='msg-typing'>{this.getTypingText()}</span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {makeGetUsersTypingByChannelAndPost} from 'mattermost-redux/selectors/entities/typing';\n\nimport MsgTyping from './msg_typing.jsx';\n\nfunction makeMapStateToProps() {\n    const getUsersTypingByChannelAndPost = makeGetUsersTypingByChannelAndPost();\n\n    return function mapStateToProps(state, ownProps) {\n        const typingUsers = getUsersTypingByChannelAndPost(state, {channelId: ownProps.channelId, postId: ownProps.postId});\n\n        return {\n            typingUsers,\n        };\n    };\n}\n\nexport default connect(makeMapStateToProps)(MsgTyping);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class PostDeletedModal extends React.Component {\n    static propTypes = {\n\n        /**\n         * Determines whether this modal should be shown or not\n         */\n        show: PropTypes.bool.isRequired,\n\n        /**\n         * Function that is called when modal is hidden\n         */\n        onHide: PropTypes.func.isRequired,\n    };\n\n    shouldComponentUpdate(nextProps) {\n        return nextProps.show !== this.props.show;\n    }\n\n    render() {\n        return (\n            <Modal\n                show={this.props.show}\n                onHide={this.props.onHide}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title>\n                        <FormattedMessage\n                            id='post_delete.notPosted'\n                            defaultMessage='Comment could not be posted'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <p>\n                        <FormattedMessage\n                            id='post_delete.someone'\n                            defaultMessage='Someone deleted the message on which you tried to post a comment.'\n                        />\n                    </p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        type='button'\n                        className='btn btn-primary'\n                        autoFocus={true}\n                        onClick={this.props.onHide}\n                    >\n                        <FormattedMessage\n                            id='post_delete.okay'\n                            defaultMessage='Okay'\n                        />\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {sortFileInfos} from 'mattermost-redux/utils/file_utils';\n\nimport * as GlobalActions from 'actions/global_actions.jsx';\n\nimport Constants from 'utils/constants.jsx';\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport {containsAtChannel, postMessageOnKeyPress, shouldFocusMainTextbox} from 'utils/post_utils.jsx';\n\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport EmojiPickerOverlay from 'components/emoji_picker/emoji_picker_overlay.jsx';\nimport FilePreview from 'components/file_preview.jsx';\nimport FileUpload from 'components/file_upload';\nimport MsgTyping from 'components/msg_typing';\nimport PostDeletedModal from 'components/post_deleted_modal.jsx';\nimport EmojiIcon from 'components/svg/emoji_icon';\nimport Textbox from 'components/textbox.jsx';\n\nexport default class CreateComment extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The channel for which this comment is a part of\n         */\n        channelId: PropTypes.string.isRequired,\n\n        /**\n         * The number of channel members\n         */\n        channelMembersCount: PropTypes.number.isRequired,\n\n        /**\n         * The id of the parent post\n         */\n        rootId: PropTypes.string.isRequired,\n\n        /**\n         * True if the root message was deleted\n         */\n        rootDeleted: PropTypes.bool.isRequired,\n\n        /**\n         * The current history message selected\n         */\n        messageInHistory: PropTypes.string,\n\n        /**\n         * The current draft of the comment\n         */\n        draft: PropTypes.shape({\n            message: PropTypes.string.isRequired,\n            uploadsInProgress: PropTypes.array.isRequired,\n            fileInfos: PropTypes.array.isRequired,\n        }).isRequired,\n\n        /**\n         * Whether the submit button is enabled\n         */\n        enableAddButton: PropTypes.bool.isRequired,\n\n        /**\n         * Force message submission on CTRL/CMD + ENTER\n         */\n        codeBlockOnCtrlEnter: PropTypes.bool,\n\n        /**\n         * Set to force form submission on CTRL/CMD + ENTER instead of ENTER\n         */\n        ctrlSend: PropTypes.bool,\n\n        /**\n         * The id of the latest post in this channel\n         */\n        latestPostId: PropTypes.string,\n        locale: PropTypes.string.isRequired,\n\n        /**\n         * A function returning a ref to the sidebar\n         */\n        getSidebarBody: PropTypes.func,\n\n        /**\n         * Create post error id\n         */\n        createPostErrorId: PropTypes.string,\n\n        /**\n         * Called to clear file uploads in progress\n         */\n        clearCommentDraftUploads: PropTypes.func.isRequired,\n\n        /**\n         * Called when comment draft needs to be updated\n         */\n        onUpdateCommentDraft: PropTypes.func.isRequired,\n\n        /**\n         * Called when comment draft needs to be updated for an specific root ID\n         */\n        updateCommentDraftWithRootId: PropTypes.func.isRequired,\n\n        /**\n         * Called when submitting the comment\n         */\n        onSubmit: PropTypes.func.isRequired,\n\n        /**\n         * Called when resetting comment message history index\n         */\n        onResetHistoryIndex: PropTypes.func.isRequired,\n\n        /**\n         * Called when navigating back through comment message history\n         */\n        onMoveHistoryIndexBack: PropTypes.func.isRequired,\n\n        /**\n         * Called when navigating forward through comment message history\n         */\n        onMoveHistoryIndexForward: PropTypes.func.isRequired,\n\n        /**\n         * Called to initiate editing the user's latest post\n         */\n        onEditLatestPost: PropTypes.func.isRequired,\n\n        /**\n         * Reset state of createPost request\n         */\n        resetCreatePostRequest: PropTypes.func.isRequired,\n\n        /**\n         * Set if channel is read only\n         */\n        readOnlyChannel: PropTypes.bool,\n\n        /**\n         * Set if @channel should warn in this channel.\n         */\n        enableConfirmNotificationsToChannel: PropTypes.bool.isRequired,\n\n        /**\n         * Set if the emoji picker is enabled.\n         */\n        enableEmojiPicker: PropTypes.bool.isRequired,\n\n        /**\n         * Set if the gif picker is enabled.\n         */\n        enableGifPicker: PropTypes.bool.isRequired,\n\n        /**\n         * The maximum length of a post\n         */\n        maxPostSize: PropTypes.number.isRequired,\n        rhsExpanded: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showPostDeletedModal: false,\n            showConfirmModal: false,\n            showEmojiPicker: false,\n            draft: {\n                message: '',\n                uploadsInProgress: [],\n                fileInfos: [],\n            },\n        };\n\n        this.lastBlurAt = 0;\n        this.draftsForPost = {};\n    }\n\n    UNSAFE_componentWillMount() { // eslint-disable-line camelcase\n        this.props.clearCommentDraftUploads();\n        this.props.onResetHistoryIndex();\n        this.setState({draft: {...this.props.draft, uploadsInProgress: []}});\n    }\n\n    componentDidMount() {\n        this.focusTextbox();\n        document.addEventListener('keydown', this.focusTextboxIfNecessary);\n    }\n\n    componentWillUnmount() {\n        this.props.resetCreatePostRequest();\n        document.removeEventListener('keydown', this.focusTextboxIfNecessary);\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) { // eslint-disable-line camelcase\n        if (newProps.createPostErrorId === 'api.post.create_post.root_id.app_error' && newProps.createPostErrorId !== this.props.createPostErrorId) {\n            this.showPostDeletedModal();\n        }\n        if (newProps.rootId !== this.props.rootId) {\n            this.setState({draft: {...newProps.draft, uploadsInProgress: []}});\n        }\n\n        if (this.props.messageInHistory !== newProps.messageInHistory) {\n            this.setState({draft: newProps.draft});\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.draft.uploadsInProgress.length < this.state.draft.uploadsInProgress.length) {\n            this.scrollToBottom();\n        }\n\n        if (prevProps.rootId !== this.props.rootId) {\n            this.focusTextbox();\n        }\n    }\n\n    focusTextboxIfNecessary = (e) => {\n        // Should only focus if RHS is expanded\n        if (!this.props.rhsExpanded) {\n            return;\n        }\n\n        // Bit of a hack to not steal focus from the channel switch modal if it's open\n        // This is a special case as the channel switch modal does not enforce focus like\n        // most modals do\n        if (document.getElementsByClassName('channel-switch-modal').length) {\n            return;\n        }\n\n        if (shouldFocusMainTextbox(e, document.activeElement)) {\n            this.focusTextbox();\n        }\n    }\n\n    handleNotifyAllConfirmation = (e) => {\n        this.hideNotifyAllModal();\n        this.doSubmit(e);\n    }\n\n    hideNotifyAllModal = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    showNotifyAllModal = () => {\n        this.setState({showConfirmModal: true});\n    }\n\n    toggleEmojiPicker = () => {\n        this.setState({showEmojiPicker: !this.state.showEmojiPicker});\n    }\n\n    hideEmojiPicker = () => {\n        this.setState({showEmojiPicker: false});\n    }\n\n    handleEmojiClick = (emoji) => {\n        const emojiAlias = emoji.name || emoji.aliases[0];\n\n        if (!emojiAlias) {\n            //Oops.. There went something wrong\n            return;\n        }\n\n        const {draft} = this.state;\n\n        let newMessage = '';\n        if (draft.message === '') {\n            newMessage = `:${emojiAlias}: `;\n        } else if ((/\\s+$/).test(draft.message)) {\n            // Check whether there is already a blank at the end of the current message\n            newMessage = `${draft.message}:${emojiAlias}: `;\n        } else {\n            newMessage = `${draft.message} :${emojiAlias}: `;\n        }\n\n        const modifiedDraft = {\n            ...draft,\n            message: newMessage,\n        };\n\n        this.props.onUpdateCommentDraft(modifiedDraft);\n        this.draftsForPost[this.props.rootId] = modifiedDraft;\n\n        this.setState({\n            showEmojiPicker: false,\n            draft: modifiedDraft,\n        });\n\n        this.focusTextbox();\n    }\n\n    handleGifClick = (gif) => {\n        const {draft} = this.state;\n\n        let newMessage = '';\n        if (draft.message === '') {\n            newMessage = gif;\n        } else if ((/\\s+$/).test(draft.message)) {\n            // Check whether there is already a blank at the end of the current message\n            newMessage = `${draft.message}${gif} `;\n        } else {\n            newMessage = `${draft.message} ${gif} `;\n        }\n\n        const modifiedDraft = {\n            ...draft,\n            message: newMessage,\n        };\n\n        this.props.onUpdateCommentDraft(modifiedDraft);\n        this.draftsForPost[this.props.rootId] = modifiedDraft;\n\n        this.setState({\n            showEmojiPicker: false,\n            draft: modifiedDraft,\n        });\n\n        this.focusTextbox();\n    }\n\n    handlePostError = (postError) => {\n        this.setState({postError});\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (this.props.enableConfirmNotificationsToChannel &&\n            this.props.channelMembersCount > Constants.NOTIFY_ALL_MEMBERS &&\n            containsAtChannel(this.state.draft.message)) {\n            this.showNotifyAllModal();\n            return;\n        }\n\n        await this.doSubmit(e);\n    }\n\n    doSubmit = async (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        const {enableAddButton} = this.props;\n        const {draft} = this.state;\n\n        if (!enableAddButton) {\n            return;\n        }\n\n        if (draft.uploadsInProgress.length > 0) {\n            return;\n        }\n\n        if (this.state.postError) {\n            this.setState({errorClass: 'animation--highlight'});\n            setTimeout(() => {\n                this.setState({errorClass: null});\n            }, Constants.ANIMATION_TIMEOUT);\n            return;\n        }\n\n        if (this.props.rootDeleted) {\n            this.showPostDeletedModal();\n            return;\n        }\n\n        const fasterThanHumanWillClick = 150;\n        const forceFocus = (Date.now() - this.lastBlurAt < fasterThanHumanWillClick);\n        this.focusTextbox(forceFocus);\n\n        try {\n            await this.props.onSubmit();\n\n            this.setState({\n                postError: null,\n                serverError: null,\n            });\n        } catch (err) {\n            this.setState({serverError: err.message});\n            return;\n        }\n\n        this.setState({draft: {...this.props.draft, uploadsInProgress: []}});\n    }\n\n    commentMsgKeyPress = (e) => {\n        const {\n            ctrlSend,\n            codeBlockOnCtrlEnter,\n            channelId,\n            rootId,\n        } = this.props;\n\n        const {allowSending, withClosedCodeBlock, message} = postMessageOnKeyPress(e, this.state.draft.message, ctrlSend, codeBlockOnCtrlEnter);\n\n        if (allowSending) {\n            e.persist();\n            this.refs.textbox.blur();\n\n            if (withClosedCodeBlock && message) {\n                const {draft} = this.state;\n                const updatedDraft = {...draft, message};\n                this.props.onUpdateCommentDraft(updatedDraft);\n                this.setState({draft: updatedDraft}, () => this.handleSubmit(e));\n                this.draftsForPost[this.props.rootId] = updatedDraft;\n            } else {\n                this.handleSubmit(e);\n            }\n        }\n\n        GlobalActions.emitLocalUserTypingEvent(channelId, rootId);\n    }\n\n    scrollToBottom = () => {\n        const $el = $('.post-right__scroll');\n        if ($el[0]) {\n            $el.parent().scrollTop($el[0].scrollHeight);\n        }\n    }\n\n    handleChange = (e) => {\n        const message = e.target.value;\n\n        const {draft} = this.state;\n        const updatedDraft = {...draft, message};\n        this.props.onUpdateCommentDraft(updatedDraft);\n        this.setState({draft: updatedDraft}, () => {\n            this.scrollToBottom();\n        });\n        this.draftsForPost[this.props.rootId] = updatedDraft;\n    }\n\n    handleKeyDown = (e) => {\n        if (\n            (this.props.ctrlSend || this.props.codeBlockOnCtrlEnter) &&\n            Utils.isKeyPressed(e, Constants.KeyCodes.ENTER) &&\n            (e.ctrlKey || e.metaKey)\n        ) {\n            this.commentMsgKeyPress(e);\n            return;\n        }\n\n        const {draft} = this.state;\n        const {message} = draft;\n\n        if (!e.ctrlKey && !e.metaKey && !e.altKey && !e.shiftKey && Utils.isKeyPressed(e, Constants.KeyCodes.UP) && message === '') {\n            e.preventDefault();\n            if (this.refs.textbox) {\n                this.refs.textbox.blur();\n            }\n\n            const {data: canEditNow} = this.props.onEditLatestPost();\n            if (!canEditNow) {\n                this.focusTextbox(true);\n            }\n        }\n\n        if ((e.ctrlKey || e.metaKey) && !e.altKey && !e.shiftKey) {\n            if (Utils.isKeyPressed(e, Constants.KeyCodes.UP)) {\n                e.preventDefault();\n                this.props.onMoveHistoryIndexBack();\n            } else if (Utils.isKeyPressed(e, Constants.KeyCodes.DOWN)) {\n                e.preventDefault();\n                this.props.onMoveHistoryIndexForward();\n            }\n        }\n    }\n\n    handleFileUploadChange = () => {\n        this.focusTextbox();\n    }\n\n    handleUploadStart = (clientIds) => {\n        const {draft} = this.state;\n        const uploadsInProgress = [...draft.uploadsInProgress, ...clientIds];\n\n        const modifiedDraft = {\n            ...draft,\n            uploadsInProgress,\n        };\n        this.props.onUpdateCommentDraft(modifiedDraft);\n        this.setState({draft: modifiedDraft});\n        this.draftsForPost[this.props.rootId] = modifiedDraft;\n\n        // this is a bit redundant with the code that sets focus when the file input is clicked,\n        // but this also resets the focus after a drag and drop\n        this.focusTextbox();\n    }\n\n    handleFileUploadComplete = (fileInfos, clientIds, channelId, rootId) => {\n        const draft = this.draftsForPost[rootId];\n        const uploadsInProgress = [...draft.uploadsInProgress];\n        const newFileInfos = sortFileInfos([...draft.fileInfos, ...fileInfos], this.props.locale);\n\n        // remove each finished file from uploads\n        for (let i = 0; i < clientIds.length; i++) {\n            const index = uploadsInProgress.indexOf(clientIds[i]);\n\n            if (index !== -1) {\n                uploadsInProgress.splice(index, 1);\n            }\n        }\n\n        const modifiedDraft = {\n            ...draft,\n            fileInfos: newFileInfos,\n            uploadsInProgress,\n        };\n        this.props.updateCommentDraftWithRootId(rootId, modifiedDraft);\n        this.draftsForPost[rootId] = modifiedDraft;\n        if (this.props.rootId === rootId) {\n            this.setState({draft: modifiedDraft});\n        }\n\n        // Focus on preview if needed/possible - if user has switched teams since starting the file upload,\n        // the preview will be undefined and the switch will fail\n        if (typeof this.refs.preview != 'undefined' && this.refs.preview) {\n            this.refs.preview.refs.container.scrollIntoView();\n        }\n    }\n\n    handleUploadError = (err, clientId = -1, rootId = -1) => {\n        if (clientId !== -1) {\n            const draft = {...this.draftsForPost[rootId]};\n            const uploadsInProgress = [...draft.uploadsInProgress];\n\n            const index = uploadsInProgress.indexOf(clientId);\n            if (index !== -1) {\n                uploadsInProgress.splice(index, 1);\n            }\n\n            const modifiedDraft = {\n                ...draft,\n                uploadsInProgress,\n            };\n            this.props.updateCommentDraftWithRootId(rootId, modifiedDraft);\n            this.draftsForPost[rootId] = modifiedDraft;\n            if (this.props.rootId === rootId) {\n                this.setState({draft: modifiedDraft});\n            }\n        }\n\n        this.setState({serverError: err});\n    }\n\n    removePreview = (id) => {\n        const {draft} = this.state;\n        const fileInfos = [...draft.fileInfos];\n        const uploadsInProgress = [...draft.uploadsInProgress];\n\n        // Clear previous errors\n        this.handleUploadError(null);\n\n        // id can either be the id of an uploaded file or the client id of an in progress upload\n        let index = fileInfos.findIndex((info) => info.id === id);\n        if (index === -1) {\n            index = uploadsInProgress.indexOf(id);\n\n            if (index !== -1) {\n                uploadsInProgress.splice(index, 1);\n\n                if (this.refs.fileUpload && this.refs.fileUpload.getWrappedInstance()) {\n                    this.refs.fileUpload.getWrappedInstance().cancelUpload(id);\n                }\n            }\n        } else {\n            fileInfos.splice(index, 1);\n        }\n\n        const modifiedDraft = {\n            ...draft,\n            fileInfos,\n            uploadsInProgress,\n        };\n\n        this.props.onUpdateCommentDraft(modifiedDraft);\n        this.setState({draft: modifiedDraft});\n        this.draftsForPost[this.props.rootId] = modifiedDraft;\n\n        this.handleFileUploadChange();\n    }\n\n    getFileCount = () => {\n        const {\n            draft: {\n                fileInfos,\n                uploadsInProgress,\n            },\n        } = this.state;\n        return fileInfos.length + uploadsInProgress.length;\n    }\n\n    getFileUploadTarget = () => {\n        return this.refs.textbox;\n    }\n\n    getCreateCommentControls = () => {\n        return this.refs.createCommentControls;\n    }\n\n    focusTextbox = (keepFocus = false) => {\n        if (this.refs.textbox && (keepFocus || !UserAgent.isMobile())) {\n            this.refs.textbox.focus();\n        }\n    }\n\n    showPostDeletedModal = () => {\n        this.setState({\n            showPostDeletedModal: true,\n        });\n    }\n\n    hidePostDeletedModal = () => {\n        this.setState({\n            showPostDeletedModal: false,\n        });\n\n        this.props.resetCreatePostRequest();\n    }\n\n    handleBlur = () => {\n        this.lastBlurAt = Date.now();\n    }\n\n    render() {\n        const {draft} = this.state;\n        const {readOnlyChannel} = this.props;\n\n        const notifyAllTitle = (\n            <FormattedMessage\n                id='notify_all.title.confirm'\n                defaultMessage='Confirm sending notifications to entire channel'\n            />\n        );\n\n        const notifyAllConfirm = (\n            <FormattedMessage\n                id='notify_all.confirm'\n                defaultMessage='Confirm'\n            />\n        );\n\n        const notifyAllMessage = (\n            <FormattedMessage\n                id='notify_all.question'\n                defaultMessage='By using @all or @channel you are about to send notifications to {totalMembers} people. Are you sure you want to do this?'\n                values={{\n                    totalMembers: this.props.channelMembersCount - 1,\n                }}\n            />\n        );\n\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div className='form-group has-error'>\n                    <label className='control-label'>{this.state.serverError}</label>\n                </div>\n            );\n        }\n\n        let postError = null;\n        if (this.state.postError) {\n            const postErrorClass = 'post-error' + (this.state.errorClass ? (' ' + this.state.errorClass) : '');\n            postError = <label className={postErrorClass}>{this.state.postError}</label>;\n        }\n\n        let preview = null;\n        if (!readOnlyChannel && (draft.fileInfos.length > 0 || draft.uploadsInProgress.length > 0)) {\n            preview = (\n                <FilePreview\n                    fileInfos={draft.fileInfos}\n                    onRemove={this.removePreview}\n                    uploadsInProgress={draft.uploadsInProgress}\n                    ref='preview'\n                />\n            );\n        }\n\n        let uploadsInProgressText = null;\n        if (draft.uploadsInProgress.length > 0) {\n            uploadsInProgressText = (\n                <span className='pull-right post-right-comments-upload-in-progress'>\n                    {draft.uploadsInProgress.length === 1 ? (\n                        <FormattedMessage\n                            id='create_comment.file'\n                            defaultMessage='File uploading'\n                        />\n                    ) : (\n                        <FormattedMessage\n                            id='create_comment.files'\n                            defaultMessage='Files uploading'\n                        />\n                    )}\n                </span>\n            );\n        }\n\n        let addButtonClass = 'btn btn-primary comment-btn pull-right';\n        if (!this.props.enableAddButton) {\n            addButtonClass += ' disabled';\n        }\n\n        let fileUpload;\n        if (!readOnlyChannel) {\n            fileUpload = (\n                <FileUpload\n                    ref='fileUpload'\n                    fileCount={this.getFileCount()}\n                    getTarget={this.getFileUploadTarget}\n                    onFileUploadChange={this.handleFileUploadChange}\n                    onUploadStart={this.handleUploadStart}\n                    onFileUpload={this.handleFileUploadComplete}\n                    onUploadError={this.handleUploadError}\n                    rootId={this.props.rootId}\n                    postType='comment'\n                />\n            );\n        }\n\n        let emojiPicker = null;\n        if (this.props.enableEmojiPicker && !readOnlyChannel) {\n            emojiPicker = (\n                <span\n                    role='button'\n                    tabIndex='0'\n                    aria-label={Utils.localizeMessage('create_post.open_emoji_picker', 'Open emoji picker')}\n                    className='emoji-picker__container'\n                >\n                    <EmojiPickerOverlay\n                        show={this.state.showEmojiPicker}\n                        container={this.props.getSidebarBody}\n                        target={this.getCreateCommentControls}\n                        onHide={this.hideEmojiPicker}\n                        onEmojiClick={this.handleEmojiClick}\n                        onGifClick={this.handleGifClick}\n                        enableGifPicker={this.props.enableGifPicker}\n                        rightOffset={15}\n                        topOffset={55}\n                    />\n                    <EmojiIcon\n                        className={'icon icon--emoji emoji-rhs ' + (this.state.showEmojiPicker ? 'active' : '')}\n                        onClick={this.toggleEmojiPicker}\n                    />\n                </span>\n            );\n        }\n\n        let createMessage;\n        if (readOnlyChannel) {\n            createMessage = Utils.localizeMessage('create_post.read_only', 'This channel is read-only. Only members with permission can post here.');\n        } else {\n            createMessage = Utils.localizeMessage('create_comment.addComment', 'Add a comment...');\n        }\n\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div className='post-create'>\n                    <div\n                        id={this.props.rootId}\n                        className='post-create-body comment-create-body'\n                    >\n                        <div className='post-body__cell'>\n                            <Textbox\n                                onChange={this.handleChange}\n                                onKeyPress={this.commentMsgKeyPress}\n                                onKeyDown={this.handleKeyDown}\n                                handlePostError={this.handlePostError}\n                                value={readOnlyChannel ? '' : draft.message}\n                                onBlur={this.handleBlur}\n                                createMessage={createMessage}\n                                emojiEnabled={this.props.enableEmojiPicker}\n                                initialText=''\n                                channelId={this.props.channelId}\n                                isRHS={true}\n                                popoverMentionKeyClick={true}\n                                id='reply_textbox'\n                                ref='textbox'\n                                disabled={readOnlyChannel}\n                                characterLimit={this.props.maxPostSize}\n                            />\n                            <span\n                                ref='createCommentControls'\n                                className='post-body__actions'\n                            >\n                                {fileUpload}\n                                {emojiPicker}\n                            </span>\n                        </div>\n                    </div>\n                    <MsgTyping\n                        channelId={this.props.channelId}\n                        postId={this.props.rootId}\n                    />\n                    <div className='post-create-footer'>\n                        <input\n                            type='button'\n                            className={addButtonClass}\n                            value={Utils.localizeMessage('create_comment.comment', 'Add Comment')}\n                            onClick={this.handleSubmit}\n                        />\n                        {uploadsInProgressText}\n                        {postError}\n                        {preview}\n                        {serverError}\n                    </div>\n                </div>\n                <PostDeletedModal\n                    show={this.state.showPostDeletedModal}\n                    onHide={this.hidePostDeletedModal}\n                />\n                <ConfirmModal\n                    title={notifyAllTitle}\n                    message={notifyAllMessage}\n                    confirmButtonText={notifyAllConfirm}\n                    show={this.state.showConfirmModal}\n                    onConfirm={this.handleNotifyAllConfirmation}\n                    onCancel={this.hideNotifyAllModal}\n                />\n            </form>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {isCurrentUserSystemAdmin} from 'mattermost-redux/selectors/entities/users';\nimport {getBool} from 'mattermost-redux/selectors/entities/preferences';\nimport {getAllChannelStats} from 'mattermost-redux/selectors/entities/channels';\nimport {makeGetMessageInHistoryItem} from 'mattermost-redux/selectors/entities/posts';\nimport {resetCreatePostRequest, resetHistoryIndex} from 'mattermost-redux/actions/posts';\nimport {Preferences, Posts} from 'mattermost-redux/constants';\n\nimport {Constants, StoragePrefixes} from 'utils/constants.jsx';\nimport {getCurrentLocale} from 'selectors/i18n';\n\nimport {\n    clearCommentDraftUploads,\n    updateCommentDraft,\n    makeOnMoveHistoryIndex,\n    makeOnSubmit,\n    makeOnEditLatestPost,\n} from 'actions/views/create_comment';\nimport {getPostDraft, getIsRhsExpanded} from 'selectors/rhs';\n\nimport CreateComment from './create_comment.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const err = state.requests.posts.createPost.error || {};\n\n    const draft = getPostDraft(state, StoragePrefixes.COMMENT_DRAFT, ownProps.rootId);\n    const enableAddButton = draft.message.trim().length !== 0 || draft.fileInfos.length !== 0;\n\n    const channelMembersCount = getAllChannelStats(state)[ownProps.channelId] ? getAllChannelStats(state)[ownProps.channelId].member_count : 1;\n    const messageInHistory = makeGetMessageInHistoryItem(Posts.MESSAGE_TYPES.COMMENT)(state);\n\n    const channel = state.entities.channels.channels[ownProps.channelId] || {};\n\n    const config = getConfig(state);\n    const enableConfirmNotificationsToChannel = config.EnableConfirmNotificationsToChannel === 'true';\n    const enableEmojiPicker = config.EnableEmojiPicker === 'true';\n    const enableGifPicker = config.EnableGifPicker === 'true';\n\n    return {\n        draft,\n        messageInHistory,\n        enableAddButton,\n        channelMembersCount,\n        codeBlockOnCtrlEnter: getBool(state, Preferences.CATEGORY_ADVANCED_SETTINGS, 'code_block_ctrl_enter', true),\n        ctrlSend: getBool(state, Preferences.CATEGORY_ADVANCED_SETTINGS, 'send_on_ctrl_enter'),\n        createPostErrorId: err.server_error_id,\n        readOnlyChannel: !isCurrentUserSystemAdmin(state) && config.ExperimentalTownSquareIsReadOnly === 'true' && channel.name === Constants.DEFAULT_CHANNEL,\n        enableConfirmNotificationsToChannel,\n        enableEmojiPicker,\n        enableGifPicker,\n        locale: getCurrentLocale(state),\n        maxPostSize: parseInt(config.MaxPostSize, 10) || Constants.DEFAULT_CHARACTER_LIMIT,\n        rhsExpanded: getIsRhsExpanded(state),\n    };\n}\n\nfunction makeOnUpdateCommentDraft(rootId) {\n    return (draft) => updateCommentDraft(rootId, draft);\n}\n\nfunction makeMapDispatchToProps() {\n    let onUpdateCommentDraft;\n    let onSubmit;\n    let onMoveHistoryIndexBack;\n    let onMoveHistoryIndexForward;\n    let onEditLatestPost;\n\n    function onResetHistoryIndex() {\n        return resetHistoryIndex(Posts.MESSAGE_TYPES.COMMENT);\n    }\n\n    let rootId;\n    let channelId;\n    let latestPostId;\n\n    return (dispatch, ownProps) => {\n        if (rootId !== ownProps.rootId) {\n            onUpdateCommentDraft = makeOnUpdateCommentDraft(ownProps.rootId);\n            onMoveHistoryIndexBack = makeOnMoveHistoryIndex(ownProps.rootId, -1);\n            onMoveHistoryIndexForward = makeOnMoveHistoryIndex(ownProps.rootId, 1);\n        }\n\n        if (rootId !== ownProps.rootId || channelId !== ownProps.channelId) {\n            onEditLatestPost = makeOnEditLatestPost(ownProps.channelId, ownProps.rootId);\n        }\n\n        if (rootId !== ownProps.rootId || channelId !== ownProps.channelId || latestPostId !== ownProps.latestPostId) {\n            onSubmit = makeOnSubmit(ownProps.channelId, ownProps.rootId, ownProps.latestPostId);\n        }\n\n        rootId = ownProps.rootId;\n        channelId = ownProps.channelId;\n        latestPostId = ownProps.latestPostId;\n\n        return bindActionCreators({\n            clearCommentDraftUploads,\n            onUpdateCommentDraft,\n            updateCommentDraftWithRootId: updateCommentDraft,\n            onSubmit,\n            onResetHistoryIndex,\n            onMoveHistoryIndexBack,\n            onMoveHistoryIndexForward,\n            onEditLatestPost,\n            resetCreatePostRequest,\n        }, dispatch);\n    };\n}\n\nexport default connect(mapStateToProps, makeMapDispatchToProps)(CreateComment);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedDate} from 'react-intl';\n\nexport default class DateSeparator extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * The date to display in the separator\n         */\n        date: PropTypes.instanceOf(Date),\n    }\n\n    render() {\n        return (\n            <div\n                className='date-separator'\n            >\n                <hr className='separator__hr'/>\n                <div className='separator__text'>\n                    <FormattedDate\n                        value={this.props.date}\n                        weekday='short'\n                        month='short'\n                        day='2-digit'\n                        year='numeric'\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedDate} from 'react-intl';\n\nexport default class FloatingTimestamp extends React.PureComponent {\n    static propTypes = {\n        isScrolling: PropTypes.bool.isRequired,\n        isMobile: PropTypes.bool,\n        createAt: PropTypes.number,\n        isRhsPost: PropTypes.bool,\n    }\n\n    render() {\n        if (!this.props.isMobile) {\n            return <noscript/>;\n        }\n\n        if (this.props.createAt === 0) {\n            return <noscript/>;\n        }\n\n        const dateString = (\n            <FormattedDate\n                value={this.props.createAt}\n                weekday='short'\n                day='2-digit'\n                month='short'\n                year='numeric'\n            />\n        );\n\n        let className = 'post-list__timestamp';\n        if (this.props.isScrolling) {\n            className += ' scrolling';\n        }\n\n        if (this.props.isRhsPost) {\n            className += ' rhs';\n        }\n\n        return (\n            <div className={className}>\n                <div>\n                    <span>{dateString}</span>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class DotMenuItem extends React.PureComponent {\n    static propTypes = {\n        handleMenuItemActivated: PropTypes.func.isRequired,\n        menuItemText: PropTypes.oneOfType([\n            PropTypes.element,\n            PropTypes.string,\n        ]),\n    };\n\n    render() {\n        return (\n            <li\n                role='presentation'\n            >\n                <button\n                    className='style--none'\n                    role='menuitem'\n                    onClick={this.props.handleMenuItemActivated}\n                >\n                    {this.props.menuItemText}\n                </button>\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\n\nimport {showGetPostLinkModal} from 'actions/global_actions.jsx';\n\nimport {ModalIdentifiers} from 'utils/constants.jsx';\nimport DeletePostModal from 'components/delete_post_modal';\nimport DelayedAction from 'utils/delayed_action.jsx';\nimport * as PostUtils from 'utils/post_utils.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport Pluggable from 'plugins/pluggable';\n\nimport DotMenuItem from './dot_menu_item.jsx';\n\nexport default class DotMenu extends Component {\n    static propTypes = {\n        post: PropTypes.object.isRequired,\n        location: PropTypes.oneOf(['CENTER', 'RHS_ROOT', 'RHS_COMMENT', 'SEARCH']).isRequired,\n        commentCount: PropTypes.number,\n        isFlagged: PropTypes.bool,\n        handleCommentClick: PropTypes.func,\n        handleDropdownOpened: PropTypes.func,\n        isReadOnly: PropTypes.bool,\n        pluginMenuItems: PropTypes.arrayOf(PropTypes.object),\n\n        actions: PropTypes.shape({\n\n            /**\n             * Function flag the post\n             */\n            flagPost: PropTypes.func.isRequired,\n\n            /**\n             * Function to unflag the post\n             */\n            unflagPost: PropTypes.func.isRequired,\n\n            /**\n             * Function to set the editing post\n             */\n            setEditingPost: PropTypes.func.isRequired,\n\n            /**\n             * Function to pin the post\n             */\n            pinPost: PropTypes.func.isRequired,\n\n            /**\n             * Function to unpin the post\n             */\n            unpinPost: PropTypes.func.isRequired,\n\n            /**\n             * Function to open a modal\n             */\n            openModal: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        post: {},\n        commentCount: 0,\n        isFlagged: false,\n        isReadOnly: false,\n        pluginMenuItems: [],\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.editDisableAction = new DelayedAction(this.handleEditDisable);\n\n        this.state = {\n            canDelete: PostUtils.canDeletePost(props.post),\n            canEdit: PostUtils.canEditPost(props.post, this.editDisableAction),\n        };\n        this.dotMenuId = props.location + '_dropdown_' + props.post.id;\n    }\n\n    componentDidMount() {\n        $('#' + this.dotMenuId).on('shown.bs.dropdown', this.handleDropdownOpened);\n        $('#' + this.dotMenuId).on('hidden.bs.dropdown', () => this.props.handleDropdownOpened(false));\n    }\n\n    componentWillUnmount() {\n        this.editDisableAction.cancel();\n    }\n\n    handleDropdownOpened = () => {\n        this.props.handleDropdownOpened(true);\n\n        let position = 0;\n        if (this.refs.dropdownToggle) {\n            position = $('#post-list').height() - $(this.refs.dropdownToggle).offset().top;\n        }\n\n        if (this.refs.dropdown) {\n            const dropdown = $(this.refs.dropdown);\n\n            if (position < dropdown.height()) {\n                dropdown.addClass('bottom');\n            }\n        }\n    }\n\n    handleEditDisable = () => {\n        this.setState({canEdit: false});\n    }\n\n    handleFlagMenuItemActivated = () => {\n        if (this.props.isFlagged) {\n            this.props.actions.unflagPost(this.props.post.id);\n        } else {\n            this.props.actions.flagPost(this.props.post.id);\n        }\n    }\n\n    handlePermalinkMenuItemActivated = (e) => {\n        e.preventDefault();\n        showGetPostLinkModal(this.props.post);\n    }\n\n    handlePinMenuItemActivated = () => {\n        if (this.props.post.is_pinned) {\n            this.props.actions.unpinPost(this.props.post.id);\n        } else {\n            this.props.actions.pinPost(this.props.post.id);\n        }\n    }\n\n    handleDeleteMenuItemActivated = (e) => {\n        e.preventDefault();\n\n        const deletePostModalData = {\n            ModalId: ModalIdentifiers.DELETE_POST,\n            dialogType: DeletePostModal,\n            dialogProps: {\n                post: this.props.post,\n                commentCount: this.props.commentCount,\n                isRHS: this.props.location === 'RHS_ROOT' || this.props.location === 'RHS_COMMENT',\n            },\n        };\n\n        this.props.actions.openModal(deletePostModalData);\n    }\n\n    handleEditMenuItemActivated = () => {\n        this.props.actions.setEditingPost(\n            this.props.post.id,\n            this.props.commentCount,\n            this.props.location === 'CENTER' ? 'post_textbox' : 'reply_textbox',\n            this.props.post.root_id ? Utils.localizeMessage('rhs_comment.comment', 'Comment') : Utils.localizeMessage('create_post.post', 'Post'),\n            this.props.location === 'RHS_ROOT' || this.props.location === 'RHS_COMMENT',\n        );\n    }\n\n    render() {\n        const isSystemMessage = PostUtils.isSystemMessage(this.props.post);\n        const isMobile = Utils.isMobile();\n        const canDelete = PostUtils.canDeletePost(this.props.post);\n        const canEdit = PostUtils.canEditPost(this.props.post, this.editDisableAction); // Fix this crazy\n\n        const menuItems = [];\n\n        if (isMobile && !isSystemMessage) {\n            let text = (\n                <FormattedMessage\n                    id={'rhs_root.mobile.flag'}\n                    defaultMessage={'Flag'}\n                />\n            );\n            if (this.props.isFlagged) {\n                text = (\n                    <FormattedMessage\n                        id={'rhs_root.mobile.unflag'}\n                        defaultMessage={'Unflag'}\n                    />\n                );\n            }\n            menuItems.push(\n                <DotMenuItem\n                    key={'flag'}\n                    menuItemText={text}\n                    handleMenuItemActivated={this.handleFlagMenuItemActivated}\n                />\n            );\n        }\n\n        if (!isSystemMessage) {\n            if (this.props.location === 'CENTER') {\n                menuItems.push(\n                    <DotMenuItem\n                        key={'reply'}\n                        menuItemText={\n                            <FormattedMessage\n                                id={'post_info.reply'}\n                                defaultMessage={'Reply'}\n                            />\n                        }\n                        handleMenuItemActivated={this.props.handleCommentClick}\n                    />\n                );\n            }\n\n            menuItems.push(\n                <DotMenuItem\n                    key={'permalink'}\n                    menuItemText={\n                        <FormattedMessage\n                            id={'post_info.permalink'}\n                            defaultMessage={'Permalink'}\n                        />\n                    }\n                    handleMenuItemActivated={this.handlePermalinkMenuItemActivated}\n                />\n            );\n            if (!this.props.isReadOnly) {\n                menuItems.push(\n                    <DotMenuItem\n                        key={'pin'}\n                        menuItemText={\n                            <FormattedMessage\n                                id={this.props.post.is_pinned ? t('post_info.unpin') : t('post_info.pin')}\n                                defaultMessage={'Pin'}\n                            />\n                        }\n                        handleMenuItemActivated={this.handlePinMenuItemActivated}\n                    />\n                );\n            }\n        }\n\n        if (canDelete) {\n            menuItems.push(\n                <DotMenuItem\n                    key={'delete'}\n                    menuItemText={\n                        <FormattedMessage\n                            id={'post_info.del'}\n                            defaultMessage={'Delete'}\n                        />\n                    }\n                    handleMenuItemActivated={this.handleDeleteMenuItemActivated}\n                />\n            );\n        }\n\n        if (canEdit) {\n            menuItems.push(\n                <DotMenuItem\n                    key={'edit'}\n                    menuItemText={\n                        <FormattedMessage\n                            id={'post_info.edit'}\n                            defaultMessage={'Edit'}\n                        />\n                    }\n                    handleMenuItemActivated={this.handleEditMenuItemActivated}\n                />\n            );\n        }\n\n        const pluginItems = this.props.pluginMenuItems.\n            filter((item) => {\n                return item.filter ? item.filter(this.props.post.id) : item;\n            }).\n            map((item) => {\n                return (\n                    <DotMenuItem\n                        key={item.id + '_pluginmenuitem'}\n                        menuItemText={item.text}\n                        handleMenuItemActivated={() => {\n                            if (item.action) {\n                                item.action(this.props.post.id);\n                            }\n                        }}\n                    />\n                );\n            });\n\n        if (menuItems.length === 0 && pluginItems.length === 0) {\n            return null;\n        }\n\n        const tooltip = (\n            <Tooltip\n                id='dotmenu-icon-tooltip'\n                className='hidden-xs'\n            >\n                <FormattedMessage\n                    id='post_info.dot_menu.tooltip.more_actions'\n                    defaultMessage='More Actions'\n                />\n            </Tooltip>\n        );\n\n        return (\n            <div\n                className='dropdown'\n                ref='dotMenu'\n            >\n                <div id={this.dotMenuId}>\n                    <OverlayTrigger\n                        className='hidden-xs'\n                        delayShow={500}\n                        placement='top'\n                        overlay={tooltip}\n                        rootClose={true}\n                    >\n                        <button\n                            ref='dropdownToggle'\n                            className='dropdown-toggle post__dropdown color--link style--none'\n                            type='button'\n                            data-toggle='dropdown'\n                            aria-expanded='false'\n                        />\n                    </OverlayTrigger>\n                    <div className='dropdown-menu__content'>\n                        <ul\n                            ref='dropdown'\n                            className='dropdown-menu'\n                            role='menu'\n                        >\n                            {menuItems}\n                            {pluginItems}\n                            <Pluggable\n                                postId={this.props.post.id}\n                                pluggableName='PostDropdownMenuItem'\n                            />\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {openModal} from 'actions/views/modals';\nimport {\n    flagPost,\n    unflagPost,\n    pinPost,\n    unpinPost,\n    setEditingPost,\n} from 'actions/post_actions.jsx';\n\nimport DotMenu from './dot_menu.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        pluginMenuItems: state.plugins.components.PostDropdownMenu,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            flagPost,\n            unflagPost,\n            setEditingPost,\n            pinPost,\n            unpinPost,\n            openModal,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DotMenu);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class DownloadIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='40px'\n                    height='40px'\n                    viewBox='0 0 42 42'\n                    role='icon'\n                    aria-label={localizeMessage('generic_icons.download', 'Download Icon')}\n                >\n                    <g\n                        stroke='inherit'\n                        strokeWidth='1'\n                        fill='none'\n                        fillRule='evenodd'\n                    >\n                        <g transform='translate(-986.000000, -1142.000000)'>\n                            <g transform='translate(50.000000, 1034.000000)'>\n                                <g transform='translate(539.000000, 54.000000)'>\n                                    <g transform='translate(398.000000, 55.000000)'>\n                                        <g\n                                            transform='translate(11.000000, 11.000000)'\n                                            fillRule='nonzero'\n                                            fill='inherit'\n                                        >\n                                            <path d='M8.7345,14.1405 C8.74725,14.1525 8.763,14.15775 8.7765,14.16825 C8.802,14.18775 8.82675,14.20875 8.85675,14.22075 C8.9025,14.24025 8.95125,14.25 9,14.25 C9.04875,14.25 9.0975,14.24025 9.14325,14.22075 C9.18975,14.20125 9.23175,14.17275 9.267,14.1375 L13.764,9.6405 C13.91025,9.49425 13.91025,9.2565 13.764,9.11025 C13.61775,8.964 13.38,8.964 13.23375,9.11025 L9.375,12.969 L9.375,0.375 C9.375,0.168 9.207,0 9,0 C8.793,0 8.625,0.168 8.625,0.375 L8.625,12.9705 L4.76475,9.11025 C4.6185,8.964 4.38075,8.964 4.2345,9.11025 C4.08825,9.2565 4.08825,9.49425 4.2345,9.6405 L8.7345,14.1405 Z M17.25,13.5 C17.043,13.5 16.875,13.668 16.875,13.875 L16.875,17.25 L1.125,17.25 L1.125,13.875 C1.125,13.668 0.957,13.5 0.75,13.5 C0.543,13.5 0.375,13.668 0.375,13.875 L0.375,17.625 C0.375,17.832 0.543,18 0.75,18 L17.25,18 C17.457,18 17.625,17.832 17.625,17.625 L17.625,13.875 C17.625,13.668 17.457,13.5 17.25,13.5 Z'/>\n                                        </g>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {getFileThumbnailUrl, getFileUrl} from 'mattermost-redux/utils/file_utils';\n\nimport Constants, {FileTypes} from 'utils/constants.jsx';\nimport {\n    getFileType,\n    getIconClassName,\n    isGIFImage,\n} from 'utils/utils.jsx';\n\nexport default class FileThumbnail extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * File detailed information\n         */\n        fileInfo: PropTypes.object.isRequired,\n    }\n\n    render() {\n        const {fileInfo} = this.props;\n        const type = getFileType(fileInfo.extension);\n\n        let thumbnail;\n        if (type === FileTypes.IMAGE) {\n            let className = 'post-image';\n\n            if (fileInfo.width < Constants.THUMBNAIL_WIDTH && fileInfo.height < Constants.THUMBNAIL_HEIGHT) {\n                className += ' small';\n            } else {\n                className += ' normal';\n            }\n\n            let thumbnailUrl = getFileThumbnailUrl(fileInfo.id);\n            if (isGIFImage(fileInfo.extension) && !fileInfo.has_preview_image) {\n                thumbnailUrl = getFileUrl(fileInfo.id);\n            }\n\n            return (\n                <div\n                    className={className}\n                    style={{\n                        backgroundImage: `url(${thumbnailUrl})`,\n                        backgroundSize: 'cover',\n                    }}\n                />\n            );\n        } else if (fileInfo.extension === FileTypes.SVG) {\n            thumbnail = (\n                <img\n                    className='post-image normal'\n                    src={getFileUrl(fileInfo.id)}\n                />\n            );\n        } else {\n            thumbnail = <div className={'file-icon ' + getIconClassName(type)}/>;\n        }\n\n        return thumbnail;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {getFileThumbnailUrl, getFileUrl} from 'mattermost-redux/utils/file_utils';\n\nimport {FileTypes} from 'utils/constants.jsx';\nimport {\n    trimFilename,\n} from 'utils/file_utils';\nimport {\n    fileSizeToString,\n    getFileType,\n    loadImage,\n} from 'utils/utils.jsx';\n\nimport DownloadIcon from 'components/svg/download_icon';\n\nimport FilenameOverlay from './filename_overlay.jsx';\nimport FileThumbnail from './file_thumbnail.jsx';\n\nexport default class FileAttachment extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * File detailed information\n         */\n        fileInfo: PropTypes.object.isRequired,\n\n        /*\n         * The index of this attachment preview in the parent FileAttachmentList\n         */\n        index: PropTypes.number.isRequired,\n\n        /*\n         * Handler for when the thumbnail is clicked passed the index above\n         */\n        handleImageClick: PropTypes.func,\n\n        /*\n         * Display in compact format\n         */\n        compactDisplay: PropTypes.bool,\n\n        canDownloadFiles: PropTypes.bool,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: getFileType(props.fileInfo.extension) !== FileTypes.IMAGE,\n        };\n    }\n\n    componentDidMount() {\n        this.loadFiles();\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (nextProps.fileInfo.id !== this.props.fileInfo.id) {\n            const extension = nextProps.fileInfo.extension;\n\n            this.setState({\n                loaded: getFileType(extension) !== FileTypes.IMAGE && extension !== FileTypes.SVG,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!this.state.loaded && this.props.fileInfo.id !== prevProps.fileInfo.id) {\n            this.loadFiles();\n        }\n    }\n\n    loadFiles = () => {\n        const fileInfo = this.props.fileInfo;\n        const fileType = getFileType(fileInfo.extension);\n\n        if (fileType === FileTypes.IMAGE) {\n            const thumbnailUrl = getFileThumbnailUrl(fileInfo.id);\n\n            loadImage(thumbnailUrl, this.handleImageLoaded);\n        } else if (fileInfo.extension === FileTypes.SVG) {\n            loadImage(getFileUrl(fileInfo.id), this.handleImageLoaded);\n        }\n    }\n\n    handleImageLoaded = () => {\n        this.setState({\n            loaded: true,\n        });\n    }\n\n    onAttachmentClick = (e) => {\n        e.preventDefault();\n        if (this.props.handleImageClick) {\n            this.props.handleImageClick(this.props.index);\n        }\n    }\n\n    render() {\n        const {\n            compactDisplay,\n            fileInfo,\n        } = this.props;\n\n        const trimmedFilename = trimFilename(fileInfo.name);\n        let fileThumbnail;\n        let fileDetail;\n        if (!compactDisplay) {\n            fileThumbnail = (\n                <a\n                    className='post-image__thumbnail'\n                    href='#'\n                    onClick={this.onAttachmentClick}\n                >\n                    {this.state.loaded ? (\n                        <FileThumbnail fileInfo={fileInfo}/>\n                    ) : (\n                        <div className='post-image__load'/>\n                    )}\n                </a>\n            );\n\n            fileDetail = (\n                <div\n                    className='post-image__detail_wrapper'\n                    onClick={this.onAttachmentClick}\n                >\n                    <div className='post-image__detail'>\n                        <span className={'post-image__name'}>\n                            {trimmedFilename}\n                        </span>\n                        <span className='post-image__type'>{fileInfo.extension.toUpperCase()}</span>\n                        <span className='post-image__size'>{fileSizeToString(fileInfo.size)}</span>\n                    </div>\n                </div>\n            );\n        }\n\n        let filenameOverlay;\n        if (this.props.canDownloadFiles) {\n            filenameOverlay = (\n                <FilenameOverlay\n                    fileInfo={fileInfo}\n                    compactDisplay={compactDisplay}\n                    canDownload={this.props.canDownloadFiles}\n                    handleImageClick={this.onAttachmentClick}\n                    iconClass={'post-image__download'}\n                >\n                    <DownloadIcon/>\n                </FilenameOverlay>\n            );\n        }\n\n        return (\n            <div className='post-image__column'>\n                {fileThumbnail}\n                <div className='post-image__details'>\n                    {fileDetail}\n                    {filenameOverlay}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {canDownloadFiles} from 'utils/file_utils.jsx';\n\nimport FileAttachment from './file_attachment.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    return {\n        canDownloadFiles: canDownloadFiles(config),\n    };\n}\n\nexport default connect(mapStateToProps)(FileAttachment);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport loadingGif from 'images/load.gif';\n\nexport default function LoadingImagePreview({loading, progress, containerClass}) {\n    let progressView = null;\n    if (progress) {\n        progressView = (\n            <span className='loader-percent'>\n                {`${loading} ${progress}%`}\n            </span>\n        );\n    }\n\n    return (\n        <div className={containerClass}>\n            <img\n                className='loader-image'\n                src={loadingGif}\n            />\n            {progressView}\n        </div>\n    );\n}\n\nLoadingImagePreview.propTypes = {\n\n    /**\n     * The percent number of the progress\n     */\n    progress: PropTypes.number,\n\n    /**\n     * The loading message to display\n     */\n    loading: PropTypes.string,\n\n    /**\n     * Loading style\n     */\n    containerClass: PropTypes.string,\n};\n\nLoadingImagePreview.defaultProps = {\n    containerClass: 'view-image__loading',\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport FileInfoPreview from 'components/file_info_preview';\n\nexport default class AudioVideoPreview extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * Compare file types\n        */\n        fileInfo: PropTypes.object.isRequired,\n\n        /**\n        *  URL of pdf file to output and compare to update props url\n        */\n        fileUrl: PropTypes.string.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleFileInfoChanged = this.handleFileInfoChanged.bind(this);\n        this.handleLoadError = this.handleLoadError.bind(this);\n\n        this.stop = this.stop.bind(this);\n\n        this.state = {\n            canPlay: true,\n        };\n    }\n\n    UNSAFE_componentWillMount() { // eslint-disable-line camelcase\n        this.handleFileInfoChanged(this.props.fileInfo);\n    }\n\n    componentDidMount() {\n        if (this.refs.source) {\n            $(ReactDOM.findDOMNode(this.refs.source)).one('error', this.handleLoadError);\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.fileUrl !== nextProps.fileUrl) {\n            this.handleFileInfoChanged(nextProps.fileInfo);\n        }\n    }\n\n    handleFileInfoChanged(fileInfo) {\n        let video = ReactDOM.findDOMNode(this.refs.video);\n        if (!video) {\n            video = document.createElement('video');\n        }\n\n        const canPlayType = video.canPlayType(fileInfo.mime_type);\n\n        this.setState({\n            canPlay: canPlayType === 'probably' || canPlayType === 'maybe',\n        });\n    }\n\n    componentDidUpdate() {\n        if (this.refs.source) {\n            $(ReactDOM.findDOMNode(this.refs.source)).one('error', this.handleLoadError);\n        }\n    }\n\n    handleLoadError() {\n        this.setState({\n            canPlay: false,\n        });\n    }\n\n    stop() {\n        if (this.refs.video) {\n            const video = ReactDOM.findDOMNode(this.refs.video);\n            video.pause();\n            video.currentTime = 0;\n        }\n    }\n\n    render() {\n        if (!this.state.canPlay) {\n            return (\n                <FileInfoPreview\n                    fileInfo={this.props.fileInfo}\n                    fileUrl={this.props.fileUrl}\n                />\n            );\n        }\n\n        let width = Constants.WEB_VIDEO_WIDTH;\n        let height = Constants.WEB_VIDEO_HEIGHT;\n        if (Utils.isMobile()) {\n            width = Constants.MOBILE_VIDEO_WIDTH;\n            height = Constants.MOBILE_VIDEO_HEIGHT;\n        }\n\n        // add a key to the video to prevent React from using an old video source while a new one is loading\n        return (\n            <video\n                key={this.props.fileInfo.id}\n                ref='video'\n                data-setup='{}'\n                controls='controls'\n                width={width}\n                height={height}\n            >\n                <source\n                    ref='source'\n                    src={this.props.fileUrl}\n                />\n            </video>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Constants from 'utils/constants.jsx';\nimport * as SyntaxHighlighting from 'utils/syntax_highlighting.jsx';\nimport loadingGif from 'images/load.gif';\n\nimport FileInfoPreview from 'components/file_info_preview';\n\nexport default class CodePreview extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.updateStateFromProps = this.updateStateFromProps.bind(this);\n        this.handleReceivedError = this.handleReceivedError.bind(this);\n        this.handleReceivedCode = this.handleReceivedCode.bind(this);\n\n        this.state = {\n            code: '',\n            lang: '',\n            loading: true,\n            success: true,\n        };\n    }\n\n    componentDidMount() {\n        this.updateStateFromProps(this.props);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.fileUrl !== nextProps.fileUrl) {\n            this.updateStateFromProps(nextProps);\n        }\n    }\n\n    updateStateFromProps(props) {\n        const usedLanguage = SyntaxHighlighting.getLanguageFromFileExtension(props.fileInfo.extension);\n\n        if (!usedLanguage || props.fileInfo.size > Constants.CODE_PREVIEW_MAX_FILE_SIZE) {\n            this.setState({code: '', lang: '', loading: false, success: false});\n            return;\n        }\n\n        this.setState({code: '', lang: usedLanguage, loading: true});\n\n        $.ajax({\n            async: true,\n            url: props.fileUrl,\n            type: 'GET',\n            dataType: 'text',\n            error: this.handleReceivedError,\n            success: this.handleReceivedCode,\n        });\n    }\n\n    handleReceivedCode(data) {\n        let code = data;\n        if (data.nodeName === '#document') {\n            code = new XMLSerializer().serializeToString(data);\n        }\n        this.setState({\n            code,\n            loading: false,\n            success: true,\n        });\n    }\n\n    handleReceivedError() {\n        this.setState({loading: false, success: false});\n    }\n\n    static supports(fileInfo) {\n        return Boolean(SyntaxHighlighting.getLanguageFromFileExtension(fileInfo.extension));\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (\n                <div className='view-image__loading'>\n                    <img\n                        className='loader-image'\n                        src={loadingGif}\n                    />\n                </div>\n            );\n        }\n\n        if (!this.state.success) {\n            return (\n                <FileInfoPreview\n                    fileInfo={this.props.fileInfo}\n                    fileUrl={this.props.fileUrl}\n                />\n            );\n        }\n\n        // add line numbers when viewing a code file preview\n        const lines = this.state.code.match(/\\r\\n|\\r|\\n|$/g).length;\n        let strlines = '';\n        for (let i = 1; i <= lines; i++) {\n            if (strlines) {\n                strlines += '\\n' + i;\n            } else {\n                strlines += i;\n            }\n        }\n\n        const language = SyntaxHighlighting.getLanguageName(this.state.lang);\n\n        const highlighted = SyntaxHighlighting.highlight(this.state.lang, this.state.code);\n\n        return (\n            <div className='post-code'>\n                <span className='post-code__language'>\n                    {`${this.props.fileInfo.name} - ${language}`}\n                </span>\n                <div className='post-code__container'>\n                    <code className='hljs'>\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <td className='post-code__lineno'>{strlines}</td>\n                                    <td dangerouslySetInnerHTML={{__html: highlighted}}/>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </code>\n                </div>\n            </div>\n        );\n    }\n}\n\nCodePreview.propTypes = {\n    fileInfo: PropTypes.object.isRequired,\n    fileUrl: PropTypes.string.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {getFilePreviewUrl, getFileDownloadUrl} from 'mattermost-redux/utils/file_utils';\n\nexport default function ImagePreview({fileInfo, canDownloadFiles}) {\n    const {has_preview_image: hasPreviewImage, id, link} = fileInfo;\n    const fileUrl = link || getFileDownloadUrl(id);\n    const previewUrl = hasPreviewImage ? getFilePreviewUrl(id) : fileUrl;\n\n    if (!canDownloadFiles) {\n        return <img src={previewUrl}/>;\n    }\n\n    return (\n        <a\n            href={fileUrl}\n            target='_blank'\n            rel='noopener noreferrer'\n            download={true}\n        >\n            <img src={previewUrl}/>\n        </a>\n    );\n}\n\nImagePreview.propTypes = {\n    fileInfo: PropTypes.object.isRequired,\n    canDownloadFiles: PropTypes.bool.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class PopoverBar extends React.PureComponent {\n    static propTypes = {\n        show: PropTypes.bool.isRequired,\n        fileIndex: PropTypes.number.isRequired,\n        totalFiles: PropTypes.number.isRequired,\n        filename: PropTypes.string.isRequired,\n        fileURL: PropTypes.string.isRequired,\n        showPublicLink: PropTypes.bool,\n        enablePublicLink: PropTypes.bool.isRequired,\n        canDownloadFiles: PropTypes.bool.isRequired,\n        isExternalFile: PropTypes.bool.isRequired,\n        onGetPublicLink: PropTypes.func,\n        isDesktopApp: PropTypes.bool.isRequired,\n    };\n\n    static defaultProps = {\n        show: false,\n        fileIndex: 0,\n        totalFiles: 0,\n        filename: '',\n        fileURL: '',\n        showPublicLink: true,\n    };\n\n    render() {\n        var publicLink = '';\n        if (this.props.enablePublicLink && this.props.showPublicLink) {\n            publicLink = (\n                <div>\n                    <a\n                        href='#'\n                        className='public-link text'\n                        data-title='Public Image'\n                        onClick={this.props.onGetPublicLink}\n                    >\n                        <FormattedMessage\n                            id='view_image_popover.publicLink'\n                            defaultMessage='Get Public Link'\n                        />\n                    </a>\n                    <span className='text'>{' | '}</span>\n                </div>\n            );\n        }\n\n        var footerClass = 'modal-button-bar';\n        if (this.props.show) {\n            footerClass += ' footer--show';\n        }\n\n        let downloadLinks = null;\n        if (this.props.canDownloadFiles) {\n            let downloadLinkText;\n            if (this.props.isExternalFile && !this.props.isDesktopApp) {\n                downloadLinkText = (\n                    <FormattedMessage\n                        id='view_image_popover.open'\n                        defaultMessage='Open'\n                    />\n                );\n            } else {\n                downloadLinkText = (\n                    <FormattedMessage\n                        id='view_image_popover.download'\n                        defaultMessage='Download'\n                    />\n                );\n            }\n\n            downloadLinks = (\n                <div className='image-links'>\n                    {publicLink}\n                    <a\n                        href={this.props.fileURL}\n                        download={this.props.filename}\n                        className='text'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                    >\n                        {downloadLinkText}\n                    </a>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                ref='imageFooter'\n                className={footerClass}\n            >\n                <span className='pull-left text'>\n                    <FormattedMessage\n                        id='view_image_popover.file'\n                        defaultMessage='File {count, number} of {total, number}'\n                        values={{\n                            count: (this.props.fileIndex + 1),\n                            total: this.props.totalFiles,\n                        }}\n                    />\n                </span>\n                {downloadLinks}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {isDesktopApp} from 'utils/user_agent.jsx';\n\nimport PopoverBar from './popover_bar.jsx';\n\nfunction mapStateToProps() {\n    return {\n        isDesktopApp: isDesktopApp(),\n    };\n}\n\nexport default connect(mapStateToProps)(PopoverBar);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {getFilePreviewUrl, getFileUrl, getFileDownloadUrl} from 'mattermost-redux/utils/file_utils';\n\nimport * as GlobalActions from 'actions/global_actions';\nimport Constants, {FileTypes} from 'utils/constants';\nimport * as Utils from 'utils/utils';\nimport AudioVideoPreview from 'components/audio_video_preview';\nimport CodePreview from 'components/code_preview';\nimport FileInfoPreview from 'components/file_info_preview';\nimport LoadingImagePreview from 'components/loading_image_preview';\nimport {AsyncComponent} from 'components/async_load.jsx';\nimport loadPDFPreview from 'bundle-loader?lazy!components/pdf_preview';\n\nimport ImagePreview from './image_preview';\nimport PopoverBar from './popover_bar';\n\nconst KeyCodes = Constants.KeyCodes;\n\nexport default class ViewImageModal extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Set whether to show this modal or not\n         */\n        show: PropTypes.bool.isRequired,\n\n        /**\n         * Function to call when this modal is dismissed\n         **/\n        onModalDismissed: PropTypes.func.isRequired,\n\n        /**\n         * List of FileInfo to view\n         **/\n        fileInfos: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n        /**\n         * The index number of starting image\n         **/\n        startIndex: PropTypes.number.isRequired,\n\n        canDownloadFiles: PropTypes.bool.isRequired,\n        enablePublicLink: PropTypes.bool.isRequired,\n    };\n\n    static defaultProps = {\n        show: false,\n        fileInfos: [],\n        startIndex: 0,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            imageIndex: this.props.startIndex,\n            imageHeight: '100%',\n            loaded: Utils.fillArray(false, this.props.fileInfos.length),\n            progress: Utils.fillArray(0, this.props.fileInfos.length),\n            showFooter: false,\n        };\n    }\n\n    handleNext = (e) => {\n        if (e) {\n            e.stopPropagation();\n        }\n        let id = this.state.imageIndex + 1;\n        if (id > this.props.fileInfos.length - 1) {\n            id = 0;\n        }\n        this.showImage(id);\n    }\n\n    handlePrev = (e) => {\n        if (e) {\n            e.stopPropagation();\n        }\n        let id = this.state.imageIndex - 1;\n        if (id < 0) {\n            id = this.props.fileInfos.length - 1;\n        }\n        this.showImage(id);\n    }\n\n    handleKeyPress = (e) => {\n        if (Utils.isKeyPressed(e, KeyCodes.RIGHT)) {\n            this.handleNext();\n        } else if (Utils.isKeyPressed(e, KeyCodes.LEFT)) {\n            this.handlePrev();\n        }\n    }\n\n    onModalShown = (nextProps) => {\n        document.addEventListener('keyup', this.handleKeyPress);\n\n        this.showImage(nextProps.startIndex);\n    }\n\n    onModalHidden = () => {\n        document.addEventListener('keyup', this.handleKeyPress);\n\n        if (this.refs.video) {\n            this.refs.video.stop();\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (nextProps.show === true && this.props.show === false) {\n            this.onModalShown(nextProps);\n        } else if (nextProps.show === false && this.props.show === true) {\n            this.onModalHidden();\n        }\n\n        if (this.props.fileInfos.length !== nextProps.fileInfos.length) {\n            this.setState({\n                loaded: Utils.fillArray(false, nextProps.fileInfos.length),\n                progress: Utils.fillArray(0, nextProps.fileInfos.length),\n            });\n        }\n    }\n\n    showImage = (id) => {\n        this.setState({imageIndex: id});\n\n        const imageHeight = window.innerHeight - 100;\n        this.setState({imageHeight});\n\n        if (!this.state.loaded[id]) {\n            this.loadImage(id);\n        }\n    }\n\n    loadImage = (index) => {\n        const fileInfo = this.props.fileInfos[index];\n        const fileType = Utils.getFileType(fileInfo.extension);\n\n        if (fileType === FileTypes.IMAGE) {\n            let previewUrl;\n            if (fileInfo.has_image_preview) {\n                previewUrl = getFilePreviewUrl(fileInfo.id);\n            } else {\n                // some images (eg animated gifs) just show the file itself and not a preview\n                previewUrl = getFileUrl(fileInfo.id);\n            }\n\n            Utils.loadImage(\n                previewUrl,\n                () => this.handleImageLoaded(index),\n                (completedPercentage) => this.handleImageProgress(index, completedPercentage)\n            );\n        } else {\n            // there's nothing to load for non-image files\n            this.handleImageLoaded(index);\n        }\n    }\n\n    handleImageLoaded = (index) => {\n        this.setState((prevState) => {\n            return {\n                loaded: {\n                    ...prevState.loaded,\n                    [index]: true,\n                },\n            };\n        });\n    }\n\n    handleImageProgress = (index, completedPercentage) => {\n        this.setState((prevState) => {\n            return {\n                progress: {\n                    ...prevState.progress,\n                    [index]: completedPercentage,\n                },\n            };\n        });\n    }\n\n    handleGetPublicLink = () => {\n        this.props.onModalDismissed();\n\n        GlobalActions.showGetPublicLinkModal(this.props.fileInfos[this.state.imageIndex].id);\n    }\n\n    onMouseEnterImage = () => {\n        this.setState({showFooter: true});\n    }\n\n    onMouseLeaveImage = () => {\n        this.setState({showFooter: false});\n    }\n\n    render() {\n        if (this.props.fileInfos.length < 1 || this.props.fileInfos.length - 1 < this.state.imageIndex) {\n            return null;\n        }\n\n        const fileInfo = this.props.fileInfos[this.state.imageIndex];\n        const showPublicLink = !fileInfo.link;\n        const fileName = fileInfo.link || fileInfo.name;\n        const fileUrl = fileInfo.link || getFileUrl(fileInfo.id);\n        const fileDownloadUrl = fileInfo.link || getFileDownloadUrl(fileInfo.id);\n        const isExternalFile = !fileInfo.id;\n\n        let content;\n        if (this.state.loaded[this.state.imageIndex]) {\n            const fileType = Utils.getFileType(fileInfo.extension);\n\n            if (fileType === FileTypes.IMAGE || fileType === FileTypes.SVG) {\n                content = (\n                    <ImagePreview\n                        fileInfo={fileInfo}\n                        canDownloadFiles={this.props.canDownloadFiles}\n                    />\n                );\n            } else if (fileType === FileTypes.VIDEO || fileType === FileTypes.AUDIO) {\n                content = (\n                    <AudioVideoPreview\n                        fileInfo={fileInfo}\n                        fileUrl={fileUrl}\n                    />\n                );\n            } else if (fileInfo && fileInfo.extension && fileInfo.extension === FileTypes.PDF) {\n                content = (\n                    <AsyncComponent\n                        doLoad={loadPDFPreview}\n                        fileInfo={fileInfo}\n                        fileUrl={fileUrl}\n                    />\n                );\n            } else if (CodePreview.supports(fileInfo)) {\n                content = (\n                    <CodePreview\n                        fileInfo={fileInfo}\n                        fileUrl={fileUrl}\n                    />\n                );\n            } else {\n                content = (\n                    <FileInfoPreview\n                        fileInfo={fileInfo}\n                        fileUrl={fileUrl}\n                    />\n                );\n            }\n        } else {\n            // display a progress indicator when the preview for an image is still loading\n            const loading = Utils.localizeMessage('view_image.loading', 'Loading');\n            const progress = Math.floor(this.state.progress[this.state.imageIndex]);\n\n            content = (\n                <LoadingImagePreview\n                    loading={loading}\n                    progress={progress}\n                />\n            );\n        }\n\n        let leftArrow = null;\n        let rightArrow = null;\n        if (this.props.fileInfos.length > 1) {\n            leftArrow = (\n                <a\n                    id='previewArrowLeft'\n                    ref='previewArrowLeft'\n                    className='modal-prev-bar'\n                    href='#'\n                    onClick={this.handlePrev}\n                >\n                    <i className='image-control image-prev'/>\n                </a>\n            );\n\n            rightArrow = (\n                <a\n                    id='previewArrowRight'\n                    ref='previewArrowRight'\n                    className='modal-next-bar'\n                    href='#'\n                    onClick={this.handleNext}\n                >\n                    <i className='image-control image-next'/>\n                </a>\n            );\n        }\n\n        let closeButtonClass = 'modal-close';\n        if (this.state.showFooter) {\n            closeButtonClass += ' modal-close--show';\n        }\n\n        return (\n            <Modal\n                show={this.props.show}\n                onHide={this.props.onModalDismissed}\n                className='modal-image'\n                dialogClassName='modal-image'\n            >\n                <Modal.Body>\n                    <div\n                        className={'modal-image__wrapper'}\n                        onClick={this.props.onModalDismissed}\n                    >\n                        <div\n                            onMouseEnter={this.onMouseEnterImage}\n                            onMouseLeave={this.onMouseLeaveImage}\n                            onClick={(e) => e.stopPropagation()}\n                        >\n                            <div\n                                className={closeButtonClass}\n                                onClick={this.props.onModalDismissed}\n                            />\n                            <div className='modal-image__content'>\n                                {content}\n                            </div>\n                            <PopoverBar\n                                show={this.state.showFooter}\n                                showPublicLink={showPublicLink}\n                                fileIndex={this.state.imageIndex}\n                                totalFiles={this.props.fileInfos.length}\n                                filename={fileName}\n                                fileURL={fileDownloadUrl}\n                                enablePublicLink={this.props.enablePublicLink}\n                                canDownloadFiles={this.props.canDownloadFiles}\n                                isExternalFile={isExternalFile}\n                                onGetPublicLink={this.handleGetPublicLink}\n                            />\n                        </div>\n                    </div>\n                    {leftArrow}\n                    {rightArrow}\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {canDownloadFiles} from 'utils/file_utils.jsx';\n\nimport ViewImage from './view_image.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    return {\n        canDownloadFiles: canDownloadFiles(config),\n        enablePublicLink: config.EnablePublicLink === 'true',\n    };\n}\n\nexport default connect(mapStateToProps)(ViewImage);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {getFilePreviewUrl, getFileUrl} from 'mattermost-redux/utils/file_utils';\n\nimport {FileTypes} from 'utils/constants.jsx';\nimport {\n    getFileType,\n    localizeMessage,\n} from 'utils/utils';\n\nimport {postListScrollChange} from 'actions/global_actions.jsx';\n\nimport LoadingImagePreview from 'components/loading_image_preview';\nimport ViewImageModal from 'components/view_image';\n\nconst PREVIEW_IMAGE_MAX_WIDTH = 1024;\nconst PREVIEW_IMAGE_MAX_HEIGHT = 350;\nconst PREVIEW_IMAGE_MIN_DIMENSION = 50;\n\nexport default class SingleImageView extends React.PureComponent {\n    static propTypes = {\n        postId: PropTypes.string.isRequired,\n        fileInfo: PropTypes.object.isRequired,\n        isRhsOpen: PropTypes.bool.isRequired,\n        isEmbedVisible: PropTypes.bool,\n        actions: PropTypes.shape({\n            toggleEmbedVisibility: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    static defaultProps = {\n        fileInfo: {},\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false,\n            showPreviewModal: false,\n            viewPortWidth: 0,\n        };\n\n        this.imageLoaded = null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.handleResize);\n        this.setViewPortWidth();\n        this.loadImage(this.props.fileInfo);\n\n        // Timeout used to delay execution until after current render cycle\n        setTimeout(postListScrollChange, 0);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        this.loadImage(nextProps.fileInfo);\n\n        if (nextProps.isRhsOpen !== this.props.isRhsOpen) {\n            this.handleResize();\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n\n    handleResize = () => {\n        this.setViewPortWidth();\n    }\n\n    setViewPortRef = (node) => {\n        this.viewPort = node;\n    }\n\n    setViewPortWidth = () => {\n        if (this.viewPort && this.viewPort.getBoundingClientRect) {\n            const rect = this.viewPort.getBoundingClientRect();\n            this.setState({viewPortWidth: rect.width});\n        }\n    }\n\n    loadImage = (fileInfo) => {\n        const {has_preview_image: hasPreviewImage, id} = fileInfo;\n        const fileURL = getFileUrl(id);\n        const previewURL = hasPreviewImage ? getFilePreviewUrl(id) : fileURL;\n\n        const loaderImage = new Image();\n\n        loaderImage.src = previewURL;\n        loaderImage.onload = () => {\n            if (this.imageLoaded) {\n                this.imageLoaded.src = previewURL;\n            }\n\n            this.setState({loaded: true});\n        };\n    }\n\n    handleImageClick = (e) => {\n        e.preventDefault();\n        this.setState({showPreviewModal: true});\n    }\n\n    showPreviewModal = () => {\n        this.setState({showPreviewModal: false});\n    }\n\n    setImageLoadedRef = (node) => {\n        this.imageLoaded = node;\n    }\n\n    computeImageDimensions = () => {\n        const {fileInfo} = this.props;\n        const viewPortWidth = this.state.viewPortWidth;\n\n        let previewWidth = fileInfo.width;\n        let previewHeight = fileInfo.height;\n\n        if (viewPortWidth && previewWidth > viewPortWidth) {\n            const origRatio = fileInfo.height / fileInfo.width;\n            previewWidth = Math.min(PREVIEW_IMAGE_MAX_WIDTH, fileInfo.width, viewPortWidth);\n            previewHeight = previewWidth * origRatio;\n        }\n\n        if (previewHeight > PREVIEW_IMAGE_MAX_HEIGHT) {\n            const heightRatio = PREVIEW_IMAGE_MAX_HEIGHT / previewHeight;\n            previewHeight = PREVIEW_IMAGE_MAX_HEIGHT;\n            previewWidth *= heightRatio;\n        }\n\n        return {previewWidth, previewHeight};\n    }\n\n    toggleEmbedVisibility = () => {\n        this.props.actions.toggleEmbedVisibility(this.props.postId);\n    }\n\n    render() {\n        const {fileInfo} = this.props;\n        const {\n            loaded,\n            viewPortWidth,\n        } = this.state;\n\n        const {previewHeight, previewWidth} = this.computeImageDimensions();\n        let minPreviewClass = '';\n        if (\n            previewWidth < PREVIEW_IMAGE_MIN_DIMENSION ||\n            previewHeight < PREVIEW_IMAGE_MIN_DIMENSION\n        ) {\n            minPreviewClass = 'min-preview ';\n\n            if (previewHeight > previewWidth) {\n                minPreviewClass += 'min-preview--portrait ';\n            }\n        }\n\n        const toggle = (\n            <a\n                key='toggle'\n                className='post__embed-visibility'\n                data-expanded={this.props.isEmbedVisible}\n                aria-label='Toggle Embed Visibility'\n                onClick={this.toggleEmbedVisibility}\n            />\n        );\n\n        const fileHeader = (\n            <div className='image-name'>\n                {toggle}\n                <div onClick={this.handleImageClick}>\n                    {fileInfo.name}\n                </div>\n            </div>\n        );\n\n        const loading = localizeMessage('view_image.loading', 'Loading');\n\n        let viewImageModal;\n        let loadingImagePreview;\n        let fadeInClass = '';\n\n        let height = previewHeight;\n        if (height < PREVIEW_IMAGE_MIN_DIMENSION) {\n            height = PREVIEW_IMAGE_MIN_DIMENSION;\n        }\n\n        let width = previewWidth;\n        if (width < PREVIEW_IMAGE_MIN_DIMENSION) {\n            width = PREVIEW_IMAGE_MIN_DIMENSION;\n        }\n\n        const fileType = getFileType(fileInfo.extension);\n        let svgClass = '';\n        let imageStyle = {height};\n        let imageLoadedStyle = {height};\n        let imageContainerStyle = {};\n        if (width < viewPortWidth && height === PREVIEW_IMAGE_MAX_HEIGHT) {\n            imageContainerStyle = {width};\n        } else if (fileType === FileTypes.SVG) {\n            svgClass = 'post-image normal';\n            imageStyle = {};\n            imageLoadedStyle = {};\n            imageContainerStyle = {\n                width: viewPortWidth < PREVIEW_IMAGE_MAX_HEIGHT ? viewPortWidth : PREVIEW_IMAGE_MAX_HEIGHT,\n                height: PREVIEW_IMAGE_MAX_HEIGHT,\n            };\n        }\n\n        if (loaded) {\n            viewImageModal = (\n                <ViewImageModal\n                    show={this.state.showPreviewModal}\n                    onModalDismissed={this.showPreviewModal}\n                    fileInfos={[fileInfo]}\n                />\n            );\n\n            fadeInClass = 'image-fade-in';\n            imageStyle = {cursor: 'pointer'};\n            imageLoadedStyle = {};\n\n            if (fileType === FileTypes.SVG) {\n                imageContainerStyle = {width: viewPortWidth < PREVIEW_IMAGE_MAX_HEIGHT ? viewPortWidth : PREVIEW_IMAGE_MAX_HEIGHT};\n            }\n        } else if (this.props.isEmbedVisible) {\n            loadingImagePreview = (\n                <LoadingImagePreview\n                    loading={loading}\n                    containerClass={'file__image-loading'}\n                />\n            );\n        }\n\n        let image;\n        if (this.props.isEmbedVisible) {\n            image = (\n                <img\n                    ref={this.setImageLoadedRef}\n                    style={imageStyle}\n                    className={`${minPreviewClass} ${svgClass}`}\n                />\n            );\n        }\n\n        return (\n            <div\n                ref='singleImageView'\n                className={`${'file-view--single'}`}\n            >\n                <div\n                    ref={this.setViewPortRef}\n                    className='file__image'\n                >\n                    {fileHeader}\n                    {this.props.isEmbedVisible &&\n                    <div\n                        className='image-container'\n                        style={imageContainerStyle}\n                    >\n                        <div\n                            className={`image-loaded ${fadeInClass}`}\n                            style={imageLoadedStyle}\n                            onClick={this.handleImageClick}\n                        >\n                            {image}\n                        </div>\n                        <div className='image-preload'>\n                            {loadingImagePreview}\n                        </div>\n                    </div>\n                    }\n                    {viewImageModal}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {toggleEmbedVisibility} from 'actions/post_actions';\n\nimport {getIsRhsOpen} from 'selectors/rhs';\n\nimport SingleImageView from 'components/single_image_view/single_image_view.jsx';\n\nfunction mapStateToProps(state) {\n    const isRhsOpen = getIsRhsOpen(state);\n\n    return {\n        isRhsOpen,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            toggleEmbedVisibility,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleImageView);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {sortFileInfos} from 'mattermost-redux/utils/file_utils';\n\nimport {FileTypes} from 'utils/constants.jsx';\nimport {getFileType} from 'utils/utils';\n\nimport FileAttachment from 'components/file_attachment';\nimport SingleImageView from 'components/single_image_view';\nimport ViewImageModal from 'components/view_image';\n\nexport default class FileAttachmentList extends React.Component {\n    static propTypes = {\n\n        /*\n         * The post the files are attached to\n         */\n        post: PropTypes.object.isRequired,\n\n        /*\n         * The number of files attached to the post\n         */\n        fileCount: PropTypes.number.isRequired,\n\n        /*\n         * Sorted array of metadata for each file attached to the post\n         */\n        fileInfos: PropTypes.arrayOf(PropTypes.object),\n\n        /*\n         * Set to render compactly\n         */\n        compactDisplay: PropTypes.bool,\n\n        isEmbedVisible: PropTypes.bool,\n\n        locale: PropTypes.string.isRequired,\n\n        actions: PropTypes.shape({\n\n            /*\n             * Function to get file metadata for a post\n             */\n            getMissingFilesForPost: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleImageClick = this.handleImageClick.bind(this);\n\n        this.state = {showPreviewModal: false, startImgIndex: 0};\n    }\n\n    componentDidMount() {\n        if (this.props.post.file_ids || this.props.post.filenames) {\n            this.props.actions.getMissingFilesForPost(this.props.post.id);\n        }\n    }\n\n    handleImageClick(indexClicked) {\n        this.setState({showPreviewModal: true, startImgIndex: indexClicked});\n    }\n\n    hidePreviewModal = () => {\n        this.setState({showPreviewModal: false});\n    }\n\n    render() {\n        const {\n            compactDisplay,\n            fileInfos,\n            fileCount,\n            locale,\n        } = this.props;\n\n        if (compactDisplay === false) {\n            if (fileInfos && fileInfos.length === 1) {\n                const fileType = getFileType(fileInfos[0].extension);\n\n                if (fileType === FileTypes.IMAGE || fileType === FileTypes.SVG) {\n                    return (\n                        <SingleImageView\n                            fileInfo={fileInfos[0]}\n                            isEmbedVisible={this.props.isEmbedVisible}\n                            postId={this.props.post.id}\n                        />\n                    );\n                }\n            } else if (fileCount === 1 && this.props.isEmbedVisible) {\n                return (\n                    <div style={style.minHeightPlaceholder}/>\n                );\n            }\n        }\n\n        const sortedFileInfos = sortFileInfos(fileInfos, locale);\n        const postFiles = [];\n        if (sortedFileInfos && sortedFileInfos.length > 0) {\n            for (let i = 0; i < sortedFileInfos.length; i++) {\n                const fileInfo = sortedFileInfos[i];\n                postFiles.push(\n                    <FileAttachment\n                        key={fileInfo.id}\n                        fileInfo={sortedFileInfos[i]}\n                        index={i}\n                        handleImageClick={this.handleImageClick}\n                        compactDisplay={compactDisplay}\n                    />\n                );\n            }\n        } else if (fileCount > 0) {\n            for (let i = 0; i < fileCount; i++) {\n                // Add a placeholder to avoid pop-in once we get the file infos for this post\n                postFiles.push(\n                    <div\n                        key={`fileCount-${i}`}\n                        className='post-image__column post-image__column--placeholder'\n                    />\n                );\n            }\n        }\n\n        return (\n            <React.Fragment>\n                <div className='post-image__columns clearfix'>\n                    {postFiles}\n                </div>\n                <ViewImageModal\n                    show={this.state.showPreviewModal}\n                    onModalDismissed={this.hidePreviewModal}\n                    startIndex={this.state.startImgIndex}\n                    fileInfos={sortedFileInfos}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nconst style = {\n    minHeightPlaceholder: {minHeight: '385px'},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getMissingFilesForPost} from 'mattermost-redux/actions/files';\nimport {makeGetFilesForPost} from 'mattermost-redux/selectors/entities/files';\n\nimport {getCurrentLocale} from 'selectors/i18n';\nimport {isEmbedVisible} from 'selectors/posts';\n\nimport FileAttachmentList from './file_attachment_list.jsx';\n\nfunction makeMapStateToProps() {\n    const selectFilesForPost = makeGetFilesForPost();\n\n    return function mapStateToProps(state, ownProps) {\n        const postId = ownProps.post ? ownProps.post.id : '';\n        const fileInfos = selectFilesForPost(state, postId);\n\n        let fileCount = 0;\n        if (ownProps.post.file_ids) {\n            fileCount = ownProps.post.file_ids.length;\n        } else if (ownProps.post.filenames) {\n            fileCount = ownProps.post.filenames.length;\n        }\n\n        return {\n            fileInfos,\n            fileCount,\n            isEmbedVisible: isEmbedVisible(state, ownProps.post.id),\n            locale: getCurrentLocale(state),\n        };\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getMissingFilesForPost,\n        }, dispatch),\n    };\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(FileAttachmentList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport ProfilePicture from 'components/profile_picture';\nimport MattermostLogo from 'components/svg/mattermost_logo';\n\nimport Constants from 'utils/constants';\nimport * as PostUtils from 'utils/post_utils';\nimport * as Utils from 'utils/utils';\n\nexport default class PostProfilePicture extends React.PureComponent {\n    static propTypes = {\n        compactDisplay: PropTypes.bool.isRequired,\n        enablePostIconOverride: PropTypes.bool.isRequired,\n        hasImageProxy: PropTypes.bool.isRequired,\n        isBusy: PropTypes.bool,\n        isRHS: PropTypes.bool,\n        post: PropTypes.object.isRequired,\n        status: PropTypes.string,\n        user: PropTypes.object,\n    };\n\n    getProfilePicSrcForPost = (fromAutoResponder, fromWebhook) => {\n        const {post, user} = this.props;\n\n        if (this.props.compactDisplay) {\n            return '';\n        }\n\n        let src = '';\n        if (user && user.id === post.user_id) {\n            src = Utils.imageURLForUser(user);\n        } else if (post.user_id) {\n            src = Utils.imageURLForUser(post.user_id);\n        }\n\n        if (!fromAutoResponder && fromWebhook && !post.props.use_user_icon && this.props.enablePostIconOverride) {\n            if (post.props.override_icon_url) {\n                src = PostUtils.getImageSrc(post.props.override_icon_url, this.props.hasImageProxy);\n            } else {\n                src = Constants.DEFAULT_WEBHOOK_LOGO;\n            }\n        }\n\n        return src;\n    };\n\n    getStatus = (fromAutoResponder, fromWebhook) => {\n        if (fromAutoResponder || fromWebhook) {\n            return '';\n        }\n\n        return this.props.status;\n    };\n\n    render() {\n        const isSystemMessage = PostUtils.isSystemMessage(this.props.post);\n        const fromWebhook = PostUtils.isFromWebhook(this.props.post);\n        if (isSystemMessage && !this.props.compactDisplay && !fromWebhook) {\n            return <MattermostLogo className='icon'/>;\n        }\n\n        const fromAutoResponder = PostUtils.fromAutoResponder(this.props.post);\n\n        const hasMention = !fromAutoResponder && !fromWebhook;\n        const src = this.getProfilePicSrcForPost(fromAutoResponder, fromWebhook);\n        const status = this.getStatus(fromAutoResponder, fromWebhook);\n\n        return (\n            <ProfilePicture\n                hasMention={hasMention}\n                isBusy={this.props.isBusy}\n                isRHS={this.props.isRHS}\n                src={src}\n                status={status}\n                user={this.props.user}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport PostProfilePicture from './post_profile_picture';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    return {\n        enablePostIconOverride: config.EnablePostIconOverride === 'true',\n        hasImageProxy: config.HasImageProxy === 'true',\n    };\n}\n\nexport default connect(mapStateToProps)(PostProfilePicture);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class FailedPostOptions extends React.PureComponent {\n    static propTypes = {\n        post: PropTypes.object.isRequired,\n        actions: PropTypes.shape({\n            createPost: PropTypes.func.isRequired,\n            removePost: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    retryPost = (e) => {\n        e.preventDefault();\n\n        const post = {...this.props.post};\n        Reflect.deleteProperty(post, 'id');\n        this.props.actions.createPost(post);\n    }\n\n    cancelPost = (e) => {\n        e.preventDefault();\n\n        this.props.actions.removePost(this.props.post);\n    }\n\n    render() {\n        return (\n            <span className='pending-post-actions'>\n                <a\n                    className='post-retry'\n                    href='#'\n                    onClick={this.retryPost}\n                >\n                    <FormattedMessage\n                        id='pending_post_actions.retry'\n                        defaultMessage='Retry'\n                    />\n                </a>\n                {' - '}\n                <a\n                    className='post-cancel'\n                    href='#'\n                    onClick={this.cancelPost}\n                >\n                    <FormattedMessage\n                        id='pending_post_actions.cancel'\n                        defaultMessage='Cancel'\n                    />\n                </a>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {removePost} from 'mattermost-redux/actions/posts';\n\nimport {createPost} from 'actions/post_actions.jsx';\n\nimport FailedPostOptions from './failed_post_options.jsx';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: {\n            ...bindActionCreators({\n                removePost,\n            }, dispatch),\n            createPost,\n        },\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(FailedPostOptions);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class FlagIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='14px'\n                    height='14px'\n                    viewBox='0 0 16 16'\n                    role='icon'\n                    aria-label={localizeMessage('generic_icons.flag', 'Flag Icon')}\n                >\n                    <g\n                        stroke='none'\n                        strokeWidth='1'\n                        fill='inherit'\n                        fillRule='evenodd'\n                    >\n                        <g\n                            transform='translate(-1106.000000, -33.000000)'\n                            fillRule='nonzero'\n                            fill='inherit'\n                        >\n                            <g>\n                                <g transform='translate(1096.000000, 22.000000)'>\n                                    <g transform='translate(10.000000, 11.000000)'>\n                                        <path d='M8,1 L2,1 C2,0.447 1.553,0 1,0 C0.447,0 0,0.447 0,1 L0,15.5 C0,15.776 0.224,16 0.5,16 L1.5,16 C1.776,16 2,15.776 2,15.5 L2,11 L7,11 L7,12 C7,12.553 7.447,13 8,13 L15,13 C15.553,13 16,12.553 16,12 L16,4 C16,3.447 15.553,3 15,3 L9,3 L9,2 C9,1.447 8.553,1 8,1 Z M9,11 L9,9.5 C9,9.224 8.776,9 8.5,9 L2,9 L2,3 L7,3 L7,4.5 C7,4.776 7.224,5 7.5,5 L14,5 L14,11 L9,11 Z'/>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class FlagIconFilled extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='16px'\n                    height='16px'\n                    viewBox='0 0 16 16'\n                    role='icon'\n                    aria-label={localizeMessage('generic_icons.flagged', 'Flagged Icon')}\n                >\n                    <g\n                        stroke='none'\n                        strokeWidth='1'\n                        fill='inherit'\n                        fillRule='evenodd'\n                    >\n                        <g\n                            transform='translate(-1073.000000, -33.000000)'\n                            fillRule='nonzero'\n                            fill='inherit'\n                        >\n                            <g transform='translate(-1.000000, 0.000000)'>\n                                <g transform='translate(1064.000000, 22.000000)'>\n                                    <g transform='translate(10.000000, 11.000000)'>\n                                        <path d='M8,1 L2,1 C2,0.447 1.553,0 1,0 C0.447,0 0,0.447 0,1 L0,15.5 C0,15.776 0.224,16 0.5,16 L1.5,16 C1.776,16 2,15.776 2,15.5 L2,11 L7,11 L7,12 C7,12.553 7.447,13 8,13 L15,13 C15.553,13 16,12.553 16,12 L16,4 C16,3.447 15.553,3 15,3 L9,3 L9,2 C9,1.447 8.553,1 8,1 Z'/>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport FlagIcon from 'components/svg/flag_icon';\nimport FlagIconFilled from 'components/svg/flag_icon_filled';\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nexport default class PostFlagIcon extends React.PureComponent {\n    static propTypes = {\n        idPrefix: PropTypes.string.isRequired,\n        idCount: PropTypes.number,\n        postId: PropTypes.string.isRequired,\n        isFlagged: PropTypes.bool.isRequired,\n        isEphemeral: PropTypes.bool,\n        actions: PropTypes.shape({\n            flagPost: PropTypes.func.isRequired,\n            unflagPost: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    static defaultProps = {\n        idCount: -1,\n        isEphemeral: false,\n    };\n\n    handlePress = (e) => {\n        e.preventDefault();\n\n        const {\n            actions,\n            isFlagged,\n            postId,\n        } = this.props;\n\n        if (isFlagged) {\n            actions.unflagPost(postId);\n        } else {\n            actions.flagPost(postId);\n        }\n    }\n\n    render() {\n        if (this.props.isEphemeral) {\n            return null;\n        }\n\n        const isFlagged = this.props.isFlagged;\n\n        const flagVisible = isFlagged ? 'visible' : '';\n\n        let flagIconId = null;\n        if (this.props.idCount > -1) {\n            flagIconId = Utils.createSafeId(this.props.idPrefix + this.props.idCount);\n        }\n\n        let flagIcon;\n        if (isFlagged) {\n            flagIcon = <FlagIconFilled className='icon'/>;\n        } else {\n            flagIcon = <FlagIcon className='icon'/>;\n        }\n\n        return (\n            <OverlayTrigger\n                trigger={['hover', 'focus']}\n                key={'flagtooltipkey' + flagVisible}\n                delayShow={Constants.OVERLAY_TIME_DELAY}\n                placement='top'\n                overlay={\n                    <Tooltip id='flagTooltip'>\n                        <FormattedMessage\n                            id={isFlagged ? t('flag_post.unflag') : t('flag_post.flag')}\n                            defaultMessage={isFlagged ? 'Unflag' : 'Flag for follow up'}\n                        />\n                    </Tooltip>\n                }\n            >\n                <button\n                    id={flagIconId}\n                    className={'style--none flag-icon__container ' + flagVisible}\n                    onClick={this.handlePress}\n                >\n                    {flagIcon}\n                </button>\n            </OverlayTrigger>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {flagPost, unflagPost} from 'actions/post_actions.jsx';\n\nimport PostFlagIcon from './post_flag_icon';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            flagPost,\n            unflagPost,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(PostFlagIcon);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport TeamStore from 'stores/team_store.jsx';\nimport {isMobile} from 'utils/user_agent.jsx';\nimport {isMobile as isMobileView} from 'utils/utils.jsx';\nimport LocalDateTime from 'components/local_date_time';\n\nexport default class PostTime extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * If true, time will be rendered as a permalink to the post\n         */\n        isPermalink: PropTypes.bool.isRequired,\n\n        /*\n         * The time to display\n         */\n        eventTime: PropTypes.number.isRequired,\n\n        /*\n         * The post id of posting being rendered\n         */\n        postId: PropTypes.string,\n    };\n\n    static defaultProps = {\n        eventTime: 0,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTeamDisplayName: TeamStore.getCurrent().name,\n        };\n    }\n\n    handleClick = () => {\n        if (isMobileView()) {\n            GlobalActions.emitCloseRightHandSide();\n        }\n    };\n\n    render() {\n        const localDateTime = (\n            <LocalDateTime\n                eventTime={this.props.eventTime}\n            />\n        );\n        if (isMobile() || !this.props.isPermalink) {\n            return localDateTime;\n        }\n\n        return (\n            <Link\n                to={`/${this.state.currentTeamDisplayName}/pl/${this.props.postId}`}\n                className='post__permalink'\n                onClick={this.handleClick}\n            >\n                {localDateTime}\n            </Link>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {emitEmojiPosted} from 'actions/post_actions.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class Reaction extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * The post to render the reaction for\n         */\n        post: PropTypes.object.isRequired,\n\n        /*\n         * The user id of the logged in user\n         */\n        currentUserId: PropTypes.string.isRequired,\n\n        /*\n         * The name of the emoji for the reaction\n         */\n        emojiName: PropTypes.string.isRequired,\n\n        /*\n         * The number of reactions to this post for this emoji\n         */\n        reactionCount: PropTypes.number.isRequired,\n\n        /*\n         * Array of users who reacted to this post\n         */\n        profiles: PropTypes.array.isRequired,\n\n        /*\n         * The number of users not in the profile list who have reacted with this emoji\n         */\n        otherUsersCount: PropTypes.number.isRequired,\n\n        /*\n         * Array of reactions by user\n         */\n        reactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n        /*\n         * True if the user has the permission to add a reaction in this channel\n         */\n        canAddReaction: PropTypes.bool.isRequired,\n\n        /*\n         * True if user has the permission to remove his own reactions in this channel\n         */\n        canRemoveReaction: PropTypes.bool.isRequired,\n\n        /*\n         * The URL of the emoji image\n         */\n        emojiImageUrl: PropTypes.string.isRequired,\n\n        actions: PropTypes.shape({\n\n            /*\n             * Function to add a reaction to a post\n             */\n            addReaction: PropTypes.func.isRequired,\n\n            /*\n             * Function to get non-loaded profiles by id\n             */\n            getMissingProfilesByIds: PropTypes.func.isRequired,\n\n            /*\n             * Function to remove a reaction from a post\n             */\n            removeReaction: PropTypes.func.isRequired,\n        }),\n    }\n\n    handleAddReaction = (e) => {\n        e.preventDefault();\n        const {actions, post, emojiName} = this.props;\n        actions.addReaction(post.id, emojiName);\n        emitEmojiPosted(emojiName);\n    }\n\n    handleRemoveReaction = (e) => {\n        e.preventDefault();\n        this.props.actions.removeReaction(this.props.post.id, this.props.emojiName);\n    }\n\n    loadMissingProfiles = () => {\n        const ids = this.props.reactions.map((reaction) => reaction.user_id);\n        this.props.actions.getMissingProfilesByIds(ids);\n    }\n\n    render() {\n        if (!this.props.emojiImageUrl) {\n            return null;\n        }\n\n        let currentUserReacted = false;\n        const users = [];\n        const otherUsersCount = this.props.otherUsersCount;\n        for (const user of this.props.profiles) {\n            if (user.id === this.props.currentUserId) {\n                currentUserReacted = true;\n            } else {\n                users.push(Utils.getDisplayNameByUser(user));\n            }\n        }\n\n        // Sort users in alphabetical order with \"you\" being first if the current user reacted\n        users.sort();\n        if (currentUserReacted) {\n            users.unshift(Utils.localizeMessage('reaction.you', 'You'));\n        }\n\n        let names;\n        if (otherUsersCount > 0) {\n            if (users.length > 0) {\n                names = (\n                    <FormattedMessage\n                        id='reaction.usersAndOthersReacted'\n                        defaultMessage='{users} and {otherUsers, number} other {otherUsers, plural, one {user} other {users}}'\n                        values={{\n                            users: users.join(', '),\n                            otherUsers: otherUsersCount,\n                        }}\n                    />\n                );\n            } else {\n                names = (\n                    <FormattedMessage\n                        id='reaction.othersReacted'\n                        defaultMessage='{otherUsers, number} {otherUsers, plural, one {user} other {users}}'\n                        values={{\n                            otherUsers: otherUsersCount,\n                        }}\n                    />\n                );\n            }\n        } else if (users.length > 1) {\n            names = (\n                <FormattedMessage\n                    id='reaction.usersReacted'\n                    defaultMessage='{users} and {lastUser}'\n                    values={{\n                        users: users.slice(0, -1).join(', '),\n                        lastUser: users[users.length - 1],\n                    }}\n                />\n            );\n        } else {\n            names = users[0];\n        }\n\n        let reactionVerb;\n        if (users.length + otherUsersCount > 1) {\n            if (currentUserReacted) {\n                reactionVerb = (\n                    <FormattedMessage\n                        id='reaction.reactionVerb.youAndUsers'\n                        defaultMessage='reacted'\n                    />\n                );\n            } else {\n                reactionVerb = (\n                    <FormattedMessage\n                        id='reaction.reactionVerb.users'\n                        defaultMessage='reacted'\n                    />\n                );\n            }\n        } else if (currentUserReacted) {\n            reactionVerb = (\n                <FormattedMessage\n                    id='reaction.reactionVerb.you'\n                    defaultMessage='reacted'\n                />\n            );\n        } else {\n            reactionVerb = (\n                <FormattedMessage\n                    id='reaction.reactionVerb.user'\n                    defaultMessage='reacted'\n                />\n            );\n        }\n\n        const tooltip = (\n            <FormattedMessage\n                id='reaction.reacted'\n                defaultMessage='{users} {reactionVerb} with {emoji}'\n                values={{\n                    users: <b>{names}</b>,\n                    reactionVerb,\n                    emoji: <b>{':' + this.props.emojiName + ':'}</b>,\n                }}\n            />\n        );\n\n        let handleClick;\n        let clickTooltip;\n        let className = 'post-reaction';\n        if (currentUserReacted) {\n            if (this.props.canRemoveReaction) {\n                handleClick = this.handleRemoveReaction;\n                clickTooltip = (\n                    <FormattedMessage\n                        id='reaction.clickToRemove'\n                        defaultMessage='(click to remove)'\n                    />\n                );\n            } else {\n                className += ' post-reaction--read-only';\n            }\n\n            className += ' post-reaction--current-user';\n        } else if (!currentUserReacted && this.props.canAddReaction) {\n            handleClick = this.handleAddReaction;\n            clickTooltip = (\n                <FormattedMessage\n                    id='reaction.clickToAdd'\n                    defaultMessage='(click to add)'\n                />\n            );\n        } else {\n            className += ' post-reaction--read-only';\n        }\n\n        return (\n            <OverlayTrigger\n                trigger={['hover', 'focus']}\n                delayShow={1000}\n                placement='top'\n                shouldUpdatePosition={true}\n                overlay={\n                    <Tooltip id={`${this.props.post.id}-${this.props.emojiName}-reaction`}>\n                        {tooltip}\n                        <br/>\n                        {clickTooltip}\n                    </Tooltip>\n                }\n                onEnter={this.loadMissingProfiles}\n            >\n                <div\n                    className={className}\n                    onClick={handleClick}\n                >\n                    <span\n                        className='post-reaction__emoji emoticon'\n                        style={{backgroundImage: 'url(' + this.props.emojiImageUrl + ')'}}\n                    />\n                    <span className='post-reaction__count'>\n                        {this.props.reactionCount}\n                    </span>\n                </div>\n            </OverlayTrigger>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {addReaction, removeReaction} from 'mattermost-redux/actions/posts';\nimport {getMissingProfilesByIds} from 'mattermost-redux/actions/users';\nimport {getCurrentUserId, makeGetProfilesForReactions, getCurrentUser} from 'mattermost-redux/selectors/entities/users';\nimport {getChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {getEmojiImageUrl} from 'mattermost-redux/utils/emoji_utils';\nimport {haveIChannelPermission} from 'mattermost-redux/selectors/entities/roles';\nimport Permissions from 'mattermost-redux/constants/permissions';\nimport Constants from 'mattermost-redux/constants/general';\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport * as Emoji from 'utils/emoji.jsx';\n\nimport Reaction from './reaction.jsx';\n\nfunction makeMapStateToProps() {\n    const getProfilesForReactions = makeGetProfilesForReactions();\n\n    return function mapStateToProps(state, ownProps) {\n        const config = getConfig(state);\n        const license = getLicense(state);\n        const me = getCurrentUser(state);\n\n        const profiles = getProfilesForReactions(state, ownProps.reactions);\n        let emoji;\n        if (Emoji.EmojiIndicesByAlias.has(ownProps.emojiName)) {\n            emoji = Emoji.Emojis[Emoji.EmojiIndicesByAlias.get(ownProps.emojiName)];\n        } else {\n            emoji = ownProps.emojis.get(ownProps.emojiName);\n        }\n\n        let emojiImageUrl = '';\n        if (emoji) {\n            emojiImageUrl = getEmojiImageUrl(emoji);\n        }\n        const channel = getChannel(state, ownProps.post.channel_id) || {};\n        const channelIsArchived = channel.delete_at !== 0;\n        const teamId = channel.team_id;\n\n        let canAddReaction = false;\n        let canRemoveReaction = false;\n\n        if (!channelIsArchived) {\n            canAddReaction = checkReactionAction(state, teamId, ownProps.post.channel_id, channel.name, config, license, me, Permissions.REMOVE_REACTION);\n            canRemoveReaction = checkReactionAction(state, teamId, ownProps.post.channel_id, channel.name, config, license, me, Permissions.ADD_REACTION);\n        }\n\n        return {\n            profiles,\n            otherUsersCount: ownProps.reactions.length - profiles.length,\n            currentUserId: getCurrentUserId(state),\n            reactionCount: ownProps.reactions.length,\n            canAddReaction,\n            canRemoveReaction,\n            emojiImageUrl,\n        };\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            addReaction,\n            removeReaction,\n            getMissingProfilesByIds,\n        }, dispatch),\n    };\n}\n\nfunction checkReactionAction(state, teamId, channelId, channelName, config, license, user, permission) {\n    if (!haveIChannelPermission(state, {team: teamId, channel: channelId, permission})) {\n        return false;\n    }\n\n    if (channelName === Constants.DEFAULT_CHANNEL && config.ExperimentalTownSquareIsReadOnly === 'true' && license.IsLicensed === 'true' && !user.roles.includes('system_admin')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(Reaction);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class ChannelPermissionGate extends React.Component {\n    static defaultProps = {\n        invert: false,\n    }\n\n    static propTypes = {\n\n        /**\n         * Channel to check the permission\n         */\n        channelId: PropTypes.string,\n\n        /**\n         * Team to check the permission\n         */\n        teamId: PropTypes.string,\n\n        /**\n         * Permissions enough to pass the gate (binary OR)\n         */\n        permissions: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n        /**\n         * Has permission\n         */\n        hasPermission: PropTypes.bool.isRequired,\n\n        /**\n         * Invert the permission (used for else)\n         */\n        invert: PropTypes.bool.isRequired,\n\n        /**\n         * Content protected by the permissions gate\n         */\n        children: PropTypes.node.isRequired,\n    };\n\n    render() {\n        if (this.props.hasPermission && !this.props.invert) {\n            return this.props.children;\n        }\n        if (!this.props.hasPermission && this.props.invert) {\n            return this.props.children;\n        }\n        return null;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {haveIChannelPermission} from 'mattermost-redux/selectors/entities/roles';\n\nimport ChannelPermissionGate from './channel_permission_gate.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    if (!ownProps.channelId || ownProps.teamId === null || typeof ownProps.teamId === 'undefined') {\n        return {hasPermission: false};\n    }\n\n    for (const permission of ownProps.permissions) {\n        if (haveIChannelPermission(state, {channel: ownProps.channelId, team: ownProps.teamId, permission})) {\n            return {hasPermission: true};\n        }\n    }\n\n    return {hasPermission: false};\n}\n\nexport default connect(mapStateToProps)(ChannelPermissionGate);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport {postListScrollChange} from 'actions/global_actions.jsx';\nimport {emitEmojiPosted} from 'actions/post_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport Reaction from 'components/post_view/reaction';\nimport EmojiPickerOverlay from 'components/emoji_picker/emoji_picker_overlay.jsx';\nimport ChannelPermissionGate from 'components/permissions_gates/channel_permission_gate';\n\nconst DEFAULT_EMOJI_PICKER_RIGHT_OFFSET = 15;\nconst EMOJI_PICKER_WIDTH_OFFSET = 260;\n\nexport default class ReactionListView extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The post to render reactions for\n         */\n        post: PropTypes.object.isRequired,\n\n        /*\n         * The id of the team which belongs the post\n         */\n        teamId: PropTypes.string,\n\n        /**\n         * The reactions to render\n         */\n        reactions: PropTypes.arrayOf(PropTypes.object),\n\n        /**\n         * The emojis for the different reactions\n         */\n        emojis: PropTypes.object.isRequired,\n\n        /**\n         * Whether to show the emoji picker.\n         */\n        enableEmojiPicker: PropTypes.bool.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * Function to get reactions for a post\n             */\n            getReactionsForPost: PropTypes.func.isRequired,\n\n            /**\n             * Function to add a reaction to the post\n             */\n            addReaction: PropTypes.func.isRequired,\n        }),\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showEmojiPicker: false,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.post.has_reactions) {\n            this.props.actions.getReactionsForPost(this.props.post.id);\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.reactions !== prevProps.reactions) {\n            postListScrollChange();\n        }\n    }\n\n    getTarget = () => {\n        return this.refs.addReactionButton;\n    }\n\n    handleEmojiClick = (emoji) => {\n        this.setState({showEmojiPicker: false});\n        const emojiName = emoji.name || emoji.aliases[0];\n        this.props.actions.addReaction(this.props.post.id, emojiName);\n        emitEmojiPosted(emojiName);\n    }\n\n    hideEmojiPicker = () => {\n        this.setState({showEmojiPicker: false});\n    }\n\n    toggleEmojiPicker = () => {\n        this.setState({showEmojiPicker: !this.state.showEmojiPicker});\n    }\n\n    render() {\n        if (!this.props.post.has_reactions || (this.props.reactions && this.props.reactions.length === 0)) {\n            return null;\n        }\n\n        const reactionsByName = new Map();\n        const emojiNames = [];\n\n        if (this.props.reactions) {\n            for (const reaction of this.props.reactions) {\n                const emojiName = reaction.emoji_name;\n\n                if (reactionsByName.has(emojiName)) {\n                    reactionsByName.get(emojiName).push(reaction);\n                } else {\n                    emojiNames.push(emojiName);\n                    reactionsByName.set(emojiName, [reaction]);\n                }\n            }\n        }\n\n        const reactions = emojiNames.map((emojiName) => {\n            return (\n                <Reaction\n                    key={emojiName}\n                    post={this.props.post}\n                    emojiName={emojiName}\n                    reactions={reactionsByName.get(emojiName) || []}\n                    emojis={this.props.emojis}\n                />\n            );\n        });\n\n        const addReactionButton = this.getTarget();\n        let rightOffset = DEFAULT_EMOJI_PICKER_RIGHT_OFFSET;\n        if (addReactionButton) {\n            rightOffset = window.innerWidth - addReactionButton.getBoundingClientRect().right - EMOJI_PICKER_WIDTH_OFFSET;\n\n            if (rightOffset < 0) {\n                rightOffset = DEFAULT_EMOJI_PICKER_RIGHT_OFFSET;\n            }\n        }\n\n        let emojiPicker = null;\n        if (this.props.enableEmojiPicker) {\n            const addReactionTooltip = (\n                <Tooltip id='addReactionTooltip'>\n                    <FormattedMessage\n                        id='reaction_list.addReactionTooltip'\n                        defaultMessage='Add reaction'\n                    />\n                </Tooltip>\n            );\n\n            emojiPicker = (\n                <span className='emoji-picker__container'>\n                    <EmojiPickerOverlay\n                        show={this.state.showEmojiPicker}\n                        target={this.getTarget}\n                        onHide={this.hideEmojiPicker}\n                        onEmojiClick={this.handleEmojiClick}\n                        rightOffset={rightOffset}\n                        topOffset={-5}\n                    />\n                    <OverlayTrigger\n                        trigger={['hover', 'focus']}\n                        placement='top'\n                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                        overlay={addReactionTooltip}\n                    >\n                        <ChannelPermissionGate\n                            channelId={this.props.post.channel_id}\n                            teamId={this.props.teamId}\n                            permissions={[Permissions.ADD_REACTION]}\n                        >\n                            <div\n                                className='post-reaction'\n                                onClick={this.toggleEmojiPicker}\n                            >\n                                <span\n                                    className='post-reaction__add'\n                                    ref='addReactionButton'\n                                >\n                                    {'+'}\n                                </span>\n                            </div>\n                        </ChannelPermissionGate>\n                    </OverlayTrigger>\n                </span>\n            );\n        }\n\n        let addReactionClassName = 'post-add-reaction';\n        if (this.state.showEmojiPicker) {\n            addReactionClassName += ' post-add-reaction-emoji-picker-open';\n        }\n\n        return (\n            <div className='post-reaction-list'>\n                {reactions}\n                <div className={addReactionClassName}>\n                    {emojiPicker}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'mattermost-redux/actions/posts';\nimport {getCustomEmojisByName} from 'mattermost-redux/selectors/entities/emojis';\nimport {getChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {makeGetReactionsForPost} from 'mattermost-redux/selectors/entities/posts';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport ReactionList from './reaction_list.jsx';\n\nfunction makeMapStateToProps() {\n    const getReactionsForPost = makeGetReactionsForPost();\n\n    return function mapStateToProps(state, ownProps) {\n        const config = getConfig(state);\n        const enableEmojiPicker = config.EnableEmojiPicker === 'true' && !ownProps.isReadOnly;\n\n        const channel = getChannel(state, ownProps.post.channel_id) || {};\n        const teamId = channel.team_id;\n\n        return {\n            teamId,\n            reactions: getReactionsForPost(state, ownProps.post.id),\n            emojis: getCustomEmojisByName(state),\n            enableEmojiPicker,\n        };\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getReactionsForPost: Actions.getReactionsForPost,\n            addReaction: Actions.addReaction,\n        }, dispatch),\n    };\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(ReactionList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {getYoutubeVideoInfo} from 'actions/integration_actions.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nconst ytRegex = /(?:http|https):\\/\\/(?:www\\.|m\\.)?(?:(?:youtube\\.com\\/(?:(?:v\\/)|(?:(?:watch|embed\\/watch)(?:\\/|.*v=))|(?:embed\\/)|(?:user\\/[^/]+\\/u\\/[0-9]\\/)))|(?:youtu\\.be\\/))([^#&?]*)/;\n\nexport default class YoutubeVideo extends React.PureComponent {\n    static propTypes = {\n        channelId: PropTypes.string.isRequired,\n        currentChannelId: PropTypes.string.isRequired,\n        link: PropTypes.string.isRequired,\n        show: PropTypes.bool.isRequired,\n        googleDeveloperKey: PropTypes.string,\n        onLinkLoaded: PropTypes.func,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.updateStateFromProps = this.updateStateFromProps.bind(this);\n        this.handleReceivedMetadata = this.handleReceivedMetadata.bind(this);\n        this.handleMetadataError = this.handleMetadataError.bind(this);\n        this.loadWithoutKey = this.loadWithoutKey.bind(this);\n\n        this.play = this.play.bind(this);\n        this.stop = this.stop.bind(this);\n\n        this.state = {\n            loaded: false,\n            failed: false,\n            playing: false,\n            title: '',\n        };\n    }\n\n    UNSAFE_componentWillMount() { // eslint-disable-line camelcase\n        this.updateStateFromProps(this.props);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        this.updateStateFromProps(nextProps);\n    }\n\n    updateStateFromProps(props) {\n        const link = props.link;\n\n        const match = link.trim().match(ytRegex);\n        if (!match || match[1].length !== 11) {\n            return;\n        }\n\n        if (props.show === false) {\n            this.stop();\n        }\n\n        if (props.channelId !== props.currentChannelId) {\n            this.stop();\n        }\n\n        this.setState({\n            videoId: match[1],\n            time: this.handleYoutubeTime(link),\n        });\n    }\n\n    handleYoutubeTime(link) {\n        const timeRegex = /[\\\\?&](t|start|time_continue)=([0-9]+h)?([0-9]+m)?([0-9]+s?)/;\n\n        const time = link.match(timeRegex);\n        if (!time || !time[0]) {\n            return '';\n        }\n\n        const hours = time[2] ? time[2].match(/([0-9]+)h/) : null;\n        const minutes = time[3] ? time[3].match(/([0-9]+)m/) : null;\n        const seconds = time[4] ? time[4].match(/([0-9]+)s?/) : null;\n\n        let ticks = 0;\n\n        if (hours && hours[1]) {\n            ticks += parseInt(hours[1], 10) * 3600;\n        }\n\n        if (minutes && minutes[1]) {\n            ticks += parseInt(minutes[1], 10) * 60;\n        }\n\n        if (seconds && seconds[1]) {\n            ticks += parseInt(seconds[1], 10);\n        }\n\n        return '&start=' + ticks.toString();\n    }\n\n    componentDidMount() {\n        const key = this.props.googleDeveloperKey;\n        if (key) {\n            getYoutubeVideoInfo(key, this.state.videoId,\n                this.handleReceivedMetadata, this.handleMetadataError);\n        } else {\n            this.loadWithoutKey();\n        }\n        this.props.onLinkLoaded();\n    }\n\n    loadWithoutKey() {\n        this.setState({\n            loaded: true,\n            thumb: 'https://i.ytimg.com/vi/' + this.state.videoId + '/hqdefault.jpg',\n        });\n    }\n\n    handleMetadataError() {\n        this.setState({\n            failed: true,\n            loaded: true,\n            title: Utils.localizeMessage('youtube_video.notFound', 'Video not found'),\n        });\n    }\n\n    handleReceivedMetadata(data) {\n        if (!data || !data.items || !data.items.length || !data.items[0].snippet) {\n            this.setState({\n                failed: true,\n                loaded: true,\n                title: Utils.localizeMessage('youtube_video.notFound', 'Video not found'),\n            });\n            return null;\n        }\n        const metadata = data.items[0].snippet;\n        let thumb = 'https://i.ytimg.com/vi/' + this.state.videoId + '/hqdefault.jpg';\n        if (metadata.liveBroadcastContent === 'live') {\n            thumb = 'https://i.ytimg.com/vi/' + this.state.videoId + '/hqdefault_live.jpg';\n        }\n\n        this.setState({\n            loaded: true,\n            receivedYoutubeData: true,\n            title: metadata.title,\n            thumb,\n        });\n        return null;\n    }\n\n    play() {\n        this.setState({playing: true});\n    }\n\n    stop() {\n        this.setState({playing: false});\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return (\n                <div\n                    className='post__embed-container'\n                >\n                    <div className='video-loading'/>\n                </div>\n            );\n        }\n\n        let header;\n        if (this.state.title) {\n            header = (\n                <h4>\n                    <span className='video-type'>{'YouTube - '}</span>\n                    <span className='video-title'>\n                        <a\n                            href={this.props.link}\n                            target='blank'\n                            rel='noopener noreferrer'\n                        >\n                            {this.state.title}\n                        </a>\n                    </span>\n                </h4>\n            );\n        }\n\n        let content;\n        if (this.state.failed) {\n            content = (\n                <div>\n                    <div className='video-thumbnail__container'>\n                        <div className='video-thumbnail__error'>\n                            <div>\n                                <i\n                                    className='fa fa-warning fa-2x'\n                                    title={Utils.localizeMessage('generic_icons.warning', 'Warning Icon')}\n                                />\n                            </div>\n                            <div>{Utils.localizeMessage('youtube_video.notFound', 'Video not found')}</div>\n                        </div>\n                    </div>\n                </div>\n            );\n        } else if (this.state.playing) {\n            content = (\n                <iframe\n                    src={'https://www.youtube.com/embed/' + this.state.videoId + '?autoplay=1&autohide=1&border=0&wmode=opaque&fs=1&enablejsapi=1' + this.state.time}\n                    width='480px'\n                    height='360px'\n                    type='text/html'\n                    frameBorder='0'\n                    allowFullScreen='allowfullscreen'\n                />\n            );\n        } else {\n            content = (\n                <div className='embed-responsive embed-responsive-4by3 video-div__placeholder'>\n                    <div className='video-thumbnail__container'>\n                        <img\n                            className='video-thumbnail'\n                            src={this.state.thumb}\n                        />\n                        <div className='block'>\n                            <span className='play-button'><span/></span>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                className='post__embed-container'\n            >\n                <div>\n                    {header}\n                    <div\n                        className='video-div embed-responsive-item'\n                        onClick={this.play}\n                    >\n                        {content}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    static isYoutubeLink(link) {\n        return link.trim().match(ytRegex);\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getCurrentChannelId} from 'mattermost-redux/selectors/entities/channels';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport YoutubeVideo from './youtube_video.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    const googleDeveloperKey = config.GoogleDeveloperKey;\n\n    return {\n        currentChannelId: getCurrentChannelId(state),\n        googleDeveloperKey,\n    };\n}\n\nexport default connect(mapStateToProps)(YoutubeVideo);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class ShowMore extends React.PureComponent {\n    static propTypes = {\n        children: PropTypes.node,\n        checkOverflow: PropTypes.number,\n        isAttachmentText: PropTypes.bool,\n        isRHSExpanded: PropTypes.bool.isRequired,\n        isRHSOpen: PropTypes.bool.isRequired,\n        maxHeight: PropTypes.number.isRequired,\n        text: PropTypes.string,\n    }\n\n    state = {\n        isCollapsed: true,\n        isOverflow: false,\n    };\n\n    componentDidMount() {\n        this.checkTextOverflow();\n\n        window.addEventListener('resize', this.handleResize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (\n            this.props.text !== prevProps.text ||\n            this.props.isRHSExpanded !== prevProps.isRHSExpanded ||\n            this.props.isRHSOpen !== prevProps.isRHSOpen ||\n            this.props.checkOverflow !== prevProps.checkOverflow\n        ) {\n            this.checkTextOverflow();\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n\n    toggleCollapse = (e) => {\n        e.preventDefault();\n        this.setState((prevState) => {\n            return {\n                isCollapsed: !prevState.isCollapsed,\n            };\n        });\n    };\n\n    checkTextOverflow = () => {\n        const textContainer = this.refs.textContainer;\n        let isOverflow = false;\n\n        if (textContainer && textContainer.scrollHeight > this.props.maxHeight) {\n            isOverflow = true;\n        }\n\n        if (isOverflow !== this.state.isOverflow) {\n            this.setState({\n                isOverflow,\n            });\n        }\n    };\n\n    handleResize = () => {\n        this.checkTextOverflow();\n    };\n\n    render() {\n        const {\n            isCollapsed,\n            isOverflow,\n        } = this.state;\n\n        const {\n            children,\n            isAttachmentText,\n            maxHeight,\n        } = this.props;\n\n        let className = 'post-message';\n        let collapsedMaxHeightStyle;\n        if (isCollapsed) {\n            collapsedMaxHeightStyle = isAttachmentText ? {maxHeight} : null;\n            className += ' post-message--collapsed';\n        } else {\n            className += ' post-message--expanded';\n        }\n\n        let collapseGradientClass = 'post-collapse__gradient';\n        let collapseShowMoreClass = 'post-collapse__show-more';\n        if (isAttachmentText) {\n            collapseGradientClass = 'post-attachment-collapse__gradient';\n            collapseShowMoreClass = 'post-attachment-collapse__show-more';\n        }\n\n        let attachmentTextOverflow = null;\n        if (isOverflow) {\n            let showIcon = 'fa fa-angle-up';\n            let showText = localizeMessage('post_info.message.show_less', 'Show Less');\n            if (isCollapsed) {\n                showIcon = 'fa fa-angle-down';\n                showText = localizeMessage('post_info.message.show_more', 'Show More');\n            }\n\n            attachmentTextOverflow = (\n                <div className='post-collapse'>\n                    <div className={collapseGradientClass}/>\n                    <div className={collapseShowMoreClass}>\n                        <div className='post-collapse__show-more-line'/>\n                        <button\n                            className='post-collapse__show-more-button'\n                            onClick={this.toggleCollapse}\n                        >\n                            <span className={showIcon}/>\n                            {showText}\n                        </button>\n                        <div className='post-collapse__show-more-line'/>\n                    </div>\n                </div>\n            );\n\n            className += ' post-message--overflow';\n        }\n\n        return (\n            <div className={className}>\n                <div\n                    style={collapsedMaxHeightStyle}\n                    className='post-message__text-container'\n                    ref='textContainer'\n                >\n                    {children}\n                </div>\n                {attachmentTextOverflow}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getIsRhsExpanded, getIsRhsOpen} from 'selectors/rhs';\n\nimport ShowMore from './show_more';\n\nfunction mapStateToProps(state) {\n    return {\n        isRHSExpanded: getIsRhsExpanded(state),\n        isRHSOpen: getIsRhsOpen(state),\n    };\n}\n\nexport default connect(mapStateToProps)(ShowMore);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class ActionButton extends React.PureComponent {\n    static propTypes = {\n        action: PropTypes.object.isRequired,\n        handleAction: PropTypes.func.isRequired,\n    }\n\n    render() {\n        const {action, handleAction} = this.props;\n        return (\n            <button\n                data-action-id={action.id}\n                key={action.id}\n                onClick={handleAction}\n            >\n                {action.name}\n            </button>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport {ActionTypes} from 'utils/constants.jsx';\n\nimport Provider from './provider.jsx';\nimport Suggestion from './suggestion.jsx';\n\nclass MenuActionSuggestion extends Suggestion {\n    render() {\n        const {item, isSelection} = this.props;\n\n        let className = 'mentions__name';\n        if (isSelection) {\n            className += ' suggestion--selected';\n        }\n\n        return (\n            <div\n                className={className}\n                onClick={this.handleClick}\n                {...Suggestion.baseProps}\n            >\n                {item.text}\n            </div>\n        );\n    }\n}\n\nexport default class MenuActionProvider extends Provider {\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n\n    handlePretextChanged(suggestionId, prefix) {\n        if (prefix.length === 0) {\n            this.displayAllOptions(suggestionId, prefix);\n            return true;\n        }\n\n        if (prefix) {\n            this.filterOptions(suggestionId, prefix);\n            return true;\n        }\n\n        return false;\n    }\n\n    async displayAllOptions(suggestionId) {\n        const terms = this.options.map((option) => option.text);\n\n        setTimeout(() => {\n            AppDispatcher.handleServerAction({\n                type: ActionTypes.SUGGESTION_RECEIVED_SUGGESTIONS,\n                id: suggestionId,\n                matchedPretext: '',\n                terms,\n                items: this.options,\n                component: MenuActionSuggestion,\n            });\n        }, 0);\n    }\n\n    async filterOptions(suggestionId, prefix) {\n        const filteredOptions = this.options.filter((option) => option.text.toLowerCase().indexOf(prefix) >= 0);\n        const terms = filteredOptions.map((option) => option.text);\n\n        setTimeout(() => {\n            AppDispatcher.handleServerAction({\n                type: ActionTypes.SUGGESTION_RECEIVED_SUGGESTIONS,\n                id: suggestionId,\n                matchedPretext: prefix,\n                terms,\n                items: filteredOptions,\n                component: MenuActionSuggestion,\n            });\n        }, 0);\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {autocompleteChannels} from 'actions/channel_actions.jsx';\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport {ActionTypes} from 'utils/constants.jsx';\n\nimport Provider from './provider.jsx';\nimport Suggestion from './suggestion.jsx';\n\nclass ChannelSuggestion extends Suggestion {\n    render() {\n        const isSelection = this.props.isSelection;\n        const item = this.props.item;\n\n        const channelName = item.display_name;\n        const purpose = item.purpose;\n\n        let className = 'mentions__name no-flex';\n        if (isSelection) {\n            className += ' suggestion--selected';\n        }\n\n        const description = '(~' + item.name + ')';\n\n        return (\n            <div\n                className={className}\n                onClick={this.handleClick}\n                {...Suggestion.baseProps}\n            >\n                <div className='mention__align'>\n                    <span>\n                        {channelName}\n                    </span>\n                    <span className='mention__channelname'>\n                        {' '}\n                        {description}\n                    </span>\n                </div>\n                <div className='mention__purpose'>\n                    {purpose}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class ChannelProvider extends Provider {\n    handlePretextChanged(suggestionId, pretext) {\n        const normalizedPretext = pretext.toLowerCase();\n        this.startNewRequest(suggestionId, normalizedPretext);\n\n        autocompleteChannels(\n            normalizedPretext,\n            (data) => {\n                if (this.shouldCancelDispatch(normalizedPretext)) {\n                    return;\n                }\n\n                const channels = Object.assign([], data);\n\n                AppDispatcher.handleServerAction({\n                    type: ActionTypes.SUGGESTION_RECEIVED_SUGGESTIONS,\n                    id: suggestionId,\n                    matchedPretext: normalizedPretext,\n                    terms: channels.map((channel) => channel.display_name),\n                    items: channels,\n                    component: ChannelSuggestion,\n                });\n            }\n        );\n\n        return true;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nimport SuggestionBox from 'components/suggestion/suggestion_box.jsx';\nimport SuggestionList from 'components/suggestion/suggestion_list.jsx';\nimport MenuActionProvider from 'components/suggestion/menu_action_provider';\nimport GenericUserProvider from 'components/suggestion/generic_user_provider.jsx';\nimport GenericChannelProvider from 'components/suggestion/generic_channel_provider.jsx';\n\nexport default class ActionMenu extends React.PureComponent {\n    static propTypes = {\n        postId: PropTypes.string.isRequired,\n        action: PropTypes.object.isRequired,\n        selected: PropTypes.object,\n        actions: PropTypes.shape({\n            doPostAction: PropTypes.func.isRequired,\n            selectAttachmentMenuAction: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        const action = props.action;\n        if (action) {\n            if (action.data_source === 'users') {\n                this.providers = [new GenericUserProvider()];\n            } else if (action.data_source === 'channels') {\n                this.providers = [new GenericChannelProvider()];\n            } else if (action.options) {\n                this.providers = [new MenuActionProvider(action.options)];\n            } else {\n                this.providers = [];\n            }\n        } else {\n            this.providers = [];\n        }\n\n        this.state = {\n            input: '',\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.selected && props.selected !== state.selected) {\n            return {\n                input: props.selected.displayText,\n                selected: props.selected,\n            };\n        }\n\n        return null;\n    }\n\n    onChange = (e) => {\n        this.setState({input: e.target.value, previousInput: ''});\n    };\n\n    handleSelected = (selected) => {\n        if (!selected) {\n            return;\n        }\n\n        const {action} = this.props;\n\n        let value = '';\n        let displayText = '';\n        if (action.data_source === 'users') {\n            displayText = selected.username;\n            value = selected.id;\n        } else if (action.data_source === 'channels') {\n            displayText = selected.display_name;\n            value = selected.id;\n        } else {\n            displayText = selected.text;\n            value = selected.value;\n        }\n\n        this.props.actions.selectAttachmentMenuAction(this.props.postId, this.props.action.id, this.props.action.data_source, displayText, value);\n\n        requestAnimationFrame(() => {\n            if (this.suggestionRef) {\n                this.suggestionRef.blur();\n            }\n        });\n    }\n\n    setSuggestionRef = (ref) => {\n        this.suggestionRef = ref;\n    }\n\n    onFocus = () => {\n        this.setState({input: '', previousInput: this.state.input});\n    }\n\n    onBlur = () => {\n        if (this.state.previousInput) {\n            this.setState({input: this.state.previousInput, previousInput: ''});\n        }\n    }\n\n    render() {\n        const {action} = this.props;\n\n        let submitted;\n        if (this.props.selected) {\n            submitted = (\n                <div className='alert alert-success'>\n                    <i className='fa fa-check margin-right margin-right--half'/>\n                    <FormattedMessage\n                        id='action_menu.submitted'\n                        defaultMessage='Submitted'\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                <SuggestionBox\n                    placeholder={action.name}\n                    ref={this.setSuggestionRef}\n                    listComponent={SuggestionList}\n                    className='form-control'\n                    containerClass={'post-attachment-dropdown'}\n                    value={this.state.input}\n                    onChange={this.onChange}\n                    onItemSelected={this.handleSelected}\n                    onFocus={this.onFocus}\n                    onBlur={this.onBlur}\n                    providers={this.providers}\n                    completeOnTab={true}\n                    renderDividers={false}\n                    renderNoResults={true}\n                    openOnFocus={true}\n                    openWhenEmpty={true}\n                    replaceAllInputOnSelect={true}\n                />\n                {submitted}\n            </div>\n        );\n    }\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {selectAttachmentMenuAction} from 'actions/views/posts';\n\nimport ActionMenu from './action_menu.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        selected: state.views.posts.menuActions[ownProps.postId],\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            selectAttachmentMenuAction,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActionMenu);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport * as PostActions from 'actions/post_actions.jsx';\nimport {postListScrollChange} from 'actions/global_actions';\n\nimport {isUrlSafe} from 'utils/url.jsx';\nimport * as Utils from 'utils/utils';\n\nimport Markdown from 'components/markdown';\n\nimport ShowMore from 'components/post_view/show_more';\n\nimport ActionButton from './action_button.jsx';\nimport ActionMenu from './action_menu';\n\nconst MAX_ATTACHMENT_TEXT_HEIGHT = 200;\n\nexport default class MessageAttachment extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The post id\n         */\n        postId: PropTypes.string.isRequired,\n\n        /**\n         * The attachment to render\n         */\n        attachment: PropTypes.object.isRequired,\n\n        /**\n         * Options specific to text formatting\n         */\n        options: PropTypes.object,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checkOverflow: 0,\n        };\n\n        this.imageProps = {\n            onHeightReceived: this.handleHeightReceived,\n        };\n    }\n\n    handleHeightReceived = (height) => {\n        if (height > 0) {\n            // Increment checkOverflow to indicate change in height\n            // and recompute textContainer height at ShowMore component\n            // and see whether overflow text of show more/less is necessary or not.\n            this.setState((prevState) => {\n                return {checkOverflow: prevState.checkOverflow + 1};\n            });\n\n            postListScrollChange();\n        }\n    };\n\n    getActionView = () => {\n        const actions = this.props.attachment.actions;\n        if (!actions || !actions.length) {\n            return '';\n        }\n\n        const content = [];\n\n        actions.forEach((action) => {\n            if (!action.id || !action.name) {\n                return;\n            }\n\n            switch (action.type) {\n            case 'select':\n                content.push(\n                    <ActionMenu\n                        key={action.id}\n                        postId={this.props.postId}\n                        action={action}\n                    />\n                );\n                break;\n            case 'button':\n            default:\n                content.push(\n                    <ActionButton\n                        key={action.id}\n                        action={action}\n                        handleAction={this.handleAction}\n                    />\n                );\n                break;\n            }\n        });\n\n        return (\n            <div\n                className='attachment-actions'\n            >\n                {content}\n            </div>\n        );\n    };\n\n    handleAction = (e) => {\n        e.preventDefault();\n        const actionId = e.currentTarget.getAttribute('data-action-id');\n        PostActions.doPostAction(this.props.postId, actionId);\n    };\n\n    getFieldsTable = () => {\n        const fields = this.props.attachment.fields;\n        if (!fields || !fields.length) {\n            return '';\n        }\n\n        const fieldTables = [];\n\n        let headerCols = [];\n        let bodyCols = [];\n        let rowPos = 0;\n        let lastWasLong = false;\n        let nrTables = 0;\n\n        fields.forEach((field, i) => {\n            if (rowPos === 2 || !(field.short === true) || lastWasLong) {\n                fieldTables.push(\n                    <table\n                        className='attachment-fields'\n                        key={'attachment__table__' + nrTables}\n                    >\n                        <thead>\n                            <tr>\n                                {headerCols}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                {bodyCols}\n                            </tr>\n                        </tbody>\n                    </table>\n                );\n                headerCols = [];\n                bodyCols = [];\n                rowPos = 0;\n                nrTables += 1;\n                lastWasLong = false;\n            }\n            headerCols.push(\n                <th\n                    className='attachment-field__caption'\n                    key={'attachment__field-caption-' + i + '__' + nrTables}\n                    width='50%'\n                >\n                    {field.title}\n                </th>\n            );\n\n            bodyCols.push(\n                <td\n                    className='attachment-field'\n                    key={'attachment__field-' + i + '__' + nrTables}\n                >\n                    <Markdown message={field.value}/>\n                </td>\n            );\n            rowPos += 1;\n            lastWasLong = !(field.short === true);\n        });\n        if (headerCols.length > 0) { // Flush last fields\n            fieldTables.push(\n                <table\n                    className='attachment-fields'\n                    key={'attachment__table__' + nrTables}\n                >\n                    <thead>\n                        <tr>\n                            {headerCols}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            {bodyCols}\n                        </tr>\n                    </tbody>\n                </table>\n            );\n        }\n        return (\n            <div>\n                {fieldTables}\n            </div>\n        );\n    };\n\n    render() {\n        const {attachment, options} = this.props;\n        let preTextClass = '';\n\n        let preText;\n        if (attachment.pretext) {\n            preTextClass = 'attachment--pretext';\n            preText = (\n                <div className='attachment__thumb-pretext'>\n                    <Markdown message={attachment.pretext}/>\n                </div>\n            );\n        }\n\n        let author = [];\n        if (attachment.author_name || attachment.author_icon) {\n            if (attachment.author_icon) {\n                author.push(\n                    <img\n                        className='attachment__author-icon'\n                        src={attachment.author_icon}\n                        key={'attachment__author-icon'}\n                        height='14'\n                        width='14'\n                    />\n                );\n            }\n            if (attachment.author_name) {\n                author.push(\n                    <span\n                        className='attachment__author-name'\n                        key={'attachment__author-name'}\n                    >\n                        {attachment.author_name}\n                    </span>\n                );\n            }\n        }\n        if (attachment.author_link && isUrlSafe(attachment.author_link)) {\n            author = (\n                <a\n                    href={attachment.author_link}\n                    target='_blank'\n                    rel='noopener noreferrer'\n                >\n                    {author}\n                </a>\n            );\n        }\n\n        let title;\n        if (attachment.title) {\n            if (attachment.title_link && isUrlSafe(attachment.title_link)) {\n                title = (\n                    <h1 className='attachment__title'>\n                        <a\n                            className='attachment__title-link'\n                            href={attachment.title_link}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                        >\n                            {attachment.title}\n                        </a>\n                    </h1>\n                );\n            } else {\n                title = (\n                    <h1 className='attachment__title'>\n                        {attachment.title}\n                    </h1>\n                );\n            }\n        }\n\n        let attachmentText;\n        if (attachment.text) {\n            attachmentText = (\n                <ShowMore\n                    checkOverflow={this.state.checkOverflow}\n                    isAttachmentText={true}\n                    maxHeight={MAX_ATTACHMENT_TEXT_HEIGHT}\n                    text={attachment.text}\n                >\n                    <Markdown\n                        message={attachment.text || ''}\n                        options={options}\n                        imageProps={this.imageProps}\n                    />\n                </ShowMore>\n            );\n        }\n\n        let image;\n        if (attachment.image_url) {\n            image = (\n                <img\n                    className='attachment__image'\n                    src={attachment.image_url}\n                />\n            );\n        }\n\n        let thumb;\n        if (attachment.thumb_url) {\n            thumb = (\n                <div\n                    className='attachment__thumb-container'\n                >\n                    <img\n                        src={attachment.thumb_url}\n                    />\n                </div>\n            );\n        }\n\n        const fields = this.getFieldsTable();\n        const actions = this.getActionView();\n\n        let useBorderStyle;\n        if (attachment.color && attachment.color[0] === '#') {\n            useBorderStyle = {borderLeftColor: attachment.color};\n        }\n\n        return (\n            <div\n                className={'attachment ' + preTextClass}\n                ref='attachment'\n            >\n                {preText}\n                <div className='attachment__content'>\n                    <div\n                        className={useBorderStyle ? 'clearfix attachment__container' : 'clearfix attachment__container attachment__container--' + attachment.color}\n                        style={useBorderStyle}\n                    >\n                        {author}\n                        {title}\n                        <div>\n                            <div\n                                className={thumb ? 'attachment__body' : 'attachment__body attachment__body--no_thumb'}\n                                onClick={Utils.handleFormattedTextClick}\n                            >\n                                {attachmentText}\n                                {image}\n                                {fields}\n                                {actions}\n                            </div>\n                            {thumb}\n                            <div style={style.footer}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    footer: {clear: 'both'},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport PostAttachment from './message_attachment.jsx';\n\nexport default class PostAttachmentList extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The post id\n         */\n        postId: PropTypes.string.isRequired,\n\n        /**\n         * Array of attachments to render\n         */\n        attachments: PropTypes.array.isRequired,\n\n        /**\n         * Options specific to text formatting\n         */\n        options: PropTypes.object,\n    }\n\n    render() {\n        const content = [];\n        this.props.attachments.forEach((attachment, i) => {\n            content.push(\n                <PostAttachment\n                    attachment={attachment}\n                    postId={this.props.postId}\n                    key={'att_' + i}\n                    options={this.props.options}\n                />\n            );\n        });\n\n        return (\n            <div className='attachment__list'>\n                {content}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nexport function getDistanceBW2Points(point1, point2, xAttr = 'x', yAttr = 'y') {\n    return Math.sqrt(Math.pow(point1[xAttr] - point2[xAttr], 2) + Math.pow(point1[yAttr] - point2[yAttr], 2));\n}\n\n/**\n  * Funtion to return nearest point of given pivot point.\n  * It return two points one nearest and other nearest but having both coorditanes smaller than the given point's coordinates.\n  */\nexport function getNearestPoint(pivotPoint, points, xAttr = 'x', yAttr = 'y') {\n    var nearestPoint = {};\n    for (const point of points) {\n        if (typeof nearestPoint[xAttr] === 'undefined' || typeof nearestPoint[yAttr] === 'undefined') {\n            nearestPoint = point;\n        } else if (getDistanceBW2Points(point, pivotPoint, xAttr, yAttr) < getDistanceBW2Points(nearestPoint, pivotPoint, xAttr, yAttr)) {\n        // Check for bestImage\n            nearestPoint = point;\n        }\n    }\n    return nearestPoint;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {postListScrollChange} from 'actions/global_actions.jsx';\nimport {updatePost} from 'actions/post_actions.jsx';\nimport * as CommonUtils from 'utils/commons.jsx';\nimport {PostTypes} from 'utils/constants.jsx';\nimport {useSafeUrl} from 'utils/url';\nimport * as Utils from 'utils/utils.jsx';\nimport {isSystemMessage} from 'utils/post_utils.jsx';\n\nexport default class PostAttachmentOpenGraph extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The link to display the open graph data for\n         */\n        link: PropTypes.string.isRequired,\n\n        /**\n         * The current user viewing the post\n         */\n        currentUser: PropTypes.object,\n\n        /**\n         * The post where this link is included\n         */\n        post: PropTypes.object,\n\n        /**\n         * The open graph data to render\n         */\n        openGraphData: PropTypes.object,\n\n        isEmbedVisible: PropTypes.bool,\n        toggleEmbedVisibility: PropTypes.func.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * The function to get open graph data for a link\n             */\n            getOpenGraphMetadata: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n        this.largeImageMinWidth = 150;\n        this.imageDimentions = { // Image dimentions in pixels.\n            height: 80,\n            width: 80,\n        };\n        this.textMaxLength = 300;\n        this.textEllipsis = '...';\n        this.largeImageMinRatio = 16 / 9;\n        this.smallImageContainerLeftPadding = 15;\n\n        this.imageRatio = null;\n\n        this.smallImageContainer = null;\n        this.smallImageElement = null;\n\n        this.IMAGE_LOADED = {\n            LOADING: 'loading',\n            YES: 'yes',\n            ERROR: 'error',\n        };\n\n        this.fetchData = this.fetchData.bind(this);\n        this.onImageLoad = this.onImageLoad.bind(this);\n        this.onImageError = this.onImageError.bind(this);\n        this.handleRemovePreview = this.handleRemovePreview.bind(this);\n    }\n\n    UNSAFE_componentWillMount() { // eslint-disable-line camelcase\n        const removePreview = this.isRemovePreview(this.props.post, this.props.currentUser);\n\n        this.setState({\n            imageLoaded: this.IMAGE_LOADED.LOADING,\n            hasLargeImage: false,\n            removePreview,\n        });\n        this.fetchData(this.props.link);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (!Utils.areObjectsEqual(nextProps.post, this.props.post)) {\n            const removePreview = this.isRemovePreview(nextProps.post, nextProps.currentUser);\n            this.setState({\n                removePreview,\n            });\n        }\n        if (nextProps.link !== this.props.link) {\n            this.fetchData(nextProps.link);\n        }\n    }\n\n    componentDidUpdate() {\n        setTimeout(postListScrollChange, 0);\n    }\n\n    fetchData(url) {\n        if (!this.props.openGraphData) {\n            this.props.actions.getOpenGraphMetadata(url);\n        }\n    }\n\n    getBestImageUrl(data) {\n        if (Utils.isEmptyObject(data.images)) {\n            return null;\n        }\n\n        const bestImage = CommonUtils.getNearestPoint(this.imageDimentions, data.images, 'width', 'height');\n        return bestImage.secure_url || bestImage.url;\n    }\n\n    onImageLoad(image) {\n        this.imageRatio = image.target.naturalWidth / image.target.naturalHeight;\n        if (\n            image.target.naturalWidth >= this.largeImageMinWidth &&\n            this.imageRatio >= this.largeImageMinRatio &&\n            !this.state.hasLargeImage\n        ) {\n            this.setState({\n                hasLargeImage: true,\n            });\n        }\n        this.setState({\n            imageLoaded: this.IMAGE_LOADED.YES,\n        });\n    }\n\n    onImageError() {\n        this.setState({imageLoaded: this.IMAGE_LOADED.ERROR});\n    }\n\n    loadImage(src) {\n        const img = new Image();\n        img.onload = this.onImageLoad;\n        img.onerror = this.onImageError;\n        img.src = src;\n    }\n\n    imageToggleAnchorTag(imageUrl) {\n        if (imageUrl && this.state.hasLargeImage) {\n            return (\n                <a\n                    className={'post__embed-visibility'}\n                    data-expanded={this.props.isEmbedVisible}\n                    aria-label='Toggle Embed Visibility'\n                    onClick={this.props.toggleEmbedVisibility}\n                />\n            );\n        }\n        return null;\n    }\n\n    getSmallImageContainer = (node) => {\n        this.smallImageContainer = node;\n    }\n\n    wrapInSmallImageContainer(imageElement) {\n        return (\n            <div\n                className='attachment__image__container--opengraph'\n                ref={this.getSmallImageContainer}\n            >\n                {imageElement}\n            </div>\n        );\n    }\n\n    getSmallImageElement = (node) => {\n        this.smallImageElement = node;\n    }\n\n    imageTag(imageUrl, renderingForLargeImage = false) {\n        var element = null;\n        if (\n            imageUrl && renderingForLargeImage === this.state.hasLargeImage &&\n            (!renderingForLargeImage || (renderingForLargeImage && this.props.isEmbedVisible))\n        ) {\n            if (this.state.imageLoaded === this.IMAGE_LOADED.LOADING) {\n                if (renderingForLargeImage) {\n                    element = <img className={'attachment__image attachment__image--opengraph loading large_image'}/>;\n                } else {\n                    element = this.wrapInSmallImageContainer(\n                        <img className={'attachment__image attachment__image--opengraph loading '}/>\n                    );\n                }\n            } else if (this.state.imageLoaded === this.IMAGE_LOADED.YES) {\n                if (renderingForLargeImage) {\n                    element = (\n                        <img\n                            className={'attachment__image attachment__image--opengraph large_image'}\n                            src={imageUrl}\n                        />\n                    );\n                } else {\n                    element = this.wrapInSmallImageContainer(\n                        <img\n                            className={'attachment__image attachment__image--opengraph'}\n                            src={imageUrl}\n                            ref={this.getSmallImageElement}\n                        />\n                    );\n                }\n            } else if (this.state.imageLoaded === this.IMAGE_LOADED.ERROR) {\n                return null;\n            }\n        }\n        return element;\n    }\n\n    truncateText(text, maxLength = this.textMaxLength, ellipsis = this.textEllipsis) {\n        if (text && text.length > maxLength) {\n            return text.substring(0, maxLength - ellipsis.length) + ellipsis;\n        }\n        return text;\n    }\n\n    handleRemovePreview() {\n        const props = Object.assign({}, this.props.post.props);\n        props[PostTypes.REMOVE_LINK_PREVIEW] = 'true';\n\n        const patchedPost = ({\n            id: this.props.post.id,\n            props,\n        });\n\n        updatePost(patchedPost, () => {\n            this.setState({removePreview: true});\n        });\n    }\n\n    isRemovePreview(post) {\n        if (post && post.props) {\n            return post.props[PostTypes.REMOVE_LINK_PREVIEW] && post.props[PostTypes.REMOVE_LINK_PREVIEW] === 'true';\n        }\n\n        return false;\n    }\n\n    render() {\n        if (!this.props.post || isSystemMessage(this.props.post)) {\n            return null;\n        }\n\n        if (this.state.removePreview) {\n            return null;\n        }\n\n        const data = this.props.openGraphData;\n        if (!data) {\n            return null;\n        }\n\n        let removePreviewButton;\n        if (this.props.currentUser.id === this.props.post.user_id) {\n            removePreviewButton = (\n                <button\n                    id='removePreviewButton'\n                    type='button'\n                    className='btn-close'\n                    aria-label='Close'\n                    onClick={this.handleRemovePreview}\n                >\n                    <span aria-hidden='true'>{'×'}</span>\n                </button>\n            );\n        }\n\n        const imageUrl = this.getBestImageUrl(data);\n        if (imageUrl) {\n            this.loadImage(imageUrl);\n        }\n\n        let body;\n        if (data.description || imageUrl) {\n            body = (\n                <React.Fragment>\n                    <div className={'attachment__body attachment__body--opengraph'}>\n                        <div>\n                            <div>\n                                {this.truncateText(data.description)}\n                                {' '}\n                                {this.imageToggleAnchorTag(imageUrl)}\n                            </div>\n                            {this.imageTag(imageUrl, true)}\n                        </div>\n                    </div>\n                </React.Fragment>\n            );\n        }\n\n        return (\n            <div\n                className='attachment attachment--opengraph'\n                ref='attachment'\n            >\n                <div className='attachment__content'>\n                    <div\n                        className={'clearfix attachment__container attachment__container--opengraph'}\n                    >\n                        <div\n                            className={'attachment__body__wrap attachment__body__wrap--opengraph'}\n                        >\n                            <span className='sitename'>{this.truncateText(data.site_name)}</span>\n                            {removePreviewButton}\n                            <h1\n                                className={'attachment__title attachment__title--opengraph' + (data.title ? '' : ' is-url')}\n                            >\n                                <a\n                                    className='attachment__title-link attachment__title-link--opengraph'\n                                    href={useSafeUrl(data.url || this.props.link)}\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    title={data.title || data.url || this.props.link}\n                                >\n                                    {this.truncateText(data.title || data.url || this.props.link)}\n                                </a>\n                            </h1>\n                            {body}\n                        </div>\n                        {this.imageTag(imageUrl, false)}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getOpenGraphMetadata} from 'mattermost-redux/actions/posts';\nimport {getOpenGraphMetadataForUrl} from 'mattermost-redux/selectors/entities/posts';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\n\nimport PostAttachmentOpenGraph from './post_attachment_opengraph.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        openGraphData: getOpenGraphMetadataForUrl(state, ownProps.link),\n        currentUser: getCurrentUser(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getOpenGraphMetadata,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostAttachmentOpenGraph);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {postListScrollChange} from 'actions/global_actions.jsx';\nimport * as PostUtils from 'utils/post_utils.jsx';\n\nexport default class PostImageEmbed extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The link to load the image from\n         */\n        link: PropTypes.string.isRequired,\n\n        /**\n         * Function to call when image is loaded\n         */\n        onLinkLoaded: PropTypes.func,\n\n        /**\n         * The function to call if image load fails\n         */\n        onLinkLoadError: PropTypes.func,\n\n        /**\n         * The function to call if image is clicked\n         */\n        handleImageClick: PropTypes.func,\n\n        /**\n         * If an image proxy is enabled.\n         */\n        hasImageProxy: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleLoadComplete = this.handleLoadComplete.bind(this);\n        this.handleLoadError = this.handleLoadError.bind(this);\n\n        this.state = {\n            loaded: false,\n            errored: false,\n        };\n    }\n\n    UNSAFE_componentWillMount() { // eslint-disable-line camelcase\n        this.loadImg(this.props.link);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (nextProps.link !== this.props.link) {\n            this.setState({\n                loaded: false,\n                errored: false,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!this.state.loaded && prevProps.link !== this.props.link) {\n            this.loadImg(this.props.link);\n        }\n    }\n\n    loadImg(src) {\n        const img = new Image();\n        img.onload = this.handleLoadComplete;\n        img.onerror = this.handleLoadError;\n        img.src = PostUtils.getImageSrc(src, this.props.hasImageProxy);\n    }\n\n    handleLoadComplete() {\n        this.setState({\n            loaded: true,\n            errored: false,\n        });\n\n        postListScrollChange();\n\n        if (this.props.onLinkLoaded) {\n            this.props.onLinkLoaded();\n        }\n    }\n\n    handleLoadError() {\n        this.setState({\n            errored: true,\n            loaded: true,\n        });\n        if (this.props.onLinkLoadError) {\n            this.props.onLinkLoadError();\n        }\n    }\n\n    onImageClick = (e) => {\n        e.preventDefault();\n        this.props.handleImageClick();\n    };\n\n    render() {\n        if (this.state.errored || !this.state.loaded) {\n            // scroll pop could be improved with a placeholder when !this.state.loaded\n            return null;\n        }\n\n        return (\n            <div\n                className='post__embed-container'\n            >\n                <img\n                    onClick={this.onImageClick}\n                    className='img-div cursor--pointer'\n                    src={PostUtils.getImageSrc(this.props.link, this.props.hasImageProxy)}\n                />\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport PostImage from './post_image.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const hasImageProxy = config.HasImageProxy === 'true';\n\n    return {\n        hasImageProxy,\n    };\n}\n\nexport default connect(mapStateToProps)(PostImage);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport * as Utils from 'utils/utils.jsx';\nimport YoutubeVideo from 'components/youtube_video';\nimport ViewImageModal from 'components/view_image';\nimport Constants from 'utils/constants';\nimport * as PostUtils from 'utils/post_utils.jsx';\n\nimport MessageAttachmentList from '../message_attachments/message_attachment_list.jsx';\nimport PostAttachmentOpenGraph from '../post_attachment_opengraph';\nimport PostImage from '../post_image';\n\nexport default class PostBodyAdditionalContent extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The post to render the content of\n         */\n        post: PropTypes.object.isRequired,\n\n        /**\n         * The post's message\n         */\n        children: PropTypes.element.isRequired,\n\n        /**\n         * User's preference to link previews\n         */\n        previewEnabled: PropTypes.bool,\n\n        /**\n         * Flag passed down to PostBodyAdditionalContent for determining if post embed is visible\n         */\n        isEmbedVisible: PropTypes.bool,\n\n        /**\n         * Whether link previews are enabled in the first place.\n         */\n        enableLinkPreviews: PropTypes.bool.isRequired,\n\n        /**\n         * If an image proxy is enabled.\n         */\n        hasImageProxy: PropTypes.bool.isRequired,\n\n        /**\n         * Options specific to text formatting\n         */\n        options: PropTypes.object,\n\n        actions: PropTypes.shape({\n            getRedirectLocation: PropTypes.func.isRequired,\n            toggleEmbedVisibility: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        previewEnabled: false,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.getSlackAttachment = this.getSlackAttachment.bind(this);\n        this.generateToggleableEmbed = this.generateToggleableEmbed.bind(this);\n        this.generateStaticEmbed = this.generateStaticEmbed.bind(this);\n        this.isLinkToggleable = this.isLinkToggleable.bind(this);\n        this.handleLinkLoadError = this.handleLinkLoadError.bind(this);\n        this.handleLinkLoaded = this.handleLinkLoaded.bind(this);\n\n        this.state = {\n            link: Utils.extractFirstLink(props.post.message),\n            linkLoadError: false,\n            linkLoaded: false,\n        };\n    }\n\n    componentDidMount() {\n        // check the availability of the image rendered(if any) in the first render.\n        this.loadShortenedImageLink();\n        this.preCheckImageLink();\n        this.mounted = true;\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n    }\n\n    async loadShortenedImageLink() {\n        if (!this.isLinkImage(this.state.link) && !YoutubeVideo.isYoutubeLink(this.state.link) && this.props.enableLinkPreviews) {\n            const {data} = await this.props.actions.getRedirectLocation(this.state.link);\n            const {link} = this.state;\n            if (data && data.location && this.mounted) {\n                this.setState((state) => {\n                    if (state.link !== link) {\n                        return {};\n                    }\n                    return {link: data.location};\n                });\n                this.preCheckImageLink();\n            }\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (nextProps.post.message !== this.props.post.message) {\n            this.setState({\n                link: Utils.extractFirstLink(nextProps.post.message),\n            }, () => {\n                // check the availability of the image link\n                this.loadShortenedImageLink();\n                this.preCheckImageLink();\n            });\n        }\n    }\n\n    toggleEmbedVisibility = () => {\n        this.props.actions.toggleEmbedVisibility(this.props.post.id);\n    }\n\n    getSlackAttachment() {\n        let attachments = [];\n        if (this.props.post.props && this.props.post.props.attachments) {\n            attachments = this.props.post.props.attachments;\n        }\n\n        return (\n            <MessageAttachmentList\n                attachments={attachments}\n                postId={this.props.post.id}\n                key={this.props.post.id}\n                options={this.props.options}\n            />\n        );\n    }\n\n    // when image links are collapsed, check if the link is a valid image url and it is available\n    preCheckImageLink() {\n        // check only if embedVisible is false i.e the image are by default hidden/collapsed\n        // if embedVisible is true, the image is rendered, during which image load error is captured\n        if (!this.props.isEmbedVisible && this.isLinkImage(this.state.link)) {\n            const image = new Image();\n            image.src = PostUtils.getImageSrc(this.state.link, this.props.hasImageProxy);\n\n            image.onload = () => {\n                this.handleLinkLoaded();\n            };\n\n            image.onerror = () => {\n                this.handleLinkLoadError();\n            };\n        }\n    }\n\n    isLinkImage(link) {\n        let linkWithoutQuery = link.toLowerCase();\n        if (link.indexOf('?') !== -1) {\n            linkWithoutQuery = linkWithoutQuery.split('?')[0];\n        }\n\n        for (let i = 0; i < Constants.IMAGE_TYPES.length; i++) {\n            const imageType = Constants.IMAGE_TYPES[i];\n\n            if (linkWithoutQuery.endsWith('.' + imageType) || linkWithoutQuery.endsWith('=' + imageType)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    isLinkToggleable() {\n        const link = this.state.link;\n        if (!link) {\n            return false;\n        }\n\n        if (YoutubeVideo.isYoutubeLink(link)) {\n            return true;\n        }\n\n        if (this.isLinkImage(link)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleLinkLoadError() {\n        this.setState({\n            linkLoadError: true,\n        });\n    }\n\n    handleLinkLoaded() {\n        this.setState({\n            linkLoaded: true,\n        });\n    }\n\n    handleImageClick = () => {\n        this.setState({\n            showPreviewModal: true,\n        });\n    };\n\n    generateToggleableEmbed() {\n        const link = this.state.link;\n        if (!link) {\n            return null;\n        }\n\n        if (YoutubeVideo.isYoutubeLink(link)) {\n            return (\n                <YoutubeVideo\n                    channelId={this.props.post.channel_id}\n                    link={link}\n                    show={this.props.isEmbedVisible}\n                    onLinkLoaded={this.handleLinkLoaded}\n                />\n            );\n        }\n\n        if (this.isLinkImage(link)) {\n            return (\n                <PostImage\n                    channelId={this.props.post.channel_id}\n                    link={link}\n                    onLinkLoadError={this.handleLinkLoadError}\n                    onLinkLoaded={this.handleLinkLoaded}\n                    handleImageClick={this.handleImageClick}\n                />\n            );\n        }\n\n        return null;\n    }\n\n    generateStaticEmbed() {\n        if (this.props.post.props && this.props.post.props.attachments) {\n            return this.getSlackAttachment();\n        }\n\n        const link = Utils.extractFirstLink(this.props.post.message);\n        if (link && this.props.enableLinkPreviews && this.props.previewEnabled) {\n            return (\n                <PostAttachmentOpenGraph\n                    link={link}\n                    isEmbedVisible={this.props.isEmbedVisible}\n                    post={this.props.post}\n                    toggleEmbedVisibility={this.toggleEmbedVisibility}\n                />\n            );\n        }\n\n        return null;\n    }\n\n    renderImagePreview() {\n        const link = this.state.link;\n        if (!link || !this.isLinkImage(link)) {\n            return null;\n        }\n\n        const captureExt = /(?:\\.([^.]+))?$/;\n        if (!captureExt || captureExt.length <= 1) {\n            return null;\n        }\n\n        const ext = captureExt.exec(link)[1];\n\n        return (\n            <ViewImageModal\n                show={this.state.showPreviewModal}\n                onModalDismissed={() => this.setState({showPreviewModal: false})}\n                startIndex={0}\n                fileInfos={[{\n                    has_preview_image: false,\n                    link,\n                    extension: ext,\n                }]}\n            />\n        );\n    }\n\n    render() {\n        if (this.isLinkToggleable() && !this.state.linkLoadError) {\n            // if message has only one line and starts with a link place toggle in this only line\n            // else - place it in new line between message and embed\n            const prependToggle = (/^\\s*https?:\\/\\/.*$/).test(this.props.post.message);\n\n            const toggle = (\n                <a\n                    key='toggle'\n                    className={`post__embed-visibility ${prependToggle ? 'pull-left' : ''}`}\n                    data-expanded={this.props.isEmbedVisible}\n                    aria-label='Toggle Embed Visibility'\n                    onClick={this.toggleEmbedVisibility}\n                />\n            );\n            const message = (\n                <div key='message'>\n                    {this.props.children}\n                </div>\n            );\n\n            const contents = [message];\n\n            if (this.state.linkLoaded || YoutubeVideo.isYoutubeLink(this.state.link)) {\n                if (prependToggle) {\n                    contents.unshift(toggle);\n                } else {\n                    contents.push(toggle);\n                }\n            }\n\n            if (this.props.isEmbedVisible) {\n                contents.push(\n                    <div\n                        key='embed'\n                        className='post__embed-container'\n                    >\n                        {this.generateToggleableEmbed()}\n                    </div>\n                );\n            }\n            const imagePreview = this.renderImagePreview();\n\n            return (\n                <div>\n                    {contents}\n                    {imagePreview}\n                </div>\n            );\n        }\n\n        const staticEmbed = this.generateStaticEmbed();\n\n        if (staticEmbed) {\n            return (\n                <div>\n                    {this.props.children}\n                    {staticEmbed}\n                </div>\n            );\n        }\n\n        return this.props.children;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {getRedirectLocation} from 'mattermost-redux/actions/general';\n\nimport {toggleEmbedVisibility} from 'actions/post_actions';\n\nimport PostBodyAdditionalContent from './post_body_additional_content.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enableLinkPreviews = config.EnableLinkPreviews === 'true';\n    const hasImageProxy = config.HasImageProxy === 'true';\n\n    return {\n        enableLinkPreviews,\n        hasImageProxy,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getRedirectLocation,\n            toggleEmbedVisibility,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostBodyAdditionalContent);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Posts} from 'mattermost-redux/constants';\n\nimport * as GlobalActions from 'actions/global_actions';\n\nimport * as PostUtils from 'utils/post_utils';\nimport * as Utils from 'utils/utils';\n\nimport PostMarkdown from 'components/post_markdown';\nimport Pluggable from 'plugins/pluggable';\nimport ShowMore from 'components/post_view/show_more';\n\nconst MAX_POST_HEIGHT = 600;\n\nexport default class PostMessageView extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * The post to render the message for\n         */\n        post: PropTypes.object.isRequired,\n\n        /*\n         * Set to enable Markdown formatting\n         */\n        enableFormatting: PropTypes.bool,\n\n        /*\n         * Options specific to text formatting\n         */\n        options: PropTypes.object,\n\n        /*\n         * Post identifiers for selenium tests\n         */\n        lastPostCount: PropTypes.number,\n\n        /**\n         * Set to render post body compactly\n         */\n        compactDisplay: PropTypes.bool,\n\n        /**\n         * Flags if the post_message_view is for the RHS (Reply).\n         */\n        isRHS: PropTypes.bool,\n\n        /**\n         * Whether or not the RHS is visible\n         */\n        isRHSOpen: PropTypes.bool,\n\n        /**\n         * Whether or not the RHS is expanded\n         */\n        isRHSExpanded: PropTypes.bool,\n\n        /*\n         * Logged in user's theme\n         */\n        theme: PropTypes.object.isRequired,\n\n        /*\n         * Post type components from plugins\n         */\n        pluginPostTypes: PropTypes.object,\n    };\n\n    static defaultProps = {\n        options: {},\n        isRHS: false,\n        pluginPostTypes: {},\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            collapse: true,\n            hasOverflow: false,\n            checkOverflow: 0,\n        };\n\n        this.imageProps = {\n            onHeightReceived: this.handleHeightReceived,\n        };\n    }\n\n    handleHeightReceived = (height) => {\n        if (height > 0) {\n            // Increment checkOverflow to indicate change in height\n            // and recompute textContainer height at ShowMore component\n            // and see whether overflow text of show more/less is necessary or not.\n            this.setState((prevState) => {\n                return {checkOverflow: prevState.checkOverflow + 1};\n            });\n\n            GlobalActions.postListScrollChange();\n        }\n    };\n\n    renderDeletedPost() {\n        return (\n            <p>\n                <FormattedMessage\n                    id='post_body.deleted'\n                    defaultMessage='(message deleted)'\n                />\n            </p>\n        );\n    }\n\n    renderEditedIndicator() {\n        if (!PostUtils.isEdited(this.props.post)) {\n            return null;\n        }\n\n        return (\n            <span className='post-edited__indicator'>\n                <FormattedMessage\n                    id='post_message_view.edited'\n                    defaultMessage='(edited)'\n                />\n            </span>\n        );\n    }\n\n    render() {\n        const {\n            post,\n            enableFormatting,\n            options,\n            pluginPostTypes,\n            compactDisplay,\n            isRHS,\n            theme,\n            lastPostCount,\n        } = this.props;\n\n        if (post.state === Posts.POST_DELETED) {\n            return this.renderDeletedPost();\n        }\n\n        if (!enableFormatting) {\n            return <span>{post.message}</span>;\n        }\n\n        const postType = post.type;\n        if (pluginPostTypes.hasOwnProperty(postType)) {\n            const PluginComponent = pluginPostTypes[postType].component;\n            return (\n                <PluginComponent\n                    post={post}\n                    compactDisplay={compactDisplay}\n                    isRHS={isRHS}\n                    theme={theme}\n                />\n            );\n        }\n\n        let postId = null;\n        if (lastPostCount >= 0) {\n            postId = Utils.createSafeId('lastPostMessageText' + lastPostCount);\n        }\n\n        let message = post.message;\n        const isEphemeral = Utils.isPostEphemeral(post);\n        if (compactDisplay && isEphemeral) {\n            const visibleMessage = Utils.localizeMessage('post_info.message.visible.compact', ' (Only visible to you)');\n            message = message.concat(visibleMessage);\n        }\n\n        return (\n            <ShowMore\n                checkOverflow={this.state.checkOverflow}\n                maxHeight={MAX_POST_HEIGHT}\n                text={message}\n            >\n                <div\n                    id={postId}\n                    className='post-message__text'\n                    onClick={Utils.handleFormattedTextClick}\n                >\n                    <PostMarkdown\n                        message={message}\n                        imageProps={this.imageProps}\n                        isRHS={isRHS}\n                        options={options}\n                        post={post}\n                    />\n                </div>\n                {this.renderEditedIndicator()}\n                <Pluggable\n                    pluggableName='PostMessageAttachment'\n                    postId={post.id}\n                    onHeightChange={this.handleHeightReceived}\n                />\n            </ShowMore>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {Preferences} from 'mattermost-redux/constants';\nimport {getTheme, getBool} from 'mattermost-redux/selectors/entities/preferences';\n\nimport {getIsRhsExpanded, getIsRhsOpen} from 'selectors/rhs';\n\nimport PostMessageView from './post_message_view.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        enableFormatting: getBool(state, Preferences.CATEGORY_ADVANCED_SETTINGS, 'formatting', true),\n        isRHSExpanded: getIsRhsExpanded(state),\n        isRHSOpen: getIsRhsOpen(state),\n        pluginPostTypes: state.plugins.postTypes,\n        theme: getTheme(state),\n    };\n}\n\nexport default connect(mapStateToProps)(PostMessageView);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Posts} from 'mattermost-redux/constants';\n\nimport PostBodyAdditionalContent from 'components/post_view/post_body_additional_content';\nimport PostMessageView from 'components/post_view/post_message_view';\n\nexport default function MessageWithAdditionalContent({post, previewCollapsed, previewEnabled, isEmbedVisible, pluginPostTypes}) {\n    const hasPlugin = post.type && pluginPostTypes.hasOwnProperty(post.type);\n    let msg;\n    const messageWrapper = (\n        <PostMessageView\n            post={post}\n            isRHS={true}\n            hasMention={true}\n        />\n    );\n    if (post.state === Posts.POST_DELETED || hasPlugin) {\n        msg = messageWrapper;\n    } else {\n        msg = (\n            <PostBodyAdditionalContent\n                post={post}\n                previewCollapsed={previewCollapsed}\n                previewEnabled={previewEnabled}\n                isEmbedVisible={isEmbedVisible}\n            >\n                {messageWrapper}\n            </PostBodyAdditionalContent>\n        );\n    }\n    return msg;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {OverlayTrigger} from 'react-bootstrap';\n\nimport Pluggable from 'plugins/pluggable';\nimport * as Utils from 'utils/utils.jsx';\n\nimport ProfilePopover from './profile_popover';\n\nexport default class UserProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hideProfilePopover = this.hideProfilePopover.bind(this);\n    }\n\n    shouldComponentUpdate(nextProps) {\n        if (!Utils.areObjectsEqual(nextProps.user, this.props.user)) {\n            return true;\n        }\n\n        if (nextProps.overwriteName !== this.props.overwriteName) {\n            return true;\n        }\n\n        if (nextProps.overwriteImage !== this.props.overwriteImage) {\n            return true;\n        }\n\n        if (nextProps.disablePopover !== this.props.disablePopover) {\n            return true;\n        }\n\n        if (nextProps.displayNameType !== this.props.displayNameType) {\n            return true;\n        }\n\n        if (nextProps.status !== this.props.status) {\n            return true;\n        }\n\n        if (nextProps.isBusy !== this.props.isBusy) {\n            return true;\n        }\n\n        return false;\n    }\n\n    hideProfilePopover() {\n        this.refs.overlay.hide();\n    }\n\n    render() {\n        let name = '...';\n        let profileImg = '';\n\n        if (this.props.user && this.props.user.id) {\n            name = Utils.getDisplayNameByUserId(this.props.user.id);\n            profileImg = Utils.imageURLForUser(this.props.user);\n        }\n\n        if (this.props.overwriteName) {\n            name = this.props.overwriteName;\n        }\n\n        if (this.props.disablePopover) {\n            return <div className='user-popover'>{name}</div>;\n        }\n\n        return (\n            <OverlayTrigger\n                ref='overlay'\n                trigger='click'\n                placement='right'\n                rootClose={true}\n                overlay={\n                    <Pluggable>\n                        <ProfilePopover\n                            user={this.props.user}\n                            src={profileImg}\n                            status={this.props.status}\n                            isBusy={this.props.isBusy}\n                            hide={this.hideProfilePopover}\n                            isRHS={this.props.isRHS}\n                            hasMention={this.props.hasMention}\n                        />\n                    </Pluggable>\n                }\n            >\n                <div\n                    className='user-popover'\n                >\n                    {name}\n                </div>\n            </OverlayTrigger>\n        );\n    }\n}\n\nUserProfile.defaultProps = {\n    user: {},\n    overwriteName: '',\n    overwriteImage: '',\n    disablePopover: false,\n    isRHS: false,\n    hasMention: false,\n};\nUserProfile.propTypes = {\n    user: PropTypes.object,\n    overwriteName: PropTypes.node,\n    overwriteImage: PropTypes.string,\n    disablePopover: PropTypes.bool,\n    displayNameType: PropTypes.string,\n    status: PropTypes.string,\n    isBusy: PropTypes.bool,\n    isRHS: PropTypes.bool,\n    hasMention: PropTypes.bool,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Posts} from 'mattermost-redux/constants/index';\nimport {\n    isPostEphemeral,\n    isPostPendingOrFailed,\n} from 'mattermost-redux/utils/post_utils';\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport {emitEmojiPosted} from 'actions/post_actions.jsx';\nimport TeamStore from 'stores/team_store.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as PostUtils from 'utils/post_utils.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport DotMenu from 'components/dot_menu';\nimport EmojiPickerOverlay from 'components/emoji_picker/emoji_picker_overlay.jsx';\nimport FileAttachmentListContainer from 'components/file_attachment_list';\nimport PostProfilePicture from 'components/post_profile_picture';\nimport FailedPostOptions from 'components/post_view/failed_post_options';\nimport PostFlagIcon from 'components/post_view/post_flag_icon';\nimport PostTime from 'components/post_view/post_time.jsx';\nimport ReactionListContainer from 'components/post_view/reaction_list';\nimport EmojiIcon from 'components/svg/emoji_icon';\nimport ChannelPermissionGate from 'components/permissions_gates/channel_permission_gate';\nimport MessageWithAdditionalContent from 'components/message_with_additional_content';\n\nimport UserProfile from 'components/user_profile.jsx';\n\nexport default class RhsComment extends React.Component {\n    static propTypes = {\n        post: PropTypes.object,\n        teamId: PropTypes.string.isRequired,\n        lastPostCount: PropTypes.number,\n        user: PropTypes.object,\n        currentUser: PropTypes.object.isRequired,\n        compactDisplay: PropTypes.bool,\n        isFlagged: PropTypes.bool,\n        status: PropTypes.string,\n        isBusy: PropTypes.bool,\n        removePost: PropTypes.func.isRequired,\n        previewCollapsed: PropTypes.string.isRequired,\n        previewEnabled: PropTypes.bool.isRequired,\n        isEmbedVisible: PropTypes.bool,\n        enableEmojiPicker: PropTypes.bool.isRequired,\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n        isReadOnly: PropTypes.bool.isRequired,\n        pluginPostTypes: PropTypes.object,\n        channelIsArchived: PropTypes.bool.isRequired,\n        isConsecutivePost: PropTypes.bool,\n        actions: PropTypes.shape({\n            addReaction: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTeamDisplayName: TeamStore.getCurrent().name,\n            showEmojiPicker: false,\n            dropdownOpened: false,\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.status !== this.props.status) {\n            return true;\n        }\n\n        if (nextProps.isBusy !== this.props.isBusy) {\n            return true;\n        }\n\n        if (nextProps.compactDisplay !== this.props.compactDisplay) {\n            return true;\n        }\n\n        if (nextProps.isFlagged !== this.props.isFlagged) {\n            return true;\n        }\n\n        if (!Utils.areObjectsEqual(nextProps.post, this.props.post)) {\n            return true;\n        }\n\n        if (!Utils.areObjectsEqual(nextProps.currentUser, this.props.currentUser)) {\n            return true;\n        }\n\n        if (this.state.showEmojiPicker !== nextState.showEmojiPicker) {\n            return true;\n        }\n\n        if (nextProps.lastPostCount !== this.props.lastPostCount) {\n            return true;\n        }\n\n        if (this.state.dropdownOpened !== nextState.dropdownOpened) {\n            return true;\n        }\n\n        if (nextProps.isEmbedVisible !== this.props.isEmbedVisible) {\n            return true;\n        }\n\n        if (this.props.previewEnabled !== nextProps.previewEnabled) {\n            return true;\n        }\n\n        if (!Utils.areObjectsEqual(nextProps.user, this.props.user)) {\n            return true;\n        }\n\n        if ((this.state.width !== nextState.width) || this.state.height !== nextState.height) {\n            return true;\n        }\n\n        if (this.state.hover !== nextState.hover) {\n            return true;\n        }\n\n        return false;\n    }\n\n    removePost = () => {\n        this.props.removePost(this.props.post);\n    };\n\n    createRemovePostButton = () => {\n        return (\n            <button\n                className='post__remove theme color--link style--none'\n                type='button'\n                onClick={this.removePost}\n            >\n                {'×'}\n            </button>\n        );\n    };\n\n    renderPostTime = (isEphemeral) => {\n        const post = this.props.post;\n\n        const isPermalink = !(isEphemeral ||\n            Posts.POST_DELETED === post.state ||\n            isPostPendingOrFailed(post));\n\n        return (\n            <PostTime\n                isPermalink={isPermalink}\n                eventTime={post.create_at}\n                postId={post.id}\n            />\n        );\n    };\n\n    toggleEmojiPicker = () => {\n        const showEmojiPicker = !this.state.showEmojiPicker;\n\n        this.setState({\n            showEmojiPicker,\n            dropdownOpened: showEmojiPicker,\n        });\n    };\n\n    reactEmojiClick = (emoji) => {\n        this.setState({\n            dropdownOpened: false,\n            showEmojiPicker: false,\n        });\n        const emojiName = emoji.name || emoji.aliases[0];\n        this.props.actions.addReaction(this.props.post.id, emojiName);\n        emitEmojiPosted(emojiName);\n    };\n\n    getClassName = (post, isSystemMessage) => {\n        let className = 'post post--thread same--root post--comment';\n\n        if (this.props.currentUser.id === post.user_id) {\n            className += ' current--user';\n        }\n\n        if (isSystemMessage) {\n            className += ' post--system';\n        }\n\n        if (this.props.compactDisplay) {\n            className += ' post--compact';\n        }\n\n        if (post.is_pinned) {\n            className += ' post--pinned';\n        }\n\n        if (this.state.dropdownOpened) {\n            className += ' post--hovered';\n        }\n\n        if (this.props.isConsecutivePost) {\n            className += ' same--user';\n        }\n\n        return className;\n    };\n\n    handleDropdownOpened = (isOpened) => {\n        this.setState({\n            dropdownOpened: isOpened,\n        });\n    };\n\n    getDotMenuRef = () => {\n        return this.refs.dotMenu;\n    };\n\n    setHover = () => {\n        this.setState({hover: true});\n    }\n\n    unsetHover = () => {\n        this.setState({hover: false});\n    }\n\n    render() {\n        const {post, isConsecutivePost, isReadOnly, channelIsArchived} = this.props;\n\n        let idCount = -1;\n        if (this.props.lastPostCount >= 0 && this.props.lastPostCount < Constants.TEST_ID_COUNT) {\n            idCount = this.props.lastPostCount;\n        }\n\n        const isEphemeral = isPostEphemeral(post);\n        const isSystemMessage = PostUtils.isSystemMessage(post);\n        const fromAutoResponder = PostUtils.fromAutoResponder(post);\n\n        let status = this.props.status;\n        if (post.props && post.props.from_webhook === 'true') {\n            status = null;\n        }\n\n        let botIndicator;\n        let profilePicture;\n        let visibleMessage;\n\n        let userProfile = (\n            <UserProfile\n                user={this.props.user}\n                status={status}\n                isBusy={this.props.isBusy}\n                isRHS={true}\n                hasMention={true}\n            />\n        );\n\n        if (!isConsecutivePost) {\n            profilePicture = (\n                <PostProfilePicture\n                    compactDisplay={this.props.compactDisplay}\n                    isBusy={this.props.isBusy}\n                    isRHS={true}\n                    post={post}\n                    status={this.props.status}\n                    user={this.props.user}\n                />\n            );\n\n            if (post.props && post.props.from_webhook) {\n                if (post.props.override_username && this.props.enablePostUsernameOverride) {\n                    userProfile = (\n                        <UserProfile\n                            user={this.props.user}\n                            overwriteName={post.props.override_username}\n                            disablePopover={true}\n                        />\n                    );\n                } else {\n                    userProfile = (\n                        <UserProfile\n                            user={this.props.user}\n                            disablePopover={true}\n                        />\n                    );\n                }\n\n                botIndicator = (\n                    <div className='col col__name bot-indicator'>\n                        <FormattedMessage\n                            id='post_info.bot'\n                            defaultMessage='BOT'\n                        />\n                    </div>\n                );\n            } else if (fromAutoResponder) {\n                userProfile = (\n                    <span className='auto-responder'>\n                        <UserProfile\n                            user={this.props.user}\n                            status={status}\n                            isBusy={this.props.isBusy}\n                            isRHS={true}\n                            hasMention={true}\n                        />\n                    </span>\n                );\n                botIndicator = (\n                    <div className='col col__name bot-indicator'>\n                        <FormattedMessage\n                            id='post_info.auto_responder'\n                            defaultMessage='AUTOMATIC REPLY'\n                        />\n                    </div>\n                );\n            } else if (isSystemMessage) {\n                userProfile = (\n                    <UserProfile\n                        user={{}}\n                        overwriteName={\n                            <FormattedMessage\n                                id='post_info.system'\n                                defaultMessage='System'\n                            />\n                        }\n                        overwriteImage={Constants.SYSTEM_MESSAGE_PROFILE_IMAGE}\n                        disablePopover={true}\n                    />\n                );\n\n                visibleMessage = (\n                    <span className='post__visibility'>\n                        <FormattedMessage\n                            id='post_info.message.visible'\n                            defaultMessage='(Only visible to you)'\n                        />\n                    </span>\n                );\n            }\n        }\n\n        let failedPostOptions;\n        let postClass = '';\n\n        if (post.failed) {\n            postClass += ' post-failed';\n            failedPostOptions = <FailedPostOptions post={this.props.post}/>;\n        }\n\n        if (PostUtils.isEdited(this.props.post)) {\n            postClass += ' post--edited';\n        }\n\n        let fileAttachment = null;\n        if (post.file_ids && post.file_ids.length > 0) {\n            fileAttachment = (\n                <FileAttachmentListContainer\n                    post={post}\n                    compactDisplay={this.props.compactDisplay}\n                />\n            );\n        }\n\n        let react;\n\n        if (!isReadOnly && !isEphemeral && !post.failed && !isSystemMessage && this.props.enableEmojiPicker && !channelIsArchived) {\n            react = (\n                <ChannelPermissionGate\n                    channelId={post.channel_id}\n                    teamId={this.props.teamId}\n                    permissions={[Permissions.ADD_REACTION]}\n                >\n                    <div>\n                        <EmojiPickerOverlay\n                            show={this.state.showEmojiPicker}\n                            onHide={this.toggleEmojiPicker}\n                            target={this.getDotMenuRef}\n                            onEmojiClick={this.reactEmojiClick}\n                            rightOffset={15}\n                            spaceRequiredAbove={EmojiPickerOverlay.RHS_SPACE_REQUIRED_ABOVE}\n                            spaceRequiredBelow={EmojiPickerOverlay.RHS_SPACE_REQUIRED_BELOW}\n                        />\n                        <button\n                            className='reacticon__container reaction color--link style--none'\n                            onClick={this.toggleEmojiPicker}\n                            ref={'rhs_reacticon_' + post.id}\n                        >\n                            <EmojiIcon className='icon icon--emoji'/>\n                        </button>\n                    </div>\n                </ChannelPermissionGate>\n            );\n        }\n\n        let options;\n        if (isEphemeral) {\n            options = (\n                <div className='col col__remove'>\n                    {this.createRemovePostButton()}\n                </div>\n            );\n        } else if (!isSystemMessage) {\n            const dotMenu = (\n                <DotMenu\n                    post={this.props.post}\n                    location={'RHS_COMMENT'}\n                    isFlagged={this.props.isFlagged}\n                    handleDropdownOpened={this.handleDropdownOpened}\n                    isReadOnly={isReadOnly || channelIsArchived}\n                />\n            );\n\n            options = (\n                <div\n                    ref='dotMenu'\n                    className='col col__reply'\n                >\n                    {dotMenu}\n                    {react}\n                </div>\n            );\n        }\n\n        let pinnedBadge;\n        if (post.is_pinned) {\n            pinnedBadge = (\n                <span className='post__pinned-badge'>\n                    <FormattedMessage\n                        id='post_info.pinned'\n                        defaultMessage='Pinned'\n                    />\n                </span>\n            );\n        }\n\n        const flagIcon = (\n            <PostFlagIcon\n                idPrefix={'rhsCommentFlag'}\n                idCount={idCount}\n                postId={post.id}\n                isFlagged={this.props.isFlagged}\n                isEphemeral={isEphemeral}\n            />\n        );\n\n        return (\n            <div\n                ref={'post_body_' + post.id}\n                className={this.getClassName(post, isSystemMessage)}\n                onMouseOver={this.setHover}\n                onMouseLeave={this.unsetHover}\n            >\n                <div className='post__content'>\n                    <div className='post__img'>\n                        {profilePicture}\n                    </div>\n                    <div>\n                        <div className='post__header'>\n                            <div className='col col__name'>\n                                <strong>{userProfile}</strong>\n                            </div>\n                            {botIndicator}\n                            <div className='col'>\n                                {this.renderPostTime(isEphemeral)}\n                                {pinnedBadge}\n                                {flagIcon}\n                                {visibleMessage}\n                            </div>\n                            {options}\n                        </div>\n                        <div className='post__body' >\n                            <div className={postClass}>\n                                {failedPostOptions}\n                                <MessageWithAdditionalContent\n                                    post={post}\n                                    previewCollapsed={this.props.previewCollapsed}\n                                    previewEnabled={this.props.previewEnabled}\n                                    isEmbedVisible={this.props.isEmbedVisible}\n                                    pluginPostTypes={this.props.pluginPostTypes}\n                                />\n                            </div>\n                            {fileAttachment}\n                            <ReactionListContainer\n                                post={post}\n                                isReadOnly={isReadOnly || channelIsArchived}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {Posts} from 'mattermost-redux/constants';\nimport {addReaction} from 'mattermost-redux/actions/posts';\nimport {isChannelReadOnlyById} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getPost} from 'mattermost-redux/selectors/entities/posts';\nimport {isSystemMessage} from 'mattermost-redux/utils/post_utils';\n\nimport {isEmbedVisible} from 'selectors/posts';\n\nimport RhsComment from './rhs_comment.jsx';\n\nfunction isConsecutivePost(state, ownProps) {\n    const post = ownProps.post;\n    const previousPost = ownProps.previousPostId && getPost(state, ownProps.previousPostId);\n\n    let consecutivePost = false;\n\n    if (previousPost) {\n        const postFromWebhook = Boolean(post.props && post.props.from_webhook);\n        const prevPostFromWebhook = Boolean(previousPost.props && previousPost.props.from_webhook);\n        if (previousPost && previousPost.user_id === post.user_id &&\n            post.create_at - previousPost.create_at <= Posts.POST_COLLAPSE_TIMEOUT &&\n            !postFromWebhook && !prevPostFromWebhook &&\n            !isSystemMessage(post) && !isSystemMessage(previousPost) &&\n            (previousPost.root_id === post.root_id || previousPost.id === post.root_id)) {\n            // The last post and this post were made by the same user within some time\n            consecutivePost = true;\n        }\n    }\n    return consecutivePost;\n}\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const enableEmojiPicker = config.EnableEmojiPicker === 'true';\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const teamId = ownProps.teamId || getCurrentTeamId(state);\n    const channel = state.entities.channels.channels[ownProps.post.channel_id];\n\n    return {\n        enableEmojiPicker,\n        enablePostUsernameOverride,\n        isEmbedVisible: isEmbedVisible(state, ownProps.post.id),\n        isReadOnly: isChannelReadOnlyById(state, ownProps.post.channel_id),\n        teamId,\n        pluginPostTypes: state.plugins.postTypes,\n        channelIsArchived: channel.delete_at !== 0,\n        isConsecutivePost: isConsecutivePost(state, ownProps),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            addReaction,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RhsComment);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants, {RHSStates} from 'utils/constants.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class RhsHeaderPost extends React.Component {\n    static propTypes = {\n        previousRhsState: PropTypes.oneOf(\n            Object.values(RHSStates)\n        ),\n        actions: PropTypes.shape({\n            showMentions: PropTypes.func,\n            showSearchResults: PropTypes.func,\n            showFlaggedPosts: PropTypes.func,\n            showPinnedPosts: PropTypes.func,\n            closeRightHandSide: PropTypes.func,\n            toggleRhsExpanded: PropTypes.func,\n        }),\n    };\n\n    handleBack = (e) => {\n        e.preventDefault();\n\n        switch (this.props.previousRhsState) {\n        case RHSStates.SEARCH:\n            this.props.actions.showSearchResults();\n            break;\n        case RHSStates.MENTION:\n            this.props.actions.showMentions();\n            break;\n        case RHSStates.FLAG:\n            this.props.actions.showFlaggedPosts();\n            break;\n        case RHSStates.PIN:\n            this.props.actions.showPinnedPosts();\n            break;\n        default:\n            break;\n        }\n    }\n\n    render() {\n        let back;\n        const closeSidebarTooltip = (\n            <Tooltip id='closeSidebarTooltip'>\n                <FormattedMessage\n                    id='rhs_header.closeSidebarTooltip'\n                    defaultMessage='Close Sidebar'\n                />\n            </Tooltip>\n        );\n\n        let backToResultsTooltip;\n\n        switch (this.props.previousRhsState) {\n        case RHSStates.SEARCH:\n        case RHSStates.MENTION:\n            backToResultsTooltip = (\n                <Tooltip id='backToResultsTooltip'>\n                    <FormattedMessage\n                        id='rhs_header.backToResultsTooltip'\n                        defaultMessage='Back to Search Results'\n                    />\n                </Tooltip>\n            );\n            break;\n        case RHSStates.FLAG:\n            backToResultsTooltip = (\n                <Tooltip id='backToResultsTooltip'>\n                    <FormattedMessage\n                        id='rhs_header.backToFlaggedTooltip'\n                        defaultMessage='Back to Flagged Posts'\n                    />\n                </Tooltip>\n            );\n            break;\n        case RHSStates.PIN:\n            backToResultsTooltip = (\n                <Tooltip id='backToResultsTooltip'>\n                    <FormattedMessage\n                        id='rhs_header.backToPinnedTooltip'\n                        defaultMessage='Back to Pinned Posts'\n                    />\n                </Tooltip>\n            );\n            break;\n        }\n\n        const expandSidebarTooltip = (\n            <Tooltip id='expandSidebarTooltip'>\n                <FormattedMessage\n                    id='rhs_header.expandSidebarTooltip'\n                    defaultMessage='Expand Sidebar'\n                />\n            </Tooltip>\n        );\n\n        const shrinkSidebarTooltip = (\n            <Tooltip id='shrinkSidebarTooltip'>\n                <FormattedMessage\n                    id='rhs_header.shrinkSidebarTooltip'\n                    defaultMessage='Shrink Sidebar'\n                />\n            </Tooltip>\n        );\n\n        if (backToResultsTooltip) {\n            back = (\n                <a\n                    href='#'\n                    onClick={this.handleBack}\n                    className='sidebar--right__back'\n                >\n                    <OverlayTrigger\n                        trigger={['hover', 'focus']}\n                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                        placement='top'\n                        overlay={backToResultsTooltip}\n                    >\n                        <i\n                            className='fa fa-angle-left'\n                            title={localizeMessage('generic_icons.back', 'Back Icon')}\n                        />\n                    </OverlayTrigger>\n                </a>\n            );\n        }\n\n        return (\n            <div className='sidebar--right__header'>\n                <span className='sidebar--right__title'>\n                    {back}\n                    <FormattedMessage\n                        id='rhs_header.details'\n                        defaultMessage='Message Details'\n                    />\n                </span>\n                <div className='pull-right'>\n                    <button\n                        type='button'\n                        className='sidebar--right__expand'\n                        aria-label='Expand'\n                        onClick={this.props.actions.toggleRhsExpanded}\n                    >\n                        <OverlayTrigger\n                            trigger={['hover', 'focus']}\n                            delayShow={Constants.OVERLAY_TIME_DELAY}\n                            placement='top'\n                            overlay={expandSidebarTooltip}\n                        >\n                            <i\n                                className='fa fa-expand'\n                                title={localizeMessage('rhs_header.expandSidebarTooltip.icon', 'Expand Sidebar Icon')}\n                            />\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                            trigger={['hover', 'focus']}\n                            delayShow={Constants.OVERLAY_TIME_DELAY}\n                            placement='top'\n                            overlay={shrinkSidebarTooltip}\n                        >\n                            <i\n                                className='fa fa-compress'\n                                title={localizeMessage('rhs_header.expandTooltip.icon', 'Shrink Sidebar Icon')}\n                            />\n                        </OverlayTrigger>\n                    </button>\n                    <button\n                        type='button'\n                        className='sidebar--right__close'\n                        aria-label='Close'\n                        onClick={this.props.actions.closeRightHandSide}\n                    >\n\n                        <OverlayTrigger\n                            trigger={['hover', 'focus']}\n                            delayShow={Constants.OVERLAY_TIME_DELAY}\n                            placement='top'\n                            overlay={closeSidebarTooltip}\n                        >\n                            <i\n                                className='fa fa-sign-out'\n                                title={localizeMessage('rhs_header.closeTooltip.icon', 'Close Sidebar Icon')}\n                            />\n                        </OverlayTrigger>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {\n    showMentions,\n    showSearchResults,\n    showFlaggedPosts,\n    showPinnedPosts,\n    closeRightHandSide,\n    toggleRhsExpanded,\n} from 'actions/views/rhs';\n\nimport RhsHeaderPost from './rhs_header_post.jsx';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            showSearchResults,\n            showMentions,\n            showFlaggedPosts,\n            showPinnedPosts,\n            closeRightHandSide,\n            toggleRhsExpanded,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(RhsHeaderPost);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Posts} from 'mattermost-redux/constants';\nimport * as ReduxPostUtils from 'mattermost-redux/utils/post_utils';\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport {emitEmojiPosted} from 'actions/post_actions.jsx';\nimport UserStore from 'stores/user_store.jsx';\nimport ChannelStore from 'stores/channel_store.jsx';\nimport TeamStore from 'stores/team_store.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as PostUtils from 'utils/post_utils.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport DotMenu from 'components/dot_menu';\nimport EmojiPickerOverlay from 'components/emoji_picker/emoji_picker_overlay.jsx';\nimport FileAttachmentListContainer from 'components/file_attachment_list';\nimport PostProfilePicture from 'components/post_profile_picture';\nimport PostFlagIcon from 'components/post_view/post_flag_icon';\nimport ReactionListContainer from 'components/post_view/reaction_list';\nimport PostTime from 'components/post_view/post_time.jsx';\nimport EmojiIcon from 'components/svg/emoji_icon';\nimport ChannelPermissionGate from 'components/permissions_gates/channel_permission_gate';\nimport MessageWithAdditionalContent from 'components/message_with_additional_content';\n\nimport UserProfile from 'components/user_profile.jsx';\n\nexport default class RhsRootPost extends React.Component {\n    static propTypes = {\n        post: PropTypes.object.isRequired,\n        user: PropTypes.object.isRequired,\n        teamId: PropTypes.string.isRequired,\n        currentUser: PropTypes.object.isRequired,\n        compactDisplay: PropTypes.bool,\n        commentCount: PropTypes.number.isRequired,\n        isFlagged: PropTypes.bool,\n        status: PropTypes.string,\n        previewCollapsed: PropTypes.string,\n        previewEnabled: PropTypes.bool,\n        isBusy: PropTypes.bool,\n        isEmbedVisible: PropTypes.bool,\n        enableEmojiPicker: PropTypes.bool.isRequired,\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n        isReadOnly: PropTypes.bool.isRequired,\n        pluginPostTypes: PropTypes.object,\n        channelIsArchived: PropTypes.bool.isRequired,\n        actions: PropTypes.shape({\n            addReaction: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    static defaultProps = {\n        commentCount: 0,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTeamDisplayName: TeamStore.getCurrent().name,\n            showEmojiPicker: false,\n            testStateObj: true,\n            dropdownOpened: false,\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.status !== this.props.status) {\n            return true;\n        }\n\n        if (nextProps.isBusy !== this.props.isBusy) {\n            return true;\n        }\n\n        if (nextProps.compactDisplay !== this.props.compactDisplay) {\n            return true;\n        }\n\n        if (nextProps.isFlagged !== this.props.isFlagged) {\n            return true;\n        }\n\n        if (nextProps.isEmbedVisible !== this.props.isEmbedVisible) {\n            return true;\n        }\n\n        if (nextProps.previewEnabled !== this.props.previewEnabled) {\n            return true;\n        }\n\n        if (!Utils.areObjectsEqual(nextProps.post, this.props.post)) {\n            return true;\n        }\n\n        if (!Utils.areObjectsEqual(nextProps.user, this.props.user)) {\n            return true;\n        }\n\n        if (!Utils.areObjectsEqual(nextProps.currentUser, this.props.currentUser)) {\n            return true;\n        }\n\n        if (this.state.showEmojiPicker !== nextState.showEmojiPicker) {\n            return true;\n        }\n\n        if (this.state.dropdownOpened !== nextState.dropdownOpened) {\n            return true;\n        }\n\n        if (this.props.previewCollapsed !== nextProps.previewCollapsed) {\n            return true;\n        }\n\n        if ((this.state.width !== nextState.width) || this.state.height !== nextState.height) {\n            return true;\n        }\n\n        return false;\n    }\n\n    renderPostTime = (isEphemeral) => {\n        const post = this.props.post;\n\n        if (post.type === Constants.PostTypes.FAKE_PARENT_DELETED) {\n            return null;\n        }\n\n        const isPermalink = !(isEphemeral ||\n            Posts.POST_DELETED === post.state ||\n            ReduxPostUtils.isPostPendingOrFailed(post));\n\n        return (\n            <PostTime\n                isPermalink={isPermalink}\n                eventTime={post.create_at}\n                postId={post.id}\n            />\n        );\n    };\n\n    toggleEmojiPicker = () => {\n        const showEmojiPicker = !this.state.showEmojiPicker;\n\n        this.setState({\n            showEmojiPicker,\n            dropdownOpened: showEmojiPicker,\n        });\n    };\n\n    reactEmojiClick = (emoji) => {\n        this.setState({\n            dropdownOpened: false,\n            showEmojiPicker: false,\n        });\n        const emojiName = emoji.name || emoji.aliases[0];\n        this.props.actions.addReaction(this.props.post.id, emojiName);\n        emitEmojiPosted(emojiName);\n    };\n\n    getClassName = (post, isSystemMessage) => {\n        let className = 'post post--root post--thread';\n        if (UserStore.getCurrentId() === post.user_id) {\n            className += ' current--user';\n        }\n\n        if (isSystemMessage) {\n            className += ' post--system';\n        }\n\n        if (this.props.compactDisplay) {\n            className += ' post--compact';\n        }\n\n        if (post.is_pinned) {\n            className += ' post--pinned';\n        }\n\n        if (this.state.dropdownOpened) {\n            className += ' post--hovered';\n        }\n\n        return className;\n    };\n\n    handleDropdownOpened = (isOpened) => {\n        this.setState({\n            dropdownOpened: isOpened,\n        });\n    };\n\n    getDotMenuRef = () => {\n        return this.refs.dotMenu;\n    };\n\n    render() {\n        const {post, user, isReadOnly, teamId, channelIsArchived} = this.props;\n        var channel = ChannelStore.get(post.channel_id);\n\n        const isEphemeral = Utils.isPostEphemeral(post);\n        const isSystemMessage = PostUtils.isSystemMessage(post);\n\n        var channelName;\n        if (channel) {\n            if (channel.type === 'D') {\n                channelName = (\n                    <FormattedMessage\n                        id='rhs_root.direct'\n                        defaultMessage='Direct Message'\n                    />\n                );\n            } else {\n                channelName = channel.display_name;\n            }\n        }\n\n        let react;\n\n        if (!isReadOnly && !isEphemeral && !post.failed && !isSystemMessage && this.props.enableEmojiPicker && !channelIsArchived) {\n            react = (\n                <ChannelPermissionGate\n                    channelId={post.channel_id}\n                    teamId={teamId}\n                    permissions={[Permissions.ADD_REACTION]}\n                >\n                    <div>\n                        <EmojiPickerOverlay\n                            show={this.state.showEmojiPicker}\n                            onHide={this.toggleEmojiPicker}\n                            target={this.getDotMenuRef}\n                            onEmojiClick={this.reactEmojiClick}\n                            rightOffset={15}\n                            spaceRequiredAbove={EmojiPickerOverlay.RHS_SPACE_REQUIRED_ABOVE}\n                            spaceRequiredBelow={EmojiPickerOverlay.RHS_SPACE_REQUIRED_BELOW}\n                        />\n                        <button\n                            className='reacticon__container reaction color--link style--none'\n                            onClick={this.toggleEmojiPicker}\n                            ref='rhs_root_reacticon'\n                        >\n                            <EmojiIcon className='icon icon--emoji'/>\n                        </button>\n                    </div>\n                </ChannelPermissionGate>\n            );\n        }\n\n        let fileAttachment = null;\n        if (post.file_ids && post.file_ids.length > 0) {\n            fileAttachment = (\n                <FileAttachmentListContainer\n                    post={post}\n                    compactDisplay={this.props.compactDisplay}\n                />\n            );\n        }\n\n        let userProfile;\n        let botIndicator;\n        if (isSystemMessage) {\n            userProfile = (\n                <UserProfile\n                    user={{}}\n                    overwriteName={\n                        <FormattedMessage\n                            id='post_info.system'\n                            defaultMessage='System'\n                        />\n                    }\n                    overwriteImage={Constants.SYSTEM_MESSAGE_PROFILE_IMAGE}\n                    disablePopover={true}\n                />\n            );\n        } else if (post.props && post.props.from_webhook) {\n            if (post.props.override_username && this.props.enablePostUsernameOverride) {\n                userProfile = (\n                    <UserProfile\n                        user={user}\n                        overwriteName={post.props.override_username}\n                        disablePopover={true}\n                    />\n                );\n            } else {\n                userProfile = (\n                    <UserProfile\n                        user={user}\n                        disablePopover={true}\n                    />\n                );\n            }\n\n            botIndicator = <div className='col col__name bot-indicator'>{'BOT'}</div>;\n        } else {\n            userProfile = (\n                <UserProfile\n                    user={user}\n                    status={this.props.status}\n                    isBusy={this.props.isBusy}\n                    isRHS={true}\n                    hasMention={true}\n                />\n            );\n        }\n\n        let postClass = '';\n        if (PostUtils.isEdited(this.props.post)) {\n            postClass += ' post--edited';\n        }\n\n        let pinnedBadge;\n        if (post.is_pinned) {\n            pinnedBadge = (\n                <span className='post__pinned-badge'>\n                    <FormattedMessage\n                        id='post_info.pinned'\n                        defaultMessage='Pinned'\n                    />\n                </span>\n            );\n        }\n\n        const dotMenu = (\n            <DotMenu\n                post={this.props.post}\n                location={'RHS_ROOT'}\n                isFlagged={this.props.isFlagged}\n                handleDropdownOpened={this.handleDropdownOpened}\n                commentCount={this.props.commentCount}\n                isReadOnly={isReadOnly || channelIsArchived}\n            />\n        );\n\n        let dotMenuContainer;\n        if (this.props.post.type !== Constants.PostTypes.FAKE_PARENT_DELETED) {\n            dotMenuContainer = (\n                <div\n                    ref='dotMenu'\n                    className='col col__reply'\n                >\n                    {dotMenu}\n                    {react}\n                </div>\n            );\n        }\n\n        let postFlagIcon;\n        if (this.props.post.type !== Constants.PostTypes.FAKE_PARENT_DELETED) {\n            postFlagIcon = (\n                <PostFlagIcon\n                    idPrefix={'rhsRootPostFlag'}\n                    postId={post.id}\n                    isFlagged={this.props.isFlagged}\n                />\n            );\n        }\n\n        return (\n            <div\n                id='thread--root'\n                className={this.getClassName(post, isSystemMessage)}\n            >\n                <div className='post-right-channel__name'>{channelName}</div>\n                <div className='post__content'>\n                    <div className='post__img'>\n                        <PostProfilePicture\n                            compactDisplay={this.props.compactDisplay}\n                            isBusy={this.props.isBusy}\n                            isRHS={true}\n                            post={post}\n                            status={this.props.status}\n                            user={this.props.user}\n                        />\n                    </div>\n                    <div>\n                        <div className='post__header'>\n                            <div className='col__name'>{userProfile}</div>\n                            {botIndicator}\n                            <div className='col'>\n                                {this.renderPostTime(isEphemeral)}\n                                {pinnedBadge}\n                                {postFlagIcon}\n                            </div>\n                            {dotMenuContainer}\n                        </div>\n                        <div className='post__body'>\n                            <div className={postClass}>\n                                <MessageWithAdditionalContent\n                                    post={post}\n                                    previewCollapsed={this.props.previewCollapsed}\n                                    previewEnabled={this.props.previewEnabled}\n                                    isEmbedVisible={this.props.isEmbedVisible}\n                                    pluginPostTypes={this.props.pluginPostTypes}\n                                />\n                            </div>\n                            {fileAttachment}\n                            <ReactionListContainer\n                                post={post}\n                                isReadOnly={isReadOnly || channelIsArchived}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {isChannelReadOnlyById} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {addReaction} from 'mattermost-redux/actions/posts';\n\nimport {isEmbedVisible} from 'selectors/posts';\n\nimport RhsRootPost from './rhs_root_post.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const enableEmojiPicker = config.EnableEmojiPicker === 'true';\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const teamId = ownProps.teamId || getCurrentTeamId(state);\n    const channel = state.entities.channels.channels[ownProps.post.channel_id];\n\n    return {\n        enableEmojiPicker,\n        enablePostUsernameOverride,\n        isEmbedVisible: isEmbedVisible(state, ownProps.post.id),\n        isReadOnly: isChannelReadOnlyById(state, ownProps.post.channel_id),\n        teamId,\n        pluginPostTypes: state.plugins.postTypes,\n        channelIsArchived: channel.delete_at !== 0,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            addReaction,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RhsRootPost);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport {FormattedMessage} from 'react-intl';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Scrollbars from 'react-custom-scrollbars';\nimport {Posts} from 'mattermost-redux/constants';\n\nimport PreferenceStore from 'stores/preference_store.jsx';\nimport UserStore from 'stores/user_store.jsx';\nimport Constants from 'utils/constants.jsx';\nimport DelayedAction from 'utils/delayed_action.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport CreateComment from 'components/create_comment';\nimport DateSeparator from 'components/post_view/date_separator.jsx';\nimport FloatingTimestamp from 'components/post_view/floating_timestamp.jsx';\nimport RhsComment from 'components/rhs_comment';\nimport RhsHeaderPost from 'components/rhs_header_post';\nimport RhsRootPost from 'components/rhs_root_post';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nconst Preferences = Constants.Preferences;\n\nexport function renderView(props) {\n    return (\n        <div\n            {...props}\n            className='scrollbar--view'\n        />);\n}\n\nexport function renderThumbHorizontal(props) {\n    return (\n        <div\n            {...props}\n            className='scrollbar--horizontal'\n        />);\n}\n\nexport function renderThumbVertical(props) {\n    return (\n        <div\n            {...props}\n            className='scrollbar--vertical'\n        />);\n}\n\nexport default class RhsThread extends React.Component {\n    static propTypes = {\n        posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n        channel: PropTypes.object.isRequired,\n        selected: PropTypes.object.isRequired,\n        previousRhsState: PropTypes.string,\n        currentUser: PropTypes.object.isRequired,\n        previewCollapsed: PropTypes.string.isRequired,\n        previewEnabled: PropTypes.bool.isRequired,\n        actions: PropTypes.shape({\n            removePost: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.scrollStopAction = new DelayedAction(this.handleScrollStop);\n\n        const openTime = (new Date()).getTime();\n\n        this.state = {\n            windowWidth: Utils.windowWidth(),\n            windowHeight: Utils.windowHeight(),\n            profiles: JSON.parse(JSON.stringify(UserStore.getProfiles())),\n            compactDisplay: PreferenceStore.get(Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.MESSAGE_DISPLAY, Preferences.MESSAGE_DISPLAY_DEFAULT) === Preferences.MESSAGE_DISPLAY_COMPACT,\n            flaggedPosts: PreferenceStore.getCategory(Constants.Preferences.CATEGORY_FLAGGED_POST),\n            statuses: Object.assign({}, UserStore.getStatuses()),\n            previewsCollapsed: PreferenceStore.get(Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.COLLAPSE_DISPLAY, 'false'),\n            isScrolling: false,\n            topRhsPostCreateAt: 0,\n            openTime,\n        };\n    }\n\n    componentDidMount() {\n        PreferenceStore.addChangeListener(this.onPreferenceChange);\n        UserStore.addChangeListener(this.onUserChange);\n        UserStore.addStatusesChangeListener(this.onStatusChange);\n\n        this.scrollToBottom();\n        window.addEventListener('resize', this.handleResize);\n    }\n\n    componentWillUnmount() {\n        PreferenceStore.removeChangeListener(this.onPreferenceChange);\n        UserStore.removeChangeListener(this.onUserChange);\n        UserStore.removeStatusesChangeListener(this.onStatusChange);\n\n        window.removeEventListener('resize', this.handleResize);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (!this.props.selected || !nextProps.selected) {\n            return;\n        }\n\n        if (this.props.selected.id !== nextProps.selected.id) {\n            this.setState({\n                openTime: (new Date()).getTime(),\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const prevPostsArray = prevProps.posts || [];\n        const curPostsArray = this.props.posts || [];\n\n        if (prevPostsArray.length >= curPostsArray.length) {\n            return;\n        }\n\n        const curLastPost = curPostsArray[curPostsArray.length - 1];\n\n        if (curLastPost.user_id === UserStore.getCurrentId()) {\n            this.scrollToBottom();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (!Utils.areObjectsEqual(nextState.statuses, this.state.statuses)) {\n            return true;\n        }\n\n        if (!Utils.areObjectsEqual(nextState.postsArray, this.props.posts)) {\n            return true;\n        }\n\n        if (!Utils.areObjectsEqual(nextState.selected, this.props.selected)) {\n            return true;\n        }\n\n        if (nextState.compactDisplay !== this.state.compactDisplay) {\n            return true;\n        }\n\n        if (nextProps.previewEnabled !== this.props.previewEnabled) {\n            return true;\n        }\n\n        if (!Utils.areObjectsEqual(nextState.flaggedPosts, this.state.flaggedPosts)) {\n            return true;\n        }\n\n        if (!Utils.areObjectsEqual(nextState.profiles, this.state.profiles)) {\n            return true;\n        }\n\n        if (!Utils.areObjectsEqual(nextProps.currentUser, this.props.currentUser)) {\n            return true;\n        }\n\n        if (nextState.isBusy !== this.state.isBusy) {\n            return true;\n        }\n\n        if (nextState.isScrolling !== this.state.isScrolling) {\n            return true;\n        }\n\n        if (nextState.topRhsPostCreateAt !== this.state.topRhsPostCreateAt) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleResize = () => {\n        this.setState({\n            windowWidth: Utils.windowWidth(),\n            windowHeight: Utils.windowHeight(),\n        });\n\n        if (UserAgent.isMobile() && document.activeElement.id === 'reply_textbox') {\n            this.scrollToBottom();\n        }\n    }\n\n    onPreferenceChange = () => {\n        this.setState({\n            compactDisplay: PreferenceStore.get(Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.MESSAGE_DISPLAY, Preferences.MESSAGE_DISPLAY_DEFAULT) === Preferences.MESSAGE_DISPLAY_COMPACT,\n            flaggedPosts: PreferenceStore.getCategory(Constants.Preferences.CATEGORY_FLAGGED_POST),\n        });\n    }\n\n    onStatusChange = () => {\n        this.setState({statuses: Object.assign({}, UserStore.getStatuses())});\n    }\n\n    onBusy = (isBusy) => {\n        this.setState({isBusy});\n    }\n\n    filterPosts = (posts, selected, openTime) => {\n        const postsArray = [];\n\n        posts.forEach((cpost) => {\n            // Do not show empherals created before sidebar has been opened\n            if (cpost.type === 'system_ephemeral' && cpost.create_at < openTime) {\n                return;\n            }\n\n            if (cpost.root_id === selected.id) {\n                postsArray.unshift(cpost);\n            }\n        });\n\n        return postsArray;\n    }\n\n    onUserChange = () => {\n        const profiles = JSON.parse(JSON.stringify(UserStore.getProfiles()));\n        this.setState({profiles});\n    }\n\n    scrollToBottom = () => {\n        if ($('.post-right__scroll')[0]) {\n            $('.post-right__scroll').parent().scrollTop($('.post-right__scroll')[0].scrollHeight);\n        }\n    }\n\n    updateFloatingTimestamp = () => {\n        // skip this in non-mobile view since that's when the timestamp is visible\n        if (!Utils.isMobile()) {\n            return;\n        }\n\n        if (this.props.posts) {\n            const childNodes = this.refs.rhspostlist.childNodes;\n            const viewPort = this.refs.rhspostlist.getBoundingClientRect();\n            let topRhsPostCreateAt = 0;\n            const offset = 100;\n\n            // determine the top rhs comment assuming that childNodes and postsArray are of same length\n            for (let i = 0; i < childNodes.length; i++) {\n                if ((childNodes[i].offsetTop + viewPort.top) - offset > 0) {\n                    topRhsPostCreateAt = this.props.posts[i].create_at;\n                    break;\n                }\n            }\n\n            if (topRhsPostCreateAt !== this.state.topRhsPostCreateAt) {\n                this.setState({\n                    topRhsPostCreateAt,\n                });\n            }\n        }\n    }\n\n    handleScroll = () => {\n        this.updateFloatingTimestamp();\n\n        if (!this.state.isScrolling) {\n            this.setState({\n                isScrolling: true,\n            });\n        }\n\n        this.scrollStopAction.fireAfter(Constants.SCROLL_DELAY);\n    }\n\n    handleScrollStop = () => {\n        this.setState({\n            isScrolling: false,\n        });\n    }\n\n    getSidebarBody = () => {\n        return this.refs.sidebarbody;\n    }\n\n    render() {\n        if (this.props.posts == null || this.props.selected == null) {\n            return (\n                <div/>\n            );\n        }\n\n        const postsArray = this.filterPosts(this.props.posts, this.props.selected, this.state.openTime);\n        const selected = this.props.selected;\n        const profiles = this.state.profiles || {};\n\n        let profile;\n        if (UserStore.getCurrentId() === selected.user_id) {\n            profile = this.props.currentUser;\n        } else {\n            profile = profiles[selected.user_id];\n        }\n\n        let isRootFlagged = false;\n        if (this.state.flaggedPosts) {\n            isRootFlagged = this.state.flaggedPosts.get(selected.id) != null;\n        }\n\n        let rootStatus = 'offline';\n        if (this.state.statuses) {\n            rootStatus = this.state.statuses[selected.user_id] || 'offline';\n        }\n\n        let createAt = selected.create_at;\n        if (!createAt) {\n            createAt = this.props.posts[this.props.posts.length - 1].create_at;\n        }\n        const rootPostDay = Utils.getDateForUnixTicks(createAt);\n        let previousPostDay = rootPostDay;\n\n        const commentsLists = [];\n        const postsLength = postsArray.length;\n        for (let i = 0; i < postsLength; i++) {\n            const comPost = postsArray[i];\n            const previousPostId = i > 0 ? postsArray[i - 1].id : '';\n            let p;\n            if (UserStore.getCurrentId() === comPost.user_id) {\n                p = UserStore.getCurrentUser();\n            } else {\n                p = profiles[comPost.user_id];\n            }\n\n            let isFlagged = false;\n            if (this.state.flaggedPosts) {\n                isFlagged = this.state.flaggedPosts.get(comPost.id) != null;\n            }\n\n            let status = 'offline';\n            if (this.state.statuses && p && p.id) {\n                status = this.state.statuses[p.id] || 'offline';\n            }\n\n            const currentPostDay = Utils.getDateForUnixTicks(comPost.create_at);\n            if (currentPostDay.toDateString() !== previousPostDay.toDateString()) {\n                previousPostDay = currentPostDay;\n                commentsLists.push(\n                    <DateSeparator\n                        key={currentPostDay}\n                        date={currentPostDay}\n                    />);\n            }\n\n            const keyPrefix = comPost.id ? comPost.id : comPost.pending_post_id;\n            const reverseCount = postsLength - i - 1;\n\n            commentsLists.push(\n                <RhsComment\n                    key={keyPrefix + 'commentKey'}\n                    ref={comPost.id}\n                    post={comPost}\n                    previousPostId={previousPostId}\n                    teamId={this.props.channel.team_id}\n                    lastPostCount={(reverseCount >= 0 && reverseCount < Constants.TEST_ID_COUNT) ? reverseCount : -1}\n                    user={p}\n                    currentUser={this.props.currentUser}\n                    compactDisplay={this.state.compactDisplay}\n                    isFlagged={isFlagged}\n                    status={status}\n                    isBusy={this.state.isBusy}\n                    removePost={this.props.actions.removePost}\n                    previewCollapsed={this.props.previewCollapsed}\n                    previewEnabled={this.props.previewEnabled}\n                />\n            );\n        }\n\n        let createComment;\n        const isFakeDeletedPost = selected.type === Constants.PostTypes.FAKE_PARENT_DELETED;\n        const channelIsArchived = this.props.channel.delete_at !== 0;\n        if (!isFakeDeletedPost) {\n            if (channelIsArchived) {\n                createComment = (\n                    <div className='channel-archived-warning'>\n                        <FormattedMarkdownMessage\n                            id='archivedChannelMessage'\n                            defaultMessage='You are viewing an **archived channel**. New messages cannot be posted.'\n                        />\n                    </div>\n                );\n            } else {\n                createComment = (\n                    <div className='post-create__container'>\n                        <CreateComment\n                            channelId={selected.channel_id}\n                            rootId={selected.id}\n                            rootDeleted={selected.state === Posts.POST_DELETED}\n                            latestPostId={postsLength > 0 ? postsArray[postsLength - 1].id : selected.id}\n                            getSidebarBody={this.getSidebarBody}\n                        />\n                    </div>\n                );\n            }\n        }\n\n        if (this.props.channel.type === Constants.DM_CHANNEL) {\n            const teammate = Utils.getDirectTeammate(this.props.channel.id);\n            if (teammate && teammate.delete_at) {\n                createComment = (\n                    <div\n                        className='post-create-message'\n                    >\n                        <FormattedMessage\n                            id='create_post.deactivated'\n                            defaultMessage='You are viewing an archived channel with a deactivated user.'\n                        />\n                    </div>\n                );\n            }\n        }\n\n        return (\n            <div\n                className='sidebar-right__body'\n                ref='sidebarbody'\n            >\n                <FloatingTimestamp\n                    isScrolling={this.state.isScrolling}\n                    isMobile={Utils.isMobile()}\n                    createAt={this.state.topRhsPostCreateAt}\n                    isRhsPost={true}\n                />\n                <RhsHeaderPost\n                    previousRhsState={this.props.previousRhsState}\n                />\n                <Scrollbars\n                    autoHide={true}\n                    autoHideTimeout={500}\n                    autoHideDuration={500}\n                    renderThumbHorizontal={renderThumbHorizontal}\n                    renderThumbVertical={renderThumbVertical}\n                    renderView={renderView}\n                    onScroll={this.handleScroll}\n                >\n                    <div className='post-right__scroll'>\n                        {!isFakeDeletedPost && <DateSeparator date={rootPostDay}/>}\n                        <RhsRootPost\n                            ref={selected.id}\n                            post={selected}\n                            commentCount={postsLength}\n                            user={profile}\n                            teamId={this.props.channel.team_id}\n                            currentUser={this.props.currentUser}\n                            compactDisplay={this.state.compactDisplay}\n                            isFlagged={isRootFlagged}\n                            status={rootStatus}\n                            previewCollapsed={this.props.previewCollapsed}\n                            previewEnabled={this.props.previewEnabled}\n                            isBusy={this.state.isBusy}\n                        />\n                        {isFakeDeletedPost && <DateSeparator date={rootPostDay}/>}\n                        <div\n                            ref='rhspostlist'\n                            className='post-right-comments-container'\n                        >\n                            {commentsLists}\n                        </div>\n                        {createComment}\n                    </div>\n                </Scrollbars>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {makeGetPostsForThread} from 'mattermost-redux/selectors/entities/posts';\nimport {get, getBool} from 'mattermost-redux/selectors/entities/preferences';\nimport {removePost} from 'mattermost-redux/actions/posts';\n\nimport {Preferences} from 'utils/constants.jsx';\nimport {getSelectedPost} from 'selectors/rhs.jsx';\n\nimport RhsThread from './rhs_thread.jsx';\n\nfunction makeMapStateToProps() {\n    const getPostsForThread = makeGetPostsForThread();\n\n    return function mapStateToProps(state) {\n        const selected = getSelectedPost(state);\n\n        let channel = null;\n        let posts = [];\n        if (selected) {\n            posts = getPostsForThread(state, {rootId: selected.id});\n            channel = getChannel(state, selected.channel_id);\n        }\n\n        const previewCollapsed = get(state, Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.COLLAPSE_DISPLAY, Preferences.COLLAPSE_DISPLAY_DEFAULT);\n\n        return {\n            selected,\n            channel,\n            posts,\n            previewCollapsed,\n            previewEnabled: getBool(state, Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.LINK_PREVIEW_DISPLAY, Preferences.LINK_PREVIEW_DISPLAY_DEFAULT),\n        };\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            removePost,\n        }, dispatch),\n    };\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(RhsThread);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {sortChannelsByTypeAndDisplayName} from 'mattermost-redux/utils/channel_utils';\n\nimport {autocompleteChannelsForSearch} from 'actions/channel_actions.jsx';\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport Constants from 'utils/constants.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport Provider from './provider.jsx';\nimport Suggestion from './suggestion.jsx';\n\nfunction itemToName(item) {\n    if (item.type === Constants.DM_CHANNEL) {\n        return '@' + item.display_name;\n    }\n    if (item.type === Constants.GM_CHANNEL) {\n        return '@' + item.display_name.replace(/ /g, '');\n    }\n    return item.name;\n}\n\nclass SearchChannelSuggestion extends Suggestion {\n    render() {\n        const {item, isSelection} = this.props;\n\n        let className = 'search-autocomplete__item';\n        if (isSelection) {\n            className += ' selected';\n        }\n\n        const name = itemToName(item);\n\n        return (\n            <div\n                onClick={this.handleClick}\n                className={className}\n                {...Suggestion.baseProps}\n            >\n                <i\n                    className='fa fa fa-plus-square'\n                    title={localizeMessage('generic_icons.select', 'Select Icon')}\n                />{name}\n            </div>\n        );\n    }\n}\n\nexport default class SearchChannelProvider extends Provider {\n    handlePretextChanged(suggestionId, pretext) {\n        const captured = (/\\b(?:in|channel):\\s*(\\S*)$/i).exec(pretext.toLowerCase());\n        if (captured) {\n            const channelPrefix = captured[1];\n\n            this.startNewRequest(suggestionId, channelPrefix);\n\n            autocompleteChannelsForSearch(\n                channelPrefix,\n                (data) => {\n                    if (this.shouldCancelDispatch(channelPrefix)) {\n                        return;\n                    }\n\n                    //\n                    // MM-12677 When this is migrated this needs to be fixed to pull the user's locale\n                    //\n                    const channels = data.sort(sortChannelsByTypeAndDisplayName.bind(null, 'en'));\n                    const channelNames = channels.map(itemToName);\n\n                    AppDispatcher.handleServerAction({\n                        type: Constants.ActionTypes.SUGGESTION_RECEIVED_SUGGESTIONS,\n                        id: suggestionId,\n                        matchedPretext: channelPrefix,\n                        terms: channelNames,\n                        items: channels,\n                        component: SearchChannelSuggestion,\n                    });\n                }\n            );\n        }\n\n        return Boolean(captured);\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport React from 'react';\nimport {Popover} from 'react-bootstrap';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants.jsx';\n\nimport SuggestionList from './suggestion_list.jsx';\n\nexport default class SearchSuggestionList extends SuggestionList {\n    static propTypes = {\n        ...SuggestionList.propTypes,\n    };\n\n    getContent() {\n        return $(ReactDOM.findDOMNode(this.refs.popover)).find('.popover-content');\n    }\n\n    renderChannelDivider(type) {\n        let text;\n        if (type === Constants.OPEN_CHANNEL) {\n            text = (\n                <FormattedMessage\n                    id='suggestion.search.public'\n                    defaultMessage='Public Channels'\n                />\n            );\n        } else if (type === Constants.PRIVATE_CHANNEL) {\n            text = (\n                <FormattedMessage\n                    id='suggestion.search.private'\n                    defaultMessage='Private Channels'\n                />\n            );\n        } else {\n            text = (\n                <FormattedMessage\n                    id='suggestion.search.direct'\n                    defaultMessage='Direct Messages'\n                />\n            );\n        }\n\n        return (\n            <div\n                key={type + '-divider'}\n                className='search-autocomplete__divider'\n            >\n                <span>{text}</span>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.state.items.length === 0) {\n            return null;\n        }\n\n        const items = [];\n        for (let i = 0; i < this.state.items.length; i++) {\n            const item = this.state.items[i];\n            const term = this.state.terms[i];\n            const isSelection = term === this.state.selection;\n\n            // ReactComponent names need to be upper case when used in JSX\n            const Component = this.state.components[i];\n\n            // temporary hack to add dividers between public and private channels in the search suggestion list\n            if (i === 0 || item.type !== this.state.items[i - 1].type) {\n                if (item.type === Constants.OPEN_CHANNEL) {\n                    items.push(this.renderChannelDivider(Constants.OPEN_CHANNEL));\n                } else if (item.type === Constants.PRIVATE_CHANNEL) {\n                    items.push(this.renderChannelDivider(Constants.PRIVATE_CHANNEL));\n                } else if (i === 0 || this.state.items[i - 1].type === Constants.OPEN_CHANNEL || this.state.items[i - 1].type === Constants.PRIVATE_CHANNEL) {\n                    items.push(this.renderChannelDivider(Constants.DM_CHANNEL));\n                }\n            }\n\n            items.push(\n                <Component\n                    key={term}\n                    ref={term}\n                    item={item}\n                    term={term}\n                    matchedPretext={this.state.matchedPretext[i]}\n                    isSelection={isSelection}\n                    onClick={this.props.onCompleteWord}\n                />\n            );\n        }\n\n        return (\n            <Popover\n                ref='popover'\n                id='search-autocomplete__popover'\n                className='search-help-popover autocomplete visible'\n                placement='bottom'\n            >\n                {items}\n            </Popover>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Popover} from 'react-bootstrap';\n\nimport SuggestionStore from 'stores/suggestion_store.jsx';\n\nexport default class SuggestionDate extends React.Component {\n    static propTypes = {\n        suggestionId: PropTypes.string.isRequired,\n        onCompleteWord: PropTypes.func.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.getStateFromStores = this.getStateFromStores.bind(this);\n\n        this.handleSuggestionsChanged = this.handleSuggestionsChanged.bind(this);\n\n        this.state = this.getStateFromStores(props.suggestionId);\n    }\n\n    getStateFromStores(suggestionId) {\n        const suggestions = SuggestionStore.getSuggestions(suggestionId || this.props.suggestionId);\n\n        return {\n            matchedPretext: suggestions.matchedPretext,\n            items: suggestions.items,\n            terms: suggestions.terms,\n            components: suggestions.components,\n            selection: suggestions.selection,\n        };\n    }\n\n    componentDidMount() {\n        SuggestionStore.addSuggestionsChangedListener(this.props.suggestionId, this.handleSuggestionsChanged);\n    }\n\n    componentWillUnmount() {\n        SuggestionStore.removeSuggestionsChangedListener(this.props.suggestionId, this.handleSuggestionsChanged);\n    }\n\n    handleSuggestionsChanged() {\n        this.setState(this.getStateFromStores());\n    }\n\n    render() {\n        if (this.state.items.length === 0) {\n            return null;\n        }\n\n        const item = this.state.items[0];\n        const term = this.state.terms[0];\n\n        // ReactComponent names need to be upper case when used in JSX\n        const Component = this.state.components[0];\n\n        const itemComponent = (\n            <Component\n                key={term}\n                ref={term}\n                item={item}\n                term={term}\n                matchedPretext={this.state.matchedPretext[0]}\n                isSelection={false}\n                onClick={this.props.onCompleteWord}\n            />\n        );\n\n        return (\n            <Popover\n                ref='popover'\n                id='search-autocomplete__popover'\n                className='search-help-popover autocomplete visible'\n                placement='bottom'\n            >\n                {itemComponent}\n            </Popover>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {autocompleteUsersInTeam} from 'actions/user_actions.jsx';\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport {ActionTypes} from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport Provider from './provider.jsx';\nimport Suggestion from './suggestion.jsx';\n\nclass SearchUserSuggestion extends Suggestion {\n    render() {\n        const {item, isSelection} = this.props;\n\n        let className = 'search-autocomplete__item';\n        if (isSelection) {\n            className += ' selected';\n        }\n\n        const username = item.username;\n        let description = '';\n\n        if ((item.first_name || item.last_name) && item.nickname) {\n            description = `- ${Utils.getFullName(item)} (${item.nickname})`;\n        } else if (item.nickname) {\n            description = `- (${item.nickname})`;\n        } else if (item.first_name || item.last_name) {\n            description = `- ${Utils.getFullName(item)}`;\n        }\n\n        return (\n            <div\n                className={className}\n                onClick={this.handleClick}\n                {...Suggestion.baseProps}\n            >\n                <i\n                    className='fa fa fa-plus-square'\n                    title={Utils.localizeMessage('generic_icons.select', 'Select Icon')}\n                />\n                <img\n                    className='profile-img rounded'\n                    src={Utils.imageURLForUser(item)}\n                />\n                <div className='mention--align'>\n                    <span>\n                        {username}\n                    </span>\n                    <span className='mention__fullname'>\n                        {' '}\n                        {description}\n                    </span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class SearchUserProvider extends Provider {\n    handlePretextChanged(suggestionId, pretext) {\n        const captured = (/\\bfrom:\\s*(\\S*)$/i).exec(pretext.toLowerCase());\n        if (captured) {\n            const usernamePrefix = captured[1];\n\n            this.startNewRequest(suggestionId, usernamePrefix);\n\n            autocompleteUsersInTeam(\n                usernamePrefix,\n                (data) => {\n                    if (this.shouldCancelDispatch(usernamePrefix)) {\n                        return;\n                    }\n\n                    const users = Object.assign([], data.users);\n                    const mentions = users.map((user) => user.username);\n\n                    AppDispatcher.handleServerAction({\n                        type: ActionTypes.SUGGESTION_RECEIVED_SUGGESTIONS,\n                        id: suggestionId,\n                        matchedPretext: usernamePrefix,\n                        terms: mentions,\n                        items: users,\n                        component: SearchUserSuggestion,\n                    });\n                }\n            );\n        }\n\n        return Boolean(captured);\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport DayPicker from 'react-day-picker';\n\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport {ActionTypes} from 'utils/constants.jsx';\n\nimport Provider from './provider.jsx';\nimport Suggestion from './suggestion.jsx';\n\nimport 'react-day-picker/lib/style.css';\n\nclass SearchDateSuggestion extends Suggestion {\n    constructor(props) {\n        super(props);\n        this.handleDayClick = this.handleDayClick.bind(this);\n    }\n\n    handleDayClick(day) {\n        const dayString = day.toISOString().split('T')[0];\n        this.props.onClick(dayString, this.props.matchedPretext);\n    }\n\n    render() {\n        return (\n            <DayPicker\n                onDayClick={this.handleDayClick}\n                showOutsideDays={true}\n            />\n        );\n    }\n}\n\nexport default class SearchDateProvider extends Provider {\n    handlePretextChanged(suggestionId, pretext) {\n        const captured = (/\\b(?:on|before|after):\\s*(\\S*)$/i).exec(pretext.toLowerCase());\n        if (captured) {\n            const datePrefix = captured[1];\n\n            this.startNewRequest(suggestionId, datePrefix);\n\n            const dates = Object.assign([], [{label: 'Selected Date', date: datePrefix}]);\n            const terms = dates.map((date) => date.date);\n\n            setTimeout(() => {\n                AppDispatcher.handleServerAction({\n                    type: ActionTypes.SUGGESTION_RECEIVED_SUGGESTIONS,\n                    id: suggestionId,\n                    matchedPretext: datePrefix,\n                    terms,\n                    items: dates,\n                    component: SearchDateSuggestion,\n                });\n            }, 0);\n        }\n\n        return Boolean(captured);\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\n\nimport {Constants} from 'utils/constants.jsx';\nimport {t} from 'utils/i18n';\n\nexport default function HeaderIconWrapper({\n    iconComponent,\n    buttonClass,\n    buttonId,\n    onClick,\n    tooltipKey,\n}) {\n    function getTooltip(key) {\n        const toolTips = {\n            flaggedPosts: {\n                class: 'text-nowrap',\n                id: 'flaggedTooltip',\n                messageID: t('channel_header.flagged'),\n                message: 'Flagged Posts',\n            },\n            pinnedPosts: {\n                class: '',\n                id: 'pinnedPostTooltip',\n                messageID: t('channel_header.pinnedPosts'),\n                message: 'Pinned Posts',\n            },\n            recentMentions: {\n                class: '',\n                id: 'recentMentionsTooltip',\n                messageID: t('channel_header.recentMentions'),\n                message: 'Recent Mentions',\n            },\n            search: {\n                class: '',\n                id: 'searchTooltip',\n                messageID: t('channel_header.search'),\n                message: 'Search',\n            },\n        };\n\n        if (toolTips[key] == null) {\n            return null;\n        }\n\n        return (\n            <Tooltip\n                id={toolTips[key].id}\n                className={toolTips[key].class}\n            >\n                <FormattedMessage\n                    id={toolTips[key].messageID}\n                    defaultMessage={toolTips[key].message}\n                />\n            </Tooltip>\n        );\n    }\n\n    const tooltip = getTooltip(tooltipKey);\n    if (tooltip) {\n        return (\n            <div className='flex-child'>\n                <OverlayTrigger\n                    trigger={['hover', 'focus']}\n                    delayShow={Constants.OVERLAY_TIME_DELAY}\n                    placement='bottom'\n                    overlay={tooltip}\n                >\n                    <button\n                        id={buttonId}\n                        className={buttonClass || 'channel-header__icon icon--hidden style--none'}\n                        onClick={onClick}\n                    >\n                        {iconComponent}\n                    </button>\n                </OverlayTrigger>\n            </div>\n        );\n    }\n\n    return (\n        <div className='flex-child'>\n            <button\n                id={buttonId}\n                className={buttonClass || 'channel-header__icon icon--hidden style--none'}\n                onClick={onClick}\n            >\n                {iconComponent}\n            </button>\n        </div>\n    );\n}\n\nHeaderIconWrapper.propTypes = {\n    buttonClass: PropTypes.string,\n    buttonId: PropTypes.string.isRequired,\n    iconComponent: PropTypes.element.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltipKey: PropTypes.string,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nexport default class SearchHint extends PureComponent {\n    static propTypes = {\n        withTitle: PropTypes.bool,\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.props.withTitle &&\n                <h4>\n                    <FormattedMessage\n                        id='search_bar.usage.title'\n                        defaultMessage='Search Options'\n                    />\n                </h4>\n                }\n                <FormattedMarkdownMessage\n                    id='search_bar.usage.tips'\n                    defaultMessage='* Use **\"quotation marks\"** to search for phrases\\n* Use **from:** to find posts from specific users and **in:** to find posts in specific channels\\n* Use **on:** to find posts on a specific date\\n* Use **before:** to find posts before a specific date\\n* Use **after:** to find posts after a specific date'\n                />\n            </React.Fragment>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class MentionsIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='14px'\n                    height='14px'\n                    viewBox='0 0 20 20'\n                    version='1.1'\n                    role='icon'\n                    aria-label={localizeMessage('generic_icons.mention', 'Mention Icon')}\n                >\n                    <g\n                        stroke='none'\n                        strokeWidth='1'\n                        fill='inherit'\n                        fillRule='evenodd'\n                    >\n                        <g\n                            transform='translate(-1057.000000, -31.000000)'\n                            fill='inherit'\n                        >\n                            <g>\n                                <g transform='translate(1049.000000, 22.000000)'>\n                                    <path d='M17.4296875,15.8867188 C15.9882812,15.8867188 15.1210938,17.0351562 15.1210938,18.96875 C15.1210938,20.8789062 15.9882812,22.0507812 17.4179688,22.0507812 C18.8945312,22.0507812 19.84375,20.8554688 19.84375,18.96875 C19.84375,17.0820312 18.90625,15.8867188 17.4296875,15.8867188 Z M17.8398438,9.125 C23.3242188,9.125 27.25,12.59375 27.25,17.7734375 C27.25,21.5117188 25.5625,23.9609375 22.7734375,23.9609375 C21.4023438,23.9609375 20.265625,23.1992188 20.078125,22.0390625 L19.9609375,22.0390625 C19.46875,23.2226562 18.4140625,23.8789062 17.0429688,23.8789062 C14.6054687,23.8789062 12.9648438,21.8867188 12.9648438,18.9101562 C12.9648438,16.0625 14.6171875,14.09375 16.9960938,14.09375 C18.25,14.09375 19.3632812,14.7382812 19.8085938,15.7460938 L19.9375,15.7460938 L19.9375,14.328125 L21.9179688,14.328125 L21.9179688,20.984375 C21.9179688,21.7578125 22.328125,22.2851562 23.171875,22.2851562 C24.4726562,22.2851562 25.421875,20.6679688 25.421875,17.8320312 C25.421875,13.5664062 22.2929688,10.7421875 17.7109375,10.7421875 C13.1640625,10.7421875 9.90625,14.140625 9.90625,18.96875 C9.90625,24.1367188 13.3515625,27.0429688 18.109375,27.0429688 C19.5625,27.0429688 21.0507812,26.84375 21.7773438,26.5390625 L21.7773438,28.15625 C20.78125,28.484375 19.4570312,28.671875 18.0273438,28.671875 C12.2382812,28.671875 8.078125,25.109375 8.078125,18.8984375 C8.078125,13.0625 12.0859375,9.125 17.8398438,9.125 Z'/>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class SearchIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='14px'\n                    height='14px'\n                    viewBox='0 0 19 18'\n                    role='icon'\n                    aria-label={localizeMessage('generic_icons.search', 'Search Icon')}\n                >\n                    <g\n                        stroke='inherit'\n                        strokeWidth='1'\n                        fill='none'\n                        fillRule='evenodd'\n                    >\n                        <g\n                            transform='translate(-719.000000, -20.000000)'\n                            strokeWidth='1.5'\n                        >\n                            <g transform='translate(0.000000, 1.000000)'>\n                                <g transform='translate(63.000000, 10.000000)'>\n                                    <g transform='translate(657.000000, 10.000000)'>\n                                        <circle\n                                            cx='7'\n                                            cy='7'\n                                            r='7'\n                                        />\n                                        <path\n                                            d='M12.5,11.5 L16.5,15.5'\n                                            strokeLinecap='round'\n                                        />\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Popover, OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport SearchChannelProvider from 'components/suggestion/search_channel_provider.jsx';\nimport SearchSuggestionList from 'components/suggestion/search_suggestion_list.jsx';\nimport SuggestionDate from 'components/suggestion/suggestion_date.jsx';\nimport SearchUserProvider from 'components/suggestion/search_user_provider.jsx';\nimport SearchDateProvider from 'components/suggestion/search_date_provider.jsx';\nimport SuggestionBox from 'components/suggestion/suggestion_box.jsx';\nimport HeaderIconWrapper from 'components/channel_header/components/header_icon_wrapper';\nimport SearchHint from 'components/search_hint/search_hint';\nimport FlagIcon from 'components/svg/flag_icon';\nimport MentionsIcon from 'components/svg/mentions_icon';\nimport SearchIcon from 'components/svg/search_icon';\n\nconst {KeyCodes} = Constants;\n\nexport default class SearchBar extends React.Component {\n    static propTypes = {\n        isSearchingTerm: PropTypes.bool,\n        searchTerms: PropTypes.string,\n        isMentionSearch: PropTypes.bool,\n        isFlaggedPosts: PropTypes.bool,\n        showMentionFlagBtns: PropTypes.bool,\n        isFocus: PropTypes.bool,\n        actions: PropTypes.shape({\n            updateSearchTerms: PropTypes.func,\n            showSearchResults: PropTypes.func,\n            showMentions: PropTypes.func,\n            showFlaggedPosts: PropTypes.func,\n            closeRightHandSide: PropTypes.func,\n        }),\n    };\n\n    static defaultProps = {\n        showMentionFlagBtns: true,\n        isFocus: false,\n    };\n\n    constructor() {\n        super();\n\n        this.state = {\n            focused: false,\n        };\n\n        this.suggestionProviders = [new SearchChannelProvider(), new SearchUserProvider(), new SearchDateProvider()];\n    }\n\n    componentDidMount() {\n        if (Utils.isMobile()) {\n            setTimeout(() => {\n                const element = document.querySelector('.app__body .sidebar--menu');\n                if (element) {\n                    element.classList.remove('visible');\n                }\n            });\n        }\n    }\n\n    handleClose = () => {\n        this.props.actions.closeRightHandSide();\n    }\n\n    handleKeyDown = (e) => {\n        if (Utils.isKeyPressed(e, KeyCodes.ESCAPE)) {\n            e.stopPropagation();\n            e.preventDefault();\n        }\n    }\n\n    handleChange = (e) => {\n        var term = e.target.value;\n        this.props.actions.updateSearchTerms(term);\n    }\n\n    handleUserBlur = () => {\n        // add time out so that the pinned and member buttons are clickable\n        // when focus is released from the search box.\n        setTimeout(() => {\n            this.setState({focused: false});\n        }, 100);\n    }\n\n    handleClear = () => {\n        this.props.actions.updateSearchTerms('');\n    }\n\n    handleUserFocus = () => {\n        this.setState({focused: true});\n    }\n\n    handleSearch = async (terms) => {\n        if (terms.length) {\n            const {error} = await this.props.actions.showSearchResults();\n\n            if (!error) {\n                this.handleSearchOnSuccess();\n            }\n        }\n    }\n\n    handleSearchOnSuccess = () => {\n        if (Utils.isMobile() && this.search) {\n            this.search.value = '';\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const terms = this.props.searchTerms.trim();\n\n        if (terms.length === 0) {\n            return;\n        }\n\n        this.handleSearch(terms);\n\n        this.search.blur();\n    }\n\n    searchMentions = (e) => {\n        e.preventDefault();\n        if (this.props.isMentionSearch) {\n            // Close\n            this.props.actions.closeRightHandSide();\n        } else {\n            this.props.actions.showMentions();\n        }\n    }\n\n    getFlagged = (e) => {\n        e.preventDefault();\n        if (this.props.isFlaggedPosts) {\n            this.props.actions.closeRightHandSide();\n        } else {\n            this.props.actions.showFlaggedPosts();\n        }\n    }\n\n    renderHintPopover() {\n        let helpClass = 'search-help-popover';\n        if (!this.props.searchTerms && this.state.focused) {\n            helpClass += ' visible';\n        }\n\n        return (\n            <Popover\n                id='searchbar-help-popup'\n                placement='bottom'\n                className={helpClass}\n            >\n                <SearchHint withTitle={true}/>\n            </Popover>\n        );\n    }\n\n    getSearch = (node) => {\n        this.search = node;\n    }\n\n    render() {\n        var isSearchingTerm = null;\n        if (this.props.isSearchingTerm) {\n            isSearchingTerm = (\n                <span\n                    className={'fa fa-spin fa-spinner'}\n                    title={Utils.localizeMessage('generic_icons.searching', 'Searching Icon')}\n                />\n            );\n        }\n\n        let mentionBtn;\n        let flagBtn;\n        if (this.props.showMentionFlagBtns) {\n            var mentionBtnClass = this.props.isMentionSearch ? 'active' : '';\n\n            mentionBtn = (\n                <HeaderIconWrapper\n                    iconComponent={\n                        <MentionsIcon\n                            className='icon icon__mentions'\n                            aria-hidden='true'\n                        />\n                    }\n                    buttonClass={'channel-header__icon style--none ' + mentionBtnClass}\n                    buttonId={'channelHeaderMentionButton'}\n                    onClick={this.searchMentions}\n                    tooltipKey={'recentMentions'}\n                />\n            );\n\n            var flagBtnClass = this.props.isFlaggedPosts ? 'active' : '';\n\n            flagBtn = (\n                <HeaderIconWrapper\n                    iconComponent={\n                        <FlagIcon className='icon icon__flag'/>\n                    }\n                    buttonClass={'channel-header__icon style--none ' + flagBtnClass}\n                    buttonId={'channelHeaderFlagButton'}\n                    onClick={this.getFlagged}\n                    tooltipKey={'flaggedPosts'}\n                />\n            );\n        }\n\n        let clearClass = 'sidebar__search-clear';\n        if (!this.props.isSearchingTerm && this.props.searchTerms && this.props.searchTerms.trim() !== '') {\n            clearClass += ' visible';\n        }\n\n        let searchFormClass = 'search__form';\n        if (this.state.focused) {\n            searchFormClass += ' focused';\n        }\n\n        const searchClearTooltip = (\n            <Tooltip id='searchClearTooltip'>\n                <FormattedMessage\n                    id='search_bar.clear'\n                    defaultMessage='Clear search query'\n                />\n            </Tooltip>\n        );\n\n        return (\n            <div className='sidebar-right__table'>\n                <div className='sidebar-collapse__container'>\n                    <div\n                        className='sidebar-collapse'\n                        onClick={this.handleClose}\n                    >\n                        <span\n                            className='fa fa-chevron-left'\n                            title={Utils.localizeMessage('generic_icons.back', 'Back Icon')}\n                        />\n                    </div>\n                </div>\n                <div\n                    id='searchFormContainer'\n                    className='search-form__container'\n                >\n                    <form\n                        role='form'\n                        className={searchFormClass}\n                        onSubmit={this.handleSubmit}\n                        style={style.searchForm}\n                        autoComplete='off'\n                    >\n                        <SearchIcon\n                            id='searchIcon'\n                            className='search__icon'\n                            aria-hidden='true'\n                        />\n                        <SuggestionBox\n                            id='searchBox'\n                            ref={this.getSearch}\n                            className='search-bar'\n                            placeholder={Utils.localizeMessage('search_bar.search', 'Search')}\n                            value={this.props.searchTerms}\n                            onFocus={this.handleUserFocus}\n                            onBlur={this.handleUserBlur}\n                            onChange={this.handleChange}\n                            onKeyDown={this.handleKeyDown}\n                            listComponent={SearchSuggestionList}\n                            dateComponent={SuggestionDate}\n                            providers={this.suggestionProviders}\n                            type='search'\n                            autoFocus={this.props.isFocus && this.props.searchTerms === ''}\n                            delayInputUpdate={true}\n                        />\n                        <div\n                            id='searchClearButton'\n                            className={clearClass}\n                            onClick={this.handleClear}\n                        >\n                            <OverlayTrigger\n                                trigger={['hover', 'focus']}\n                                delayShow={Constants.OVERLAY_TIME_DELAY}\n                                placement='bottom'\n                                overlay={searchClearTooltip}\n                            >\n                                <span\n                                    className='sidebar__search-clear-x'\n                                    aria-hidden='true'\n                                >\n                                    {'×'}\n                                </span>\n                            </OverlayTrigger>\n                        </div>\n                        {isSearchingTerm}\n                        {this.renderHintPopover()}\n                    </form>\n                </div>\n                {mentionBtn}\n                {flagBtn}\n            </div>\n        );\n    }\n}\n\nconst style = {\n    searchForm: {overflow: 'visible'},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {\n    updateSearchTerms,\n    showSearchResults,\n    showMentions,\n    showFlaggedPosts,\n    closeRightHandSide,\n} from 'actions/views/rhs';\nimport {getRhsState, getSearchTerms, getIsSearchingTerm} from 'selectors/rhs';\nimport {RHSStates} from 'utils/constants.jsx';\n\nimport SearchBar from './search_bar.jsx';\n\nfunction mapStateToProps(state) {\n    const rhsState = getRhsState(state);\n\n    return {\n        isSearchingTerm: getIsSearchingTerm(state),\n        searchTerms: getSearchTerms(state),\n        isMentionSearch: rhsState === RHSStates.MENTION,\n        isFlaggedPosts: rhsState === RHSStates.FLAG,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            updateSearchTerms,\n            showSearchResults,\n            showMentions,\n            showFlaggedPosts,\n            closeRightHandSide,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class SearchResultsHeader extends React.Component {\n    static propTypes = {\n        isMentionSearch: PropTypes.bool,\n        isFlaggedPosts: PropTypes.bool,\n        isPinnedPosts: PropTypes.bool,\n        channelDisplayName: PropTypes.string.isRequired,\n        actions: PropTypes.shape({\n            closeRightHandSide: PropTypes.func,\n            toggleRhsExpanded: PropTypes.func.isRequired,\n        }),\n    };\n\n    render() {\n        var title = (\n            <FormattedMessage\n                id='search_header.results'\n                defaultMessage='Search Results'\n            />\n        );\n\n        const closeSidebarTooltip = (\n            <Tooltip id='closeSidebarTooltip'>\n                <FormattedMessage\n                    id='rhs_header.closeSidebarTooltip'\n                    defaultMessage='Close Sidebar'\n                />\n            </Tooltip>\n        );\n\n        const expandSidebarTooltip = (\n            <Tooltip id='expandSidebarTooltip'>\n                <FormattedMessage\n                    id='rhs_header.expandSidebarTooltip'\n                    defaultMessage='Expand Sidebar'\n                />\n            </Tooltip>\n        );\n\n        const shrinkSidebarTooltip = (\n            <Tooltip id='shrinkSidebarTooltip'>\n                <FormattedMessage\n                    id='rhs_header.shrinkSidebarTooltip'\n                    defaultMessage='Shrink Sidebar'\n                />\n            </Tooltip>\n        );\n\n        if (this.props.isMentionSearch) {\n            title = (\n                <FormattedMessage\n                    id='search_header.title2'\n                    defaultMessage='Recent Mentions'\n                />\n            );\n        } else if (this.props.isFlaggedPosts) {\n            title = (\n                <FormattedMessage\n                    id='search_header.title3'\n                    defaultMessage='Flagged Posts'\n                />\n            );\n        } else if (this.props.isPinnedPosts) {\n            title = (\n                <FormattedMessage\n                    id='search_header.title4'\n                    defaultMessage='Pinned posts in {channelDisplayName}'\n                    values={{\n                        channelDisplayName: this.props.channelDisplayName,\n                    }}\n                />\n            );\n        }\n\n        return (\n            <div className='sidebar--right__header'>\n                <span className='sidebar--right__title'>{title}</span>\n                <div className='pull-right'>\n                    <button\n                        type='button'\n                        className='sidebar--right__expand'\n                        aria-label='Expand'\n                        onClick={this.props.actions.toggleRhsExpanded}\n                    >\n                        <OverlayTrigger\n                            trigger={['hover', 'focus']}\n                            delayShow={Constants.OVERLAY_TIME_DELAY}\n                            placement='top'\n                            overlay={expandSidebarTooltip}\n                        >\n                            <i\n                                className='fa fa-expand'\n                                title={localizeMessage('rhs_header.expandSidebarTooltip.icon', 'Expand Sidebar Icon')}\n                            />\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                            trigger={['hover', 'focus']}\n                            delayShow={Constants.OVERLAY_TIME_DELAY}\n                            placement='top'\n                            overlay={shrinkSidebarTooltip}\n                        >\n                            <i\n                                className='fa fa-compress'\n                                title={localizeMessage('rhs_header.expandTooltip.icon', 'Shrink Sidebar Icon')}\n                            />\n                        </OverlayTrigger>\n                    </button>\n                    <button\n                        type='button'\n                        className='sidebar--right__close'\n                        aria-label='Close'\n                        title='Close'\n                        onClick={this.props.actions.closeRightHandSide}\n                    >\n                        <OverlayTrigger\n                            trigger={['hover', 'focus']}\n                            delayShow={Constants.OVERLAY_TIME_DELAY}\n                            placement='top'\n                            overlay={closeSidebarTooltip}\n                        >\n                            <i\n                                className='fa fa-sign-out'\n                                title={localizeMessage('rhs_header.closeTooltip.icon', 'Close Sidebar Icon')}\n                            />\n                        </OverlayTrigger>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {\n    closeRightHandSide,\n    toggleRhsExpanded,\n} from 'actions/views/rhs';\n\nimport SearchResultsHeader from './search_results_header.jsx';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            closeRightHandSide,\n            toggleRhsExpanded,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(SearchResultsHeader);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class ReplyIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    id='Layer_1'\n                    x='0px'\n                    y='0px'\n                    width='17px'\n                    height='17px'\n                    viewBox='-158 242 18 18'\n                    style={style}\n                    role='icon'\n                    aria-label={localizeMessage('generic_icons.reply', 'Reply Icon')}\n                >\n                    <path d='M-142.2,252.6c-2-3-4.8-4.7-8.3-4.8v-3.3c0-0.2-0.1-0.3-0.2-0.3s-0.3,0-0.4,0.1l-6.9,6.2c-0.1,0.1-0.1,0.2-0.1,0.3 c0,0.1,0,0.2,0.1,0.3l6.9,6.4c0.1,0.1,0.3,0.1,0.4,0.1c0.1-0.1,0.2-0.2,0.2-0.4v-3.8c4.2,0,7.4,0.4,9.6,4.4c0.1,0.1,0.2,0.2,0.3,0.2 c0,0,0.1,0,0.1,0c0.2-0.1,0.3-0.3,0.2-0.4C-140.2,257.3-140.6,255-142.2,252.6z M-150.8,252.5c-0.2,0-0.4,0.2-0.4,0.4v3.3l-6-5.5 l6-5.3v2.8c0,0.2,0.2,0.4,0.4,0.4c3.3,0,6,1.5,8,4.5c0.5,0.8,0.9,1.6,1.2,2.3C-144,252.8-147.1,252.5-150.8,252.5z'/>\n                </svg>\n            </span>\n        );\n    }\n}\n\nconst style = {\n    enableBackground: 'new -158 242 18 18',\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport ReplyIcon from 'components/svg/reply_icon';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class CommentIcon extends React.PureComponent {\n    static propTypes = {\n        idPrefix: PropTypes.string.isRequired,\n        idCount: PropTypes.number,\n        handleCommentClick: PropTypes.func.isRequired,\n        searchStyle: PropTypes.string,\n        commentCount: PropTypes.number,\n        id: PropTypes.string,\n        extraClass: PropTypes.string,\n    };\n\n    static defaultProps = {\n        idCount: -1,\n        searchStyle: '',\n        commentCount: 0,\n        id: '',\n        extraClass: '',\n    };\n\n    render() {\n        let commentCountSpan = '';\n        let iconStyle = 'comment-icon__container';\n        if (this.props.commentCount > 0) {\n            iconStyle += ' icon--show';\n            commentCountSpan = (\n                <span className='comment-count'>\n                    {this.props.commentCount}\n                </span>\n            );\n        } else if (this.props.searchStyle !== '') {\n            iconStyle = iconStyle + ' ' + this.props.searchStyle;\n        }\n\n        let selectorId = this.props.idPrefix;\n        if (this.props.idCount > -1) {\n            selectorId += this.props.idCount;\n        }\n\n        const id = Utils.createSafeId(this.props.idPrefix + '_' + this.props.id);\n\n        const tooltip = (\n            <Tooltip\n                id='comment-icon-tooltip'\n                className='hidden-xs'\n            >\n                <FormattedMessage\n                    id='post_info.comment_icon.tooltip.reply'\n                    defaultMessage='Reply'\n                />\n            </Tooltip>\n        );\n\n        return (\n            <OverlayTrigger\n                className='hidden-xs'\n                delayShow={500}\n                placement='top'\n                overlay={tooltip}\n            >\n                <button\n                    id={id}\n                    className={iconStyle + ' color--link style--none ' + selectorId + ' ' + this.props.extraClass}\n                    onClick={this.props.handleCommentClick}\n                >\n                    <ReplyIcon className='comment-icon'/>\n                    {commentCountSpan}\n                </button>\n            </OverlayTrigger>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class ArchiveIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='14'\n                    height='14'\n                    viewBox='0 0 14 14'\n                    role='icon'\n                    aria-label={localizeMessage('generic_icons.archive', 'Archive Icon')}\n                >\n                    <path d='M8.5 6.5q0-0.203-0.148-0.352t-0.352-0.148h-2q-0.203 0-0.352 0.148t-0.148 0.352 0.148 0.352 0.352 0.148h2q0.203 0 0.352-0.148t0.148-0.352zM13 5v7.5q0 0.203-0.148 0.352t-0.352 0.148h-11q-0.203 0-0.352-0.148t-0.148-0.352v-7.5q0-0.203 0.148-0.352t0.352-0.148h11q0.203 0 0.352 0.148t0.148 0.352zM13.5 1.5v2q0 0.203-0.148 0.352t-0.352 0.148h-12q-0.203 0-0.352-0.148t-0.148-0.352v-2q0-0.203 0.148-0.352t0.352-0.148h12q0.203 0 0.352 0.148t0.148 0.352z'/>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Posts} from 'mattermost-redux/constants/index';\nimport * as ReduxPostUtils from 'mattermost-redux/utils/post_utils';\n\nimport PostMessageContainer from 'components/post_view/post_message_view';\nimport FileAttachmentListContainer from 'components/file_attachment_list';\nimport CommentIcon from 'components/common/comment_icon.jsx';\nimport DotMenu from 'components/dot_menu';\nimport PostProfilePicture from 'components/post_profile_picture';\nimport UserProfile from 'components/user_profile.jsx';\nimport DateSeparator from 'components/post_view/date_separator.jsx';\nimport PostBodyAdditionalContent from 'components/post_view/post_body_additional_content';\nimport PostFlagIcon from 'components/post_view/post_flag_icon';\nimport ArchiveIcon from 'components/svg/archive_icon';\nimport PostTime from 'components/post_view/post_time.jsx';\nimport {browserHistory} from 'utils/browser_history';\n\nimport Constants from 'utils/constants.jsx';\nimport * as PostUtils from 'utils/post_utils.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class SearchResultsItem extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Data used for rendering post\n        */\n        post: PropTypes.object,\n\n        /**\n        * An array of strings in this post that were matched by the search\n        */\n        matches: PropTypes.array,\n\n        /**\n        *  count used for passing down to PostFlagIcon, DotMenu and CommentIcon\n        */\n        lastPostCount: PropTypes.number,\n\n        /**\n        *  user object for rendering profile_picture\n        */\n        user: PropTypes.object,\n\n        /**\n        *  channel object for rendering channel name on top of result\n        */\n        channel: PropTypes.object,\n\n        /**\n        *  Flag for determining result display setting\n        */\n        compactDisplay: PropTypes.bool,\n\n        /**\n        *  Flag for highlighting mentions\n        */\n        isMentionSearch: PropTypes.bool,\n\n        /**\n        *  Flag for highlighting search term\n        */\n        term: PropTypes.string,\n\n        /**\n        *  Flag for determining result flag state\n        */\n        isFlagged: PropTypes.bool,\n\n        /**\n        *  Data used for status in profile\n        */\n        status: PropTypes.string,\n\n        /**\n        *  Data used creating URl for jump to post\n        */\n        currentTeamName: PropTypes.string,\n\n        /**\n        *  Data used for delete in DotMenu\n        */\n        commentCountForPost: PropTypes.number,\n\n        /**\n         * Whether post username overrides are to be respected.\n         */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n        *  Function used for closing LHS\n        */\n        actions: PropTypes.shape({\n            closeRightHandSide: PropTypes.func.isRequired,\n            selectPost: PropTypes.func.isRequired,\n            setRhsExpanded: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dropdownOpened: false,\n        };\n    }\n\n    handleFocusRHSClick = (e) => {\n        e.preventDefault();\n        this.props.actions.selectPost(this.props.post);\n    };\n\n    handleJumpClick = () => {\n        if (Utils.isMobile()) {\n            this.props.actions.closeRightHandSide();\n        }\n\n        this.props.actions.setRhsExpanded(false);\n        browserHistory.push(`/${this.props.currentTeamName}/pl/${this.props.post.id}`);\n    };\n\n    handleDropdownOpened = (isOpened) => {\n        this.setState({\n            dropdownOpened: isOpened,\n        });\n    };\n\n    renderPostTime = () => {\n        const post = this.props.post;\n\n        const isPermalink = !(Posts.POST_DELETED === post.state ||\n            ReduxPostUtils.isPostPendingOrFailed(post));\n\n        return (\n            <PostTime\n                isPermalink={isPermalink}\n                eventTime={post.create_at}\n                postId={post.id}\n            />\n        );\n    };\n\n    getClassName = () => {\n        let className = 'post post--thread';\n\n        if (this.props.compactDisplay) {\n            className += ' post--compact';\n        }\n\n        if (this.state.dropdownOpened) {\n            className += ' post--hovered';\n        }\n\n        return className;\n    };\n\n    render() {\n        let channelName = null;\n        const channel = this.props.channel;\n        const user = this.props.user || {};\n        const post = this.props.post;\n\n        const channelIsArchived = channel ? channel.delete_at !== 0 : true;\n\n        if (channel) {\n            channelName = channel.display_name;\n            if (channel.type === Constants.DM_CHANNEL) {\n                channelName = (\n                    <FormattedMessage\n                        id='search_item.direct'\n                        defaultMessage='Direct Message (with {username})'\n                        values={{\n                            username: Utils.getDisplayNameByUser(Utils.getDirectTeammate(channel.id)),\n                        }}\n                    />\n                );\n            }\n        }\n\n        let overrideUsername;\n        let disableProfilePopover = false;\n        if (post.props &&\n            post.props.from_webhook &&\n            post.props.override_username &&\n            this.props.enablePostUsernameOverride) {\n            overrideUsername = post.props.override_username;\n            disableProfilePopover = true;\n        }\n\n        let botIndicator;\n        if (post.props && post.props.from_webhook) {\n            botIndicator = (\n                <div className='bot-indicator'>\n                    <FormattedMessage\n                        id='post_info.bot'\n                        defaultMessage='BOT'\n                    />\n                </div>\n            );\n        }\n\n        const profilePic = (\n            <PostProfilePicture\n                compactDisplay={this.props.compactDisplay}\n                post={post}\n                user={user}\n                status={this.props.status}\n            />\n        );\n\n        const profilePicContainer = (<div className='post__img'>{profilePic}</div>);\n\n        let postClass = '';\n        if (PostUtils.isEdited(this.props.post)) {\n            postClass += ' post--edited';\n        }\n\n        let fileAttachment = null;\n        if (post.file_ids && post.file_ids.length > 0) {\n            fileAttachment = (\n                <FileAttachmentListContainer\n                    post={post}\n                    compactDisplay={this.props.compactDisplay}\n                />\n            );\n        }\n\n        let message;\n        let flagContent;\n        let rhsControls;\n        if (post.state === Constants.POST_DELETED) {\n            message = (\n                <p>\n                    <FormattedMessage\n                        id='post_body.deleted'\n                        defaultMessage='(message deleted)'\n                    />\n                </p>\n            );\n        } else {\n            flagContent = (\n                <PostFlagIcon\n                    idPrefix={'searchPostFlag'}\n                    idCount={this.props.lastPostCount}\n                    postId={post.id}\n                    isFlagged={this.props.isFlagged}\n                />\n            );\n\n            rhsControls = (\n                <div className='col__controls col__reply'>\n                    <DotMenu\n                        post={post}\n                        location={'SEARCH'}\n                        isFlagged={this.props.isFlagged}\n                        handleDropdownOpened={this.handleDropdownOpened}\n                        commentCount={this.props.commentCountForPost}\n                        isReadOnly={channelIsArchived || null}\n                    />\n                    <CommentIcon\n                        idPrefix={'searchCommentIcon'}\n                        idCount={this.props.lastPostCount}\n                        handleCommentClick={this.handleFocusRHSClick}\n                        searchStyle={'search-item__comment'}\n                    />\n                    <a\n                        onClick={this.handleJumpClick}\n                        className='search-item__jump'\n                    >\n                        <FormattedMessage\n                            id='search_item.jump'\n                            defaultMessage='Jump'\n                        />\n                    </a>\n                </div>\n            );\n\n            message = (\n                <PostBodyAdditionalContent\n                    post={post}\n                    options={{\n                        searchTerm: this.props.term,\n                        searchMatches: this.props.matches,\n                    }}\n                >\n                    <PostMessageContainer\n                        post={post}\n                        options={{\n                            searchTerm: this.props.term,\n                            searchMatches: this.props.matches,\n                            mentionHighlight: this.props.isMentionSearch,\n                        }}\n                    />\n                </PostBodyAdditionalContent>\n            );\n        }\n\n        let pinnedBadge;\n        if (post.is_pinned) {\n            pinnedBadge = (\n                <span className='post__pinned-badge'>\n                    <FormattedMessage\n                        id='post_info.pinned'\n                        defaultMessage='Pinned'\n                    />\n                </span>\n            );\n        }\n\n        const currentPostDay = Utils.getDateForUnixTicks(post.create_at);\n\n        return (\n            <div className='search-item__container'>\n                <DateSeparator date={currentPostDay}/>\n                <div className={this.getClassName()}>\n                    <div className='search-channel__name'>\n                        {channelName}\n                        {channelIsArchived &&\n                            <span className='search-channel__archived'>\n                                <ArchiveIcon className='icon icon__archive channel-header-archived-icon svg-text-color'/>\n                                <FormattedMessage\n                                    id='search_item.channelArchived'\n                                    defaultMessage='Archived'\n                                />\n                            </span>\n                        }\n                    </div>\n                    <div className='post__content'>\n                        {profilePicContainer}\n                        <div>\n                            <div className='post__header'>\n                                <div className='col col__name'>\n                                    <strong>\n                                        <UserProfile\n                                            user={user}\n                                            overwriteName={overrideUsername}\n                                            disablePopover={disableProfilePopover}\n                                            status={this.props.status}\n                                        />\n                                    </strong>\n                                </div>\n                                {botIndicator}\n                                <div className='col'>\n                                    {this.renderPostTime()}\n                                    {pinnedBadge}\n                                    {flagContent}\n                                </div>\n                                {rhsControls}\n                            </div>\n                            <div className='search-item-snippet post__body'>\n                                <div className={postClass}>\n                                    {message}\n                                    {fileAttachment}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {makeGetCommentCountForPost} from 'mattermost-redux/selectors/entities/posts';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {\n    closeRightHandSide,\n    selectPostFromRightHandSideSearch,\n    setRhsExpanded,\n} from 'actions/views/rhs';\n\nimport SearchResultsItem from './search_results_item.jsx';\n\nfunction mapStateToProps() {\n    const getCommentCountForPost = makeGetCommentCountForPost();\n\n    return (state, ownProps) => {\n        const config = getConfig(state);\n        const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n\n        return {\n            currentTeamName: getCurrentTeam(state).name,\n            commentCountForPost: getCommentCountForPost(state, {post: ownProps.post}),\n            enablePostUsernameOverride,\n        };\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            closeRightHandSide,\n            selectPost: selectPostFromRightHandSideSearch,\n            setRhsExpanded,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResultsItem);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class DataRetentionHint extends PureComponent {\n    static propTypes = {\n        dataRetentionMessageRetentionDays: PropTypes.string,\n    }\n\n    render() {\n        return (\n            <li>\n                <FormattedMessage\n                    id='search_results.usage.dataRetention'\n                    defaultMessage='Only messages posted in the last {days} days are returned. Contact your System Administrator for more detail.'\n                    values={{\n                        days: this.props.dataRetentionMessageRetentionDays,\n                    }}\n                />\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport FlagIcon from 'components/svg/flag_icon';\n\nimport DataRetentionHint from './data_retention_hint';\n\nexport default class FlagPostSearchHint extends PureComponent {\n    static propTypes = {\n        dataRetentionEnableMessageDeletion: PropTypes.bool,\n        dataRetentionMessageRetentionDays: PropTypes.string,\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <ul>\n                    <li>\n                        <FormattedMessage\n                            id='search_results.usageFlag1'\n                            defaultMessage=\"You haven't flagged any messages yet.\"\n                        />\n                    </li>\n                    <li>\n                        <FormattedMessage\n                            id='search_results.usageFlag2'\n                            defaultMessage='You can add a flag to messages and comments by clicking the {flagIcon} icon next to the timestamp.'\n                            values={{\n                                flagIcon: <FlagIcon className='usage__icon'/>,\n                            }}\n                        />\n                    </li>\n                    <li>\n                        <FormattedMessage\n                            id='search_results.usageFlag4'\n                            defaultMessage='Flags are a way to mark messages for follow up. Your flags are personal, and cannot be seen by other users.'\n                        />\n                    </li>\n                    {this.props.dataRetentionEnableMessageDeletion &&\n                        <DataRetentionHint dataRetentionMessageRetentionDays={this.props.dataRetentionMessageRetentionDays}/>\n                    }\n                </ul>\n            </React.Fragment>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport DataRetentionHint from './data_retention_hint';\n\nexport default class PinPostSearchHint extends PureComponent {\n    static propTypes = {\n        dataRetentionEnableMessageDeletion: PropTypes.bool,\n        dataRetentionMessageRetentionDays: PropTypes.string,\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <h4>\n                    <FormattedMessage\n                        id='search_results.noResults'\n                        defaultMessage='No results found. Try again?'\n                    />\n                </h4>\n                <ul>\n                    <li>\n                        <FormattedMessage\n                            id='search_results.noResults.partialPhraseSuggestion'\n                            defaultMessage='If you&#39;re searching a partial phrase (ex. searching \"rea\", looking for \"reach\" or \"reaction\"), append a * to your search term.'\n                        />\n                    </li>\n                    <li>\n                        <FormattedMessage\n                            id='search_results.noResults.stopWordsSuggestion'\n                            defaultMessage='Two letter searches and common words like \"this\", \"a\" and \"is\" won&#39;t appear in search results due to the excessive results returned.'\n                        />\n                    </li>\n                    {this.props.dataRetentionEnableMessageDeletion &&\n                        <DataRetentionHint dataRetentionMessageRetentionDays={this.props.dataRetentionMessageRetentionDays}/>\n                    }\n                </ul>\n            </React.Fragment>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport DataRetentionHint from './data_retention_hint';\n\nexport default class PinPostSearchHint extends PureComponent {\n    static propTypes = {\n        dataRetentionEnableMessageDeletion: PropTypes.bool,\n        dataRetentionMessageRetentionDays: PropTypes.string,\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <ul>\n                    <li>\n                        <FormattedMessage\n                            id='search_results.usagePin1'\n                            defaultMessage='There are no pinned messages yet.'\n                        />\n                    </li>\n                    <li>\n                        <FormattedMessage\n                            id='search_results.usagePin2'\n                            defaultMessage='All members of this channel can pin important or useful messages.'\n                        />\n                    </li>\n                    <li>\n                        <FormattedMessage\n                            id='search_results.usagePin3'\n                            defaultMessage='Pinned messages are visible to all channel members.'\n                        />\n                    </li>\n                    <li>\n                        <FormattedMessage\n                            id='search_results.usagePin4'\n                            defaultMessage={'To pin a message: Go to the message that you want to pin and click [...] > \"Pin to channel\".'}\n                        />\n                    </li>\n                    {this.props.dataRetentionEnableMessageDeletion &&\n                        <DataRetentionHint dataRetentionMessageRetentionDays={this.props.dataRetentionMessageRetentionDays}/>\n                    }\n                </ul>\n            </React.Fragment>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport Scrollbars from 'react-custom-scrollbars';\n\nimport {debounce} from 'mattermost-redux/actions/helpers';\n\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport SearchResultsHeader from 'components/search_results_header';\nimport SearchResultsItem from 'components/search_results_item';\nimport SearchHint from 'components/search_hint/search_hint';\nimport FlagPostSearchHint from 'components/search_hint/flag_post_search_hint';\nimport NoResultSearchHint from 'components/search_hint/no_result_search_hint';\nimport PinPostSearchHint from 'components/search_hint/pin_post_search_hint';\n\nconst GET_MORE_BUFFER = 30;\n\nexport function renderView(props) {\n    return (\n        <div\n            {...props}\n            className='scrollbar--view'\n        />);\n}\n\nexport function renderThumbHorizontal(props) {\n    return (\n        <div\n            {...props}\n            className='scrollbar--horizontal'\n        />);\n}\n\nexport function renderThumbVertical(props) {\n    return (\n        <div\n            {...props}\n            className='scrollbar--vertical'\n        />);\n}\n\nexport default class SearchResults extends React.PureComponent {\n    static propTypes = {\n        results: PropTypes.array,\n        matches: PropTypes.object,\n        profiles: PropTypes.object,\n        statuses: PropTypes.object,\n        currentUser: PropTypes.object,\n        channels: PropTypes.object,\n        searchTerms: PropTypes.string,\n        isFlaggedByPostId: PropTypes.object,\n        isSearchingTerm: PropTypes.bool,\n        isSearchingFlaggedPost: PropTypes.bool,\n        isSearchingPinnedPost: PropTypes.bool,\n        isSearchGettingMore: PropTypes.bool,\n        compactDisplay: PropTypes.bool,\n        isMentionSearch: PropTypes.bool,\n        isFlaggedPosts: PropTypes.bool,\n        isPinnedPosts: PropTypes.bool,\n        channelDisplayName: PropTypes.string.isRequired,\n        dataRetentionEnableMessageDeletion: PropTypes.bool.isRequired,\n        dataRetentionMessageRetentionDays: PropTypes.string,\n        actions: PropTypes.shape({\n            getMorePostsForSearch: PropTypes.func.isRequired,\n        }),\n    };\n\n    static defaultProps = {\n        matches: {},\n        currentUser: {},\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            windowWidth: Utils.windowWidth(),\n            windowHeight: Utils.windowHeight(),\n        };\n    }\n\n    componentDidMount() {\n        this.scrollToTop();\n        window.addEventListener('resize', this.handleResize);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.searchTerms !== prevProps.searchTerms) {\n            this.scrollToTop();\n        }\n    }\n\n    handleResize = () => {\n        this.setState({\n            windowWidth: Utils.windowWidth(),\n            windowHeight: Utils.windowHeight(),\n        });\n    }\n\n    scrollToTop = () => {\n        this.refs.scrollbars.scrollToTop();\n    }\n\n    handleScroll = () => {\n        if (!this.props.isFlaggedPosts && !this.props.isPinnedPosts && !this.props.isSearchingTerm && !this.props.isSearchGettingMore) {\n            const scrollHeight = this.refs.scrollbars.getScrollHeight();\n            const scrollTop = this.refs.scrollbars.getScrollTop();\n            const clientHeight = this.refs.scrollbars.getClientHeight();\n            if ((scrollTop + clientHeight + GET_MORE_BUFFER) >= scrollHeight) {\n                this.loadMorePosts();\n            }\n        }\n    }\n\n    loadMorePosts = debounce(() => {\n        this.props.actions.getMorePostsForSearch();\n    }, 100);\n\n    render() {\n        const results = this.props.results;\n        const noResults = (!results || results.length === 0);\n        const searchTerms = this.props.searchTerms;\n        const profiles = this.props.profiles || {};\n        const statuses = this.props.statuses || {};\n\n        let ctls = null;\n\n        if (\n            this.props.isSearchingTerm ||\n            this.props.isSearchingFlaggedPost ||\n            this.props.isSearchingPinnedPost\n        ) {\n            ctls = (\n                <div className='sidebar--right__subheader'>\n                    <div className='sidebar--right__loading'>\n                        <i\n                            className='fa fa-spinner fa-spin'\n                            title={Utils.localizeMessage('generic_icons.searching', 'Searching Icon')}\n                        />\n                        <FormattedMessage\n                            id='search_header.loading'\n                            defaultMessage='Searching...'\n                        />\n                    </div>\n                </div>\n            );\n        } else if (this.props.isFlaggedPosts && noResults) {\n            ctls = (\n                <div className='sidebar--right__subheader'>\n                    <FlagPostSearchHint\n                        dataRetentionEnableMessageDeletion={this.props.dataRetentionEnableMessageDeletion}\n                        dataRetentionMessageRetentionDays={this.props.dataRetentionMessageRetentionDays}\n                    />\n                </div>\n            );\n        } else if (this.props.isPinnedPosts && noResults) {\n            ctls = (\n                <div className='sidebar--right__subheader'>\n                    <PinPostSearchHint\n                        dataRetentionEnableMessageDeletion={this.props.dataRetentionEnableMessageDeletion}\n                        dataRetentionMessageRetentionDays={this.props.dataRetentionMessageRetentionDays}\n                    />\n                </div>\n            );\n        } else if (!searchTerms && noResults) {\n            ctls = (\n                <div className='sidebar--right__subheader'>\n                    <SearchHint/>\n                </div>\n            );\n        } else if (noResults) {\n            ctls = (\n                <div className='sidebar--right__subheader'>\n                    <NoResultSearchHint\n                        dataRetentionEnableMessageDeletion={this.props.dataRetentionEnableMessageDeletion}\n                        dataRetentionMessageRetentionDays={this.props.dataRetentionMessageRetentionDays}\n                    />\n                </div>\n            );\n        } else {\n            let sortedResults;\n            if (this.props.isPinnedPosts) {\n                sortedResults = [...results];\n                sortedResults.sort((postA, postB) => postB.create_at - postA.create_at);\n            } else {\n                sortedResults = results;\n            }\n\n            ctls = sortedResults.map((post, idx, arr) => {\n                let profile;\n                if (this.props.currentUser.id === post.user_id) {\n                    profile = this.props.currentUser;\n                } else {\n                    profile = profiles[post.user_id];\n                }\n\n                let status = 'offline';\n                if (statuses) {\n                    status = statuses[post.user_id] || 'offline';\n                }\n\n                let isFlagged = false;\n                if (this.props.isFlaggedByPostId) {\n                    isFlagged = this.props.isFlaggedByPostId.get(post.id) || false;\n                }\n\n                const reverseCount = arr.length - idx - 1;\n\n                return (\n                    <SearchResultsItem\n                        key={post.id}\n                        channel={this.props.channels.get(post.channel_id)}\n                        compactDisplay={this.props.compactDisplay}\n                        post={post}\n                        matches={this.props.matches[post.id]}\n                        lastPostCount={(reverseCount >= 0 && reverseCount < Constants.TEST_ID_COUNT) ? reverseCount : -1}\n                        user={profile}\n                        term={(!this.props.isFlaggedPosts && !this.props.isPinnedPosts && !this.props.isMentionSearch) ? searchTerms : ''}\n                        isMentionSearch={this.props.isMentionSearch}\n                        isFlagged={isFlagged}\n                        status={status}\n                    />\n                );\n            }, this);\n        }\n\n        return (\n            <div className='sidebar-right__body'>\n                <SearchResultsHeader\n                    isMentionSearch={this.props.isMentionSearch}\n                    isFlaggedPosts={this.props.isFlaggedPosts}\n                    isPinnedPosts={this.props.isPinnedPosts}\n                    channelDisplayName={this.props.channelDisplayName}\n                    isLoading={this.props.isSearchingTerm}\n                />\n                <Scrollbars\n                    ref='scrollbars'\n                    autoHide={true}\n                    autoHideTimeout={500}\n                    autoHideDuration={500}\n                    renderThumbHorizontal={renderThumbHorizontal}\n                    renderThumbVertical={renderThumbVertical}\n                    renderView={renderView}\n                    onScroll={this.handleScroll}\n                >\n                    <div\n                        id='search-items-container'\n                        className='search-items-container'\n                    >\n                        {ctls}\n                    </div>\n                </Scrollbars>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {getSearchMatches, getSearchResults} from 'mattermost-redux/selectors/entities/posts';\nimport * as PreferenceSelectors from 'mattermost-redux/selectors/entities/preferences';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {getMorePostsForSearch} from 'mattermost-redux/actions/search';\n\nimport {\n    getCurrentUser,\n    getUsers,\n    getUserStatuses,\n} from 'mattermost-redux/selectors/entities/users';\n\nimport {\n    getSearchResultsTerms,\n    getIsSearchingTerm,\n    getIsSearchingFlaggedPost,\n    getIsSearchingPinnedPost,\n    getIsSearchGettingMore,\n} from 'selectors/rhs';\nimport {Preferences} from 'utils/constants.jsx';\n\nimport SearchResults from './search_results.jsx';\n\nconst getCategory = PreferenceSelectors.makeGetCategory();\n\nfunction makeMapStateToProps() {\n    let results;\n    let posts;\n    let channels;\n    let flaggedPosts;\n    let isFlaggedByPostId;\n\n    return function mapStateToProps(state) {\n        const config = getConfig(state);\n\n        const dataRetentionEnableMessageDeletion = config.DataRetentionEnableMessageDeletion === 'true';\n        const dataRetentionMessageRetentionDays = config.DataRetentionMessageRetentionDays;\n        const viewArchivedChannels = config.ExperimentalViewArchivedChannels === 'true';\n\n        const newResults = getSearchResults(state);\n\n        // Cache posts and channels\n        if (newResults && newResults !== results) {\n            results = newResults;\n\n            channels = new Map();\n\n            posts = [];\n            results.forEach((post) => {\n                if (!post) {\n                    return;\n                }\n\n                let channel;\n                if (channels.has(post.channel_id)) {\n                    channel = channels.get(post.channel_id);\n                } else {\n                    channel = getChannel(state, post.channel_id);\n                    channels.set(post.channel_id, channel);\n                }\n\n                if (channel && channel.delete_at !== 0 && !viewArchivedChannels) {\n                    return;\n                }\n\n                posts.push(post);\n            });\n        }\n\n        const newFlaggedPosts = getCategory(state, Preferences.CATEGORY_FLAGGED_POST);\n\n        // Cache flagged posts map\n        if (newFlaggedPosts !== flaggedPosts) {\n            flaggedPosts = newFlaggedPosts;\n\n            isFlaggedByPostId = new Map();\n\n            for (const pref of flaggedPosts) {\n                isFlaggedByPostId.set(pref.name, true);\n            }\n        }\n\n        return {\n            results: posts,\n            matches: getSearchMatches(state),\n            profiles: getUsers(state),\n            statuses: getUserStatuses(state),\n            currentUser: getCurrentUser(state),\n            channels,\n            searchTerms: getSearchResultsTerms(state),\n            isFlaggedByPostId,\n            isSearchingTerm: getIsSearchingTerm(state),\n            isSearchingFlaggedPost: getIsSearchingFlaggedPost(state),\n            isSearchingPinnedPost: getIsSearchingPinnedPost(state),\n            isSearchGettingMore: getIsSearchGettingMore(state),\n            compactDisplay: PreferenceSelectors.get(state, Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.MESSAGE_DISPLAY, Preferences.MESSAGE_DISPLAY_DEFAULT) === Preferences.MESSAGE_DISPLAY_COMPACT,\n            dataRetentionEnableMessageDeletion,\n            dataRetentionMessageRetentionDays,\n        };\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getMorePostsForSearch,\n        }, dispatch),\n    };\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(SearchResults);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport {postListScrollChange} from 'actions/global_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport FileUploadOverlay from 'components/file_upload_overlay.jsx';\nimport RhsThread from 'components/rhs_thread';\nimport SearchBar from 'components/search_bar';\nimport SearchResults from 'components/search_results';\n\nexport default class SidebarRight extends React.PureComponent {\n    static propTypes = {\n        isExpanded: PropTypes.bool.isRequired,\n        isOpen: PropTypes.bool.isRequired,\n        currentUser: PropTypes.object,\n        channel: PropTypes.object,\n        postRightVisible: PropTypes.bool,\n        searchVisible: PropTypes.bool,\n        isMentionSearch: PropTypes.bool,\n        isFlaggedPosts: PropTypes.bool,\n        isPinnedPosts: PropTypes.bool,\n        previousRhsState: PropTypes.string,\n        actions: PropTypes.shape({\n            getPinnedPosts: PropTypes.func.isRequired,\n            getFlaggedPosts: PropTypes.func.isRequired,\n            setRhsExpanded: PropTypes.func.isRequired,\n            showPinnedPosts: PropTypes.func.isRequired,\n        }),\n    };\n\n    componentDidUpdate(prevProps) {\n        const wasOpen = prevProps.searchVisible || prevProps.postRightVisible;\n        const isOpen = this.props.searchVisible || this.props.postRightVisible;\n\n        if (!wasOpen && isOpen) {\n            trackEvent('ui', 'ui_rhs_opened');\n            setTimeout(postListScrollChange, 0);\n        }\n    }\n\n    onShrink = () => {\n        this.props.actions.setRhsExpanded(false);\n    };\n\n    render() {\n        const {\n            channel,\n            currentUser,\n            isFlaggedPosts,\n            isMentionSearch,\n            isPinnedPosts,\n            postRightVisible,\n            previousRhsState,\n            searchVisible,\n        } = this.props;\n\n        let content = null;\n        let expandedClass = '';\n\n        if (this.props.isExpanded) {\n            expandedClass = 'sidebar--right--expanded';\n        }\n\n        var searchForm = null;\n        if (currentUser) {\n            searchForm = <SearchBar isFocus={searchVisible && !isFlaggedPosts && !isPinnedPosts}/>;\n        }\n\n        let channelDisplayName = '';\n        if (channel) {\n            if (channel.type === Constants.DM_CHANNEL || channel.type === Constants.GM_CHANNEL) {\n                channelDisplayName = Utils.localizeMessage('rhs_root.direct', 'Direct Message');\n            } else {\n                channelDisplayName = channel.display_name;\n            }\n        }\n\n        if (searchVisible) {\n            content = (\n                <div className='sidebar--right__content'>\n                    <div className='search-bar__container channel-header alt'>{searchForm}</div>\n                    <SearchResults\n                        isMentionSearch={isMentionSearch}\n                        isFlaggedPosts={isFlaggedPosts}\n                        isPinnedPosts={isPinnedPosts}\n                        toggleSize={this.toggleSize}\n                        shrink={this.onShrink}\n                        channelDisplayName={channelDisplayName}\n                    />\n                </div>\n            );\n        } else if (postRightVisible) {\n            content = (\n                <div className='post-right__container'>\n                    <FileUploadOverlay overlayType='right'/>\n                    <div className='search-bar__container channel-header alt'>{searchForm}</div>\n                    <RhsThread\n                        previousRhsState={previousRhsState}\n                        currentUser={currentUser}\n                        toggleSize={this.toggleSize}\n                        shrink={this.onShrink}\n                    />\n                </div>\n            );\n        }\n\n        if (!content) {\n            expandedClass = '';\n        }\n\n        return (\n            <div\n                className={classNames('sidebar--right', expandedClass, {'move--left': this.props.isOpen})}\n                id='sidebar-right'\n            >\n                <div\n                    onClick={this.onShrink}\n                    className='sidebar--right__bg'\n                />\n                <div className='sidebar-right-container'>\n                    {content}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\nimport {getChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {getPost} from 'mattermost-redux/selectors/entities/posts';\n\nimport PostStore from 'stores/post_store';\nimport {getPinnedPosts, getFlaggedPosts, setRhsExpanded, showPinnedPosts} from 'actions/views/rhs';\nimport {\n    getIsRhsExpanded,\n    getIsRhsOpen,\n    getRhsState,\n    getSelectedPostId,\n    getSelectedChannelId,\n    getPreviousRhsState,\n} from 'selectors/rhs';\nimport {RHSStates} from 'utils/constants.jsx';\n\nimport SidebarRight from './sidebar_right.jsx';\n\nfunction mapStateToProps(state) {\n    const rhsState = getRhsState(state);\n\n    const channelId = getSelectedChannelId(state);\n\n    let channel = null;\n    if (channelId) {\n        channel = getChannel(state, channelId);\n        if (channel == null) {\n            // the permalink view is not really tied to a particular channel but still needs it\n            const postId = PostStore.getFocusedPostId();\n            const post = getPost(state, postId);\n\n            // the post take some time before being available on page load\n            if (post != null) {\n                channel = getChannel(state, post.channel_id);\n            }\n        }\n    }\n\n    return {\n        isExpanded: getIsRhsExpanded(state),\n        isOpen: getIsRhsOpen(state),\n        channel,\n        currentUser: getCurrentUser(state),\n        postRightVisible: Boolean(getSelectedPostId(state)),\n        searchVisible: Boolean(rhsState),\n        previousRhsState: getPreviousRhsState(state),\n        isMentionSearch: rhsState === RHSStates.MENTION,\n        isFlaggedPosts: rhsState === RHSStates.FLAG,\n        isPinnedPosts: rhsState === RHSStates.PIN,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getPinnedPosts,\n            getFlaggedPosts,\n            setRhsExpanded,\n            showPinnedPosts,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidebarRight);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport {Client4} from 'mattermost-redux/client';\n\nimport Constants from 'utils/constants.jsx';\nimport {displayEntireNameForUser, localizeMessage} from 'utils/utils.jsx';\n\nimport MultiSelect from 'components/multiselect/multiselect.jsx';\nimport ProfilePicture from 'components/profile_picture.jsx';\n\nconst USERS_PER_PAGE = 50;\nconst MAX_SELECTABLE_VALUES = 20;\n\nexport default class AddUsersToTeam extends React.Component {\n    static propTypes = {\n        currentTeamName: PropTypes.string.isRequired,\n        currentTeamId: PropTypes.string.isRequired,\n        searchTerm: PropTypes.string.isRequired,\n        users: PropTypes.array.isRequired,\n        onModalDismissed: PropTypes.func,\n        actions: PropTypes.shape({\n            getProfilesNotInTeam: PropTypes.func.isRequired,\n            setModalSearchTerm: PropTypes.func.isRequired,\n            searchProfiles: PropTypes.func.isRequired,\n            addUsersToTeam: PropTypes.func.isRequired,\n            loadStatusesForProfilesList: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.searchTimeoutId = 0;\n\n        this.state = {\n            values: [],\n            show: true,\n            search: false,\n            saving: false,\n            addError: null,\n            loadingUsers: true,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getProfilesNotInTeam(this.props.currentTeamId, 0, USERS_PER_PAGE * 2).then(() => {\n            this.setUsersLoadingState(false);\n        });\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.searchTerm !== nextProps.searchTerm) {\n            clearTimeout(this.searchTimeoutId);\n\n            const searchTerm = nextProps.searchTerm;\n            if (searchTerm === '') {\n                return;\n            }\n\n            this.searchTimeoutId = setTimeout(\n                async () => {\n                    this.setUsersLoadingState(true);\n                    const {data} = await this.props.actions.searchProfiles(searchTerm, {not_in_team_id: this.props.currentTeamId});\n                    if (data) {\n                        this.props.actions.loadStatusesForProfilesList(data);\n                    }\n                    this.setUsersLoadingState(false);\n                },\n                Constants.SEARCH_TIMEOUT_MILLISECONDS\n            );\n        }\n    }\n\n    handleHide = () => {\n        this.props.actions.setModalSearchTerm('');\n        this.setState({show: false});\n    }\n\n    handleExit = () => {\n        if (this.props.onModalDismissed) {\n            this.props.onModalDismissed();\n        }\n    }\n\n    handleResponse = (err) => {\n        let addError = null;\n        if (err && err.message) {\n            addError = err.message;\n        }\n\n        this.setState({\n            saving: false,\n            addError,\n        });\n    }\n\n    handleSubmit = async (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        const userIds = this.state.values.map((v) => v.id);\n        if (userIds.length === 0) {\n            return;\n        }\n\n        this.setState({saving: true});\n\n        const {error} = await this.props.actions.addUsersToTeam(this.props.currentTeamId, userIds);\n        this.handleResponse(error);\n        if (!error) {\n            this.handleHide();\n        }\n    }\n\n    addValue = (value) => {\n        const values = Object.assign([], this.state.values);\n        const userIds = values.map((v) => v.id);\n        if (value && value.id && userIds.indexOf(value.id) === -1) {\n            values.push(value);\n        }\n\n        this.setState({values});\n    }\n\n    setUsersLoadingState = (loadingState) => {\n        this.setState({\n            loadingUsers: loadingState,\n        });\n    }\n\n    handlePageChange = (page, prevPage) => {\n        if (page > prevPage) {\n            this.setUsersLoadingState(true);\n            this.props.actions.getProfilesNotInTeam(this.props.currentTeamId, page + 1, USERS_PER_PAGE).then(() => {\n                this.setUsersLoadingState(false);\n            });\n        }\n    }\n\n    handleDelete = (values) => {\n        this.setState({values});\n    }\n\n    search = (term) => {\n        this.props.actions.setModalSearchTerm(term);\n    }\n\n    renderOption(option, isSelected, onAdd) {\n        var rowSelected = '';\n        if (isSelected) {\n            rowSelected = 'more-modal__row--selected';\n        }\n\n        return (\n            <div\n                key={option.id}\n                ref={isSelected ? 'selected' : option.id}\n                className={'more-modal__row clickable ' + rowSelected}\n                onClick={() => onAdd(option)}\n            >\n                <ProfilePicture\n                    src={Client4.getProfilePictureUrl(option.id, option.last_picture_update)}\n                    width='32'\n                    height='32'\n                />\n                <div\n                    className='more-modal__details'\n                >\n                    <div className='more-modal__name'>\n                        {displayEntireNameForUser(option)}\n                    </div>\n                    <div className='more-modal__description'>\n                        {option.email}\n                    </div>\n                </div>\n                <div className='more-modal__actions'>\n                    <div className='more-modal__actions--round'>\n                        <i\n                            className='fa fa-plus'\n                            title={localizeMessage('generic_icons.add', 'Add Icon')}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderValue(props) {\n        return props.data.username;\n    }\n\n    render() {\n        const numRemainingText = (\n            <FormattedMessage\n                id='multiselect.numPeopleRemaining'\n                defaultMessage='Use ↑↓ to browse, ↵ to select. You can add {num, number} more {num, plural, one {person} other {people}}. '\n                values={{\n                    num: MAX_SELECTABLE_VALUES - this.state.values.length,\n                }}\n            />\n        );\n\n        const buttonSubmitText = localizeMessage('multiselect.add', 'Add');\n\n        let users = [];\n        if (this.props.users) {\n            users = this.props.users.filter((user) => user.delete_at === 0);\n        }\n\n        let addError = null;\n        if (this.state.addError) {\n            addError = (<div className='has-error col-sm-12'><label className='control-label font-weight--normal'>{this.state.addError}</label></div>);\n        }\n\n        return (\n            <Modal\n                dialogClassName={'more-modal more-direct-channels'}\n                show={this.state.show}\n                onHide={this.handleHide}\n                onExited={this.handleExit}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title>\n                        <FormattedMessage\n                            id='add_users_to_team.title'\n                            defaultMessage='Add New Members To {teamName} Team'\n                            values={{\n                                teamName: (\n                                    <strong>{this.props.currentTeamName}</strong>\n                                ),\n                            }}\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {addError}\n                    <MultiSelect\n                        key='addUsersToTeamKey'\n                        options={users}\n                        optionRenderer={this.renderOption}\n                        values={this.state.values}\n                        valueKey='id'\n                        valueRenderer={this.renderValue}\n                        perPage={USERS_PER_PAGE}\n                        handlePageChange={this.handlePageChange}\n                        handleInput={this.search}\n                        handleDelete={this.handleDelete}\n                        handleAdd={this.addValue}\n                        handleSubmit={this.handleSubmit}\n                        maxValues={MAX_SELECTABLE_VALUES}\n                        numRemainingText={numRemainingText}\n                        buttonSubmitText={buttonSubmitText}\n                        saving={this.state.saving}\n                        loading={this.state.loadingUsers}\n                    />\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getProfilesNotInTeam, searchProfiles} from 'mattermost-redux/actions/users';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {searchProfilesNotInCurrentTeam, getProfilesNotInCurrentTeam} from 'mattermost-redux/selectors/entities/users';\n\nimport {loadStatusesForProfilesList} from 'actions/status_actions.jsx';\nimport {addUsersToTeam} from 'actions/team_actions.jsx';\nimport {setModalSearchTerm} from 'actions/views/search';\n\nimport AddUsersToTeam from './add_users_to_team.jsx';\n\nfunction mapStateToProps(state) {\n    const searchTerm = state.views.search.modalSearch;\n\n    let users;\n    if (searchTerm) {\n        users = searchProfilesNotInCurrentTeam(state, searchTerm, true);\n    } else {\n        users = getProfilesNotInCurrentTeam(state);\n    }\n\n    const team = getCurrentTeam(state) || {};\n\n    return {\n        currentTeamName: team.display_name,\n        currentTeamId: team.id,\n        searchTerm,\n        users,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getProfilesNotInTeam,\n            setModalSearchTerm,\n            searchProfiles,\n            addUsersToTeam,\n            loadStatusesForProfilesList,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUsersToTeam);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class LeaveTeamIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='100%'\n                    height='100%'\n                    viewBox='0 0 164 164'\n                    style={style}\n                    role='icon'\n                    aria-label={localizeMessage('navbar_dropdown.leave.icon', 'Leave Team Icon')}\n                >\n                    <path d='M26.023,164L26.023,7.035L26.022,0.32L137.658,0.32L137.658,164L124.228,164L124.228, 13.749L39.452,13.749L39.452,164L26.023, 164ZM118.876,164L118.876,18.619L58.137,32.918L58.137,149.701L118.876,164Z'/>\n                </svg>\n            </span>\n        );\n    }\n}\n\nconst style = {\n    fillRule: 'evenodd',\n    clipRule: 'evenodd',\n    strokeLinejoin: 'round',\n    strokeMiterlimit: 1.41421,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport SearchableUserList from './searchable_user_list.jsx';\n\nexport default class SearchableUserListContainer extends React.Component {\n    static propTypes = {\n        users: PropTypes.arrayOf(PropTypes.object),\n        usersPerPage: PropTypes.number,\n        total: PropTypes.number,\n        extraInfo: PropTypes.object,\n        nextPage: PropTypes.func.isRequired,\n        search: PropTypes.func.isRequired,\n        actions: PropTypes.arrayOf(PropTypes.func),\n        actionProps: PropTypes.object,\n        actionUserProps: PropTypes.object,\n        focusOnMount: PropTypes.bool,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.handleTermChange = this.handleTermChange.bind(this);\n\n        this.nextPage = this.nextPage.bind(this);\n        this.previousPage = this.previousPage.bind(this);\n        this.search = this.search.bind(this);\n\n        this.state = {\n            term: '',\n            page: 0,\n        };\n    }\n\n    handleTermChange(term) {\n        this.setState({term});\n    }\n\n    nextPage() {\n        this.setState({page: this.state.page + 1});\n\n        this.props.nextPage(this.state.page + 1);\n    }\n\n    previousPage() {\n        this.setState({page: this.state.page - 1});\n    }\n\n    search(term) {\n        this.props.search(term);\n\n        if (term !== '') {\n            this.setState({page: 0});\n        }\n    }\n\n    render() {\n        return (\n            <SearchableUserList\n                {...this.props}\n                nextPage={this.nextPage}\n                previousPage={this.previousPage}\n                search={this.search}\n                page={this.state.page}\n                term={this.state.term}\n                onTermChange={this.handleTermChange}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {removeUserFromTeam} from 'actions/team_actions.jsx';\nimport {loadMyTeamMembers, updateActive} from 'actions/user_actions.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport ConfirmModal from 'components/confirm_modal.jsx';\n\nexport default class TeamMembersDropdown extends React.Component {\n    static propTypes = {\n        user: PropTypes.object.isRequired,\n        currentUser: PropTypes.object.isRequired,\n        currentChannelId: PropTypes.string.isRequired,\n        teamMember: PropTypes.object.isRequired,\n        teamUrl: PropTypes.string.isRequired,\n        actions: PropTypes.shape({\n            getUser: PropTypes.func.isRequired,\n            getTeamStats: PropTypes.func.isRequired,\n            getChannelStats: PropTypes.func.isRequired,\n            updateTeamMemberSchemeRoles: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: null,\n            showDemoteModal: false,\n            user: null,\n            role: null,\n        };\n    }\n\n    handleMakeMember = async () => {\n        const me = this.props.currentUser;\n        if (this.props.user.id === me.id && me.roles.includes('system_admin')) {\n            this.handleDemote(this.props.user, 'team_user');\n        } else {\n            const {error} = await this.props.actions.updateTeamMemberSchemeRoles(this.props.teamMember.team_id, this.props.user.id, true, false);\n            if (error) {\n                this.setState({serverError: error.message});\n            } else {\n                this.props.actions.getUser(this.props.user.id);\n                if (this.props.user.id === me.id) {\n                    loadMyTeamMembers();\n                }\n            }\n        }\n    }\n\n    handleRemoveFromTeam = () => {\n        removeUserFromTeam(\n            this.props.teamMember.team_id,\n            this.props.user.id,\n            () => {\n                this.props.actions.getTeamStats(this.props.teamMember.team_id);\n            },\n            (err) => {\n                this.setState({serverError: err.message});\n            }\n        );\n    }\n\n    handleMakeActive = () => {\n        updateActive(this.props.user.id, true,\n            () => {\n                this.props.actions.getChannelStats(this.props.currentChannelId);\n                this.props.actions.getTeamStats(this.props.teamMember.team_id);\n            },\n            (err) => {\n                this.setState({serverError: err.message});\n            }\n        );\n    }\n\n    handleMakeNotActive = () => {\n        updateActive(this.props.user.id, false,\n            () => {\n                this.props.actions.getChannelStats(this.props.currentChannelId);\n                this.props.actions.getTeamStats(this.props.teamMember.team_id);\n            },\n            (err) => {\n                this.setState({serverError: err.message});\n            }\n        );\n    }\n\n    handleMakeAdmin = async () => {\n        const me = this.props.currentUser;\n        if (this.props.user.id === me.id && me.roles.includes('system_admin')) {\n            this.handleDemote(this.props.user, 'team_user team_admin');\n        } else {\n            const {error} = await this.props.actions.updateTeamMemberSchemeRoles(this.props.teamMember.team_id, this.props.user.id, true, true);\n            if (error) {\n                this.setState({serverError: error.message});\n            } else {\n                this.props.actions.getUser(this.props.user.id);\n            }\n        }\n    }\n\n    handleDemote = (user, role, newRole) => {\n        this.setState({\n            serverError: this.state.serverError,\n            showDemoteModal: true,\n            user,\n            role,\n            newRole,\n        });\n    }\n\n    handleDemoteCancel = () => {\n        this.setState({\n            serverError: null,\n            showDemoteModal: false,\n            user: null,\n            role: null,\n            newRole: null,\n        });\n    }\n\n    handleDemoteSubmit = async () => {\n        const {error} = await this.props.actions.updateTeamMemberSchemeRoles(this.props.teamMember.team_id, this.props.user.id, true, false);\n        if (error) {\n            this.setState({serverError: error.message});\n        } else {\n            this.props.actions.getUser(this.props.user.id);\n            browserHistory.push(this.props.teamUrl);\n        }\n    }\n\n    render() {\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div className='has-error'>\n                    <label className='has-error control-label'>{this.state.serverError}</label>\n                </div>\n            );\n        }\n\n        const teamMember = this.props.teamMember;\n        const user = this.props.user;\n        let currentRoles = (\n            <FormattedMessage\n                id='team_members_dropdown.member'\n                defaultMessage='Member'\n            />\n        );\n\n        if ((teamMember.roles.length > 0 && Utils.isAdmin(teamMember.roles)) || teamMember.scheme_admin) {\n            currentRoles = (\n                <FormattedMessage\n                    id='team_members_dropdown.teamAdmin'\n                    defaultMessage='Team Admin'\n                />\n            );\n        }\n\n        if (user.roles.length > 0 && Utils.isSystemAdmin(user.roles)) {\n            currentRoles = (\n                <FormattedMessage\n                    id='team_members_dropdown.systemAdmin'\n                    defaultMessage='System Admin'\n                />\n            );\n        }\n\n        const me = this.props.currentUser;\n        let showMakeMember = (Utils.isAdmin(teamMember.roles) || teamMember.scheme_admin) && !Utils.isSystemAdmin(user.roles);\n        let showMakeAdmin = !Utils.isAdmin(teamMember.roles) && !Utils.isSystemAdmin(user.roles) && !teamMember.scheme_admin;\n        let showMakeActive = false;\n        let showMakeNotActive = Utils.isSystemAdmin(user.roles);\n\n        if (user.delete_at > 0) {\n            currentRoles = (\n                <FormattedMessage\n                    id='team_members_dropdown.inactive'\n                    defaultMessage='Inactive'\n                />\n            );\n            showMakeMember = false;\n            showMakeAdmin = false;\n            showMakeActive = true;\n            showMakeNotActive = false;\n        }\n\n        let makeAdmin = null;\n        if (showMakeAdmin) {\n            makeAdmin = (\n                <li role='presentation'>\n                    <a\n                        role='menuitem'\n                        href='#'\n                        onClick={this.handleMakeAdmin}\n                    >\n                        <FormattedMessage\n                            id='team_members_dropdown.makeAdmin'\n                            defaultMessage='Make Team Admin'\n                        />\n                    </a>\n                </li>\n            );\n        }\n\n        let makeMember = null;\n        if (showMakeMember) {\n            makeMember = (\n                <li role='presentation'>\n                    <a\n                        role='menuitem'\n                        href='#'\n                        onClick={this.handleMakeMember}\n                    >\n                        <FormattedMessage\n                            id='team_members_dropdown.makeMember'\n                            defaultMessage='Make Member'\n                        />\n                    </a>\n                </li>\n            );\n        }\n\n        let removeFromTeam = null;\n        if (this.props.user.id !== me.id) {\n            removeFromTeam = (\n                <li role='presentation'>\n                    <a\n                        role='menuitem'\n                        href='#'\n                        onClick={this.handleRemoveFromTeam}\n                    >\n                        <FormattedMessage\n                            id='team_members_dropdown.leave_team'\n                            defaultMessage='Remove From Team'\n                        />\n                    </a>\n                </li>\n            );\n        }\n\n        const makeActive = null;\n        if (showMakeActive) {\n            // makeActive = (\n            //     <li role='presentation'>\n            //         <a\n            //             role='menuitem'\n            //             href='#'\n            //             onClick={this.handleMakeActive}\n            //         >\n            //             <FormattedMessage\n            //                 id='team_members_dropdown.makeActive'\n            //                 defaultMessage='Activate'\n            //             />\n            //         </a>\n            //     </li>\n            // );\n        }\n\n        const makeNotActive = null;\n        if (showMakeNotActive) {\n            // makeNotActive = (\n            //     <li role='presentation'>\n            //         <a\n            //             role='menuitem'\n            //             href='#'\n            //             onClick={this.handleMakeNotActive}\n            //         >\n            //             <FormattedMessage\n            //                 id='team_members_dropdown.makeInactive'\n            //                 defaultMessage='Deactivate'\n            //             />\n            //         </a>\n            //     </li>\n            // );\n        }\n\n        let makeDemoteModal = null;\n        if (this.props.user.id === me.id) {\n            const title = (\n                <FormattedMessage\n                    id='team_members_dropdown.confirmDemoteRoleTitle'\n                    defaultMessage='Confirm demotion from System Admin role'\n                />\n            );\n\n            const message = (\n                <div>\n                    <FormattedMessage\n                        id='team_members_dropdown.confirmDemoteDescription'\n                        defaultMessage=\"If you demote yourself from the System Admin role and there is not another user with System Admin privileges, you'll need to re-assign a System Admin by accessing the Mattermost server through a terminal and running the following command.\"\n                    />\n                    <br/>\n                    <br/>\n                    <FormattedMessage\n                        id='team_members_dropdown.confirmDemotionCmd'\n                        defaultMessage='platform roles system_admin {username}'\n                        vallues={{\n                            username: me.username,\n                        }}\n                    />\n                    {serverError}\n                </div>\n            );\n\n            const confirmButton = (\n                <FormattedMessage\n                    id='team_members_dropdown.confirmDemotion'\n                    defaultMessage='Confirm Demotion'\n                />\n            );\n\n            makeDemoteModal = (\n                <ConfirmModal\n                    show={this.state.showDemoteModal}\n                    title={title}\n                    message={message}\n                    confirmButtonText={confirmButton}\n                    onConfirm={this.handleDemoteSubmit}\n                    onCancel={this.handleDemoteCancel}\n                />\n            );\n        }\n\n        if (!removeFromTeam && !makeAdmin && !makeMember && !makeActive && !makeNotActive) {\n            return <div>{currentRoles}</div>;\n        }\n\n        return (\n            <div className='dropdown member-drop'>\n                <button\n                    className='dropdown-toggle theme color--link style--none'\n                    type='button'\n                    data-toggle='dropdown'\n                    aria-expanded='true'\n                >\n                    <span>{currentRoles} </span>\n                    <span\n                        className='fa fa-chevron-down'\n                        title={Utils.localizeMessage('generic_icons.dropdown', 'Dropdown Icon')}\n                    />\n                </button>\n                <ul\n                    className='dropdown-menu member-menu'\n                    role='menu'\n                >\n                    {removeFromTeam}\n                    {makeAdmin}\n                    {makeMember}\n                    {makeActive}\n                    {makeNotActive}\n                </ul>\n                {makeDemoteModal}\n                {serverError}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getChannelStats} from 'mattermost-redux/actions/channels';\nimport {getTeamStats, updateTeamMemberSchemeRoles} from 'mattermost-redux/actions/teams';\nimport {getUser} from 'mattermost-redux/actions/users';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\nimport {getCurrentChannelId} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentRelativeTeamUrl} from 'mattermost-redux/selectors/entities/teams';\n\nimport TeamMembersDropdown from './team_members_dropdown.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        currentUser: getCurrentUser(state),\n        currentChannelId: getCurrentChannelId(state),\n        teamUrl: getCurrentRelativeTeamUrl(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getUser,\n            getTeamStats,\n            getChannelStats,\n            updateTeamMemberSchemeRoles,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamMembersDropdown);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {loadProfilesAndTeamMembers, loadTeamMembersForProfilesList} from 'actions/user_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as UserAgent from 'utils/user_agent.jsx';\n\nimport SearchableUserList from 'components/searchable_user_list/searchable_user_list_container.jsx';\nimport TeamMembersDropdown from 'components/team_members_dropdown';\n\nconst USERS_PER_PAGE = 50;\n\nexport default class MemberListTeam extends React.Component {\n    static propTypes = {\n        searchTerm: PropTypes.string.isRequired,\n        users: PropTypes.arrayOf(PropTypes.object).isRequired,\n        teamMembers: PropTypes.object.isRequired,\n        currentTeamId: PropTypes.string.isRequired,\n        totalTeamMembers: PropTypes.number.isRequired,\n        canManageTeamMembers: PropTypes.bool,\n        actions: PropTypes.shape({\n            searchProfiles: PropTypes.func.isRequired,\n            getTeamStats: PropTypes.func.isRequired,\n            setModalSearchTerm: PropTypes.func.isRequired,\n            loadStatusesForProfilesList: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.searchTimeoutId = 0;\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        loadProfilesAndTeamMembers(0, Constants.PROFILE_CHUNK_SIZE, this.props.currentTeamId, this.loadComplete);\n        this.props.actions.getTeamStats(this.props.currentTeamId);\n    }\n\n    componentWillUnmount() {\n        this.props.actions.setModalSearchTerm('');\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.searchTerm !== nextProps.searchTerm) {\n            clearTimeout(this.searchTimeoutId);\n\n            const searchTerm = nextProps.searchTerm;\n            if (searchTerm === '') {\n                this.loadComplete();\n                this.searchTimeoutId = '';\n                return;\n            }\n\n            const searchTimeoutId = setTimeout(\n                async () => {\n                    const {data} = await this.props.actions.searchProfiles(searchTerm, {team_id: nextProps.currentTeamId});\n\n                    if (searchTimeoutId !== this.searchTimeoutId) {\n                        return;\n                    }\n\n                    this.setState({loading: true});\n\n                    this.props.actions.loadStatusesForProfilesList(data);\n                    loadTeamMembersForProfilesList(data, nextProps.currentTeamId, this.loadComplete);\n                },\n                Constants.SEARCH_TIMEOUT_MILLISECONDS\n            );\n\n            this.searchTimeoutId = searchTimeoutId;\n        }\n    }\n\n    loadComplete = () => {\n        this.setState({loading: false});\n    }\n\n    nextPage(page) {\n        loadProfilesAndTeamMembers(page + 1, USERS_PER_PAGE);\n    }\n\n    search = (term) => {\n        this.props.actions.setModalSearchTerm(term);\n    }\n\n    render() {\n        let teamMembersDropdown = null;\n        if (this.props.canManageTeamMembers) {\n            teamMembersDropdown = [TeamMembersDropdown];\n        }\n\n        const teamMembers = this.props.teamMembers;\n        const users = this.props.users;\n        const actionUserProps = {};\n\n        let usersToDisplay;\n        if (this.state.loading) {\n            usersToDisplay = null;\n        } else {\n            usersToDisplay = [];\n\n            for (let i = 0; i < users.length; i++) {\n                const user = users[i];\n\n                if (teamMembers[user.id] && user.delete_at === 0) {\n                    usersToDisplay.push(user);\n                    actionUserProps[user.id] = {\n                        teamMember: teamMembers[user.id],\n                    };\n                }\n            }\n        }\n\n        return (\n            <SearchableUserList\n                users={usersToDisplay}\n                usersPerPage={USERS_PER_PAGE}\n                total={this.props.totalTeamMembers}\n                nextPage={this.nextPage}\n                search={this.search}\n                actions={teamMembersDropdown}\n                actionUserProps={actionUserProps}\n                focusOnMount={!UserAgent.isMobile()}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getTeamStats} from 'mattermost-redux/actions/teams';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {getMembersInCurrentTeam, getCurrentTeamStats} from 'mattermost-redux/selectors/entities/teams';\nimport {getProfilesInCurrentTeam, searchProfilesInCurrentTeam} from 'mattermost-redux/selectors/entities/users';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {searchProfiles} from 'mattermost-redux/actions/users';\n\nimport {loadStatusesForProfilesList} from 'actions/status_actions.jsx';\nimport {setModalSearchTerm} from 'actions/views/search';\n\nimport MemberListTeam from './member_list_team.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const canManageTeamMembers = haveITeamPermission(state, {team: ownProps.teamId, permission: Permissions.MANAGE_TEAM_ROLES});\n\n    const searchTerm = state.views.search.modalSearch;\n\n    let users;\n    if (searchTerm) {\n        users = searchProfilesInCurrentTeam(state, searchTerm);\n    } else {\n        users = getProfilesInCurrentTeam(state);\n    }\n\n    const stats = getCurrentTeamStats(state) || {active_member_count: 0};\n\n    return {\n        searchTerm,\n        users,\n        teamMembers: getMembersInCurrentTeam(state) || {},\n        currentTeamId: state.entities.teams.currentTeamId,\n        totalTeamMembers: stats.active_member_count,\n        canManageTeamMembers,\n        loadStatusesForProfilesList,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            searchProfiles,\n            getTeamStats,\n            setModalSearchTerm,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MemberListTeam);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport MemberListTeam from 'components/member_list_team';\n\nexport default class TeamMembersModal extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Current team object\n         */\n        currentTeam: PropTypes.object.isRequired,\n\n        /**\n         * Function called when modal is dismissed\n         */\n        onHide: PropTypes.func.isRequired,\n\n        /**\n         * Function called when modal is loaded\n         */\n        onLoad: PropTypes.func,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.onLoad) {\n            this.props.onLoad();\n        }\n    }\n\n    onHide = () => {\n        this.setState({show: false});\n    }\n\n    render() {\n        let teamDisplayName = '';\n        if (this.props.currentTeam) {\n            teamDisplayName = this.props.currentTeam.display_name;\n        }\n\n        return (\n            <Modal\n                dialogClassName='more-modal'\n                show={this.state.show}\n                onHide={this.onHide}\n                onExited={this.props.onHide}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title>\n                        <FormattedMessage\n                            id='team_member_modal.members'\n                            defaultMessage='{team} Members'\n                            values={{\n                                team: teamDisplayName,\n                            }}\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <MemberListTeam\n                        teamId={this.props.currentTeam.id}\n                    />\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport TeamMembersModal from './team_members_modal.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        currentTeam: getCurrentTeam(state),\n    };\n}\n\nexport default connect(mapStateToProps)(TeamMembersModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage, FormattedDate} from 'react-intl';\n\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport SettingItemMax from 'components/setting_item_max.jsx';\nimport SettingItemMin from 'components/setting_item_min.jsx';\nimport SettingPicture from 'components/setting_picture.jsx';\n\nconst ACCEPTED_TEAM_IMAGE_TYPES = ['image/jpeg', 'image/png', 'image/bmp'];\n\nexport default class GeneralTab extends React.Component {\n    static propTypes = {\n        updateSection: PropTypes.func.isRequired,\n        team: PropTypes.object.isRequired,\n        activeSection: PropTypes.string.isRequired,\n        closeModal: PropTypes.func.isRequired,\n        collapseModal: PropTypes.func.isRequired,\n        maxFileSize: PropTypes.number.isRequired,\n        actions: PropTypes.shape({\n            patchTeam: PropTypes.func.isRequired,\n            removeTeamIcon: PropTypes.func.isRequired,\n            setTeamIcon: PropTypes.func.isRequired,\n        }).isRequired,\n        canInviteTeamMembers: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.updateSection = this.updateSection.bind(this);\n        this.handleNameSubmit = this.handleNameSubmit.bind(this);\n        this.handleAllowedDomainsSubmit = this.handleAllowedDomainsSubmit.bind(this);\n        this.handleInviteIdSubmit = this.handleInviteIdSubmit.bind(this);\n        this.handleOpenInviteSubmit = this.handleOpenInviteSubmit.bind(this);\n        this.handleDescriptionSubmit = this.handleDescriptionSubmit.bind(this);\n        this.handleTeamIconSubmit = this.handleTeamIconSubmit.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n\n        this.updateName = this.updateName.bind(this);\n        this.updateDescription = this.updateDescription.bind(this);\n        this.updateTeamIcon = this.updateTeamIcon.bind(this);\n        this.updateAllowedDomains = this.updateAllowedDomains.bind(this);\n        this.updateInviteId = this.updateInviteId.bind(this);\n        this.handleOpenInviteRadio = this.handleOpenInviteRadio.bind(this);\n        this.handleGenerateInviteId = this.handleGenerateInviteId.bind(this);\n\n        this.state = this.setupInitialState(props);\n    }\n\n    updateSection(section) {\n        if ($('.section-max').length) {\n            $('.settings-modal .modal-body').scrollTop(0).perfectScrollbar('update');\n        }\n        this.setState(this.setupInitialState(this.props));\n        this.props.updateSection(section);\n    }\n\n    setupInitialState(props) {\n        const team = props.team;\n\n        return {\n            name: team.display_name,\n            invite_id: team.invite_id,\n            allow_open_invite: team.allow_open_invite,\n            description: team.description,\n            allowed_domains: team.allowed_domains,\n            serverError: '',\n            clientError: '',\n            teamIconFile: null,\n            loadingIcon: false,\n            submitActive: false,\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        this.setState({\n            name: nextProps.team.display_name,\n            description: nextProps.team.description,\n            allowed_domains: nextProps.team.allowed_domains,\n            invite_id: nextProps.team.invite_id,\n            allow_open_invite: nextProps.team.allow_open_invite,\n        });\n    }\n\n    handleGenerateInviteId(e) {\n        e.preventDefault();\n\n        var newId = '';\n        for (var i = 0; i < 32; i++) {\n            newId += Math.floor(Math.random() * 16).toString(16);\n        }\n\n        this.setState({invite_id: newId});\n    }\n\n    handleOpenInviteRadio(openInvite) {\n        this.setState({allow_open_invite: openInvite});\n    }\n\n    handleAllowedDomainsSubmit = async () => {\n        var state = {serverError: '', clientError: ''};\n\n        var data = {...this.props.team};\n        data.allowed_domains = this.state.allowed_domains;\n\n        const {error} = await this.props.actions.patchTeam(data);\n\n        if (error) {\n            state.serverError = error.message;\n            this.setState(state);\n        } else {\n            this.updateSection('');\n        }\n    }\n\n    handleOpenInviteSubmit = async () => {\n        var state = {serverError: '', clientError: ''};\n\n        var data = {...this.props.team};\n        data.allow_open_invite = this.state.allow_open_invite;\n\n        const {error} = await this.props.actions.patchTeam(data);\n\n        if (error) {\n            state.serverError = error.message;\n            this.setState(state);\n        } else {\n            this.updateSection('');\n        }\n    }\n\n    handleNameSubmit = async () => {\n        var state = {serverError: '', clientError: ''};\n        let valid = true;\n\n        const name = this.state.name.trim();\n\n        if (!name) {\n            state.clientError = Utils.localizeMessage('general_tab.required', 'This field is required');\n            valid = false;\n        } else if (name.length < Constants.MIN_TEAMNAME_LENGTH) {\n            state.clientError = (\n                <FormattedMessage\n                    id='general_tab.teamNameRestrictions'\n                    defaultMessage='Team Name must be {min} or more characters up to a maximum of {max}. You can add a longer team description.'\n                    values={{\n                        min: Constants.MIN_TEAMNAME_LENGTH,\n                        max: Constants.MAX_TEAMNAME_LENGTH,\n                    }}\n                />\n            );\n\n            valid = false;\n        } else {\n            state.clientError = '';\n        }\n\n        this.setState(state);\n\n        if (!valid) {\n            return;\n        }\n\n        var data = {...this.props.team};\n        data.display_name = this.state.name;\n\n        const {error} = await this.props.actions.patchTeam(data);\n\n        if (error) {\n            state.serverError = error.message;\n            this.setState(state);\n        } else {\n            this.updateSection('');\n        }\n    }\n\n    handleInviteIdSubmit = async () => {\n        var state = {serverError: '', clientError: ''};\n        let valid = true;\n\n        const inviteId = this.state.invite_id.trim();\n        if (inviteId) {\n            state.clientError = '';\n        } else {\n            state.clientError = Utils.localizeMessage('general_tab.required', 'This field is required');\n            valid = false;\n        }\n\n        this.setState(state);\n\n        if (!valid) {\n            return;\n        }\n\n        var data = {...this.props.team};\n        data.invite_id = this.state.invite_id;\n\n        const {error} = await this.props.actions.patchTeam(data);\n\n        if (error) {\n            state.serverError = error.message;\n            this.setState(state);\n        } else {\n            this.updateSection('');\n        }\n    }\n\n    handleClose() {\n        this.updateSection('');\n    }\n\n    handleDescriptionSubmit = async () => {\n        var state = {serverError: '', clientError: ''};\n        let valid = true;\n\n        const description = this.state.description.trim();\n        if (description === this.props.team.description) {\n            state.clientError = Utils.localizeMessage('general_tab.chooseDescription', 'Please choose a new description for your team');\n            valid = false;\n        } else {\n            state.clientError = '';\n        }\n\n        this.setState(state);\n\n        if (!valid) {\n            return;\n        }\n\n        var data = {...this.props.team};\n        data.description = this.state.description;\n\n        const {error} = await this.props.actions.patchTeam(data);\n\n        if (error) {\n            state.serverError = error.message;\n            this.setState(state);\n        } else {\n            this.updateSection('');\n        }\n    }\n\n    handleTeamIconSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!this.state.teamIconFile) {\n            return;\n        }\n\n        if (!this.state.submitActive) {\n            return;\n        }\n\n        this.setState({\n            loadingIcon: true,\n            clientError: '',\n            serverError: '',\n        });\n\n        const {error} = await this.props.actions.setTeamIcon(this.props.team.id, this.state.teamIconFile);\n\n        if (error) {\n            this.setState({\n                loadingIcon: false,\n                serverError: error.message,\n            });\n        } else {\n            this.setState({\n                loadingIcon: false,\n                submitActive: false,\n            });\n            this.updateSection('');\n        }\n    }\n\n    handleTeamIconRemove = async (e) => {\n        e.preventDefault();\n\n        this.setState({\n            loadingIcon: true,\n            clientError: '',\n            serverError: '',\n        });\n\n        const {error} = await this.props.actions.removeTeamIcon(this.props.team.id);\n\n        if (error) {\n            this.setState({\n                loadingIcon: false,\n                serverError: error.message,\n            });\n        } else {\n            this.setState({\n                loadingIcon: false,\n                submitActive: false,\n            });\n            this.updateSection('');\n        }\n    }\n\n    componentDidMount() {\n        $('#team_settings').on('hidden.bs.modal', this.handleClose);\n    }\n\n    componentWillUnmount() {\n        $('#team_settings').off('hidden.bs.modal', this.handleClose);\n    }\n\n    handleUpdateSection = (section) => {\n        this.updateSection(section);\n    }\n\n    updateName(e) {\n        this.setState({name: e.target.value});\n    }\n\n    updateDescription(e) {\n        this.setState({description: e.target.value});\n    }\n\n    updateTeamIcon(e) {\n        if (e && e.target && e.target.files && e.target.files[0]) {\n            const file = e.target.files[0];\n\n            if (!ACCEPTED_TEAM_IMAGE_TYPES.includes(file.type)) {\n                this.setState({\n                    clientError: Utils.localizeMessage('general_tab.teamIconInvalidFileType', 'Only BMP, JPG or PNG images may be used for team icons'),\n                });\n            } else if (file.size > this.props.maxFileSize) {\n                this.setState({\n                    clientError: Utils.localizeMessage('general_tab.teamIconTooLarge', 'Unable to upload team icon. File is too large.'),\n                });\n            } else {\n                this.setState({\n                    teamIconFile: e.target.files[0],\n                    clientError: '',\n                    submitActive: true,\n                });\n            }\n        } else {\n            this.setState({\n                teamIconFile: null,\n                clientError: Utils.localizeMessage('general_tab.teamIconError', 'An error occured while selecting the image.'),\n            });\n        }\n    }\n\n    updateAllowedDomains(e) {\n        this.setState({allowed_domains: e.target.value});\n    }\n\n    updateInviteId(e) {\n        this.setState({invite_id: e.target.value});\n    }\n\n    render() {\n        const team = this.props.team;\n\n        let clientError = null;\n        let serverError = null;\n\n        if (this.state.clientError) {\n            clientError = this.state.clientError;\n        }\n        if (this.state.serverError) {\n            serverError = this.state.serverError;\n        }\n\n        let openInviteSection;\n        if (this.props.activeSection === 'open_invite') {\n            const inputs = [\n                <div key='userOpenInviteOptions'>\n                    <div className='radio'>\n                        <label>\n                            <input\n                                id='teamOpenInvite'\n                                name='userOpenInviteOptions'\n                                type='radio'\n                                defaultChecked={this.state.allow_open_invite}\n                                onChange={this.handleOpenInviteRadio.bind(this, true)}\n                            />\n                            <FormattedMessage\n                                id='general_tab.yes'\n                                defaultMessage='Yes'\n                            />\n                        </label>\n                        <br/>\n                    </div>\n                    <div className='radio'>\n                        <label>\n                            <input\n                                id='teamOpenInviteNo'\n                                name='userOpenInviteOptions'\n                                type='radio'\n                                defaultChecked={!this.state.allow_open_invite}\n                                onChange={this.handleOpenInviteRadio.bind(this, false)}\n                            />\n                            <FormattedMessage\n                                id='general_tab.no'\n                                defaultMessage='No'\n                            />\n                        </label>\n                        <br/>\n                    </div>\n                    <div>\n                        <br/>\n                        <FormattedMessage\n                            id='general_tab.openInviteDesc'\n                            defaultMessage='When allowed, a link to this team will be included on the landing page allowing anyone with an account to join this team.'\n                        />\n                    </div>\n                </div>,\n            ];\n\n            openInviteSection = (\n                <SettingItemMax\n                    title={Utils.localizeMessage('general_tab.openInviteTitle', 'Allow any user with an account on this server to join this team')}\n                    inputs={inputs}\n                    submit={this.handleOpenInviteSubmit}\n                    serverError={serverError}\n                    updateSection={this.handleUpdateSection}\n                />\n            );\n        } else {\n            let describe = '';\n            if (this.state.allow_open_invite === true) {\n                describe = Utils.localizeMessage('general_tab.yes', 'Yes');\n            } else {\n                describe = Utils.localizeMessage('general_tab.no', 'No');\n            }\n\n            openInviteSection = (\n                <SettingItemMin\n                    title={Utils.localizeMessage('general_tab.openInviteTitle', 'Allow any user with an account on this server to join this team')}\n                    describe={describe}\n                    updateSection={this.handleUpdateSection}\n                    section={'open_invite'}\n                />\n            );\n        }\n\n        let inviteSection;\n\n        if (this.props.activeSection === 'invite_id' && this.props.canInviteTeamMembers) {\n            const inputs = [];\n\n            inputs.push(\n                <div key='teamInviteSetting'>\n                    <div className='row'>\n                        <label className='col-sm-5 control-label visible-xs-block'/>\n                        <div className='col-sm-12'>\n                            <input\n                                id='teamInviteId'\n                                autoFocus={true}\n                                className='form-control'\n                                type='text'\n                                onChange={this.updateInviteId}\n                                value={this.state.invite_id}\n                                maxLength='32'\n                                onFocus={Utils.moveCursorToEnd}\n                            />\n                            <div className='padding-top x2'>\n                                <button\n                                    id='teamInviteIdRegenerate'\n                                    className='color--link style--none'\n                                    onClick={this.handleGenerateInviteId}\n                                >\n                                    <FormattedMessage\n                                        id='general_tab.regenerate'\n                                        defaultMessage='Regenerate'\n                                    />\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='setting-list__hint'>\n                        <FormattedMessage\n                            id='general_tab.codeLongDesc'\n                            defaultMessage='The Invite Code is used as part of the URL in the team invitation link created by {getTeamInviteLink} in the main menu. Regenerating creates a new team invitation link and invalidates the previous link.'\n                            values={{\n                                getTeamInviteLink: (\n                                    <strong>\n                                        <FormattedMessage\n                                            id='general_tab.getTeamInviteLink'\n                                            defaultMessage='Get Team Invite Link'\n                                        />\n                                    </strong>\n                                ),\n                            }}\n                        />\n                    </div>\n                </div>\n            );\n\n            inviteSection = (\n                <SettingItemMax\n                    title={Utils.localizeMessage('general_tab.codeTitle', 'Invite Code')}\n                    inputs={inputs}\n                    submit={this.handleInviteIdSubmit}\n                    serverError={serverError}\n                    clientError={clientError}\n                    updateSection={this.handleUpdateSection}\n                />\n            );\n        } else if (this.props.canInviteTeamMembers) {\n            inviteSection = (\n                <SettingItemMin\n                    title={Utils.localizeMessage('general_tab.codeTitle', 'Invite Code')}\n                    describe={Utils.localizeMessage('general_tab.codeDesc', \"Click 'Edit' to regenerate Invite Code.\")}\n                    updateSection={this.handleUpdateSection}\n                    section={'invite_id'}\n                />\n            );\n        }\n\n        let nameSection;\n\n        if (this.props.activeSection === 'name') {\n            const inputs = [];\n\n            let teamNameLabel = (\n                <FormattedMessage\n                    id='general_tab.teamName'\n                    defaultMessage='Team Name'\n                />\n            );\n            if (Utils.isMobile()) {\n                teamNameLabel = '';\n            }\n\n            inputs.push(\n                <div\n                    key='teamNameSetting'\n                    className='form-group'\n                >\n                    <label className='col-sm-5 control-label'>{teamNameLabel}</label>\n                    <div className='col-sm-7'>\n                        <input\n                            id='teamName'\n                            autoFocus={true}\n                            className='form-control'\n                            type='text'\n                            maxLength={Constants.MAX_TEAMNAME_LENGTH.toString()}\n                            onChange={this.updateName}\n                            value={this.state.name}\n                            onFocus={Utils.moveCursorToEnd}\n                        />\n                    </div>\n                </div>\n            );\n\n            const nameExtraInfo = <span>{Utils.localizeMessage('general_tab.teamNameInfo', 'Set the name of the team as it appears on your sign-in screen and at the top of the left-hand sidebar.')}</span>;\n\n            nameSection = (\n                <SettingItemMax\n                    title={Utils.localizeMessage('general_tab.teamName', 'Team Name')}\n                    inputs={inputs}\n                    submit={this.handleNameSubmit}\n                    serverError={serverError}\n                    clientError={clientError}\n                    updateSection={this.handleUpdateSection}\n                    extraInfo={nameExtraInfo}\n                />\n            );\n        } else {\n            var describe = this.state.name;\n\n            nameSection = (\n                <SettingItemMin\n                    title={Utils.localizeMessage('general_tab.teamName', 'Team Name')}\n                    describe={describe}\n                    updateSection={this.handleUpdateSection}\n                    section={'name'}\n                />\n            );\n        }\n\n        let descriptionSection;\n\n        if (this.props.activeSection === 'description') {\n            const inputs = [];\n\n            let teamDescriptionLabel = (\n                <FormattedMessage\n                    id='general_tab.teamDescription'\n                    defaultMessage='Team Description'\n                />\n            );\n            if (Utils.isMobile()) {\n                teamDescriptionLabel = '';\n            }\n\n            inputs.push(\n                <div\n                    key='teamDescriptionSetting'\n                    className='form-group'\n                >\n                    <label className='col-sm-5 control-label'>{teamDescriptionLabel}</label>\n                    <div className='col-sm-7'>\n                        <input\n                            id='teamDescription'\n                            autoFocus={true}\n                            className='form-control'\n                            type='text'\n                            maxLength={Constants.MAX_TEAMDESCRIPTION_LENGTH.toString()}\n                            onChange={this.updateDescription}\n                            value={this.state.description}\n                            onFocus={Utils.moveCursorToEnd}\n                        />\n                    </div>\n                </div>\n            );\n\n            const descriptionExtraInfo = <span>{Utils.localizeMessage('general_tab.teamDescriptionInfo', 'Team description provides additional information to help users select the right team. Maximum of 50 characters.')}</span>;\n\n            descriptionSection = (\n                <SettingItemMax\n                    title={Utils.localizeMessage('general_tab.teamDescription', 'Team Description')}\n                    inputs={inputs}\n                    submit={this.handleDescriptionSubmit}\n                    serverError={serverError}\n                    clientError={clientError}\n                    updateSection={this.handleUpdateSection}\n                    extraInfo={descriptionExtraInfo}\n                />\n            );\n        } else {\n            let describemsg = '';\n            if (this.state.description) {\n                describemsg = this.state.description;\n            } else {\n                describemsg = (\n                    <FormattedMessage\n                        id='general_tab.emptyDescription'\n                        defaultMessage=\"Click 'Edit' to add a team description.\"\n                    />\n                );\n            }\n            descriptionSection = (\n                <SettingItemMin\n                    title={Utils.localizeMessage('general_tab.teamDescription', 'Team Description')}\n                    describe={describemsg}\n                    updateSection={this.handleUpdateSection}\n                    section={'description'}\n                />\n            );\n        }\n\n        let teamIconSection;\n        if (this.props.activeSection === 'team_icon') {\n            teamIconSection = (\n                <SettingPicture\n                    imageContext='team'\n                    title={Utils.localizeMessage('general_tab.teamIcon', 'Team Icon')}\n                    src={Utils.imageURLForTeam(team)}\n                    file={this.state.teamIconFile}\n                    serverError={this.state.serverError}\n                    clientError={this.state.clientError}\n                    loadingPicture={this.state.loadingIcon}\n                    submitActive={this.state.submitActive}\n                    updateSection={(e) => {\n                        this.updateSection('');\n                        e.preventDefault();\n                    }}\n                    onFileChange={this.updateTeamIcon}\n                    onSubmit={this.handleTeamIconSubmit}\n                    onRemove={this.handleTeamIconRemove}\n                />\n            );\n        } else {\n            let minMessage;\n\n            if (team.last_team_icon_update) {\n                minMessage = (\n                    <FormattedMessage\n                        id='general_tab.teamIconLastUpdated'\n                        defaultMessage='Image last updated {date}'\n                        values={{\n                            date: (\n                                <FormattedDate\n                                    value={new Date(team.last_team_icon_update)}\n                                    day='2-digit'\n                                    month='short'\n                                    year='numeric'\n                                />\n                            ),\n                        }}\n                    />\n                );\n            } else {\n                minMessage = Utils.isMobile() ?\n                    Utils.localizeMessage('general_tab.teamIconEditHintMobile', 'Click to upload an image.') :\n                    Utils.localizeMessage('general_tab.teamIconEditHint', 'Click \\'Edit\\' to upload an image.');\n            }\n\n            teamIconSection = (\n                <SettingItemMin\n                    title={Utils.localizeMessage('general_tab.teamIcon', 'Team Icon')}\n                    describe={minMessage}\n                    section={'team_icon'}\n                    updateSection={this.handleUpdateSection}\n                />\n            );\n        }\n\n        let allowedDomainsSection;\n\n        if (this.props.activeSection === 'allowed_domains') {\n            const inputs = [];\n\n            inputs.push(\n                <div\n                    key='allowedDomainsSetting'\n                    className='form-group'\n                >\n                    <div className='col-sm-12'>\n                        <input\n                            id='allowedDomains'\n                            autoFocus={true}\n                            className='form-control'\n                            type='text'\n                            onChange={this.updateAllowedDomains}\n                            value={this.state.allowed_domains}\n                            onFocus={Utils.moveCursorToEnd}\n                            placeholder={Utils.localizeMessage('general_tab.AllowedDomainsExample', 'corp.mattermost.com, mattermost.org')}\n                        />\n                    </div>\n                </div>\n            );\n\n            const allowedDomainsInfo = <span>{Utils.localizeMessage('general_tab.AllowedDomainsInfo', 'Users can only join the team if their email matches a specific domain (e.g. \"mattermost.org\") or list of comma-separated domains (e.g. \"corp.mattermost.com, mattermost.org\").')}</span>;\n\n            allowedDomainsSection = (\n                <SettingItemMax\n                    title={Utils.localizeMessage('general_tab.allowedDomains', 'Allow only users with a specific email domain to join this team')}\n                    inputs={inputs}\n                    submit={this.handleAllowedDomainsSubmit}\n                    serverError={serverError}\n                    clientError={clientError}\n                    updateSection={this.handleUpdateSection}\n                    extraInfo={allowedDomainsInfo}\n                />\n            );\n        } else {\n            let describemsg = '';\n            if (this.state.allowed_domains) {\n                describemsg = this.state.allowed_domains;\n            } else {\n                describemsg = (\n                    <FormattedMessage\n                        id='general_tab.allowedDomainsEdit'\n                        defaultMessage=\"Click 'Edit' to add an email domain whitelist.\"\n                    />\n                );\n            }\n            allowedDomainsSection = (\n                <SettingItemMin\n                    title={Utils.localizeMessage('general_tab.allowedDomains', 'allowedDomains')}\n                    describe={describemsg}\n                    updateSection={this.handleUpdateSection}\n                    section={'allowed_domains'}\n                />\n            );\n        }\n\n        return (\n            <div>\n                <div className='modal-header'>\n                    <button\n                        id='closeButton'\n                        type='button'\n                        className='close'\n                        data-dismiss='modal'\n                        aria-label='Close'\n                        onClick={this.props.closeModal}\n                    >\n                        <span aria-hidden='true'>{'×'}</span>\n                    </button>\n                    <h4\n                        className='modal-title'\n                        ref='title'\n                    >\n                        <div className='modal-back'>\n                            <i\n                                className='fa fa-angle-left'\n                                title={Utils.localizeMessage('generic_icons.back', 'Back Icon')}\n                                onClick={this.props.collapseModal}\n                            />\n                        </div>\n                        <FormattedMessage\n                            id='general_tab.title'\n                            defaultMessage='General Settings'\n                        />\n                    </h4>\n                </div>\n                <div\n                    ref='wrapper'\n                    className='user-settings'\n                >\n                    <h3 className='tab-header'>\n                        <FormattedMessage\n                            id='general_tab.title'\n                            defaultMessage='General Settings'\n                        />\n                    </h3>\n                    <div className='divider-dark first'/>\n                    {nameSection}\n                    <div className='divider-light'/>\n                    {descriptionSection}\n                    <div className='divider-light'/>\n                    {teamIconSection}\n                    <div className='divider-light'/>\n                    {allowedDomainsSection}\n                    <div className='divider-light'/>\n                    {openInviteSection}\n                    <div className='divider-light'/>\n                    {inviteSection}\n                    <div className='divider-dark'/>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {patchTeam, removeTeamIcon, setTeamIcon} from 'mattermost-redux/actions/teams';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\n\nimport TeamGeneralTab from './team_general_tab.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const maxFileSize = parseInt(config.MaxFileSize, 10);\n\n    const canInviteTeamMembers = haveITeamPermission(state, {team: ownProps.team.id, permission: Permissions.INVITE_USER});\n\n    return {\n        maxFileSize,\n        canInviteTeamMembers,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            patchTeam,\n            removeTeamIcon,\n            setTeamIcon,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamGeneralTab);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class SettingsUpload extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.doFileSelect = this.doFileSelect.bind(this);\n        this.doSubmit = this.doSubmit.bind(this);\n\n        this.state = {\n            clientError: this.props.clientError,\n            serverError: this.props.serverError,\n            filename: '',\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps() { // eslint-disable-line camelcase\n        this.setState({\n            clientError: this.props.clientError,\n            serverError: this.props.serverError,\n        });\n    }\n\n    doFileSelect(e) {\n        e.preventDefault();\n        var filename = $(e.target).val();\n        if (filename.substring(3, 11) === 'fakepath') {\n            filename = filename.substring(12);\n        }\n        this.setState({\n            clientError: '',\n            serverError: '',\n            filename,\n        });\n    }\n\n    doSubmit(e) {\n        e.preventDefault();\n        var inputnode = ReactDOM.findDOMNode(this.refs.uploadinput);\n        if (inputnode.files && inputnode.files[0]) {\n            this.props.submit(inputnode.files[0]);\n        } else {\n            this.setState({clientError: true});\n        }\n    }\n\n    render() {\n        let clientError = null;\n        if (this.state.clientError) {\n            clientError = (\n                <div className='file-status'>\n                    <FormattedMessage\n                        id='setting_upload.noFile'\n                        defaultMessage='No file selected.'\n                    />\n                </div>\n            );\n        }\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div className='file-status'>{this.state.serverError}</div>\n            );\n        }\n        let fileNameText = null;\n        let submitButtonClass = 'btn btn-sm btn-primary disabled';\n        if (this.state.filename) {\n            fileNameText = (\n                <div className='file-status file-name'>{this.state.filename}</div>\n            );\n            submitButtonClass = 'btn btn-sm btn-primary';\n        }\n\n        return (\n            <ul className='section-max'>\n                <li className='col-sm-12 section-title'>{this.props.title}</li>\n                <li className='col-sm-offset-3 col-sm-9'>{this.props.helpText}</li>\n                <li className='col-sm-offset-3 col-sm-9'>\n                    <ul className='setting-list'>\n                        <li className='setting-list-item'>\n                            <span className='btn btn-sm btn-primary btn-file sel-btn'>\n                                <FormattedMessage\n                                    id='setting_upload.select'\n                                    defaultMessage='Select file'\n                                />\n                                <input\n                                    ref='uploadinput'\n                                    accept={this.props.fileTypesAccepted}\n                                    type='file'\n                                    onChange={this.doFileSelect}\n                                />\n                            </span>\n                            <a\n                                className={submitButtonClass}\n                                onClick={this.doSubmit}\n                            >\n                                <FormattedMessage\n                                    id='setting_upload.import'\n                                    defaultMessage='Import'\n                                />\n                            </a>\n                            {fileNameText}\n                            {serverError}\n                            {clientError}\n                        </li>\n                    </ul>\n                </li>\n            </ul>\n        );\n    }\n}\n\nSettingsUpload.propTypes = {\n    title: PropTypes.string.isRequired,\n    submit: PropTypes.func.isRequired,\n    fileTypesAccepted: PropTypes.string.isRequired,\n    clientError: PropTypes.string,\n    serverError: PropTypes.string,\n    helpText: PropTypes.object,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {defineMessages, FormattedMessage, injectIntl, intlShape} from 'react-intl';\n\nimport * as utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport SettingUpload from './setting_upload.jsx';\n\nconst holders = defineMessages({\n    importSlack: {\n        id: t('team_import_tab.importSlack'),\n        defaultMessage: 'Import from Slack (Beta)',\n    },\n});\n\nclass TeamImportTab extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onImportFailure = this.onImportFailure.bind(this);\n        this.onImportSuccess = this.onImportSuccess.bind(this);\n        this.doImportSlack = this.doImportSlack.bind(this);\n\n        this.state = {\n            status: 'ready',\n            link: '',\n        };\n    }\n\n    onImportFailure() {\n        this.setState({status: 'fail'});\n    }\n\n    onImportSuccess(data) {\n        this.setState({status: 'done', link: 'data:application/octet-stream;charset=utf-8,' + encodeURIComponent(atob(data.results))});\n    }\n\n    doImportSlack(file) {\n        this.setState({status: 'in-progress', link: ''});\n        utils.importSlack(file, this.onImportSuccess, this.onImportFailure);\n    }\n\n    render() {\n        const {formatMessage} = this.props.intl;\n        const uploadDocsLink = (\n            <a\n                href='https://docs.mattermost.com/administration/migrating.html#migrating-from-slack'\n                target='_blank'\n                rel='noopener noreferrer'\n            >\n                <FormattedMessage\n                    id='team_import_tab.importHelpDocsLink'\n                    defaultMessage='documentation'\n                />\n            </a>\n        );\n\n        const uploadExportInstructions = (\n            <strong>\n                <FormattedMessage\n                    id='team_import_tab.importHelpExportInstructions'\n                    defaultMessage='Slack > Administration > Workspace settings > Import/Export Data > Export > Start Export'\n                />\n            </strong>\n        );\n\n        const uploadExporterLink = (\n            <a\n                href='https://github.com/grundleborg/slack-advanced-exporter'\n                target='_blank'\n                rel='noopener noreferrer'\n            >\n                <FormattedMessage\n                    id='team_import_tab.importHelpExporterLink'\n                    defaultMessage='Slack Advanced Exporter'\n                />\n            </a>\n        );\n\n        const importCliLink = (\n            <a\n                href='https://docs.mattermost.com/administration/migrating.html#migrating-from-slack-using-the-mattermost-cli'\n                target='_blank'\n                rel='noopener noreferrer'\n            >\n                <FormattedMessage\n                    id='team_import_tab.importHelpCliDocsLink'\n                    defaultMessage='CLI tool for Slack import'\n                />\n            </a>\n        );\n\n        const uploadHelpText = (\n            <div>\n                <p>\n                    <FormattedMessage\n                        id='team_import_tab.importHelpLine1'\n                        defaultMessage=\"Slack import to Mattermost supports importing of messages in your Slack team's public channels.\"\n                    />\n                </p>\n                <p>\n                    <FormattedMessage\n                        id='team_import_tab.importHelpLine2'\n                        defaultMessage='To import a team from Slack, go to {exportInstructions}. See {uploadDocsLink} to learn more.'\n                        values={{\n                            exportInstructions: uploadExportInstructions,\n                            uploadDocsLink,\n                        }}\n                    />\n                </p>\n                <p>\n                    <FormattedMessage\n                        id='team_import_tab.importHelpLine3'\n                        defaultMessage='To import posts with attached files, see {slackAdvancedExporterLink} for details.'\n                        values={{\n                            slackAdvancedExporterLink: uploadExporterLink,\n                        }}\n                    />\n                </p>\n                <p>\n                    <FormattedMessage\n                        id='team_import_tab.importHelpLine4'\n                        defaultMessage='For Slack teams with over 10,000 messages, we recommend using the {cliLink}.'\n                        values={{\n                            cliLink: importCliLink,\n                        }}\n                    />\n                </p>\n            </div>\n        );\n\n        const uploadSection = (\n            <SettingUpload\n                title={formatMessage(holders.importSlack)}\n                submit={this.doImportSlack}\n                helpText={uploadHelpText}\n                fileTypesAccepted='.zip'\n            />\n        );\n\n        let messageSection;\n        switch (this.state.status) {\n        case 'ready':\n            messageSection = '';\n            break;\n        case 'in-progress':\n            messageSection = (\n                <p className='confirm-import alert alert-warning'>\n                    <i\n                        className='fa fa-spinner fa-pulse'\n                        title={utils.localizeMessage('generic_icons.loading', 'Loading Icon')}\n                    />\n                    <FormattedMessage\n                        id='team_import_tab.importing'\n                        defaultMessage=' Importing...'\n                    />\n                </p>\n            );\n            break;\n        case 'done':\n            messageSection = (\n                <p className='confirm-import alert alert-success'>\n                    <i\n                        className='fa fa-check'\n                        title={utils.localizeMessage('generic_icons.success', 'Success Icon')}\n                    />\n                    <FormattedMessage\n                        id='team_import_tab.successful'\n                        defaultMessage=' Import successful: '\n                    />\n                    <a\n                        href={this.state.link}\n                        download='MattermostImportSummary.txt'\n                    >\n                        <FormattedMessage\n                            id='team_import_tab.summary'\n                            defaultMessage='View Summary'\n                        />\n                    </a>\n                </p>\n            );\n            break;\n        case 'fail':\n            messageSection = (\n                <p className='confirm-import alert alert-warning'>\n                    <i\n                        className='fa fa-warning'\n                        title={utils.localizeMessage('generic_icons.warning', 'Warning Icon')}\n                    />\n                    <FormattedMessage\n                        id='team_import_tab.failure'\n                        defaultMessage=' Import failure: '\n                    />\n                    <a\n                        href={this.state.link}\n                        download='MattermostImportSummary.txt'\n                    >\n                        <FormattedMessage\n                            id='team_import_tab.summary'\n                            defaultMessage='View Summary'\n                        />\n                    </a>\n                </p>\n            );\n            break;\n        }\n\n        return (\n            <div>\n                <div className='modal-header'>\n                    <button\n                        type='button'\n                        className='close'\n                        data-dismiss='modal'\n                        aria-label='Close'\n                        onClick={this.props.closeModal}\n                    >\n                        <span aria-hidden='true'>{'×'}</span>\n                    </button>\n                    <h4\n                        className='modal-title'\n                        ref='title'\n                    >\n                        <div className='modal-back'>\n                            <i\n                                className='fa fa-angle-left'\n                                onClick={this.props.collapseModal}\n                                title={utils.localizeMessage('generic_icons.back', 'Back Icon')}\n                            />\n                        </div>\n                        <FormattedMessage\n                            id='team_import_tab.import'\n                            defaultMessage='Import'\n                        />\n                    </h4>\n                </div>\n                <div\n                    ref='wrapper'\n                    className='user-settings'\n                >\n                    <h3 className='tab-header'>\n                        <FormattedMessage\n                            id='team_import_tab.import'\n                            defaultMessage='Import'\n                        />\n                    </h3>\n                    <div className='divider-dark first'/>\n                    {uploadSection}\n                    <div className='divider-dark'/>\n                    {messageSection}\n                </div>\n            </div>\n        );\n    }\n}\n\nTeamImportTab.propTypes = {\n    intl: intlShape.isRequired,\n    closeModal: PropTypes.func.isRequired,\n    collapseModal: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(TeamImportTab);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport GeneralTab from 'components/team_general_tab';\nimport ImportTab from 'components/team_import_tab.jsx';\n\nconst TeamSettings = ({activeTab, activeSection, updateSection, closeModal, collapseModal, team}) => {\n    if (!team) {\n        return null;\n    }\n\n    let result;\n    switch (activeTab) {\n    case 'general':\n        result = (\n            <div>\n                <GeneralTab\n                    team={team}\n                    activeSection={activeSection}\n                    updateSection={updateSection}\n                    closeModal={closeModal}\n                    collapseModal={collapseModal}\n                />\n            </div>\n        );\n        break;\n    case 'import':\n        result = (\n            <div>\n                <ImportTab\n                    team={team}\n                    activeSection={activeSection}\n                    updateSection={updateSection}\n                    closeModal={closeModal}\n                    collapseModal={collapseModal}\n                />\n            </div>\n        );\n        break;\n    default:\n        result = (\n            <div/>\n        );\n        break;\n    }\n\n    return result;\n};\n\nTeamSettings.defaultProps = {\n    activeTab: '',\n    activeSection: '',\n};\n\nTeamSettings.propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    activeSection: PropTypes.string.isRequired,\n    updateSection: PropTypes.func.isRequired,\n    closeModal: PropTypes.func.isRequired,\n    collapseModal: PropTypes.func.isRequired,\n    team: PropTypes.object.isRequired,\n};\n\nexport default TeamSettings;","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport TeamSettings from './team_settings.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        team: getCurrentTeam(state),\n    };\n}\n\nexport default connect(mapStateToProps)(TeamSettings);","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport {Modal} from 'react-bootstrap';\nimport {defineMessages, FormattedMessage, injectIntl, intlShape} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\nimport {AsyncComponent} from 'components/async_load';\nimport loadSettingsSidebar from 'bundle-loader?lazy!./settings_sidebar.jsx';\n\nimport TeamSettings from './team_settings';\n\nconst holders = defineMessages({\n    generalTab: {\n        id: t('team_settings_modal.generalTab'),\n        defaultMessage: 'General',\n    },\n    importTab: {\n        id: t('team_settings_modal.importTab'),\n        defaultMessage: 'Import',\n    },\n});\n\nclass TeamSettingsModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeTab: 'general',\n            activeSection: '',\n        };\n    }\n\n    componentDidMount() {\n        if (!Utils.isMobile()) {\n            $('.settings-modal .settings-content').perfectScrollbar();\n        }\n    }\n\n    updateTab = (tab) => {\n        this.setState({\n            activeTab: tab,\n            activeSection: '',\n        });\n\n        if (!Utils.isMobile()) {\n            $('.settings-modal .modal-body').scrollTop(0).perfectScrollbar('update');\n        }\n    }\n\n    updateSection = (section) => {\n        if ($('.section-max').length) {\n            $('.settings-modal .modal-body').scrollTop(0).perfectScrollbar('update');\n        }\n\n        this.setState({activeSection: section});\n    }\n\n    closeModal = () => {\n        this.props.onModalDismissed();\n    }\n\n    collapseModal = () => {\n        $(ReactDOM.findDOMNode(this.refs.modalBody)).closest('.modal-dialog').removeClass('display--content');\n\n        this.setState({\n            active_tab: '',\n            active_section: '',\n        });\n    }\n\n    handleHide = () => {\n        this.props.onModalDismissed();\n    }\n\n    // called after the dialog is fully hidden and faded out\n    handleHidden = () => {\n        this.setState({\n            activeTab: 'general',\n            activeSection: '',\n        });\n    }\n\n    render() {\n        const {formatMessage} = this.props.intl;\n        const tabs = [];\n        tabs.push({name: 'general', uiName: formatMessage(holders.generalTab), icon: 'icon fa fa-cog', iconTitle: Utils.localizeMessage('generic_icons.settings', 'Settings Icon')});\n        tabs.push({name: 'import', uiName: formatMessage(holders.importTab), icon: 'icon fa fa-upload', iconTitle: Utils.localizeMessage('generic_icons.upload', 'Upload Icon')});\n\n        return (\n            <Modal\n                dialogClassName='settings-modal settings-modal--action'\n                show={this.props.show}\n                onHide={this.handleHide}\n                onExited={this.handleHidden}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title>\n                        <FormattedMessage\n                            id='team_settings_modal.title'\n                            defaultMessage='Team Settings'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body ref='modalBody'>\n                    <div className='settings-table'>\n                        <div className='settings-links'>\n                            <AsyncComponent\n                                doLoad={loadSettingsSidebar}\n                                tabs={tabs}\n                                activeTab={this.state.activeTab}\n                                updateTab={this.updateTab}\n                            />\n                        </div>\n                        <div className='settings-content minimize-settings'>\n                            <TeamSettings\n                                activeTab={this.state.activeTab}\n                                activeSection={this.state.activeSection}\n                                updateSection={this.updateSection}\n                                closeModal={this.closeModal}\n                                collapseModal={this.collapseModal}\n                            />\n                        </div>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n\nTeamSettingsModal.propTypes = {\n    intl: intlShape.isRequired,\n    show: PropTypes.bool,\n    onModalDismissed: PropTypes.func,\n};\n\nexport default injectIntl(TeamSettingsModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Overlay} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport {savePreference} from 'actions/user_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport tutorialGif from 'images/tutorialTip.gif';\nimport tutorialGifWhite from 'images/tutorialTipWhite.gif';\n\nconst Preferences = Constants.Preferences;\nconst TutorialSteps = Constants.TutorialSteps;\n\nexport default class TutorialTip extends React.Component {\n    static propTypes = {\n        currentUserId: PropTypes.string.isRequired,\n        step: PropTypes.number.isRequired,\n        screens: PropTypes.array.isRequired,\n        placement: PropTypes.string.isRequired,\n        overlayClass: PropTypes.string,\n        diagnosticsTag: PropTypes.string,\n        actions: PropTypes.shape({\n            closeRhsMenu: PropTypes.func.isRequired,\n        }),\n    }\n\n    static defaultProps = {\n        overlayClass: '',\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {currentScreen: 0, show: false};\n    }\n\n    show = () => {\n        this.setState({show: true});\n    }\n\n    hide = () => {\n        this.setState({show: false});\n    }\n\n    handleNext = () => {\n        if (this.state.currentScreen < this.props.screens.length - 1) {\n            this.setState({currentScreen: this.state.currentScreen + 1});\n            return;\n        }\n\n        if (this.props.diagnosticsTag) {\n            let tag = this.props.diagnosticsTag;\n\n            if (this.props.screens.length > 1) {\n                tag += '_' + (this.state.currentScreen + 1).toString();\n            }\n\n            if (this.state.currentScreen === this.props.screens.length - 1) {\n                tag += '_okay';\n            } else {\n                tag += '_next';\n            }\n\n            trackEvent('tutorial', tag);\n        }\n\n        this.props.actions.closeRhsMenu();\n        this.hide();\n\n        savePreference(\n            Preferences.TUTORIAL_STEP,\n            this.props.currentUserId,\n            (this.props.step + 1).toString()\n        );\n    }\n\n    skipTutorial = (e) => {\n        e.preventDefault();\n\n        if (this.props.diagnosticsTag) {\n            let tag = this.props.diagnosticsTag;\n            if (this.props.screens.length > 1) {\n                tag += '_' + this.state.currentScreen;\n            }\n            tag += '_skip';\n            trackEvent('tutorial', tag);\n        }\n\n        savePreference(\n            Preferences.TUTORIAL_STEP,\n            this.props.currentUserId,\n            TutorialSteps.FINISHED.toString()\n        );\n    }\n\n    handleCircleClick = (e, screen) => {\n        e.preventDefault();\n        this.setState({currentScreen: screen});\n    }\n\n    getTarget = () => {\n        return this.refs.target;\n    }\n\n    render() {\n        const buttonText = this.state.currentScreen === this.props.screens.length - 1 ? (\n            <FormattedMessage\n                id='tutorial_tip.ok'\n                defaultMessage='Okay'\n            />\n        ) : (\n            <FormattedMessage\n                id='tutorial_tip.next'\n                defaultMessage='Next'\n            />\n        );\n\n        const dots = [];\n        if (this.props.screens.length > 1) {\n            for (let i = 0; i < this.props.screens.length; i++) {\n                let className = 'circle';\n                if (i === this.state.currentScreen) {\n                    className += ' active';\n                }\n\n                dots.push(\n                    <a\n                        href='#'\n                        key={'dotactive' + i}\n                        className={className}\n                        data-screen={i}\n                        onClick={(e) => this.handleCircleClick(e, i)}\n                    />\n                );\n            }\n        }\n\n        var tutorialGifImage = tutorialGif;\n        if (this.props.overlayClass === 'tip-overlay--header' || this.props.overlayClass === 'tip-overlay--sidebar' || this.props.overlayClass === 'tip-overlay--header--up') {\n            tutorialGifImage = tutorialGifWhite;\n        }\n\n        return (\n            <div\n                id='tipButton'\n                className={'tip-div ' + this.props.overlayClass}\n                onClick={this.show}\n            >\n                <img\n                    className='tip-button'\n                    src={tutorialGifImage}\n                    width='35'\n                    onClick={this.show}\n                    ref='target'\n                />\n\n                <Overlay\n                    show={this.state.show}\n                >\n                    <div className='tip-backdrop'/>\n                </Overlay>\n\n                <Overlay\n                    placement={this.props.placement}\n                    show={this.state.show}\n                    rootClose={true}\n                    onHide={this.hide}\n                    target={this.getTarget}\n                >\n                    <div className={'tip-overlay ' + this.props.overlayClass}>\n                        <div className='arrow'/>\n                        {this.props.screens[this.state.currentScreen]}\n                        <div className='tutorial__footer'>\n                            <div className='tutorial__circles'>{dots}</div>\n                            <div className='text-right'>\n                                <button\n                                    id='tipNextButton'\n                                    className='btn btn-primary'\n                                    onClick={this.handleNext}\n                                >\n                                    {buttonText}\n                                </button>\n                                <div className='tip-opt'>\n                                    <FormattedMessage\n                                        id='tutorial_tip.seen'\n                                        defaultMessage='Seen this before? '\n                                    />\n                                    <a\n                                        href='#'\n                                        onClick={this.skipTutorial}\n                                    >\n                                        <FormattedMessage\n                                            id='tutorial_tip.out'\n                                            defaultMessage='Opt out of these tips.'\n                                        />\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Overlay>\n            </div>\n        );\n    }\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getInt} from 'mattermost-redux/selectors/entities/preferences';\n\nimport {closeMenu as closeRhsMenu} from 'actions/views/rhs';\nimport {Preferences} from 'utils/constants.jsx';\n\nimport TutorialTip from './tutorial_tip.jsx';\n\nfunction mapStateToProps(state) {\n    const currentUserId = getCurrentUserId(state);\n    return {\n        currentUserId,\n        step: getInt(state, Preferences.TUTORIAL_STEP, currentUserId, 0),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            closeRhsMenu,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TutorialTip);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport TutorialTip from './tutorial_tip';\n\nconst MenuTutorialTip = ({toggleFunc, onBottom}) => {\n    const screens = [];\n\n    screens.push(\n        <div>\n            <h4>\n                <FormattedMessage\n                    id='sidebar_header.tutorial.title'\n                    defaultMessage='Main Menu'\n                />\n            </h4>\n            <p>\n                <FormattedMarkdownMessage\n                    id='sidebar_header.tutorial.body1'\n                    defaultMessage='The **Main Menu** is where you can **Invite New Members**, access your **Account Settings** and set your **Theme Color**.'\n                />\n            </p>\n            <p>\n                <FormattedMarkdownMessage\n                    id='sidebar_header.tutorial.body2'\n                    defaultMessage='Team administrators can also access their **Team Settings** from this menu.'\n                />\n            </p>\n            <p>\n                <FormattedMarkdownMessage\n                    id='sidebar_header.tutorial.body3'\n                    defaultMessage='System administrators will find a **System Console** option to administrate the entire system.'\n                />\n            </p>\n        </div>\n    );\n\n    let placement = 'right';\n    let arrow = 'left';\n    if (onBottom) {\n        placement = 'bottom';\n        arrow = 'up';\n    }\n\n    return (\n        <div\n            onClick={toggleFunc}\n        >\n            <TutorialTip\n                placement={placement}\n                screens={screens}\n                overlayClass={'tip-overlay--header--' + arrow}\n                diagnosticsTag='tutorial_tip_3_main_menu'\n            />\n        </div>\n    );\n};\n\nMenuTutorialTip.propTypes = {\n    toggleFunc: PropTypes.func,\n    onBottom: PropTypes.bool.isRequired,\n};\n\nexport default MenuTutorialTip;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class ModalToggleButtonRedux extends React.Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        modalId: PropTypes.string.isRequired,\n        dialogType: PropTypes.func.isRequired,\n        dialogProps: PropTypes.object,\n        onClick: PropTypes.func,\n        className: PropTypes.string,\n        actions: PropTypes.shape({\n            openModal: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    static defaultProps = {\n        dialogProps: {},\n        className: '',\n    };\n\n    show(e) {\n        if (e) {\n            e.preventDefault();\n        }\n\n        const {modalId, dialogProps, dialogType} = this.props;\n\n        const modalData = {\n            modalId,\n            dialogProps,\n            dialogType,\n        };\n\n        this.props.actions.openModal(modalData);\n    }\n\n    render() {\n        const {children, onClick, ...props} = this.props;\n\n        // removing these three props since they are not valid props on buttons\n        delete props.modalId;\n        delete props.dialogType;\n        delete props.dialogProps;\n\n        // allow callers to provide an onClick which will be called before the modal is shown\n        let clickHandler = () => this.show();\n        if (onClick) {\n            clickHandler = (e) => {\n                onClick();\n\n                this.show(e);\n            };\n        }\n\n        return (\n            <button\n                {...props}\n                className={'style--none ' + props.className}\n                onClick={clickHandler}\n            >\n                {children}\n            </button>\n        );\n    }\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {openModal} from 'actions/views/modals';\n\nimport ModalToggleButtonRedux from './toggle_modal_button_redux.jsx';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            openModal,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(ModalToggleButtonRedux);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage, injectIntl, intlShape} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport Constants from 'utils/constants.jsx';\nimport {isKeyPressed} from 'utils/utils';\n\nclass LeaveTeamModal extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Current user id.\n         */\n        currentUserId: PropTypes.string.isRequired,\n\n        /**\n         * Current team id.\n         */\n        currentTeamId: PropTypes.string.isRequired,\n\n        /**\n         * hide action\n         */\n\n        onHide: PropTypes.func.isRequired,\n\n        /**\n         * show or hide modal\n         */\n\n        show: PropTypes.bool.isRequired,\n\n        intl: intlShape.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * An action to remove user from team\n             */\n\n            removeUserFromTeam: PropTypes.func.isRequired,\n\n            /**\n             * An action to toggle the right menu\n             */\n\n            toggleSideBarRightMenu: PropTypes.func.isRequired,\n        }),\n    };\n\n    componentDidMount() {\n        if (this.props.show) {\n            document.addEventListener('keypress', this.handleKeyPress);\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keypress', this.handleKeyPress);\n    }\n\n    handleKeyPress = (e) => {\n        if (isKeyPressed(e, Constants.KeyCodes.ENTER)) {\n            this.handleSubmit(e);\n        }\n    };\n\n    handleSubmit = () => {\n        this.props.onHide();\n        this.props.actions.removeUserFromTeam(this.props.currentTeamId, this.props.currentUserId);\n        this.props.actions.toggleSideBarRightMenu();\n    };\n\n    render() {\n        return (\n            <Modal\n                className='modal-confirm'\n                show={this.props.show}\n                onHide={this.props.onHide}\n            >\n                <Modal.Header closeButton={false}>\n                    <Modal.Title>\n                        <FormattedMessage\n                            id='leave_team_modal.title'\n                            defaultMessage='Leave the team?'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <FormattedMessage\n                        id='leave_team_modal.desc'\n                        defaultMessage='You will be removed from all public and private channels.  If the team is private you will not be able to rejoin the team.  Are you sure?'\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        type='button'\n                        className='btn btn-default'\n                        onClick={this.props.onHide}\n                    >\n                        <FormattedMessage\n                            id='leave_team_modal.no'\n                            defaultMessage='No'\n                        />\n                    </button>\n                    <button\n                        type='button'\n                        className='btn btn-danger'\n                        onClick={this.handleSubmit}\n                    >\n                        <FormattedMessage\n                            id='leave_team_modal.yes'\n                            defaultMessage='Yes'\n                        />\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n\nexport default injectIntl(LeaveTeamModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\n\nimport {toggleSideBarRightMenuAction} from 'actions/global_actions.jsx';\nimport {removeUserFromTeam} from 'actions/team_actions';\nimport {ModalIdentifiers} from 'utils/constants';\n\nimport {isModalOpen} from 'selectors/views/modals';\n\nimport LeaveTeamModal from './leave_team_modal.jsx';\n\nfunction mapStateToProps(state) {\n    const modalId = ModalIdentifiers.LEAVE_TEAM;\n    const currentUserId = getCurrentUserId(state);\n    const currentTeamId = getCurrentTeamId(state);\n    const show = isModalOpen(state, modalId);\n    return {\n        currentUserId,\n        currentTeamId,\n        show,\n        actions: {\n            removeUserFromTeam,\n            toggleSideBarRightMenu: toggleSideBarRightMenuAction,\n        },\n    };\n}\n\nexport default connect(mapStateToProps)(LeaveTeamModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nexport function isModalOpen(state, modalId) {\n    return state.views.modals.modalState[modalId] && state.views.modals.modalState[modalId].open;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {Permissions} from 'mattermost-redux/constants';\nimport classNames from 'classnames';\n\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport {Constants, ModalIdentifiers} from 'utils/constants.jsx';\nimport {useSafeUrl} from 'utils/url.jsx';\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport AboutBuildModal from 'components/about_build_modal';\nimport AddUsersToTeam from 'components/add_users_to_team';\nimport LeaveTeamIcon from 'components/svg/leave_team_icon';\nimport TeamMembersModal from 'components/team_members_modal';\nimport ToggleModalButton from 'components/toggle_modal_button.jsx';\nimport TeamSettingsModal from 'components/team_settings_modal.jsx';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport MenuTutorialTip from 'components/tutorial/menu_tutorial_tip';\nimport ToggleModalButtonRedux from 'components/toggle_modal_button_redux';\nimport LeaveTeamModal from 'components/leave_team_modal';\nimport UserSettingsModal from 'components/user_settings/modal';\n\nexport default class SidebarRightMenu extends React.PureComponent {\n    static propTypes = {\n        teamId: PropTypes.string,\n        currentUserId: PropTypes.string.isRequired,\n        isOpen: PropTypes.bool.isRequired,\n        teamType: PropTypes.string,\n        teamDisplayName: PropTypes.string,\n        isMentionSearch: PropTypes.bool,\n        showTutorialTip: PropTypes.bool.isRequired,\n        appDownloadLink: PropTypes.string,\n        enableUserCreation: PropTypes.bool.isRequired,\n        experimentalPrimaryTeam: PropTypes.string,\n        helpLink: PropTypes.string,\n        reportAProblemLink: PropTypes.string,\n        siteName: PropTypes.string,\n        moreTeamsToJoin: PropTypes.bool.isRequired,\n        pluginMenuItems: PropTypes.arrayOf(PropTypes.object),\n        actions: PropTypes.shape({\n            showMentions: PropTypes.func,\n            showFlaggedPosts: PropTypes.func,\n            closeRightHandSide: PropTypes.func.isRequired,\n            openRhsMenu: PropTypes.func.isRequired,\n            closeRhsMenu: PropTypes.func.isRequired,\n        }),\n    };\n\n    static defaultProps = {\n        pluginMenuItems: [],\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showAboutModal: false,\n            showAddUsersToTeamModal: false,\n            showTeamSettingsModal: false,\n        };\n    }\n\n    handleAboutModal = () => {\n        this.setState({showAboutModal: true});\n    }\n\n    aboutModalDismissed = () => {\n        this.setState({showAboutModal: false});\n    }\n\n    showAddUsersToTeamModal = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            showAddUsersToTeamModal: true,\n            showDropdown: false,\n        });\n    }\n\n    hideAddUsersToTeamModal = () => {\n        this.setState({\n            showAddUsersToTeamModal: false,\n        });\n    }\n\n    showTeamSettingsModal = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            showTeamSettingsModal: true,\n            showDropdown: false,\n        });\n    }\n\n    hideTeamSettingsModal = () => {\n        this.setState({showTeamSettingsModal: false});\n    }\n\n    getFlagged = (e) => {\n        e.preventDefault();\n        this.props.actions.showFlaggedPosts();\n        this.props.actions.closeRhsMenu();\n    }\n\n    searchMentions = (e) => {\n        e.preventDefault();\n\n        if (this.props.isMentionSearch) {\n            this.props.actions.closeRightHandSide();\n        } else {\n            this.props.actions.closeRhsMenu();\n            this.props.actions.showMentions();\n        }\n    }\n\n    handleEmitUserLoggedOutEvent = () => {\n        GlobalActions.emitUserLoggedOutEvent();\n    }\n\n    render() {\n        let teamLink;\n        let inviteLink;\n        let addUserToTeamLink;\n        let manageLink;\n        let consoleLink;\n        let joinAnotherTeamLink;\n        let createTeam = null;\n\n        if (this.props.currentUserId != null) {\n            inviteLink = (\n                <TeamPermissionGate\n                    teamId={this.props.teamId}\n                    permissions={[Permissions.INVITE_USER]}\n                >\n                    <TeamPermissionGate\n                        teamId={this.props.teamId}\n                        permissions={[Permissions.ADD_USER_TO_TEAM]}\n                    >\n                        <li>\n                            <a\n                                href='#'\n                                onClick={GlobalActions.showInviteMemberModal}\n                            >\n                                <i className='icon fa fa-user-plus'/>\n                                <FormattedMessage\n                                    id='sidebar_right_menu.inviteNew'\n                                    defaultMessage='Send Email Invite'\n                                />\n                            </a>\n                        </li>\n                    </TeamPermissionGate>\n                </TeamPermissionGate>\n            );\n\n            addUserToTeamLink = (\n                <TeamPermissionGate\n                    teamId={this.props.teamId}\n                    permissions={[Permissions.ADD_USER_TO_TEAM]}\n                >\n                    <li>\n                        <a\n                            id='addUsersToTeam'\n                            href='#'\n                            onClick={this.showAddUsersToTeamModal}\n                        >\n                            <i className='icon fa fa-user-plus'/>\n                            <FormattedMessage\n                                id='sidebar_right_menu.addMemberToTeam'\n                                defaultMessage='Add Members to Team'\n                            />\n                        </a>\n                    </li>\n                </TeamPermissionGate>\n            );\n\n            if (this.props.teamType === Constants.OPEN_TEAM && this.props.enableUserCreation) {\n                teamLink = (\n                    <TeamPermissionGate\n                        teamId={this.props.teamId}\n                        permissions={[Permissions.INVITE_USER]}\n                    >\n                        <TeamPermissionGate\n                            teamId={this.props.teamId}\n                            permissions={[Permissions.ADD_USER_TO_TEAM]}\n                        >\n                            <li>\n                                <a\n                                    href='#'\n                                    onClick={GlobalActions.showGetTeamInviteLinkModal}\n                                >\n                                    <i className='icon fa fa-link'/>\n                                    <FormattedMessage\n                                        id='sidebar_right_menu.teamLink'\n                                        defaultMessage='Get Team Invite Link'\n                                    />\n                                </a>\n                            </li>\n                        </TeamPermissionGate>\n                    </TeamPermissionGate>\n                );\n            }\n\n            if (this.props.moreTeamsToJoin && !this.props.experimentalPrimaryTeam) {\n                joinAnotherTeamLink = (\n                    <li key='joinTeam_li'>\n                        <Link to='/select_team'>\n                            <i className='icon fa fa-plus-square'/>\n                            <FormattedMessage\n                                id='navbar_dropdown.join'\n                                defaultMessage='Join Another Team'\n                            />\n                        </Link>\n                    </li>\n                );\n            }\n\n            createTeam = (\n                <SystemPermissionGate permissions={[Permissions.CREATE_TEAM]}>\n                    <li key='newTeam_li'>\n                        <Link\n                            id='createTeam'\n                            key='newTeam_a'\n                            to='/create_team'\n                            onClick={this.handleClick}\n                        >\n                            <i className='icon fa fa-plus-square'/>\n                            <FormattedMessage\n                                id='navbar_dropdown.create'\n                                defaultMessage='Create a New Team'\n                            />\n                        </Link>\n                    </li>\n                </SystemPermissionGate>\n            );\n        }\n\n        manageLink = (\n            <li>\n                <ToggleModalButton dialogType={TeamMembersModal}>\n                    <i className='icon fa fa-users'/>\n                    <FormattedMessage\n                        id='sidebar_right_menu.viewMembers'\n                        defaultMessage='View Members'\n                    />\n                </ToggleModalButton>\n            </li>\n        );\n\n        const pluginItems = this.props.pluginMenuItems.map((item) => {\n            return (\n                <li key={item.id + '_pluginrightmenuitem'}>\n                    <a\n                        id={item.id + '_pluginrightmenuitem'}\n                        href='#'\n                        onClick={item.action}\n                    >\n                        <span className='icon'>{item.mobileIcon}</span>\n                        {item.text}\n                    </a>\n                </li>\n            );\n        });\n\n        let pluginDivider = null;\n        if (pluginItems.length > 0) {\n            pluginDivider = <li className='divider'/>;\n        }\n\n        let leaveTeam = '';\n        if (!this.props.experimentalPrimaryTeam) {\n            leaveTeam = (\n                <li key='leaveTeam_li'>\n                    <ToggleModalButtonRedux\n                        id='leaveTeam'\n                        role='menuitem'\n                        modalId={ModalIdentifiers.LEAVE_TEAM}\n                        dialogType={LeaveTeamModal}\n                        dialogProps={{}}\n                    >\n                        <LeaveTeamIcon className='icon'/>\n                        <FormattedMessage\n                            id='navbar_dropdown.leave'\n                            defaultMessage='Leave Team'\n                        />\n                    </ToggleModalButtonRedux>\n                </li>\n            );\n        }\n\n        const teamSettingsLink = (\n            <TeamPermissionGate\n                teamId={this.props.teamId}\n                permissions={[Permissions.MANAGE_TEAM]}\n            >\n                <li>\n                    <a\n                        href='#'\n                        onClick={this.showTeamSettingsModal}\n                    >\n                        <i className='icon fa fa-globe'/>\n                        <FormattedMessage\n                            id='sidebar_right_menu.teamSettings'\n                            defaultMessage='Team Settings'\n                        />\n                    </a>\n                </li>\n            </TeamPermissionGate>\n        );\n        manageLink = (\n            <TeamPermissionGate\n                teamId={this.props.teamId}\n                permissions={[Permissions.MANAGE_TEAM]}\n            >\n                <li>\n                    <ToggleModalButton\n                        dialogType={TeamMembersModal}\n                    >\n                        <i className='icon fa fa-users'/>\n                        <FormattedMessage\n                            id='sidebar_right_menu.manageMembers'\n                            defaultMessage='Manage Members'\n                        />\n                    </ToggleModalButton>\n                </li>\n            </TeamPermissionGate>\n        );\n\n        if (!Utils.isMobile()) {\n            consoleLink = (\n                <SystemPermissionGate permissions={[Permissions.MANAGE_SYSTEM]}>\n                    <li>\n                        <Link\n                            to={'/admin_console'}\n                            onClick={this.handleClick}\n                        >\n                            <i className='icon fa fa-wrench'/>\n                            <FormattedMessage\n                                id='sidebar_right_menu.console'\n                                defaultMessage='System Console'\n                            />\n                        </Link>\n                    </li>\n                </SystemPermissionGate>\n            );\n        }\n\n        var siteName = '';\n        if (this.props.siteName != null) {\n            siteName = this.props.siteName;\n        }\n        var teamDisplayName = siteName;\n        if (this.props.teamDisplayName) {\n            teamDisplayName = this.props.teamDisplayName;\n        }\n\n        let helpLink = null;\n        if (this.props.helpLink) {\n            helpLink = (\n                <li>\n                    <a\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        href={useSafeUrl(this.props.helpLink)}\n                    >\n                        <i className='icon fa fa-question'/>\n                        <FormattedMessage\n                            id='sidebar_right_menu.help'\n                            defaultMessage='Help'\n                        />\n                    </a>\n                </li>\n            );\n        }\n\n        let reportLink = null;\n        if (this.props.reportAProblemLink) {\n            reportLink = (\n                <li>\n                    <a\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        href={useSafeUrl(this.props.reportAProblemLink)}\n                    >\n                        <i className='icon fa fa-phone'/>\n                        <FormattedMessage\n                            id='sidebar_right_menu.report'\n                            defaultMessage='Report a Problem'\n                        />\n                    </a>\n                </li>\n            );\n        }\n\n        let tutorialTip = null;\n        if (this.props.showTutorialTip) {\n            tutorialTip = <MenuTutorialTip onBottom={true}/>;\n            this.props.actions.openRhsMenu();\n        }\n\n        let nativeAppLink = null;\n        if (this.props.appDownloadLink && !UserAgent.isMobileApp()) {\n            nativeAppLink = (\n                <li>\n                    <a\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        href={useSafeUrl(this.props.appDownloadLink)}\n                    >\n                        <i className='icon fa fa-mobile'/>\n                        <FormattedMessage\n                            id='sidebar_right_menu.nativeApps'\n                            defaultMessage='Download Apps'\n                        />\n                    </a>\n                </li>\n            );\n        }\n\n        let addUsersToTeamModal;\n        if (this.state.showAddUsersToTeamModal) {\n            addUsersToTeamModal = (\n                <AddUsersToTeam\n                    onModalDismissed={this.hideAddUsersToTeamModal}\n                />\n            );\n        }\n\n        let teamDivider = null;\n        if (teamSettingsLink || manageLink || joinAnotherTeamLink || createTeam || leaveTeam) {\n            teamDivider = <li className='divider'/>;\n        }\n\n        let consoleDivider = null;\n        if (consoleLink) {\n            consoleDivider = <li className='divider'/>;\n        }\n\n        return (\n            <div\n                className={classNames('sidebar--menu', {'move--left': this.props.isOpen && Utils.isMobile()})}\n                id='sidebar-menu'\n            >\n                <div className='team__header theme'>\n                    <Link\n                        className='team__name'\n                        to={`/channels/${Constants.DEFAULT_CHANNEL}`}\n                    >\n                        {teamDisplayName}\n                    </Link>\n                </div>\n\n                <div className='nav-pills__container'>\n                    {tutorialTip}\n                    <ul className='nav nav-pills nav-stacked'>\n                        <li>\n                            <a\n                                href='#'\n                                onClick={this.searchMentions}\n                            >\n                                <i className='icon mentions'>{'@'}</i>\n                                <FormattedMessage\n                                    id='sidebar_right_menu.recentMentions'\n                                    defaultMessage='Recent Mentions'\n                                />\n                            </a>\n                        </li>\n                        <li>\n                            <a\n                                href='#'\n                                onClick={this.getFlagged}\n                            >\n                                <i className='icon fa fa-flag'/>\n                                <FormattedMessage\n                                    id='sidebar_right_menu.flagged'\n                                    defaultMessage='Flagged Posts'\n                                />\n                            </a>\n                        </li>\n                        <li className='divider'/>\n                        <li>\n                            <ToggleModalButtonRedux\n                                modalId={ModalIdentifiers.USER_SETTINGS}\n                                dialogType={UserSettingsModal}\n                            >\n                                <i className='icon fa fa-cog'/>\n                                <FormattedMessage\n                                    id='sidebar_right_menu.accountSettings'\n                                    defaultMessage='Account Settings'\n                                />\n                            </ToggleModalButtonRedux>\n                        </li>\n                        <li className='divider'/>\n                        {inviteLink}\n                        {teamLink}\n                        {addUserToTeamLink}\n                        {teamDivider}\n                        {teamSettingsLink}\n                        {manageLink}\n                        {createTeam}\n                        {joinAnotherTeamLink}\n                        {leaveTeam}\n                        {pluginDivider}\n                        {pluginItems}\n                        {consoleDivider}\n                        {consoleLink}\n                        <li className='divider'/>\n                        {helpLink}\n                        {reportLink}\n                        {nativeAppLink}\n                        <li>\n                            <a\n                                href='#'\n                                onClick={this.handleAboutModal}\n                            >\n                                <i className='icon fa fa-info'/>\n                                <FormattedMessage\n                                    id='navbar_dropdown.about'\n                                    defaultMessage='About Mattermost'\n                                />\n                            </a>\n                        </li>\n                        <li className='divider'/>\n                        <li>\n                            <a\n                                href='#'\n                                onClick={this.handleEmitUserLoggedOutEvent}\n                            >\n                                <i className='icon fa fa-sign-out'/>\n                                <FormattedMessage\n                                    id='sidebar_right_menu.logout'\n                                    defaultMessage='Logout'\n                                />\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <AboutBuildModal\n                    show={this.state.showAboutModal}\n                    onModalDismissed={this.aboutModalDismissed}\n                />\n                <TeamSettingsModal\n                    show={this.state.showTeamSettingsModal}\n                    onModalDismissed={this.hideTeamSettingsModal}\n                />\n                {addUsersToTeamModal}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getCurrentTeamId, getJoinableTeamIds} from 'mattermost-redux/selectors/entities/teams';\nimport {getInt} from 'mattermost-redux/selectors/entities/preferences';\n\nimport {showMentions, showFlaggedPosts, closeRightHandSide, openMenu as openRhsMenu, closeMenu as closeRhsMenu} from 'actions/views/rhs';\nimport {getRhsState, getIsRhsMenuOpen} from 'selectors/rhs';\nimport {RHSStates, Preferences, TutorialSteps} from 'utils/constants.jsx';\nimport {isMobile} from 'utils/utils.jsx';\n\nimport SidebarRightMenu from './sidebar_right_menu.jsx';\n\nfunction mapStateToProps(state) {\n    const license = getLicense(state);\n    const config = getConfig(state);\n    const rhsState = getRhsState(state);\n\n    const enableTutorial = config.EnableTutorial === 'true';\n    const tutorialStep = getInt(state, Preferences.TUTORIAL_STEP, getCurrentUserId(state), TutorialSteps.FINISHED);\n\n    const isLicensed = license.IsLicensed === 'true';\n    const appDownloadLink = config.AppDownloadLink;\n    const enableTeamCreation = config.EnableTeamCreation === 'true';\n    const enableUserCreation = config.EnableUserCreation === 'true';\n    const experimentalPrimaryTeam = config.ExperimentalPrimaryTeam;\n    const helpLink = config.HelpLink;\n    const reportAProblemLink = config.ReportAProblemLink;\n    const restrictTeamInvite = config.RestrictTeamInvite;\n    const siteName = config.SiteName;\n\n    const joinableTeams = getJoinableTeamIds(state);\n    const moreTeamsToJoin = joinableTeams && joinableTeams.length > 0;\n\n    return {\n        teamId: getCurrentTeamId(state),\n        currentUserId: getCurrentUserId(state),\n        isOpen: getIsRhsMenuOpen(state),\n        isMentionSearch: rhsState === RHSStates.MENTION,\n        showTutorialTip: enableTutorial && isMobile() && tutorialStep === TutorialSteps.MENU_POPOVER,\n        isLicensed,\n        appDownloadLink,\n        enableTeamCreation,\n        enableUserCreation,\n        experimentalPrimaryTeam,\n        helpLink,\n        reportAProblemLink,\n        restrictTeamInvite,\n        siteName,\n        moreTeamsToJoin,\n        pluginMenuItems: state.plugins.components.MainMenu,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            showMentions,\n            showFlaggedPosts,\n            closeRightHandSide,\n            openRhsMenu,\n            closeRhsMenu,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidebarRightMenu);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport ModalStore from 'stores/modal_store.jsx';\nimport Constants from 'utils/constants.jsx';\n\nconst ActionTypes = Constants.ActionTypes;\n\nexport default class ImportThemeModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: '',\n            inputError: '',\n            show: false,\n            callback: null,\n        };\n    }\n\n    componentDidMount() {\n        ModalStore.addModalListener(ActionTypes.TOGGLE_IMPORT_THEME_MODAL, this.updateShow);\n    }\n\n    componentWillUnmount() {\n        ModalStore.removeModalListener(ActionTypes.TOGGLE_IMPORT_THEME_MODAL, this.updateShow);\n    }\n\n    updateShow = (show, args) => {\n        this.setState({\n            show,\n            callback: args.callback,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const text = this.state.value;\n\n        if (!this.isInputValid(text)) {\n            this.setState({\n                inputError: (\n                    <FormattedMessage\n                        id='user.settings.import_theme.submitError'\n                        defaultMessage='Invalid format, please try copying and pasting in again.'\n                    />\n                ),\n            });\n            return;\n        }\n\n        const colors = text.split(',');\n        const theme = {type: 'custom'};\n\n        theme.sidebarBg = colors[0];\n        theme.sidebarText = colors[5];\n        theme.sidebarUnreadText = colors[5];\n        theme.sidebarTextHoverBg = colors[4];\n        theme.sidebarTextActiveBorder = colors[2];\n        theme.sidebarTextActiveColor = colors[3];\n        theme.sidebarHeaderBg = colors[1];\n        theme.sidebarHeaderTextColor = colors[5];\n        theme.onlineIndicator = colors[6];\n        theme.awayIndicator = '#E0B333';\n        theme.mentionBg = colors[7];\n        theme.mentionColor = '#ffffff';\n        theme.centerChannelBg = '#ffffff';\n        theme.centerChannelColor = '#333333';\n        theme.newMessageSeparator = '#F80';\n        theme.linkColor = '#2389d7';\n        theme.buttonBg = '#26a970';\n        theme.buttonColor = '#ffffff';\n        theme.mentionHighlightBg = '#fff2bb';\n        theme.mentionHighlightLink = '#2f81b7';\n        theme.codeTheme = 'github';\n\n        this.state.callback(theme);\n        this.setState({\n            show: false,\n            callback: null,\n        });\n    }\n\n    isInputValid(text) {\n        if (text.length === 0) {\n            return false;\n        }\n\n        if (text.indexOf(' ') !== -1) {\n            return false;\n        }\n\n        if (text.length > 0 && text.indexOf(',') === -1) {\n            return false;\n        }\n\n        if (text.length > 0) {\n            const colors = text.split(',');\n\n            if (colors.length !== 8) {\n                return false;\n            }\n\n            for (let i = 0; i < colors.length; i++) {\n                if (colors[i].length !== 7 && colors[i].length !== 4) {\n                    return false;\n                }\n\n                if (colors[i].charAt(0) !== '#') {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    handleChange = (e) => {\n        const value = e.target.value;\n        this.setState({value});\n\n        if (this.isInputValid(value)) {\n            this.setState({inputError: null});\n        } else {\n            this.setState({\n                inputError: (\n                    <FormattedMessage\n                        id='user.settings.import_theme.submitError'\n                        defaultMessage='Invalid format, please try copying and pasting in again.'\n                    />\n                ),\n            });\n        }\n    }\n\n    handleOnHide = () => {\n        this.setState({show: false});\n    }\n\n    render() {\n        return (\n            <span>\n                <Modal\n                    show={this.state.show}\n                    onHide={this.handleOnHide}\n                >\n                    <Modal.Header closeButton={true}>\n                        <Modal.Title>\n                            <FormattedMessage\n                                id='user.settings.import_theme.importHeader'\n                                defaultMessage='Import Slack Theme'\n                            />\n                        </Modal.Title>\n                    </Modal.Header>\n                    <form\n                        role='form'\n                        className='form-horizontal'\n                    >\n                        <Modal.Body>\n                            <p>\n                                <FormattedMessage\n                                    id='user.settings.import_theme.importBody'\n                                    defaultMessage='To import a theme, go to a Slack team and look for \"Preferences -> Sidebar Theme\". Open the custom theme option, copy the theme color values and paste them here:'\n                                />\n                            </p>\n                            <div className='form-group less'>\n                                <div className='col-sm-12'>\n                                    <input\n                                        id='themeVector'\n                                        type='text'\n                                        className='form-control'\n                                        value={this.state.value}\n                                        onChange={this.handleChange}\n                                    />\n                                    <div className='input__help'>\n                                        {this.state.inputError}\n                                    </div>\n                                </div>\n                            </div>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <button\n                                id='cancelButton'\n                                type='button'\n                                className='btn btn-default'\n                                onClick={this.handleOnHide}\n                            >\n                                <FormattedMessage\n                                    id='user.settings.import_theme.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </button>\n                            <button\n                                id='submitButton'\n                                onClick={this.handleSubmit}\n                                type='submit'\n                                className='btn btn-primary'\n                                tabIndex='3'\n                            >\n                                <FormattedMessage\n                                    id='user.settings.import_theme.submit'\n                                    defaultMessage='Submit'\n                                />\n                            </button>\n                        </Modal.Footer>\n                    </form>\n                </Modal>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class ModalController extends React.Component {\n    static propTypes = {\n        modals: PropTypes.object.isRequired,\n        actions: PropTypes.shape({\n            closeModal: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    render() {\n        const {modals, ...props} = this.props;\n        const {modalState} = modals;\n\n        if (!modals) {\n            return <div/>;\n        }\n\n        const modalOutput = [];\n\n        for (const modalId in modalState) {\n            if (modalState.hasOwnProperty(modalId)) {\n                const modal = modalState[modalId];\n                if (modal.open) {\n                    const modalComponent = React.createElement(modal.dialogType, Object.assign({}, modal.dialogProps, {\n                        onHide: props.actions.closeModal.bind(this, modalId),\n                        key: `${modalId}_modal`,\n                    }));\n\n                    modalOutput.push(modalComponent);\n                }\n            }\n        }\n\n        return (\n            <div>\n                {modalOutput}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {closeModal} from 'actions/views/modals';\n\nimport ModalController from './modal_controller.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        modals: state.views.modals,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            closeModal,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalController);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nexport function getIsLhsOpen(state) {\n    return state.views.lhs.isOpen;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {ContextMenu, ContextMenuTrigger, MenuItem} from 'react-contextmenu';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class CopyUrlContextMenu extends React.Component {\n    static propTypes = {\n\n        // The child component that will be right-clicked on to show the context menu\n        children: PropTypes.element,\n\n        // The link to copy to the user's clipboard when the 'Copy' option is selected from the context menu\n        link: PropTypes.string.isRequired,\n\n        // A unique id differentiating this instance of context menu from others on the page.\n        menuId: PropTypes.string.isRequired,\n\n        siteURL: PropTypes.string.isRequired,\n\n        actions: PropTypes.shape({\n            copyToClipboard: PropTypes.func.isRequired,\n        }),\n    };\n\n    copy = () => {\n        let link = this.props.link;\n\n        // Transform relative links to absolute ones for copy and paste.\n        if (link.indexOf('http://') === -1 && link.indexOf('https://') === -1) {\n            link = this.props.siteURL + link;\n        }\n\n        this.props.actions.copyToClipboard(link);\n    }\n\n    render() {\n        const contextMenu = (\n            <ContextMenu id={'copy-url-context-menu' + this.props.menuId}>\n                <MenuItem\n                    onClick={this.copy}\n                >\n                    <FormattedMessage\n                        id='copy_url_context_menu.getChannelLink'\n                        defaultMessage='Copy Link'\n                    />\n                </MenuItem>\n            </ContextMenu>\n        );\n\n        const contextMenuTrigger = (\n            <ContextMenuTrigger id={'copy-url-context-menu' + this.props.menuId}>\n                {this.props.children}\n            </ContextMenuTrigger>\n        );\n\n        return (\n            <span>\n                {contextMenu}\n                {contextMenuTrigger}\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {copyToClipboard} from 'utils/utils';\n\nimport CopyUrlContextMenu from './copy_url_context_menu.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    return {\n        siteURL: config.SiteURL,\n    };\n}\n\nfunction mapDispatchToProps() {\n    return {\n        actions: {\n            copyToClipboard,\n        },\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CopyUrlContextMenu);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\n\nimport {mark, trackEvent} from 'actions/diagnostics_actions.jsx';\nimport {switchTeams} from 'actions/team_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport {isDesktopApp} from 'utils/user_agent.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport CopyUrlContextMenu from 'components/copy_url_context_menu';\n\nexport default class TeamButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSwitch = this.handleSwitch.bind(this);\n        this.handleDisabled = this.handleDisabled.bind(this);\n    }\n\n    handleSwitch(e) {\n        e.preventDefault();\n        mark('TeamLink#click');\n        trackEvent('ui', 'ui_team_sidebar_switch_team');\n        switchTeams(this.props.url);\n    }\n\n    handleDisabled(e) {\n        e.preventDefault();\n    }\n\n    render() {\n        const teamIconUrl = this.props.teamIconUrl;\n\n        let teamClass = this.props.active ? 'active' : '';\n        const btnClass = this.props.btnClass;\n        const disabled = this.props.disabled ? 'team-disabled' : '';\n        const handleClick = (this.props.active || this.props.disabled) ? this.handleDisabled : this.handleSwitch;\n        let badge;\n\n        if (!teamClass) {\n            teamClass = this.props.unread ? 'unread' : '';\n\n            if (this.props.mentions) {\n                badge = (\n                    <span className={'badge pull-right small'}>{this.props.mentions}</span>\n                );\n            }\n        }\n\n        let content = this.props.content;\n\n        if (!content) {\n            if (teamIconUrl) {\n                content = (\n                    <div className='team-btn__content'>\n                        <div\n                            className='team-btn__image'\n                            style={{backgroundImage: `url('${teamIconUrl}')`}}\n                        />\n                    </div>\n                );\n            } else {\n                let initials = this.props.displayName;\n                initials = initials ? initials.replace(/\\s/g, '').substring(0, 2) : '??';\n\n                content = (\n                    <div className='team-btn__content'>\n                        <div className='team-btn__initials'>\n                            {initials}\n                        </div>\n                    </div>\n                );\n            }\n        }\n\n        const toolTip = this.props.tip || localizeMessage('team.button.name_undefined', 'Name undefined');\n        const btn = (\n            <OverlayTrigger\n                trigger={['hover', 'focus']}\n                delayShow={Constants.OVERLAY_TIME_DELAY}\n                placement={this.props.placement}\n                overlay={\n                    <Tooltip id={`tooltip-${this.props.url}`}>\n                        {toolTip}\n                    </Tooltip>\n                }\n            >\n                <div className={'team-btn ' + btnClass}>\n                    {badge}\n                    {content}\n                </div>\n            </OverlayTrigger>\n        );\n\n        let teamButton;\n        if (isDesktopApp()) {\n            teamButton = (\n                <button\n                    className={'btn btn-link ' + disabled}\n                    onClick={handleClick}\n                >\n                    {btn}\n                </button>\n            );\n\n            // if this is not a \"special\" team button, give it a context menu\n            if (!this.props.url.endsWith('create_team') && !this.props.url.endsWith('select_team')) {\n                teamButton = (\n                    <CopyUrlContextMenu\n                        link={this.props.url}\n                        menuId={this.props.url}\n                    >\n                        {teamButton}\n                    </CopyUrlContextMenu>\n                );\n            }\n        } else {\n            teamButton = (\n                <Link\n                    className={disabled}\n                    to={this.props.url}\n                    onClick={handleClick}\n                >\n                    {btn}\n                </Link>\n            );\n        }\n\n        return (\n            <div\n                className={`team-container ${teamClass}`}\n            >\n                {teamButton}\n            </div>\n        );\n    }\n}\n\nTeamButton.defaultProps = {\n    btnClass: '',\n    tip: '',\n    placement: 'right',\n    active: false,\n    disabled: false,\n    unread: false,\n    mentions: 0,\n};\n\nTeamButton.propTypes = {\n    btnClass: PropTypes.string,\n    url: PropTypes.string.isRequired,\n    displayName: PropTypes.string,\n    content: PropTypes.node,\n    tip: PropTypes.node.isRequired,\n    active: PropTypes.bool,\n    disabled: PropTypes.bool,\n    unread: PropTypes.bool,\n    mentions: PropTypes.number,\n    placement: PropTypes.oneOf(['left', 'right', 'top', 'bottom']),\n    teamIconUrl: PropTypes.string,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport Permissions from 'mattermost-redux/constants/permissions';\nimport classNames from 'classnames';\n\nimport {filterAndSortTeamsByDisplayName} from 'utils/team_utils.jsx';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport Pluggable from 'plugins/pluggable';\n\nimport TeamButton from './components/team_button.jsx';\n\nexport default class TeamSidebar extends React.PureComponent {\n    static propTypes = {\n        myTeams: PropTypes.array.isRequired,\n        currentTeamId: PropTypes.string.isRequired,\n        moreTeamsToJoin: PropTypes.bool.isRequired,\n        myTeamMembers: PropTypes.object.isRequired,\n        isOpen: PropTypes.bool.isRequired,\n        experimentalPrimaryTeam: PropTypes.string,\n        locale: PropTypes.string.isRequired,\n        actions: PropTypes.shape({\n            getTeams: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    componentDidMount() {\n        this.props.actions.getTeams(0, 200);\n    }\n\n    render() {\n        const root = document.querySelector('#root');\n        if (this.props.myTeams.length <= 1) {\n            root.classList.remove('multi-teams');\n            return null;\n        }\n        root.classList.add('multi-teams');\n\n        const teams = filterAndSortTeamsByDisplayName(this.props.myTeams, this.props.locale).\n            map((team) => {\n                const member = this.props.myTeamMembers[team.id];\n                return (\n                    <TeamButton\n                        key={'switch_team_' + team.name}\n                        url={`/${team.name}`}\n                        tip={team.display_name}\n                        active={team.id === this.props.currentTeamId}\n                        displayName={team.display_name}\n                        unread={member.msg_count > 0}\n                        mentions={member.mention_count}\n                        teamIconUrl={Utils.imageURLForTeam(team)}\n                    />\n                );\n            });\n\n        if (this.props.moreTeamsToJoin && !this.props.experimentalPrimaryTeam) {\n            teams.push(\n                <TeamButton\n                    btnClass='team-btn__add'\n                    key='more_teams'\n                    url='/select_team'\n                    tip={\n                        <FormattedMessage\n                            id='team_sidebar.join'\n                            defaultMessage='Other teams you can join.'\n                        />\n                    }\n                    content={'+'}\n                />\n            );\n        } else {\n            teams.push(\n                <SystemPermissionGate\n                    permissions={[Permissions.CREATE_TEAM]}\n                    key='more_teams'\n                >\n                    <TeamButton\n                        btnClass='team-btn__add'\n                        url='/create_team'\n                        tip={\n                            <FormattedMessage\n                                id='navbar_dropdown.create'\n                                defaultMessage='Create a New Team'\n                            />\n                        }\n                        content={'+'}\n                    />\n                </SystemPermissionGate>\n            );\n        }\n\n        teams.push(\n            <div\n                key='team-sidebar-bottom-plugin'\n                className='team-sidebar-bottom-plugin'\n            >\n                <Pluggable pluggableName='BottomTeamSidebar'/>\n            </div>\n        );\n\n        return (\n            <div className={classNames('team-sidebar', {'move--right': this.props.isOpen})}>\n                <div className='team-wrapper'>\n                    {teams}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getTeams} from 'mattermost-redux/actions/teams';\nimport {withRouter} from 'react-router-dom';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getMyTeams, getJoinableTeamIds, getTeamMemberships, getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\n\nimport {getCurrentLocale} from 'selectors/i18n';\nimport {getIsLhsOpen} from 'selectors/lhs';\n\nimport TeamSidebar from './team_sidebar_controller.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    const experimentalPrimaryTeam = config.ExperimentalPrimaryTeam;\n    const joinableTeams = getJoinableTeamIds(state);\n    const moreTeamsToJoin = joinableTeams && joinableTeams.length > 0;\n\n    return {\n        currentTeamId: getCurrentTeamId(state),\n        myTeams: getMyTeams(state),\n        myTeamMembers: getTeamMemberships(state),\n        isOpen: getIsLhsOpen(state),\n        experimentalPrimaryTeam,\n        locale: getCurrentLocale(state),\n        moreTeamsToJoin,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getTeams,\n        }, dispatch),\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(TeamSidebar));\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport LoadingScreen from 'components/loading_screen';\nimport QuickInput from 'components/quick_input';\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport loadingGif from 'images/load.gif';\n\nconst NEXT_BUTTON_TIMEOUT_MILLISECONDS = 500;\n\nexport default class SearchableChannelList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.createChannelRow = this.createChannelRow.bind(this);\n        this.nextPage = this.nextPage.bind(this);\n        this.previousPage = this.previousPage.bind(this);\n        this.doSearch = this.doSearch.bind(this);\n\n        this.nextTimeoutId = 0;\n\n        this.state = {\n            joiningChannel: '',\n            page: 0,\n            nextDisabled: false,\n        };\n    }\n\n    componentDidMount() {\n        // only focus the search box on desktop so that we don't cause the keyboard to open on mobile\n        if (!UserAgent.isMobile() && this.refs.filter) {\n            this.refs.filter.focus();\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.page !== this.state.page) {\n            $(this.refs.channelList).scrollTop(0);\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (nextProps.isSearch && !this.props.isSearch) {\n            this.setState({page: 0});\n        }\n    }\n\n    handleJoin(channel) {\n        this.setState({joiningChannel: channel.id});\n        this.props.handleJoin(\n            channel,\n            () => {\n                this.setState({joiningChannel: ''});\n            }\n        );\n    }\n\n    createChannelRow(channel) {\n        let joinButton;\n        if (this.state.joiningChannel === channel.id) {\n            joinButton = (\n                <img\n                    className='join-channel-loading-gif'\n                    src={loadingGif}\n                />\n            );\n        } else {\n            joinButton = (\n                <button\n                    onClick={this.handleJoin.bind(this, channel)}\n                    className='btn btn-primary'\n                    disabled={this.state.joiningChannel !== '' && this.state.joiningChannel !== channel.id}\n                >\n                    <FormattedMessage\n                        id='more_channels.join'\n                        defaultMessage='Join'\n                    />\n                </button>\n            );\n        }\n\n        return (\n            <div\n                className='more-modal__row'\n                key={channel.id}\n            >\n                <div className='more-modal__details'>\n                    <p className='more-modal__name'>{channel.display_name}</p>\n                    <p className='more-modal__description'>{channel.purpose}</p>\n                </div>\n                <div className='more-modal__actions'>\n                    {joinButton}\n                </div>\n            </div>\n        );\n    }\n\n    nextPage(e) {\n        e.preventDefault();\n        this.setState({page: this.state.page + 1, nextDisabled: true});\n        this.nextTimeoutId = setTimeout(() => this.setState({nextDisabled: false}), NEXT_BUTTON_TIMEOUT_MILLISECONDS);\n        this.props.nextPage(this.state.page + 1);\n        $(ReactDOM.findDOMNode(this.refs.channelListScroll)).scrollTop(0);\n    }\n\n    previousPage(e) {\n        e.preventDefault();\n        this.setState({page: this.state.page - 1});\n        $(ReactDOM.findDOMNode(this.refs.channelListScroll)).scrollTop(0);\n    }\n\n    doSearch() {\n        const term = this.refs.filter.value;\n        this.props.search(term);\n        if (term === '') {\n            this.setState({page: 0});\n        }\n    }\n\n    render() {\n        const channels = this.props.channels;\n        let listContent;\n        let nextButton;\n        let previousButton;\n\n        if (this.props.loading && channels.length === 0) {\n            listContent = <LoadingScreen style={{marginTop: '50%'}}/>;\n        } else if (channels.length === 0) {\n            listContent = (\n                <div className='no-channel-message'>\n                    <p className='primary-message'>\n                        <FormattedMessage\n                            id='more_channels.noMore'\n                            defaultMessage='No more channels to join'\n                        />\n                    </p>\n                    {this.props.noResultsText}\n                </div>\n            );\n        } else {\n            const pageStart = this.state.page * this.props.channelsPerPage;\n            const pageEnd = pageStart + this.props.channelsPerPage;\n            const channelsToDisplay = this.props.channels.slice(pageStart, pageEnd);\n            listContent = channelsToDisplay.map(this.createChannelRow);\n\n            if (channelsToDisplay.length >= this.props.channelsPerPage && pageEnd < this.props.channels.length) {\n                nextButton = (\n                    <button\n                        className='btn btn-default filter-control filter-control__next'\n                        onClick={this.nextPage}\n                        disabled={this.state.nextDisabled}\n                    >\n                        <FormattedMessage\n                            id='more_channels.next'\n                            defaultMessage='Next'\n                        />\n                    </button>\n                );\n            }\n\n            if (this.state.page > 0) {\n                previousButton = (\n                    <button\n                        className='btn btn-default filter-control filter-control__prev'\n                        onClick={this.previousPage}\n                    >\n                        <FormattedMessage\n                            id='more_channels.prev'\n                            defaultMessage='Previous'\n                        />\n                    </button>\n                );\n            }\n        }\n\n        return (\n            <div className='filtered-user-list'>\n                <div className='filter-row'>\n                    <div className='col-sm-12'>\n                        <QuickInput\n                            id='searchChannelsTextbox'\n                            ref='filter'\n                            className='form-control filter-textbox'\n                            placeholder={localizeMessage('filtered_channels_list.search', 'Search channels')}\n                            onInput={this.doSearch}\n                        />\n                    </div>\n                </div>\n                <div\n                    ref='channelList'\n                    className='more-modal__list'\n                >\n                    <div ref='channelListScroll'>\n                        {listContent}\n                    </div>\n                </div>\n                <div className='filter-controls'>\n                    {previousButton}\n                    {nextButton}\n                </div>\n            </div>\n        );\n    }\n}\n\nSearchableChannelList.defaultProps = {\n    channels: [],\n    isSearch: false,\n};\n\nSearchableChannelList.propTypes = {\n    channels: PropTypes.arrayOf(PropTypes.object),\n    channelsPerPage: PropTypes.number,\n    nextPage: PropTypes.func.isRequired,\n    isSearch: PropTypes.bool,\n    search: PropTypes.func.isRequired,\n    handleJoin: PropTypes.func.isRequired,\n    noResultsText: PropTypes.object,\n    loading: PropTypes.bool,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {searchMoreChannels} from 'actions/channel_actions.jsx';\n\nimport {getRelativeChannelURL} from 'utils/url.jsx';\n\nimport SearchableChannelList from 'components/searchable_channel_list.jsx';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nconst CHANNELS_CHUNK_SIZE = 50;\nconst CHANNELS_PER_PAGE = 50;\nconst SEARCH_TIMEOUT_MILLISECONDS = 100;\n\nexport default class MoreChannels extends React.Component {\n    static propTypes = {\n        channels: PropTypes.array.isRequired,\n        currentUserId: PropTypes.string.isRequired,\n        teamId: PropTypes.string.isRequired,\n        teamName: PropTypes.string.isRequired,\n        onModalDismissed: PropTypes.func,\n        handleNewChannel: PropTypes.func,\n        channelsRequestStarted: PropTypes.bool,\n        actions: PropTypes.shape({\n            getChannels: PropTypes.func.isRequired,\n            joinChannel: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.searchTimeoutId = 0;\n\n        this.state = {\n            show: true,\n            search: false,\n            searchedChannels: [],\n            serverError: null,\n            searching: false,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getChannels(this.props.teamId, 0, CHANNELS_CHUNK_SIZE * 2);\n    }\n\n    handleHide = () => {\n        this.setState({show: false});\n    }\n\n    handleExit = () => {\n        if (this.props.onModalDismissed) {\n            this.props.onModalDismissed();\n        }\n    }\n\n    onChange = (force) => {\n        if (this.state.search && !force) {\n            return;\n        }\n\n        this.setState({\n            searchedChannels: [],\n            serverError: null,\n        });\n    }\n\n    nextPage = (page) => {\n        this.props.actions.getChannels(this.props.teamId, page + 1, CHANNELS_PER_PAGE);\n    }\n\n    handleJoin = (channel, done) => {\n        const {actions, currentUserId, teamId, teamName} = this.props;\n        actions.joinChannel(currentUserId, teamId, channel.id).then((result) => {\n            if (result.error) {\n                this.setState({serverError: result.error.message});\n            } else {\n                browserHistory.push(getRelativeChannelURL(teamName, channel.name));\n                this.handleHide();\n            }\n\n            if (done) {\n                done();\n            }\n        });\n    };\n\n    search = (term) => {\n        clearTimeout(this.searchTimeoutId);\n\n        if (term === '') {\n            this.onChange(true);\n            this.setState({search: false, searchedChannels: [], searching: false});\n            this.searchTimeoutId = '';\n            return;\n        }\n        this.setState({search: true, searching: true});\n\n        const searchTimeoutId = setTimeout(\n            () => {\n                searchMoreChannels(\n                    term,\n                    (channels) => {\n                        if (searchTimeoutId !== this.searchTimeoutId) {\n                            return;\n                        }\n                        this.setSearchResults(channels);\n                    }\n                );\n            },\n            SEARCH_TIMEOUT_MILLISECONDS\n        );\n\n        this.searchTimeoutId = searchTimeoutId;\n    }\n\n    setSearchResults = (channels) => {\n        this.setState({searchedChannels: channels.filter((c) => c.delete_at === 0), searching: false});\n    }\n\n    render() {\n        const {\n            channels,\n            teamId,\n            channelsRequestStarted,\n        } = this.props;\n\n        const {\n            search,\n            searchedChannels,\n            serverError: serverErrorState,\n            show,\n            searching,\n        } = this.state;\n\n        let serverError;\n        if (serverErrorState) {\n            serverError = <div className='form-group has-error'><label className='control-label'>{serverErrorState}</label></div>;\n        }\n\n        const createNewChannelButton = (\n            <TeamPermissionGate\n                teamId={teamId}\n                permissions={[Permissions.CREATE_PUBLIC_CHANNEL]}\n            >\n                <button\n                    id='createNewChannel'\n                    type='button'\n                    className='btn btn-primary channel-create-btn'\n                    onClick={this.props.handleNewChannel}\n                >\n                    <FormattedMessage\n                        id='more_channels.create'\n                        defaultMessage='Create New Channel'\n                    />\n                </button>\n            </TeamPermissionGate>\n        );\n\n        const createChannelHelpText = (\n            <TeamPermissionGate\n                teamId={teamId}\n                permissions={[Permissions.CREATE_PUBLIC_CHANNEL]}\n            >\n                <p className='secondary-message'>\n                    <FormattedMessage\n                        id='more_channels.createClick'\n                        defaultMessage=\"Click 'Create New Channel' to make a new one\"\n                    />\n                </p>\n            </TeamPermissionGate>\n        );\n\n        return (\n            <Modal\n                dialogClassName='more-modal more-modal--action'\n                show={show}\n                onHide={this.handleHide}\n                onExited={this.handleExit}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title>\n                        <FormattedMessage\n                            id='more_channels.title'\n                            defaultMessage='More Channels'\n                        />\n                    </Modal.Title>\n                    {createNewChannelButton}\n                </Modal.Header>\n                <Modal.Body>\n                    <SearchableChannelList\n                        channels={search ? searchedChannels : channels}\n                        channelsPerPage={CHANNELS_PER_PAGE}\n                        nextPage={this.nextPage}\n                        isSearch={search}\n                        search={this.search}\n                        handleJoin={this.handleJoin}\n                        noResultsText={createChannelHelpText}\n                        loading={search ? searching : channelsRequestStarted}\n                    />\n                    {serverError}\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {createSelector} from 'reselect';\n\nimport {getChannels, joinChannel} from 'mattermost-redux/actions/channels';\nimport {getOtherChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {RequestStatus} from 'mattermost-redux/constants';\n\nimport MoreChannels from './more_channels.jsx';\n\nconst getNotArchivedOtherChannels = createSelector(\n    getOtherChannels,\n    (channels) => channels && channels.filter((c) => c.delete_at === 0)\n);\n\nfunction mapStateToProps(state) {\n    const team = getCurrentTeam(state) || {};\n\n    return {\n        channels: getNotArchivedOtherChannels(state) || [],\n        currentUserId: getCurrentUserId(state),\n        teamId: team.id,\n        teamName: team.name,\n        channelsRequestStarted: state.requests.channels.getChannels.status === RequestStatus.STARTED,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getChannels,\n            joinChannel,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoreChannels);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport {Client4} from 'mattermost-redux/client';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {openDirectChannelToUser, openGroupChannelToUsers} from 'actions/channel_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport {displayEntireNameForUser, localizeMessage} from 'utils/utils.jsx';\nimport MultiSelect from 'components/multiselect/multiselect.jsx';\nimport ProfilePicture from 'components/profile_picture.jsx';\n\nconst USERS_PER_PAGE = 50;\nconst MAX_SELECTABLE_VALUES = Constants.MAX_USERS_IN_GM - 1;\n\nexport default class MoreDirectChannels extends React.Component {\n    static propTypes = {\n\n        currentUserId: PropTypes.string.isRequired,\n        currentTeamId: PropTypes.string.isRequired,\n        currentTeamName: PropTypes.string.isRequired,\n        searchTerm: PropTypes.string.isRequired,\n        users: PropTypes.arrayOf(PropTypes.object).isRequired,\n        statuses: PropTypes.object.isRequired,\n        totalCount: PropTypes.number,\n\n        /*\n         * List of current channel members of existing channel\n         */\n        currentChannelMembers: PropTypes.arrayOf(PropTypes.object),\n\n        /*\n         * Whether the modal is for existing channel or not\n         */\n        isExistingChannel: PropTypes.bool.isRequired,\n\n        /*\n         * The mode by which direct messages are restricted, if at all.\n         */\n        restrictDirectMessage: PropTypes.string,\n        onModalDismissed: PropTypes.func,\n        onHide: PropTypes.func,\n\n        actions: PropTypes.shape({\n            getProfiles: PropTypes.func.isRequired,\n            getProfilesInTeam: PropTypes.func.isRequired,\n            getStatusesByIds: PropTypes.func.isRequired,\n            searchProfiles: PropTypes.func.isRequired,\n            setModalSearchTerm: PropTypes.func.isRequired,\n            getTotalUsersStats: PropTypes.func.isRequired,\n            loadStatusesForProfilesList: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.searchTimeoutId = 0;\n\n        const values = [];\n\n        if (props.currentChannelMembers) {\n            for (let i = 0; i < props.currentChannelMembers.length; i++) {\n                const user = Object.assign({}, props.currentChannelMembers[i]);\n\n                if (user.id === props.currentUserId) {\n                    continue;\n                }\n\n                values.push(user);\n            }\n        }\n\n        this.state = {\n            values,\n            show: true,\n            search: false,\n            saving: false,\n            loadingUsers: true,\n        };\n    }\n\n    componentDidMount() {\n        this.getUserProfiles();\n        this.props.actions.getTotalUsersStats();\n        this.loadProfilesMissingStatus(this.props.users, this.props.statuses);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.searchTerm !== nextProps.searchTerm) {\n            clearTimeout(this.searchTimeoutId);\n\n            const searchTerm = nextProps.searchTerm;\n            if (searchTerm === '') {\n                this.resetPaging();\n            } else {\n                const teamId = nextProps.restrictDirectMessage === 'any' ? '' : nextProps.currentTeamId;\n\n                this.searchTimeoutId = setTimeout(\n                    async () => {\n                        this.setUsersLoadingState(true);\n                        const {data} = await this.props.actions.searchProfiles(searchTerm, {team_id: teamId});\n                        if (data) {\n                            this.props.actions.loadStatusesForProfilesList(data);\n                            this.resetPaging();\n                        }\n                        this.setUsersLoadingState(false);\n                    },\n                    Constants.SEARCH_TIMEOUT_MILLISECONDS\n                );\n            }\n        }\n\n        if (\n            this.props.users.length !== nextProps.users.length ||\n            Object.keys(this.props.statuses).length !== Object.keys(nextProps.statuses).length\n        ) {\n            this.loadProfilesMissingStatus(nextProps.users, nextProps.statuses);\n        }\n    }\n\n    loadProfilesMissingStatus = (users = [], statuses = {}) => {\n        const missingStatusByIds = users.\n            filter((user) => !statuses[user.id]).\n            map((user) => user.id);\n\n        if (missingStatusByIds.length > 0) {\n            this.props.actions.getStatusesByIds(missingStatusByIds);\n        }\n    }\n\n    handleHide = () => {\n        this.props.actions.setModalSearchTerm('');\n        this.setState({show: false});\n    }\n\n    setUsersLoadingState = (loadingState) => {\n        this.setState({\n            loadingUsers: loadingState,\n        });\n    }\n\n    handleExit = () => {\n        if (this.exitToChannel) {\n            browserHistory.push(this.exitToChannel);\n        }\n\n        if (this.props.onModalDismissed) {\n            this.props.onModalDismissed();\n        }\n\n        if (this.props.onHide) {\n            this.props.onHide();\n        }\n    }\n\n    handleSubmit = (values = this.state.values) => {\n        if (this.state.saving) {\n            return;\n        }\n\n        const userIds = values.map((v) => v.id);\n        if (userIds.length === 0) {\n            return;\n        }\n\n        this.setState({saving: true});\n\n        const success = (channel) => {\n            // Due to how react-overlays Modal handles focus, we delay pushing\n            // the new channel information until the modal is fully exited.\n            // The channel information will be pushed in `handleExit`\n            this.exitToChannel = '/' + this.props.currentTeamName + '/channels/' + channel.name;\n            this.setState({saving: false});\n            this.handleHide();\n        };\n\n        const error = () => {\n            this.setState({saving: false});\n        };\n\n        if (userIds.length === 1) {\n            openDirectChannelToUser(userIds[0], success, error);\n        } else {\n            openGroupChannelToUsers(userIds, success, error);\n        }\n    }\n\n    addValue = (value) => {\n        const values = Object.assign([], this.state.values);\n\n        if (values.indexOf(value) === -1) {\n            values.push(value);\n        }\n\n        this.setState({values});\n    }\n\n    getUserProfiles = (page) => {\n        const pageNum = page ? page + 1 : 0;\n        if (this.props.restrictDirectMessage === 'any') {\n            this.props.actions.getProfiles(pageNum, USERS_PER_PAGE * 2).then(() => {\n                this.setUsersLoadingState(false);\n            });\n        } else {\n            this.props.actions.getProfilesInTeam(this.props.currentTeamId, pageNum, USERS_PER_PAGE * 2).then(() => {\n                this.setUsersLoadingState(false);\n            });\n        }\n    }\n\n    handlePageChange = (page, prevPage) => {\n        if (page > prevPage) {\n            this.setUsersLoadingState(true);\n            this.getUserProfiles(page);\n        }\n    }\n\n    resetPaging = () => {\n        if (this.refs.multiselect) {\n            this.refs.multiselect.resetPaging();\n        }\n    }\n\n    search = (term) => {\n        this.props.actions.setModalSearchTerm(term);\n    }\n\n    handleDelete = (values) => {\n        this.setState({values});\n    }\n\n    renderOption = (option, isSelected, onAdd) => {\n        const displayName = displayEntireNameForUser(option);\n\n        let modalName = displayName;\n        if (option.id === this.props.currentUserId) {\n            modalName = (\n                <FormattedMessage\n                    id='more_direct_channels.directchannel.you'\n                    defaultMessage='{displayname} (you)'\n                    values={{\n                        displayname: displayName,\n                    }}\n                />\n            );\n        } else if (option.delete_at) {\n            modalName = (\n                <FormattedMessage\n                    id='more_direct_channels.directchannel.deactivated'\n                    defaultMessage='{displayname} - Deactivated'\n                    values={{\n                        displayname: displayName,\n                    }}\n                />\n            );\n        }\n\n        var rowSelected = '';\n        if (isSelected) {\n            rowSelected = 'more-modal__row--selected';\n        }\n\n        const status = option.delete_at ? null : this.props.statuses[option.id];\n\n        return (\n            <div\n                key={option.id}\n                ref={isSelected ? 'selected' : option.id}\n                className={'more-modal__row clickable ' + rowSelected}\n                onClick={() => onAdd(option)}\n            >\n                <ProfilePicture\n                    src={Client4.getProfilePictureUrl(option.id, option.last_picture_update)}\n                    status={status}\n                    width='32'\n                    height='32'\n                />\n                <div\n                    className='more-modal__details'\n                >\n                    <div className='more-modal__name'>\n                        {modalName}\n                    </div>\n                    <div className='more-modal__description'>\n                        {option.email}\n                    </div>\n                </div>\n                <div className='more-modal__actions'>\n                    <div className='more-modal__actions--round'>\n                        <i\n                            className='fa fa-plus'\n                            title={localizeMessage('generic_icons.add', 'Add Icon')}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderValue(props) {\n        return props.data.username;\n    }\n\n    handleSubmitImmediatelyOn = (value) => {\n        return value.id === this.props.currentUserId || Boolean(value.delete_at);\n    }\n\n    render() {\n        let note;\n        if (this.props.currentChannelMembers) {\n            if (this.state.values && this.state.values.length >= MAX_SELECTABLE_VALUES) {\n                note = (\n                    <FormattedMessage\n                        id='more_direct_channels.new_convo_note.full'\n                        defaultMessage={'You\\'ve reached the maximum number of people for this conversation. Consider creating a private channel instead.'}\n                    />\n                );\n            } else if (this.props.isExistingChannel) {\n                note = (\n                    <FormattedMessage\n                        id='more_direct_channels.new_convo_note'\n                        defaultMessage={'This will start a new conversation. If you\\'re adding a lot of people, consider creating a private channel instead.'}\n                    />\n                );\n            }\n        }\n\n        const buttonSubmitText = localizeMessage('multiselect.go', 'Go');\n        const buttonSubmitLoadingText = localizeMessage('multiselect.loading', 'Loading..');\n\n        const numRemainingText = (\n            <FormattedMessage\n                id='multiselect.numPeopleRemaining'\n                defaultMessage='Use ↑↓ to browse, ↵ to select. You can add {num, number} more {num, plural, one {person} other {people}}. '\n                values={{\n                    num: MAX_SELECTABLE_VALUES - this.state.values.length,\n                }}\n            />\n        );\n\n        let users = this.props.users || [];\n\n        if (this.state.values.length) {\n            users = users.filter((user) => user.delete_at === 0 && user.id !== this.props.currentUserId);\n        } else {\n            const active = [];\n            const inactive = [];\n            for (const user of users) {\n                (user.delete_at ? inactive : active).push(user);\n            }\n            users = active.concat(inactive);\n        }\n\n        return (\n            <Modal\n                dialogClassName={'more-modal more-direct-channels'}\n                show={this.state.show}\n                onHide={this.handleHide}\n                onExited={this.handleExit}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title>\n                        <FormattedMessage\n                            id='more_direct_channels.title'\n                            defaultMessage='Direct Messages'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <MultiSelect\n                        key='moreDirectChannelsList'\n                        ref='multiselect'\n                        options={users}\n                        optionRenderer={this.renderOption}\n                        values={this.state.values}\n                        valueKey='id'\n                        valueRenderer={this.renderValue}\n                        perPage={USERS_PER_PAGE}\n                        handlePageChange={this.handlePageChange}\n                        handleInput={this.search}\n                        handleDelete={this.handleDelete}\n                        handleAdd={this.addValue}\n                        handleSubmit={this.handleSubmit}\n                        noteText={note}\n                        maxValues={MAX_SELECTABLE_VALUES}\n                        numRemainingText={numRemainingText}\n                        buttonSubmitText={buttonSubmitText}\n                        buttonSubmitLoadingText={buttonSubmitLoadingText}\n                        submitImmediatelyOn={this.handleSubmitImmediatelyOn}\n                        saving={this.state.saving}\n                        loading={this.state.loadingUsers}\n                        users={this.props.users}\n                        totalCount={this.props.totalCount}\n                    />\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {\n    getProfiles,\n    getProfilesInTeam,\n    getStatusesByIds,\n    getTotalUsersStats,\n    searchProfiles,\n} from 'mattermost-redux/actions/users';\nimport {\n    getCurrentUserId,\n    getProfiles as selectProfiles,\n    getProfilesInCurrentChannel,\n    getProfilesInCurrentTeam,\n    searchProfiles as searchProfilesSelector,\n    searchProfilesInCurrentTeam,\n    getTotalUsersStats as getTotalUsersStatsSelector,\n} from 'mattermost-redux/selectors/entities/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {loadStatusesForProfilesList} from 'actions/status_actions.jsx';\nimport {setModalSearchTerm} from 'actions/views/search';\n\nimport MoreDirectChannels from './more_direct_channels.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    let currentChannelMembers = [];\n    if (ownProps.isExistingChannel) {\n        currentChannelMembers = getProfilesInCurrentChannel(state);\n    }\n\n    const config = getConfig(state);\n    const restrictDirectMessage = config.RestrictDirectMessage;\n\n    const searchTerm = state.views.search.modalSearch;\n\n    let users;\n    if (searchTerm) {\n        if (restrictDirectMessage === 'any') {\n            users = searchProfilesSelector(state, searchTerm, false);\n        } else {\n            users = searchProfilesInCurrentTeam(state, searchTerm, false);\n        }\n    } else if (restrictDirectMessage === 'any') {\n        users = selectProfiles(state);\n    } else {\n        users = getProfilesInCurrentTeam(state);\n    }\n\n    const team = getCurrentTeam(state);\n    const stats = getTotalUsersStatsSelector(state) || {total_users_count: 0};\n\n    return {\n        currentTeamId: team.id,\n        currentTeamName: team.name,\n        searchTerm,\n        users,\n        statuses: state.entities.users.statuses,\n        currentChannelMembers,\n        currentUserId: getCurrentUserId(state),\n        restrictDirectMessage,\n        totalCount: stats.total_users_count,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getProfiles,\n            getProfilesInTeam,\n            getStatusesByIds,\n            searchProfiles,\n            setModalSearchTerm,\n            getTotalUsersStats,\n            loadStatusesForProfilesList,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoreDirectChannels);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport Constants from 'utils/constants.jsx';\nimport {getShortenedURL} from 'utils/url.jsx';\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nexport default class NewChannelModal extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Set whether to show the modal or not\n         */\n        show: PropTypes.bool.isRequired,\n\n        /**\n         * Id of the active team\n         */\n        currentTeamId: PropTypes.string.isRequired,\n\n        /**\n         * The type of channel to create, 'O' or 'P'\n         */\n        channelType: PropTypes.string.isRequired,\n\n        /**\n         * The data needed to create the channel\n         */\n        channelData: PropTypes.object.isRequired,\n\n        /**\n         * Set to force form submission on CTRL/CMD + ENTER instead of ENTER\n         */\n        ctrlSend: PropTypes.bool,\n\n        /**\n         * Server error from failed channel creation\n         */\n        serverError: PropTypes.node,\n\n        /**\n         * Function used to submit the channel\n         */\n        onSubmitChannel: PropTypes.func.isRequired,\n\n        /**\n         * Function to call when modal is dimissed\n         */\n        onModalDismissed: PropTypes.func.isRequired,\n\n        /**\n         * Function to call when modal has exited\n         */\n        onModalExited: PropTypes.func,\n\n        /**\n         * Function to call to switch channel type\n         */\n        onTypeSwitched: PropTypes.func.isRequired,\n\n        /**\n         * Function to call when edit URL button is pressed\n         */\n        onChangeURLPressed: PropTypes.func.isRequired,\n\n        /**\n         * Function to call when channel data is modified\n         */\n        onDataChanged: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            displayNameError: '',\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (nextProps.show === true && this.props.show === false) {\n            this.setState({\n                displayNameError: '',\n            });\n        }\n    }\n\n    componentDidMount() {\n        // ???\n        if (UserAgent.isInternetExplorer() || UserAgent.isEdge()) {\n            $('body').addClass('browser--ie');\n        }\n    }\n\n    onEnterKeyDown = (e) => {\n        const enterPressed = Utils.isKeyPressed(e, Constants.KeyCodes.ENTER);\n        const {ctrlSend} = this.props;\n\n        // Enter pressed alone without required cmd or ctrl key\n        if (ctrlSend && enterPressed && !e.ctrlKey) {\n            e.preventDefault();\n        } else if ((ctrlSend && enterPressed && e.ctrlKey) || (!ctrlSend && enterPressed && !e.shiftKey && !e.altKey)) {\n            this.handleSubmit(e);\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const displayName = ReactDOM.findDOMNode(this.refs.display_name).value.trim();\n        if (displayName.length < Constants.MIN_CHANNELNAME_LENGTH) {\n            this.setState({displayNameError: true});\n            return;\n        }\n\n        this.props.onSubmitChannel();\n    }\n\n    handleChange = () => {\n        const newData = {\n            displayName: this.refs.display_name.value,\n            header: this.refs.channel_header.value,\n            purpose: this.refs.channel_purpose.value,\n        };\n        this.props.onDataChanged(newData);\n    }\n\n    handleOnURLChange = (e) => {\n        e.preventDefault();\n        if (this.props.onChangeURLPressed) {\n            this.props.onChangeURLPressed();\n        }\n    }\n\n    render() {\n        var displayNameError = null;\n        var serverError = null;\n        var displayNameClass = 'form-group';\n\n        if (this.state.displayNameError) {\n            displayNameError = (\n                <p className='input__help error'>\n                    <FormattedMessage\n                        id='channel_modal.displayNameError'\n                        defaultMessage='Channel name must be 2 or more characters'\n                    />\n                    {this.state.displayNameError}\n                </p>\n            );\n            displayNameClass += ' has-error';\n        }\n\n        if (this.props.serverError) {\n            serverError = <div className='form-group has-error'><div className='col-sm-12'><p className='input__help error'>{this.props.serverError}</p></div></div>;\n        }\n\n        const createPublicChannelLink = (\n            <button\n                className='style--none color--link'\n                onClick={this.props.onTypeSwitched}\n            >\n                <FormattedMessage\n                    id='channel_modal.publicChannel1'\n                    defaultMessage='Create a public channel'\n                />\n            </button>\n        );\n\n        const createPrivateChannelLink = (\n            <button\n                className='style--none color--link'\n                onClick={this.props.onTypeSwitched}\n                tabIndex='6'\n            >\n                <FormattedMessage\n                    id='channel_modal.privateGroup2'\n                    defaultMessage='Create a private channel'\n                />\n            </button>\n        );\n\n        var channelSwitchText = '';\n        let inputPrefixId = '';\n        switch (this.props.channelType) {\n        case 'P':\n            channelSwitchText = (\n                <div className='modal-intro'>\n                    <FormattedMessage\n                        id='channel_modal.privateGroup1'\n                        defaultMessage='Create a new private channel with restricted membership. '\n                    />\n                    <TeamPermissionGate\n                        teamId={this.props.currentTeamId}\n                        permissions={[Permissions.CREATE_PUBLIC_CHANNEL]}\n                    >\n                        {createPublicChannelLink}\n                    </TeamPermissionGate>\n                </div>\n            );\n            inputPrefixId = 'newPrivateChannel';\n            break;\n        case 'O':\n            channelSwitchText = (\n                <div className='modal-intro'>\n                    <FormattedMessage\n                        id='channel_modal.publicChannel2'\n                        defaultMessage='Create a new public channel anyone can join. '\n                    />\n                    <TeamPermissionGate\n                        teamId={this.props.currentTeamId}\n                        permissions={[Permissions.CREATE_PRIVATE_CHANNEL]}\n                    >\n                        {createPrivateChannelLink}\n                    </TeamPermissionGate>\n                </div>\n            );\n            inputPrefixId = 'newPublicChannel';\n            break;\n        }\n\n        const prettyTeamURL = getShortenedURL();\n\n        return (\n            <span>\n                <Modal\n                    dialogClassName='new-channel__modal'\n                    show={this.props.show}\n                    bsSize='large'\n                    onHide={this.props.onModalDismissed}\n                    onExited={this.props.onModalExited}\n                    autoFocus={true}\n                    restoreFocus={true}\n                >\n                    <Modal.Header>\n                        <button\n                            type='button'\n                            className='close'\n                            onClick={this.props.onModalDismissed}\n                            tabIndex='5'\n                        >\n                            <span aria-hidden='true'>{'×'}</span>\n                            <span className='sr-only'>{'Close'}</span>\n                        </button>\n                        <Modal.Title>\n                            <FormattedMessage\n                                id='channel_modal.modalTitle'\n                                defaultMessage='New Channel'\n                            />\n                        </Modal.Title>\n                    </Modal.Header>\n                    <form\n                        role='form'\n                        className='form-horizontal'\n                    >\n                        <Modal.Body>\n                            <div>\n                                {channelSwitchText}\n                            </div>\n                            <div className={displayNameClass}>\n                                <label className='col-sm-3 form__label control-label'>\n                                    <FormattedMessage\n                                        id='channel_modal.name'\n                                        defaultMessage='Name'\n                                    />\n                                </label>\n                                <div className='col-sm-9'>\n                                    <input\n                                        id={inputPrefixId + 'Name'}\n                                        onChange={this.handleChange}\n                                        type='text'\n                                        ref='display_name'\n                                        className='form-control'\n                                        placeholder={Utils.localizeMessage('channel_modal.nameEx', 'E.g.: \"Bugs\", \"Marketing\", \"客户支持\"')}\n                                        maxLength={Constants.MAX_CHANNELNAME_LENGTH}\n                                        value={this.props.channelData.displayName}\n                                        autoFocus={true}\n                                        tabIndex='1'\n                                        onKeyDown={this.onEnterKeyDown}\n                                    />\n                                    {displayNameError}\n                                    <p className='input__help dark'>\n                                        {'URL: ' + prettyTeamURL + this.props.channelData.name + ' ('}\n                                        <button\n                                            className='color--link style--none'\n                                            onClick={this.handleOnURLChange}\n                                            tabIndex='7'\n                                        >\n                                            <FormattedMessage\n                                                id='channel_modal.edit'\n                                                defaultMessage='Edit'\n                                            />\n                                        </button>\n                                        {')'}\n                                    </p>\n                                </div>\n                            </div>\n                            <div className='form-group'>\n                                <div className='col-sm-3'>\n                                    <label className='form__label control-label'>\n                                        <FormattedMessage\n                                            id='channel_modal.purpose'\n                                            defaultMessage='Purpose'\n                                        />\n                                    </label>\n                                    <label className='form__label light'>\n                                        <FormattedMessage\n                                            id='channel_modal.optional'\n                                            defaultMessage='(optional)'\n                                        />\n                                    </label>\n                                </div>\n                                <div className='col-sm-9'>\n                                    <textarea\n                                        id={inputPrefixId + 'Purpose'}\n                                        className='form-control no-resize'\n                                        ref='channel_purpose'\n                                        rows='4'\n                                        placeholder={Utils.localizeMessage('channel_modal.purposeEx', 'E.g.: \"A channel to file bugs and improvements\"')}\n                                        maxLength='250'\n                                        value={this.props.channelData.purpose}\n                                        onChange={this.handleChange}\n                                        tabIndex='2'\n                                    />\n                                    <p className='input__help'>\n                                        <FormattedMessage\n                                            id='channel_modal.descriptionHelp'\n                                            defaultMessage='Describe how this channel should be used.'\n                                        />\n                                    </p>\n                                </div>\n                            </div>\n                            <div className='form-group less'>\n                                <div className='col-sm-3'>\n                                    <label className='form__label control-label'>\n                                        <FormattedMessage\n                                            id='channel_modal.header'\n                                            defaultMessage='Header'\n                                        />\n                                    </label>\n                                    <label className='form__label light'>\n                                        <FormattedMessage\n                                            id='channel_modal.optional'\n                                            defaultMessage='(optional)'\n                                        />\n                                    </label>\n                                </div>\n                                <div className='col-sm-9'>\n                                    <textarea\n                                        id={inputPrefixId + 'Header'}\n                                        className='form-control no-resize'\n                                        ref='channel_header'\n                                        rows='4'\n                                        placeholder={Utils.localizeMessage('channel_modal.headerEx', 'E.g.: \"[Link Title](http://example.com)\"')}\n                                        maxLength='1024'\n                                        value={this.props.channelData.header}\n                                        onChange={this.handleChange}\n                                        tabIndex='3'\n                                    />\n                                    <p className='input__help'>\n                                        <FormattedMessage\n                                            id='channel_modal.headerHelp'\n                                            defaultMessage='Set text that will appear in the header of the channel beside the channel name. For example, include frequently used links by typing [Link Title](http://example.com).'\n                                        />\n                                    </p>\n                                    {serverError}\n                                </div>\n                            </div>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <button\n                                type='button'\n                                className='btn btn-default'\n                                onClick={this.props.onModalDismissed}\n                                tabIndex='8'\n                                onBlur={() => document.getElementById(`${inputPrefixId}Name`).focus()}\n                            >\n                                <FormattedMessage\n                                    id='channel_modal.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </button>\n                            <button\n                                onClick={this.handleSubmit}\n                                type='submit'\n                                className='btn btn-primary'\n                                tabIndex='4'\n                            >\n                                <FormattedMessage\n                                    id='channel_modal.createNew'\n                                    defaultMessage='Create New Channel'\n                                />\n                            </button>\n                        </Modal.Footer>\n                    </form>\n                </Modal>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {Preferences} from 'mattermost-redux/constants';\nimport {getBool} from 'mattermost-redux/selectors/entities/preferences';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\n\nimport NewChannelModal from './new_channel_modal.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        ctrlSend: getBool(state, Preferences.CATEGORY_ADVANCED_SETTINGS, 'send_on_ctrl_enter'),\n        currentTeamId: getCurrentTeamId(state),\n    };\n}\n\nexport default connect(mapStateToProps)(NewChannelModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal, OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants';\nimport {getShortenedURL, cleanUpUrlable} from 'utils/url';\nimport {t} from 'utils/i18n';\n\nexport default class ChangeURLModal extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * Set whether to show the modal or not\n        */\n        show: PropTypes.bool.isRequired,\n\n        /**\n        * Set to change the title of the modal\n        */\n        title: PropTypes.node,\n\n        /**\n        * Set to change the submit button text\n        */\n        submitButtonText: PropTypes.node,\n\n        /**\n        * Set to change the current URL\n        */\n        currentURL: PropTypes.string,\n\n        /**\n        * Set to the current team URL\n        */\n        currentTeamURL: PropTypes.string.isRequired,\n\n        /**\n        * Server error from failed channel creation\n        */\n        serverError: PropTypes.node,\n\n        /**\n         * Function to call when modal is submitted\n         */\n        onModalSubmit: PropTypes.func.isRequired,\n\n        /**\n         * Function to call when modal is exited\n         */\n        onModalExited: PropTypes.func,\n\n        /**\n         * Function to call when modal is dimissed\n         */\n        onModalDismissed: PropTypes.func.isRequired,\n    }\n\n    static defaultProps = {\n        show: false,\n        title: 'Change URL',\n        submitButtonText: 'Save',\n        currentURL: '',\n        serverError: null,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentURL: props.currentURL,\n            urlError: '',\n            userEdit: false,\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        // This check prevents the url being deleted when we re-render\n        // because of user status check\n        if (!this.state.userEdit) {\n            this.setState({\n                currentURL: nextProps.currentURL,\n            });\n        }\n    }\n\n    onURLChanged = (e) => {\n        const url = e.target.value.trim();\n        this.setState({currentURL: url.replace(/[^A-Za-z0-9-_]/g, '').toLowerCase(), userEdit: true});\n    }\n\n    formattedError = (key, id, message) => {\n        return (<span key={key}>\n            <FormattedMessage\n                id={id}\n                defaultMessage={message}\n            />\n            <br/>\n        </span>);\n    }\n\n    getURLError = (url) => {\n        let error = []; //eslint-disable-line prefer-const\n\n        if (url.length < 2) {\n            error.push(\n                this.formattedError('error1', t('change_url.longer'), 'URL must be two or more characters.')\n            );\n        }\n        if (url.charAt(0) === '-' || url.charAt(0) === '_') {\n            error.push(\n                this.formattedError('error2', t('change_url.startWithLetter'), 'URL must start with a letter or number.')\n            );\n        }\n        if (url.length > 1 && (url.charAt(url.length - 1) === '-' || url.charAt(url.length - 1) === '_')) {\n            error.push(\n                this.formattedError('error3', t('change_url.endWithLetter'), 'URL must end with a letter or number.')\n            );\n        }\n        if (url.indexOf('__') > -1) {\n            error.push(\n                this.formattedError('error4', t('change_url.noUnderscore'), 'URL can not contain two underscores in a row.')\n            );\n        }\n\n        // In case of error we don't detect\n        if (error.length === 0) {\n            error.push(\n                this.formattedError('errorlast', t('change_url.invalidUrl'), 'Invalid URL')\n            );\n        }\n        return error;\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const url = this.refs.urlinput.value;\n        const cleanedURL = cleanUpUrlable(url);\n        if (cleanedURL !== url || url.length < 2 || url.indexOf('__') > -1) {\n            this.setState({urlError: this.getURLError(url)});\n            return;\n        }\n        this.setState({urlError: '', userEdit: false});\n        this.props.onModalSubmit(url);\n    }\n\n    onCancel = () => {\n        this.setState({urlError: '', userEdit: false});\n        this.props.onModalDismissed();\n    }\n\n    render() {\n        let urlClass = 'input-group input-group--limit';\n        let error = null;\n\n        if (this.state.urlError) {\n            urlClass += ' has-error';\n        }\n\n        if (this.props.serverError || this.state.urlError) {\n            error = (\n                <div className='has-error'>\n                    <p className='input__help error'>\n                        {this.state.urlError || this.props.serverError}\n                    </p>\n                </div>\n            );\n        }\n\n        const fullURL = this.props.currentTeamURL + '/channels';\n        const shortURL = getShortenedURL(fullURL);\n        const urlTooltip = (\n            <Tooltip id='urlTooltip'>{fullURL}</Tooltip>\n        );\n\n        return (\n            <Modal\n                show={this.props.show}\n                onHide={this.onCancel}\n                onExited={this.props.onModalExited}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title>{this.props.title}</Modal.Title>\n                </Modal.Header>\n                <form\n                    role='form'\n                    className='form-horizontal'\n                >\n                    <Modal.Body>\n                        <div className='modal-intro'>\n                            <FormattedMessage\n                                id='channel_flow.changeUrlDescription'\n                                defaultMessage='Some characters are now allowed in URLs and may be removed.'\n                            />\n                        </div>\n                        <div className='form-group'>\n                            <label className='col-sm-3 form__label control-label'>\n                                <FormattedMessage\n                                    id='change_url.urlLabel'\n                                    defaultMessage='Channel URL'\n                                />\n                            </label>\n                            <div className='col-sm-9'>\n                                <div className={urlClass}>\n                                    <OverlayTrigger\n                                        trigger={['hover', 'focus']}\n                                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                                        placement='top'\n                                        overlay={urlTooltip}\n                                    >\n                                        <span className='input-group-addon'>{shortURL}</span>\n                                    </OverlayTrigger>\n                                    <input\n                                        type='text'\n                                        ref='urlinput'\n                                        className='form-control'\n                                        maxLength={Constants.MAX_CHANNELNAME_LENGTH}\n                                        onChange={this.onURLChanged}\n                                        value={this.state.currentURL}\n                                        autoFocus={true}\n                                        tabIndex='1'\n                                    />\n                                </div>\n                                {error}\n                            </div>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button\n                            type='button'\n                            className='btn btn-default'\n                            onClick={this.onCancel}\n                        >\n                            <FormattedMessage\n                                id='change_url.close'\n                                defaultMessage='Close'\n                            />\n                        </button>\n                        <button\n                            onClick={this.onSubmit}\n                            type='submit'\n                            className='btn btn-primary'\n                            tabIndex='2'\n                        >\n                            {this.props.submitButtonText}\n                        </button>\n                    </Modal.Footer>\n                </form>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {getSiteURL} from 'utils/url';\n\nimport ChangeURLModal from './change_url_modal';\n\nfunction mapStateToProps(state) {\n    const currentTeam = getCurrentTeam(state);\n    const currentTeamURL = `${getSiteURL()}/${currentTeam.name}`;\n    return {\n        currentTeamURL,\n    };\n}\n\nexport default connect(mapStateToProps)(ChangeURLModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {cleanUpUrlable} from 'utils/url';\nimport * as Utils from 'utils/utils';\nimport Constants from 'utils/constants';\nimport NewChannelModal from 'components/new_channel_modal';\nimport ChangeURLModal from 'components/change_url_modal';\n\nexport const SHOW_NEW_CHANNEL = 1;\nexport const SHOW_EDIT_URL = 2;\nexport const SHOW_EDIT_URL_THEN_COMPLETE = 3;\n\nexport default class NewChannelFlow extends React.Component {\n    static propTypes = {\n\n        /**\n        * Set whether to show the modal or not\n        */\n        show: PropTypes.bool.isRequired,\n\n        /**\n        * Set to Constants.OPEN_CHANNEL or Constants.PRIVATE_CHANNEL depending on which modal we should show\n        */\n        channelType: PropTypes.string.isRequired,\n\n        /**\n        * Function to call when modal is dimissed\n        */\n        onModalDismissed: PropTypes.func.isRequired,\n\n        /**\n        * The current team ID\n        */\n        currentTeamId: PropTypes.string.isRequired,\n\n        actions: PropTypes.shape({\n            createChannel: PropTypes.func.isRequired,\n            switchToChannel: PropTypes.func.isRequired,\n        }),\n    };\n\n    static defaultProps = {\n        show: false,\n        channelType: Constants.OPEN_CHANNEL,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            serverError: '',\n            channelType: props.channelType || Constants.OPEN_CHANNEL,\n            flowState: SHOW_NEW_CHANNEL,\n            channelDisplayName: '',\n            channelName: '',\n            channelPurpose: '',\n            channelHeader: '',\n            nameModified: false,\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        // If we are being shown, grab channel type from props and clear\n        if (nextProps.show === true && this.props.show === false) {\n            this.setState({\n                serverError: '',\n                channelType: nextProps.channelType,\n                flowState: SHOW_NEW_CHANNEL,\n                channelDisplayName: '',\n                channelName: '',\n                channelPurpose: '',\n                channelHeader: '',\n                nameModified: false,\n            });\n        }\n    }\n\n    onSubmit = () => {\n        if (!this.state.channelDisplayName) {\n            this.setState({serverError: Utils.localizeMessage('channel_flow.invalidName', 'Invalid Channel Name')});\n            return;\n        }\n\n        if (this.state.channelName.length < 2) {\n            this.setState({flowState: SHOW_EDIT_URL_THEN_COMPLETE});\n            return;\n        }\n\n        const {actions, currentTeamId} = this.props;\n        const channel = {\n            team_id: currentTeamId,\n            name: this.state.channelName,\n            display_name: this.state.channelDisplayName,\n            purpose: this.state.channelPurpose,\n            header: this.state.channelHeader,\n            type: this.state.channelType,\n        };\n\n        actions.createChannel(channel).then((result) => {\n            if (result.error) {\n                this.onCreateChannelError(result.error);\n                return;\n            }\n\n            this.props.onModalDismissed();\n            actions.switchToChannel(result.data);\n        });\n    };\n\n    onCreateChannelError = (err) => {\n        if (err.id === 'model.channel.is_valid.2_or_more.app_error') {\n            this.setState({\n                flowState: SHOW_EDIT_URL_THEN_COMPLETE,\n                serverError: (\n                    <FormattedMessage\n                        id='channel_flow.handleTooShort'\n                        defaultMessage='Channel URL must be 2 or more lowercase alphanumeric characters'\n                    />\n                ),\n            });\n        } else if (err.id === 'store.sql_channel.update.exists.app_error') {\n            this.setState({serverError: Utils.localizeMessage('channel_flow.alreadyExist', 'A channel with that URL already exists')});\n        } else {\n            this.setState({serverError: err.message});\n        }\n    };\n\n    typeSwitched = (e) => {\n        e.preventDefault();\n\n        let channelType = Constants.PRIVATE_CHANNEL;\n        if (this.state.channelType === Constants.PRIVATE_CHANNEL) {\n            channelType = Constants.OPEN_CHANNEL;\n        }\n\n        this.setState({\n            channelType,\n            serverError: '',\n        });\n    };\n\n    urlChangeRequested = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n        this.setState({flowState: SHOW_EDIT_URL});\n    };\n\n    urlChangeSubmitted = (newURL) => {\n        if (this.state.flowState === SHOW_EDIT_URL_THEN_COMPLETE) {\n            this.setState({channelName: newURL, nameModified: true}, this.onSubmit);\n        } else {\n            this.setState({flowState: SHOW_NEW_CHANNEL, serverError: null, channelName: newURL, nameModified: true});\n        }\n    };\n\n    urlChangeDismissed = () => {\n        this.setState({flowState: SHOW_NEW_CHANNEL});\n    };\n\n    channelDataChanged = (data) => {\n        this.setState({\n            channelDisplayName: data.displayName,\n            channelPurpose: data.purpose,\n            channelHeader: data.header,\n        });\n        if (!this.state.nameModified) {\n            this.setState({channelName: cleanUpUrlable(data.displayName.trim())});\n        }\n    };\n\n    render() {\n        const channelData = {\n            name: this.state.channelName,\n            displayName: this.state.channelDisplayName,\n            purpose: this.state.channelPurpose,\n            header: this.state.channelHeader,\n        };\n\n        let showChannelModal = false;\n        let showGroupModal = false;\n        let showChangeURLModal = false;\n\n        let changeURLTitle = '';\n        let changeURLSubmitButtonText = '';\n\n        // Only listen to flow state if we are being shown\n        if (this.props.show) {\n            switch (this.state.flowState) {\n            case SHOW_NEW_CHANNEL:\n                if (this.state.channelType === Constants.OPEN_CHANNEL) {\n                    showChannelModal = true;\n                } else {\n                    showGroupModal = true;\n                }\n                break;\n            case SHOW_EDIT_URL:\n                showChangeURLModal = true;\n                changeURLTitle = (\n                    <FormattedMessage\n                        id='channel_flow.changeUrlTitle'\n                        defaultMessage='Change Channel URL'\n                    />\n                );\n                changeURLSubmitButtonText = changeURLTitle;\n                break;\n            case SHOW_EDIT_URL_THEN_COMPLETE:\n                showChangeURLModal = true;\n                changeURLTitle = (\n                    <FormattedMessage\n                        id='channel_flow.set_url_title'\n                        defaultMessage='Set Channel URL'\n                    />\n                );\n                changeURLSubmitButtonText = (\n                    <FormattedMessage\n                        id='channel_flow.create'\n                        defaultMessage='Create Channel'\n                    />\n                );\n                break;\n            }\n        }\n        return (\n            <span>\n                <NewChannelModal\n                    show={showChannelModal}\n                    channelType={Constants.OPEN_CHANNEL}\n                    channelData={channelData}\n                    serverError={this.state.serverError}\n                    onSubmitChannel={this.onSubmit}\n                    onModalDismissed={this.props.onModalDismissed}\n                    onTypeSwitched={this.typeSwitched}\n                    onChangeURLPressed={this.urlChangeRequested}\n                    onDataChanged={this.channelDataChanged}\n                />\n                <NewChannelModal\n                    show={showGroupModal}\n                    channelType={Constants.PRIVATE_CHANNEL}\n                    channelData={channelData}\n                    serverError={this.state.serverError}\n                    onSubmitChannel={this.onSubmit}\n                    onModalDismissed={this.props.onModalDismissed}\n                    onTypeSwitched={this.typeSwitched}\n                    onChangeURLPressed={this.urlChangeRequested}\n                    onDataChanged={this.channelDataChanged}\n                />\n                <ChangeURLModal\n                    show={showChangeURLModal}\n                    title={changeURLTitle}\n                    submitButtonText={changeURLSubmitButtonText}\n                    currentURL={this.state.channelName}\n                    serverError={this.state.serverError}\n                    onModalSubmit={this.urlChangeSubmitted}\n                    onModalDismissed={this.urlChangeDismissed}\n                />\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {createChannel} from 'mattermost-redux/actions/channels';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\n\nimport {switchToChannel} from 'actions/views/channel';\n\nimport NewChannelFlow from './new_channel_flow.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        currentTeamId: getCurrentTeamId(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createChannel,\n            switchToChannel,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewChannelFlow);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class UnreadBelowIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='10px'\n                    height='10px'\n                    viewBox='0 0 10 10'\n                    style={style}\n                    role='icon'\n                    aria-label={localizeMessage('generic_icons.arrow.down', 'Down Arrow Icon')}\n                >\n                    <g transform='matrix(1,0,0,1,-20,-18)'>\n                        <g transform='matrix(0.0330723,0,0,0.0322634,15.8132,12.3164)'>\n                            <path d='M245.803,377.493C245.803,377.493 204.794,336.485 179.398,311.088C168.55,300.24 150.962,300.24 140.114,311.088C138.327,312.875 136.517,314.686 134.73,316.473C123.882,327.321 123.882,344.908 134.73,355.756C167.972,388.998 233.949,454.975 256.949,477.975C262.158,483.184 269.223,486.111 276.591,486.111C277.38,486.111 278.176,486.111 278.965,486.111C286.332,486.111 293.397,483.184 298.607,477.975C321.607,454.975 387.584,388.998 420.826,355.756C431.674,344.908 431.674,327.321 420.826,316.473C419.039,314.686 417.228,312.875 415.441,311.088C404.593,300.24 387.005,300.24 376.158,311.088C350.761,336.485 309.753,377.493 309.753,377.493C309.753,377.493 309.753,279.687 309.753,203.94C309.753,196.573 306.826,189.508 301.617,184.298C296.408,179.089 289.342,176.162 281.975,176.162C279.191,176.162 276.364,176.162 273.58,176.162C266.213,176.162 259.148,179.089 253.939,184.298C248.729,189.508 245.803,196.573 245.803,203.94L245.803,377.493Z'/>\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n\nconst style = {\n    fillRule: 'evenodd',\n    clipRule: 'evenodd',\n    strokeLinejoin: 'round',\n    strokeMiterlimit: 1.41421,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport UnreadBelowIcon from 'components/svg/unread_below_icon';\n\nexport default class UnreadChannelIndicator extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Function to call when the indicator is clicked\n         */\n        onClick: PropTypes.func.isRequired,\n\n        /**\n         * Set whether to show the indicator or not\n         */\n        show: PropTypes.bool,\n\n        /**\n         * The additional CSS class for the indicator\n         */\n        extraClass: PropTypes.string,\n\n        /**\n         * The content of the indicator\n         */\n        content: PropTypes.node,\n\n        /**\n         * The name of the indicator\n         */\n        name: PropTypes.string,\n    };\n\n    static defaultProps = {\n        show: false,\n        extraClass: '',\n        content: '',\n    };\n\n    render() {\n        let displayValue = 'none';\n        if (this.props.show) {\n            displayValue = 'block';\n        }\n\n        return (\n            <div\n                id={'unreadIndicator' + this.props.name}\n                className={'nav-pills__unread-indicator ' + this.props.extraClass}\n                style={{display: displayValue}}\n                onClick={this.props.onClick}\n            >\n                {this.props.content}\n                <UnreadBelowIcon className='icon icon__unread'/>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nclass BootstrapSpan extends React.PureComponent {\n    static propTypes = {\n        children: PropTypes.element,\n    }\n\n    render() {\n        const {children, ...props} = this.props;\n        delete props.bsRole;\n        delete props.bsClass;\n\n        return <span {...props}>{children}</span>;\n    }\n}\n\nexport default BootstrapSpan;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Dropdown} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {UserStatuses, ModalIdentifiers} from 'utils/constants.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\nimport BootstrapSpan from 'components/bootstrap_span.jsx';\nimport ResetStatusModal from 'components/reset_status_modal';\nimport StatusIcon from 'components/status_icon.jsx';\n\nexport default class StatusDropdown extends React.Component {\n    static propTypes = {\n        style: PropTypes.object,\n        status: PropTypes.string,\n        userId: PropTypes.string.isRequired,\n        profilePicture: PropTypes.string,\n        autoResetPref: PropTypes.string,\n        actions: PropTypes.shape({\n            openModal: PropTypes.func.isRequired,\n            setStatus: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        userId: '',\n        profilePicture: '',\n        status: UserStatuses.OFFLINE,\n    }\n\n    state = {\n        showDropdown: false,\n    }\n\n    isUserOutOfOffice = () => {\n        return this.props.status === UserStatuses.OUT_OF_OFFICE;\n    }\n\n    onToggle = (showDropdown) => {\n        this.setState({showDropdown});\n    }\n\n    closeDropdown = () => {\n        this.setState({showDropdown: false});\n    }\n\n    setStatus = (status) => {\n        this.props.actions.setStatus({\n            user_id: this.props.userId,\n            status,\n        });\n        this.closeDropdown();\n    }\n\n    setOnline = (event) => {\n        event.preventDefault();\n        this.setStatus(UserStatuses.ONLINE);\n    }\n\n    setOffline = (event) => {\n        event.preventDefault();\n        this.setStatus(UserStatuses.OFFLINE);\n    }\n\n    setAway = (event) => {\n        event.preventDefault();\n        this.setStatus(UserStatuses.AWAY);\n    }\n\n    setDnd = (event) => {\n        event.preventDefault();\n        this.setStatus(UserStatuses.DND);\n    }\n\n    showStatusChangeConfirmation = (status) => {\n        this.closeDropdown();\n\n        const resetStatusModalData = {\n            ModalId: ModalIdentifiers.RESET_STATUS,\n            dialogType: ResetStatusModal,\n            dialogProps: {newStatus: status},\n        };\n\n        this.props.actions.openModal(resetStatusModalData);\n    };\n\n    renderStatusOnlineAction = () => {\n        if (this.isUserOutOfOffice() && this.props.autoResetPref === '') {\n            return this.renderStatusAction(UserStatuses.ONLINE, () => this.showStatusChangeConfirmation('online'));\n        }\n        return this.renderStatusAction(UserStatuses.ONLINE, this.setOnline);\n    }\n\n    renderStatusAwayAction = () => {\n        if (this.isUserOutOfOffice() && this.props.autoResetPref === '') {\n            return this.renderStatusAction(UserStatuses.AWAY, () => this.showStatusChangeConfirmation('away'));\n        }\n        return this.renderStatusAction(UserStatuses.AWAY, this.setAway);\n    }\n\n    renderStatusOfflineAction = () => {\n        if (this.isUserOutOfOffice() && this.props.autoResetPref === '') {\n            return this.renderStatusAction(UserStatuses.OFFLINE, () => this.showStatusChangeConfirmation('offline'));\n        }\n        return this.renderStatusAction(UserStatuses.OFFLINE, this.setOffline);\n    }\n\n    renderStatusDndAction = () => {\n        if (this.isUserOutOfOffice() && this.props.autoResetPref === '') {\n            return this.renderStatusAction(UserStatuses.DND, () => this.showStatusChangeConfirmation('dnd'), localizeMessage('status_dropdown.set_dnd.extra', 'Disables Desktop and Push Notifications'));\n        }\n        return this.renderStatusAction(UserStatuses.DND, this.setDnd, localizeMessage('status_dropdown.set_dnd.extra', 'Disables Desktop and Push Notifications'));\n    }\n\n    renderStatusOutOfOfficeAction = () => {\n        return this.renderOOFStatusAction(UserStatuses.OUT_OF_OFFICE, localizeMessage('status_dropdown.set_ooo.extra', 'Automatic Replies are enabled'));\n    }\n\n    renderProfilePicture = () => {\n        if (!this.props.profilePicture) {\n            return null;\n        }\n        return (\n            <img\n                className='user__picture'\n                src={this.props.profilePicture}\n            />\n        );\n    }\n\n    renderOOFStatusAction = (status, extraText) => {\n        return (\n            <li key={status}>\n                <a\n                    className='out_of_office'\n                    id={'status' + status}\n                >\n                    <FormattedMessage\n                        id={`status_dropdown.set_${status}`}\n                        defaultMessage={status}\n                    />\n                    <span className='status-dropdown-extra'>{extraText}</span>\n                </a>\n            </li>\n        );\n    }\n\n    renderStatusAction = (status, onClick, extraText) => {\n        return (\n            <li key={status}>\n                <a\n                    id={'status' + status}\n                    href={'#'}\n                    onClick={onClick}\n                >\n                    <FormattedMessage\n                        id={`status_dropdown.set_${status}`}\n                        defaultMessage={status}\n                    />\n                    <span className='status-dropdown-extra'>{extraText}</span>\n                </a>\n            </li>\n        );\n    }\n\n    render() {\n        const profilePicture = this.renderProfilePicture();\n        let actions = [\n            this.renderStatusOnlineAction(),\n            this.renderStatusAwayAction(),\n            this.renderStatusDndAction(),\n            this.renderStatusOfflineAction(),\n        ];\n\n        if (this.isUserOutOfOffice()) {\n            const divider = (\n                <li\n                    className='divider'\n                    key='oof_divider'\n                />\n            );\n            actions = [\n                this.renderStatusOutOfOfficeAction(),\n                divider,\n                ...actions,\n            ];\n        }\n\n        return (\n            <Dropdown\n                id={'status-dropdown'}\n                open={this.state.showDropdown}\n                onToggle={this.onToggle}\n                style={this.props.style}\n            >\n                <BootstrapSpan\n                    bsRole={'toggle'}\n                >\n                    <div className='status-wrapper status-selector'>\n                        {profilePicture}\n                        <StatusIcon status={this.props.status}/>\n                        <span className={'status status-edit edit'}>\n                            <i\n                                className={'fa fa-caret-down'}\n                                title={localizeMessage('generic_icons.dropdown', 'Dropdown Icon')}\n                            />\n                        </span>\n                    </div>\n                </BootstrapSpan>\n                <Dropdown.Menu id='editStatusMenu'>\n                    {actions}\n                </Dropdown.Menu>\n            </Dropdown>\n        );\n    }\n}\n\nt('status_dropdown.set_away');\nt('status_dropdown.set_dnd');\nt('status_dropdown.set_offline');\nt('status_dropdown.set_online');\nt('status_dropdown.set_ooo');\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {setStatus} from 'mattermost-redux/actions/users';\nimport {Client4} from 'mattermost-redux/client';\nimport {getCurrentUser, getStatusForUserId} from 'mattermost-redux/selectors/entities/users';\nimport {Preferences} from 'mattermost-redux/constants';\nimport {get} from 'mattermost-redux/selectors/entities/preferences';\n\nimport {openModal} from 'actions/views/modals';\n\nimport StatusDropdown from 'components/status_dropdown/status_dropdown.jsx';\n\nfunction mapStateToProps(state) {\n    const currentUser = getCurrentUser(state);\n\n    if (!currentUser) {\n        return {};\n    }\n\n    const userId = currentUser.id;\n    return {\n        userId,\n        profilePicture: Client4.getProfilePictureUrl(userId, currentUser.last_picture_update),\n        autoResetPref: get(state, Preferences.CATEGORY_AUTO_RESET_MANUAL_STATUS, userId, ''),\n        status: getStatusForUserId(state, userId),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            openModal,\n            setStatus,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusDropdown);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport MenuIcon from 'components/svg/menu_icon';\nimport Constants from 'utils/constants.jsx';\n\nexport default class SidebarHeaderDropdownButton extends React.PureComponent {\n    static propTypes = {\n        bsRole: PropTypes.oneOf(['toggle']).isRequired, // eslint-disable-line react/no-unused-prop-types\n        onClick: PropTypes.func.isRequired,\n    };\n\n    render() {\n        const mainMenuToolTip = (\n            <Tooltip id='main-menu__tooltip'>\n                <FormattedMessage\n                    id='sidebar.mainMenu'\n                    defaultMessage='Main menu'\n                />\n            </Tooltip>\n        );\n\n        return (\n            <OverlayTrigger\n                trigger={['hover', 'focus']}\n                delayShow={Constants.OVERLAY_TIME_DELAY}\n                placement='right'\n                overlay={mainMenuToolTip}\n            >\n                <button\n                    id='sidebarHeaderDropdownButton'\n                    className='sidebar-header-dropdown__toggle cursor--pointer style--none'\n                    onClick={this.props.onClick}\n                >\n                    <MenuIcon className='sidebar-header-dropdown__icon'/>\n                </button>\n            </OverlayTrigger>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Dropdown} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport {Constants, ModalIdentifiers} from 'utils/constants.jsx';\nimport {cmdOrCtrlPressed, isKeyPressed} from 'utils/utils';\nimport {useSafeUrl} from 'utils/url';\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport AboutBuildModal from 'components/about_build_modal';\nimport AddUsersToTeam from 'components/add_users_to_team';\nimport TeamMembersModal from 'components/team_members_modal';\nimport TeamSettingsModal from 'components/team_settings_modal.jsx';\n\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\n\nimport SidebarHeaderDropdownButton from '../sidebar_header_dropdown_button.jsx';\n\nimport LeaveTeamModal from 'components/leave_team_modal';\nimport UserSettingsModal from 'components/user_settings/modal';\nimport ToggleModalButtonRedux from 'components/toggle_modal_button_redux';\n\nexport default class SidebarHeaderDropdown extends React.PureComponent {\n    static propTypes = {\n        teamId: PropTypes.string,\n        teamType: PropTypes.string,\n        teamName: PropTypes.string,\n        currentUser: PropTypes.object,\n        appDownloadLink: PropTypes.string,\n        enableCommands: PropTypes.bool.isRequired,\n        enableCustomEmoji: PropTypes.bool.isRequired,\n        canCreateCustomEmoji: PropTypes.bool.isRequired,\n        enableIncomingWebhooks: PropTypes.bool.isRequired,\n        enableOAuthServiceProvider: PropTypes.bool.isRequired,\n        enableOutgoingWebhooks: PropTypes.bool.isRequired,\n        enableUserCreation: PropTypes.bool.isRequired,\n        enableEmailInvitations: PropTypes.bool.isRequired,\n        experimentalPrimaryTeam: PropTypes.string,\n        helpLink: PropTypes.string,\n        reportAProblemLink: PropTypes.string,\n        showDropdown: PropTypes.bool.isRequired,\n        onToggleDropdown: PropTypes.func.isRequired,\n        moreTeamsToJoin: PropTypes.bool.isRequired,\n        pluginMenuItems: PropTypes.arrayOf(PropTypes.object),\n        actions: PropTypes.shape({\n            openModal: PropTypes.func.isRequred,\n        }).isRequired,\n    };\n\n    static defaultProps = {\n        teamType: '',\n        pluginMenuItems: [],\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showAboutModal: false,\n            showTeamSettingsModal: false,\n            showTeamMembersModal: false,\n            showAddUsersToTeamModal: false,\n        };\n    }\n\n    toggleDropdown = (val) => {\n        if (typeof (val) === 'boolean') {\n            this.props.onToggleDropdown(val);\n            return;\n        }\n\n        if (val && val.preventDefault) {\n            val.preventDefault();\n        }\n\n        this.props.onToggleDropdown();\n    }\n\n    handleAboutModal = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            showAboutModal: true,\n        });\n        this.props.onToggleDropdown(false);\n    }\n\n    aboutModalDismissed = () => {\n        this.setState({showAboutModal: false});\n    }\n\n    toggleShortcutsModal = (e) => {\n        e.preventDefault();\n        this.props.onToggleDropdown(false);\n\n        GlobalActions.toggleShortcutsModal();\n    }\n\n    showAddUsersToTeamModal = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            showAddUsersToTeamModal: true,\n        });\n        this.props.onToggleDropdown(false);\n    }\n\n    hideAddUsersToTeamModal = () => {\n        this.setState({\n            showAddUsersToTeamModal: false,\n        });\n    }\n\n    showInviteMemberModal = (e) => {\n        e.preventDefault();\n\n        this.props.onToggleDropdown(false);\n\n        GlobalActions.showInviteMemberModal();\n    }\n\n    showGetTeamInviteLinkModal = (e) => {\n        e.preventDefault();\n\n        this.props.onToggleDropdown(false);\n\n        GlobalActions.showGetTeamInviteLinkModal();\n    }\n\n    showTeamSettingsModal = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            showTeamSettingsModal: true,\n        });\n        this.props.onToggleDropdown(false);\n    }\n\n    hideTeamSettingsModal = () => {\n        this.setState({\n            showTeamSettingsModal: false,\n        });\n    }\n\n    showTeamMembersModal = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            showTeamMembersModal: true,\n        });\n    }\n\n    hideTeamMembersModal = () => {\n        this.setState({\n            showTeamMembersModal: false,\n        });\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = (e) => {\n        if (cmdOrCtrlPressed(e) && e.shiftKey && isKeyPressed(e, Constants.KeyCodes.A)) {\n            this.props.actions.openModal({ModalId: ModalIdentifiers.USER_SETTINGS, dialogType: UserSettingsModal});\n        }\n    }\n\n    showAccountSettingsModal = (e) => {\n        e.preventDefault();\n\n        this.props.onToggleDropdown(false);\n\n        this.props.actions.openModal({ModalId: ModalIdentifiers.USER_SETTINGS, dialogType: UserSettingsModal});\n    }\n\n    renderCustomEmojiLink = () => {\n        if (!this.props.enableCustomEmoji || !this.props.canCreateCustomEmoji) {\n            return null;\n        }\n\n        return (\n            <li>\n                <Link\n                    id='customEmoji'\n                    to={'/' + this.props.teamName + '/emoji'}\n                >\n                    <FormattedMessage\n                        id='navbar_dropdown.emoji'\n                        defaultMessage='Custom Emoji'\n                    />\n                </Link>\n            </li>\n        );\n    }\n\n    handleEmitUserLoggedOutEvent = () => {\n        GlobalActions.emitUserLoggedOutEvent();\n    }\n\n    render() {\n        const currentUser = this.props.currentUser;\n        let teamLink = '';\n        let inviteLink = '';\n        let addMemberToTeam = '';\n        let sysAdminLink = '';\n        let teamSettings = null;\n        let integrationsLink = null;\n\n        if (!currentUser) {\n            return null;\n        }\n\n        if (currentUser != null) {\n            if (this.props.enableEmailInvitations) {\n                inviteLink = (\n                    <TeamPermissionGate\n                        teamId={this.props.teamId}\n                        permissions={[Permissions.INVITE_USER]}\n                    >\n                        <TeamPermissionGate\n                            teamId={this.props.teamId}\n                            permissions={[Permissions.ADD_USER_TO_TEAM]}\n                        >\n                            <li>\n                                <button\n                                    className='style--none'\n                                    id='sendEmailInvite'\n                                    onClick={this.showInviteMemberModal}\n                                >\n                                    <FormattedMessage\n                                        id='navbar_dropdown.inviteMember'\n                                        defaultMessage='Send Email Invite'\n                                    />\n                                </button>\n                            </li>\n                        </TeamPermissionGate>\n                    </TeamPermissionGate>\n                );\n            }\n\n            addMemberToTeam = (\n                <TeamPermissionGate\n                    teamId={this.props.teamId}\n                    permissions={[Permissions.ADD_USER_TO_TEAM]}\n                >\n                    <li>\n                        <button\n                            className='style--none'\n                            id='addUsersToTeam'\n                            onClick={this.showAddUsersToTeamModal}\n                        >\n                            <FormattedMessage\n                                id='navbar_dropdown.addMemberToTeam'\n                                defaultMessage='Add Members to Team'\n                            />\n                        </button>\n                    </li>\n                </TeamPermissionGate>\n            );\n\n            if (this.props.teamType === Constants.OPEN_TEAM && this.props.enableUserCreation) {\n                teamLink = (\n                    <TeamPermissionGate\n                        teamId={this.props.teamId}\n                        permissions={[Permissions.INVITE_USER]}\n                    >\n                        <TeamPermissionGate\n                            teamId={this.props.teamId}\n                            permissions={[Permissions.ADD_USER_TO_TEAM]}\n                        >\n                            <li>\n                                <button\n                                    className='style--none'\n                                    id='getTeamInviteLink'\n                                    onClick={this.showGetTeamInviteLinkModal}\n                                >\n                                    <FormattedMessage\n                                        id='navbar_dropdown.teamLink'\n                                        defaultMessage='Get Team Invite Link'\n                                    />\n                                </button>\n                            </li>\n                        </TeamPermissionGate>\n                    </TeamPermissionGate>\n                );\n            }\n        }\n\n        teamSettings = (\n            <TeamPermissionGate\n                teamId={this.props.teamId}\n                permissions={[Permissions.MANAGE_TEAM]}\n            >\n                <li>\n                    <button\n                        className='style--none'\n                        id='teamSettings'\n                        onClick={this.showTeamSettingsModal}\n                    >\n                        <FormattedMessage\n                            id='navbar_dropdown.teamSettings'\n                            defaultMessage='Team Settings'\n                        />\n                    </button>\n                </li>\n            </TeamPermissionGate>\n        );\n\n        const manageLink = (\n            <li>\n                <button\n                    id='manageMembers'\n                    className='style--none'\n                    onClick={this.showTeamMembersModal}\n                >\n                    <TeamPermissionGate\n                        teamId={this.props.teamId}\n                        permissions={[Permissions.MANAGE_TEAM]}\n                    >\n                        <FormattedMessage\n                            id='navbar_dropdown.manageMembers'\n                            defaultMessage='Manage Members'\n                        />\n                    </TeamPermissionGate>\n                    <TeamPermissionGate\n                        teamId={this.props.teamId}\n                        permissions={[Permissions.MANAGE_TEAM]}\n                        invert={true}\n                    >\n                        <FormattedMessage\n                            id='navbar_dropdown.viewMembers'\n                            defaultMessage='View Members'\n                        />\n                    </TeamPermissionGate>\n                </button>\n            </li>\n        );\n\n        const integrationsEnabled =\n            this.props.enableIncomingWebhooks ||\n            this.props.enableOutgoingWebhooks ||\n            this.props.enableCommands ||\n            this.props.enableOAuthServiceProvider;\n        if (integrationsEnabled) {\n            integrationsLink = (\n                <TeamPermissionGate\n                    teamId={this.props.teamId}\n                    permissions={[Permissions.MANAGE_SLASH_COMMANDS, Permissions.MANAGE_OAUTH, Permissions.MANAGE_WEBHOOKS]}\n                >\n                    <li>\n                        <Link\n                            id='Integrations'\n                            to={'/' + this.props.teamName + '/integrations'}\n                        >\n                            <FormattedMessage\n                                id='navbar_dropdown.integrations'\n                                defaultMessage='Integrations'\n                            />\n                        </Link>\n                    </li>\n                </TeamPermissionGate>\n            );\n        }\n\n        sysAdminLink = (\n            <SystemPermissionGate permissions={[Permissions.MANAGE_SYSTEM]}>\n                <li>\n                    <Link\n                        id='systemConsole'\n                        to={'/admin_console'}\n                    >\n                        <FormattedMessage\n                            id='navbar_dropdown.console'\n                            defaultMessage='System Console'\n                        />\n                    </Link>\n                </li>\n            </SystemPermissionGate>\n        );\n\n        const teams = [];\n\n        teams.push(\n            <SystemPermissionGate\n                permissions={[Permissions.CREATE_TEAM]}\n                key='newTeam_permission'\n            >\n                <li key='newTeam_li'>\n                    <Link\n                        id='createTeam'\n                        key='newTeam_a'\n                        to='/create_team'\n                    >\n                        <FormattedMessage\n                            id='navbar_dropdown.create'\n                            defaultMessage='Create a New Team'\n                        />\n                    </Link>\n                </li>\n            </SystemPermissionGate>\n        );\n\n        if (!this.props.experimentalPrimaryTeam) {\n            if (this.props.moreTeamsToJoin) {\n                teams.push(\n                    <li key='joinTeam_li'>\n                        <Link\n                            id='joinAnotherTeam'\n                            to='/select_team'\n                        >\n                            <FormattedMessage\n                                id='navbar_dropdown.join'\n                                defaultMessage='Join Another Team'\n                            />\n                        </Link>\n                    </li>\n                );\n            }\n\n            teams.push(\n                <li key='leaveTeam_li'>\n                    <ToggleModalButtonRedux\n                        id='leaveTeam'\n                        role='menuitem'\n                        modalId={ModalIdentifiers.LEAVE_TEAM}\n                        dialogType={LeaveTeamModal}\n                        dialogProps={{}}\n                    >\n                        <FormattedMessage\n                            id='navbar_dropdown.leave'\n                            defaultMessage='Leave Team'\n                        />\n                    </ToggleModalButtonRedux>\n                </li>\n            );\n        }\n\n        const pluginItems = this.props.pluginMenuItems.map((item) => {\n            return (\n                <li key={item.id + '_pluginmenuitem'}>\n                    <a\n                        id={item.id + '_pluginmenuitem'}\n                        href='#'\n                        onClick={() => {\n                            if (item.action) {\n                                item.action();\n                            }\n                            this.toggleDropdown(false);\n                        }}\n                    >\n                        {item.text}\n                    </a>\n                </li>\n            );\n        });\n\n        let pluginDivider = null;\n        if (pluginItems.length > 0) {\n            pluginDivider = <li className='divider'/>;\n        }\n\n        let helpLink = null;\n        if (this.props.helpLink) {\n            helpLink = (\n                <li>\n                    <a\n                        id='helpLink'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        href={this.props.helpLink}\n                    >\n                        <FormattedMessage\n                            id='navbar_dropdown.help'\n                            defaultMessage='Help'\n                        />\n                    </a>\n                </li>\n            );\n        }\n\n        let reportLink = null;\n        if (this.props.reportAProblemLink) {\n            reportLink = (\n                <li>\n                    <a\n                        id='reportLink'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        href={this.props.reportAProblemLink}\n                    >\n                        <FormattedMessage\n                            id='navbar_dropdown.report'\n                            defaultMessage='Report a Problem'\n                        />\n                    </a>\n                </li>\n            );\n        }\n\n        let nativeAppLink = null;\n        if (this.props.appDownloadLink && !UserAgent.isMobileApp()) {\n            nativeAppLink = (\n                <li>\n                    <a\n                        id='nativeAppLink'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        href={useSafeUrl(this.props.appDownloadLink)}\n                    >\n                        <FormattedMessage\n                            id='navbar_dropdown.nativeApps'\n                            defaultMessage='Download Apps'\n                        />\n                    </a>\n                </li>\n            );\n        }\n\n        let teamMembersModal;\n        if (this.state.showTeamMembersModal) {\n            teamMembersModal = (\n                <TeamMembersModal\n                    onLoad={this.toggleDropdown}\n                    onHide={this.hideTeamMembersModal}\n                />\n            );\n        }\n\n        let addUsersToTeamModal;\n        if (this.state.showAddUsersToTeamModal) {\n            addUsersToTeamModal = (\n                <AddUsersToTeam\n                    onModalDismissed={this.hideAddUsersToTeamModal}\n                />\n            );\n        }\n\n        const keyboardShortcuts = (\n            <li>\n                <button\n                    className='style--none'\n                    id='keyboardShortcuts'\n                    onClick={this.toggleShortcutsModal}\n                >\n                    <FormattedMessage\n                        id='navbar_dropdown.keyboardShortcuts'\n                        defaultMessage='Keyboard Shortcuts'\n                    />\n                </button>\n            </li>\n        );\n\n        const accountSettings = (\n            <li>\n                <button\n                    className='style--none'\n                    id='accountSettings'\n                    onClick={this.showAccountSettingsModal}\n                >\n                    <FormattedMessage\n                        id='navbar_dropdown.accountSettings'\n                        defaultMessage='Account Settings'\n                    />\n                </button>\n            </li>\n        );\n\n        const about = (\n            <li>\n                <button\n                    id='about'\n                    className='style--none'\n                    onClick={this.handleAboutModal}\n                >\n                    <FormattedMessage\n                        id='navbar_dropdown.about'\n                        defaultMessage='About Mattermost'\n                    />\n                </button>\n            </li>\n        );\n\n        const logout = (\n            <li>\n                <button\n                    className='style--none'\n                    id='logout'\n                    onClick={this.handleEmitUserLoggedOutEvent}\n                >\n                    <FormattedMessage\n                        id='navbar_dropdown.logout'\n                        defaultMessage='Logout'\n                    />\n                </button>\n            </li>\n        );\n\n        const customEmoji = this.renderCustomEmojiLink();\n\n        // Dividers.\n        let inviteDivider = null;\n        if (inviteLink || teamLink || addMemberToTeam) {\n            inviteDivider = <li className='divider'/>;\n        }\n\n        let teamDivider = null;\n        if (teamSettings || manageLink || teams) {\n            teamDivider = <li className='divider'/>;\n        }\n\n        let backstageDivider = null;\n        if (integrationsLink || customEmoji) {\n            backstageDivider = <li className='divider'/>;\n        }\n\n        let sysAdminDivider = null;\n        if (sysAdminLink) {\n            sysAdminDivider = <li className='divider'/>;\n        }\n\n        let helpDivider = null;\n        if (helpLink || reportLink || nativeAppLink || about) {\n            helpDivider = <li className='divider'/>;\n        }\n\n        let logoutDivider = null;\n        if (logout) {\n            logoutDivider = <li className='divider'/>;\n        }\n\n        return (\n            <Dropdown\n                id='sidebar-header-dropdown'\n                open={this.props.showDropdown}\n                onToggle={this.toggleDropdown}\n                className='sidebar-header-dropdown'\n            >\n                <SidebarHeaderDropdownButton\n                    bsRole='toggle'\n                    onClick={this.toggleDropdown}\n                />\n                <Dropdown.Menu\n                    id='sidebarDropdownMenu'\n                >\n                    {accountSettings}\n                    {inviteDivider}\n                    {inviteLink}\n                    {teamLink}\n                    {addMemberToTeam}\n                    {teamDivider}\n                    {teamSettings}\n                    {manageLink}\n                    {teams}\n                    {pluginDivider}\n                    {pluginItems}\n                    {backstageDivider}\n                    {integrationsLink}\n                    {customEmoji}\n                    {sysAdminDivider}\n                    {sysAdminLink}\n                    {helpDivider}\n                    {helpLink}\n                    {keyboardShortcuts}\n                    {reportLink}\n                    {nativeAppLink}\n                    {about}\n                    {logoutDivider}\n                    {logout}\n                    {teamMembersModal}\n                    <TeamSettingsModal\n                        show={this.state.showTeamSettingsModal}\n                        onModalDismissed={this.hideTeamSettingsModal}\n                    />\n                    <AboutBuildModal\n                        show={this.state.showAboutModal}\n                        onModalDismissed={this.aboutModalDismissed}\n                    />\n                    {addUsersToTeamModal}\n                </Dropdown.Menu>\n            </Dropdown>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\nimport {getMyTeams, getJoinableTeamIds} from 'mattermost-redux/selectors/entities/teams';\nimport {haveITeamPermission, haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport {openModal} from 'actions/views/modals';\n\nimport SidebarHeaderDropdown from './sidebar_header_dropdown.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const license = getLicense(state);\n\n    const isLicensed = license.IsLicensed === 'true';\n\n    const appDownloadLink = config.AppDownloadLink;\n    const enableCommands = config.EnableCommands === 'true';\n    const enableCustomEmoji = config.EnableCustomEmoji === 'true';\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n    const enableOnlyAdminIntegrations = config.EnableOnlyAdminIntegrations === 'true';\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n    const enableTeamCreation = config.EnableTeamCreation === 'true';\n    const enableUserCreation = config.EnableUserCreation === 'true';\n    const enableEmailInvitations = config.EnableEmailInvitations === 'true';\n    const experimentalPrimaryTeam = config.ExperimentalPrimaryTeam;\n    const helpLink = config.HelpLink;\n    const reportAProblemLink = config.ReportAProblemLink;\n    const restrictTeamInvite = config.RestrictTeamInvite;\n\n    let canCreateCustomEmoji = haveISystemPermission(state, {permission: Permissions.MANAGE_EMOJIS});\n    if (!canCreateCustomEmoji) {\n        for (const team of getMyTeams(state)) {\n            if (haveITeamPermission(state, {team: team.id, permission: Permissions.MANAGE_EMOJIS})) {\n                canCreateCustomEmoji = true;\n                break;\n            }\n        }\n    }\n\n    const joinableTeams = getJoinableTeamIds(state);\n    const moreTeamsToJoin = joinableTeams && joinableTeams.length > 0;\n\n    return {\n        isLicensed,\n        appDownloadLink,\n        enableCommands,\n        enableCustomEmoji,\n        enableIncomingWebhooks,\n        enableOAuthServiceProvider,\n        enableOnlyAdminIntegrations,\n        enableOutgoingWebhooks,\n        enableTeamCreation,\n        enableUserCreation,\n        enableEmailInvitations,\n        experimentalPrimaryTeam,\n        helpLink,\n        reportAProblemLink,\n        restrictTeamInvite,\n        pluginMenuItems: state.plugins.components.MainMenu,\n        canCreateCustomEmoji,\n        moreTeamsToJoin,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            openModal,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidebarHeaderDropdown);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\n\nimport {Constants} from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport StatusDropdown from 'components/status_dropdown/index.jsx';\nimport MenuTutorialTip from 'components/tutorial/menu_tutorial_tip';\n\nimport SidebarHeaderDropdown from './dropdown';\n\nexport default class SidebarHeader extends React.PureComponent {\n    static propTypes = {\n        teamId: PropTypes.string.isRequired,\n        teamDisplayName: PropTypes.string.isRequired,\n        teamDescription: PropTypes.string.isRequired,\n        teamName: PropTypes.string.isRequired,\n        teamType: PropTypes.string.isRequired,\n        currentUser: PropTypes.object.isRequired,\n        showTutorialTip: PropTypes.bool.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isMobile: Utils.isMobile(),\n            showDropdown: false,\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.handleResize);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n\n    handleResize = () => {\n        const isMobile = Utils.isMobile();\n        this.setState({isMobile});\n    }\n\n    toggleDropdown = (toggle) => {\n        if (typeof (toggle) === 'boolean') {\n            this.setState({\n                showDropdown: toggle,\n            });\n        } else {\n            this.setState({\n                showDropdown: !this.state.showDropdown,\n            });\n        }\n    }\n\n    showDropdown = () => {\n        this.toggleDropdown(true);\n    }\n\n    renderStatusDropdown = () => {\n        if (this.state.isMobile) {\n            return null;\n        }\n        return (\n            <StatusDropdown/>\n        );\n    }\n\n    render() {\n        const statusDropdown = this.renderStatusDropdown();\n\n        let tutorialTip = null;\n        if (this.props.showTutorialTip) {\n            tutorialTip = (\n                <MenuTutorialTip\n                    toggleFunc={this.showDropdown}\n                    onBottom={false}\n                />\n            );\n        }\n\n        let teamNameWithToolTip = null;\n        if (this.props.teamDescription === '') {\n            teamNameWithToolTip = (\n                <h1\n                    id='headerTeamName'\n                    className='team__name'\n                >\n                    {this.props.teamDisplayName}\n                </h1>\n            );\n        } else {\n            teamNameWithToolTip = (\n                <OverlayTrigger\n                    trigger={['hover', 'focus']}\n                    delayShow={Constants.OVERLAY_TIME_DELAY}\n                    placement='bottom'\n                    overlay={<Tooltip id='team-name__tooltip'>{this.props.teamDescription}</Tooltip>}\n                    ref='descriptionOverlay'\n                >\n                    <h1\n                        id='headerTeamName'\n                        className='team__name'\n                    >\n                        {this.props.teamDisplayName}\n                    </h1>\n                </OverlayTrigger>\n            );\n        }\n\n        return (\n            <div\n                id='teamHeader'\n                className='team__header theme'\n            >\n                {tutorialTip}\n                <div\n                    id='headerInfo'\n                    className='header__info'\n                >\n                    {teamNameWithToolTip}\n                    <div\n                        id='headerUsername'\n                        className='user__name'\n                    >\n                        {'@' + this.props.currentUser.username}\n                    </div>\n                </div>\n                <div id='sidebarDropdownMenuContainer'>\n                    <SidebarHeaderDropdown\n                        teamId={this.props.teamId}\n                        teamType={this.props.teamType}\n                        teamDisplayName={this.props.teamDisplayName}\n                        teamName={this.props.teamName}\n                        currentUser={this.props.currentUser}\n                        showDropdown={this.state.showDropdown}\n                        onToggleDropdown={this.toggleDropdown}\n                    />\n                </div>\n                {statusDropdown}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getInt} from 'mattermost-redux/selectors/entities/preferences';\n\nimport {Preferences, TutorialSteps} from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport SidebarHeader from './sidebar_header.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n\n    const enableTutorial = config.EnableTutorial === 'true';\n\n    const showTutorialTip = getInt(state, Preferences.TUTORIAL_STEP, ownProps.currentUser.id) === TutorialSteps.MENU_POPOVER && !Utils.isMobile();\n\n    return {\n        enableTutorial,\n        showTutorialTip,\n    };\n}\n\nexport default connect(mapStateToProps)(SidebarHeader);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class DraftIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='14px'\n                    height='14px'\n                    viewBox='0 0 50 51'\n                    role='icon'\n                    aria-label={localizeMessage('generic_icons.channel.draft', 'Channel Draft Icon')}\n                >\n                    <g\n                        stroke='none'\n                        strokeWidth='1'\n                        fillRule='evenodd'\n                    >\n                        <path d='M11.980198,46.7136356 L14.9834983,43.7103353 L7.22772277,35.9545597 L4.22442244,38.95786 L4.22442244,42.4892132 L8.44884488,42.4892132 L8.44884488,46.7136356 L11.980198,46.7136356 Z M29.2409241,16.0865729 C29.2409241,15.6025221 28.9989023,15.3605003 28.5148515,15.3605003 C28.2948284,15.3605003 28.1078116,15.4375072 27.9537954,15.5915234 L10.0660066,33.4793122 C9.91199043,33.6333283 9.8349835,33.8203452 9.8349835,34.0403683 C9.8349835,34.5244191 10.0770053,34.7664409 10.5610561,34.7664409 C10.7810792,34.7664409 10.968096,34.6894339 11.1221122,34.5354178 L29.009901,16.647629 C29.1639172,16.4936128 29.2409241,16.306596 29.2409241,16.0865729 Z M27.4587459,9.74993922 L41.1881188,23.4793122 L13.7293729,50.938058 L0,50.938058 L0,37.2086851 L27.4587459,9.74993922 Z M50,12.9182561 C50,14.0843785 49.5929634,15.0744676 48.7788779,15.8885531 L43.30033,21.3671009 L29.5709571,7.637728 L35.049505,2.19218345 C35.8415881,1.35609566 36.8316772,0.938058036 38.019802,0.938058036 C39.1859244,0.938058036 40.1870145,1.35609566 41.0231023,2.19218345 L48.7788779,9.91495573 C49.5929634,10.7730458 50,11.7741359 50,12.9182561 Z'/>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class GlobeIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='13px'\n                    height='13px'\n                    viewBox='0 0 14 14'\n                    role='icon'\n                    aria-label={localizeMessage('generic_icons.channel.public', 'Public Channel Icon')}\n                >\n                    <g\n                        stroke='none'\n                        strokeWidth='1'\n                        fill='inherit'\n                        fillRule='evenodd'\n                    >\n                        <g\n                            transform='translate(-115.000000, -147.000000)'\n                            fillRule='nonzero'\n                            fill='inherit'\n                        >\n                            <g transform='translate(95.000000, 0.000000)'>\n                                <g transform='translate(20.000000, 113.000000)'>\n                                    <g transform='translate(0.000000, 34.000000)'>\n                                        <path d='M10.409,0.893375 C9.40275,0.329875 8.24075,0.00875 7,0 C3.13075,0 0,3.140375 0,7 C0,10.521875 2.594375,13.42775 5.97625,13.93 C6.314875,13.974625 6.6535,14 7,14 C8.24075,14 9.40275,13.678875 10.409,13.1145 C12.551875,11.918375 14,9.6285 14,7 C13.99125,4.3715 12.551875,2.090375 10.409,0.893375 Z M11.554375,4.375 L9.431625,4.375 C9.302125,3.5 9.10875,2.736125 8.86725,2.085125 C10.003875,2.519125 10.9515,3.5 11.554375,4.375 Z M6.941375,1.73775 C6.960625,1.736875 6.979875,1.73425 7,1.73425 C7.020125,1.73425 7.039375,1.736875 7.058625,1.73775 C7.340375,2.172625 7.697375,3.5 7.92225,4.375 L6.07775,4.375 C6.302625,3.5 6.659625,2.172625 6.941375,1.73775 Z M1.81475,7.875 C1.7675,7.875 1.73425,7.29925 1.73425,7 C1.73425,6.70075 1.764875,6.125 1.813,6.125 L4.396875,6.125 C4.384625,6.125 4.375,6.7025 4.375,7 C4.375,7.2975 4.384625,7.875 4.396875,7.875 L1.81475,7.875 Z M4.354875,11.54475 C4.346125,11.54475 4.337375,11.54475 4.337375,11.536 C3.548125,11.07575 2.893625,10.5 2.436875,9.625 L4.568375,9.625 C4.697875,10.5 4.890375,11.262125 5.131875,11.91225 C4.8615,11.81075 4.599875,11.692625 4.354875,11.54475 Z M4.568375,4.375 L2.443875,4.375 C3.045875,3.5 3.994375,2.517375 5.131875,2.083375 C4.89125,2.734375 4.697875,3.5 4.568375,4.375 Z M7.0595,12.26225 C7.039375,12.26225 7.020125,12.26575 7,12.26575 C6.979875,12.26575 6.960625,12.26225 6.9405,12.26225 C6.65875,11.8265 6.302625,11.375 6.07775,9.625 L7.921375,9.625 C7.697375,11.375 7.34125,11.8265 7.0595,12.26225 Z M8.11125,7.875 L5.88875,7.875 C5.873875,7.875 5.8625,7.30625 5.8625,7 C5.8625,6.69375 5.873875,6.125 5.88875,6.125 L8.11125,6.125 C8.126125,6.125 8.1375,6.69375 8.1375,7 C8.1375,7.30625 8.126125,7.875 8.11125,7.875 Z M10.409,11.0075 C10.13075,11.242 9.828,11.45025 9.506875,11.631375 C9.30125,11.74075 9.086875,11.839625 8.8655,11.923625 C9.107,11.270875 9.30125,10.5 9.431625,9.625 L11.557875,9.625 C11.25425,10.5 10.8675,10.618125 10.409,11.0075 Z M9.603125,7.875 C9.615375,7.875 9.625,7.2975 9.625,7 C9.625,6.7025 9.615375,6.125 9.603125,6.125 L12.186125,6.125 C12.235125,6.125 12.26575,6.70075 12.26575,7 C12.26575,7.29925 12.233375,7.875 12.18525,7.875 L9.603125,7.875 Z'/>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class LockIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='12px'\n                    height='13px'\n                    viewBox='0 0 13 15'\n                    role='icon'\n                    title={localizeMessage('generic_icons.channel.private', 'Private Channel Icon')}\n                >\n                    <g\n                        stroke='none'\n                        strokeWidth='1'\n                        fill='inherit'\n                        fillRule='evenodd'\n                    >\n                        <g\n                            transform='translate(-116.000000, -175.000000)'\n                            fillRule='nonzero'\n                            fill='inherit'\n                        >\n                            <g transform='translate(95.000000, 0.000000)'>\n                                <g transform='translate(20.000000, 113.000000)'>\n                                    <g transform='translate(1.000000, 62.000000)'>\n                                        <path d='M12.0714286,6.5 L11.1428571,6.5 L11.1428571,4.64285714 C11.1428571,2.07814286 9.06471429,0 6.5,0 C3.93528571,0 1.85714286,2.07814286 1.85714286,4.64285714 L1.85714286,6.5 L0.928571429,6.5 C0.415071429,6.5 0,7.00792857 0,7.52142857 L0,13.9285714 C0,14.4420714 0.415071429,14.8571429 0.928571429,14.8571429 L12.0714286,14.8571429 C12.5849286,14.8571429 13,14.4420714 13,13.9285714 L13,7.52142857 C13,7.00792857 12.5849286,6.5 12.0714286,6.5 Z M6.5,1.85714286 C8.03585714,1.85714286 9.28571429,3.107 9.28571429,4.64285714 L9.28571429,6.5 L8.35714286,6.5 L4.64285714,6.5 L3.71428571,6.5 L3.71428571,4.64285714 C3.71428571,3.107 4.96414286,1.85714286 6.5,1.85714286 Z'/>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {Constants} from 'utils/constants.jsx';\n\nimport ArchiveIcon from 'components/svg/archive_icon';\nimport DraftIcon from 'components/svg/draft_icon';\nimport GlobeIcon from 'components/svg/globe_icon';\nimport LockIcon from 'components/svg/lock_icon';\nimport StatusIcon from 'components/status_icon.jsx';\n\nexport default class SidebarChannelButtonOrLinkIcon extends React.PureComponent {\n    static propTypes = {\n        channelIsArchived: PropTypes.bool.isRequired,\n        channelType: PropTypes.string.isRequired,\n        channelStatus: PropTypes.string,\n        hasDraft: PropTypes.bool.isRequired,\n        membersCount: PropTypes.number,\n        teammateId: PropTypes.string,\n        teammateDeletedAt: PropTypes.number,\n    };\n\n    render() {\n        let icon = null;\n        if (this.props.channelIsArchived) {\n            icon = (\n                <ArchiveIcon className='icon icon__archive'/>\n            );\n        } else if (this.props.hasDraft) {\n            icon = (\n                <DraftIcon className='icon icon__draft'/>\n            );\n        } else if (this.props.channelType === Constants.OPEN_CHANNEL) {\n            icon = (\n                <GlobeIcon className='icon icon__globe'/>\n            );\n        } else if (this.props.channelType === Constants.PRIVATE_CHANNEL) {\n            icon = (\n                <LockIcon className='icon icon__lock'/>\n            );\n        } else if (this.props.channelType === Constants.GM_CHANNEL) {\n            icon = <div className='status status--group'>{this.props.membersCount}</div>;\n        } else if (this.props.channelType === Constants.DM_CHANNEL) {\n            if (this.props.teammateId && this.props.teammateDeletedAt) {\n                icon = (\n                    <ArchiveIcon className='icon icon__archive'/>\n                );\n            } else {\n                icon = (\n                    <StatusIcon\n                        type='avatar'\n                        status={this.props.channelStatus}\n                    />\n                );\n            }\n        }\n        return icon;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport {Constants} from 'utils/constants.jsx';\n\nexport default class SidebarChannelButtonOrLinkCloseButton extends React.PureComponent {\n    static propTypes = {\n        handleClose: PropTypes.func,\n        channelId: PropTypes.string.isRequired,\n        channelType: PropTypes.string.isRequired,\n        teammateId: PropTypes.string,\n        badge: PropTypes.bool,\n    }\n\n    overlayTriggerAttr = ['hover', 'focus']\n\n    handleClose = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        this.props.handleClose();\n    }\n\n    render() {\n        let closeButton = null;\n\n        if (this.props.handleClose && !this.props.badge) {\n            let removeTooltip = (\n                <Tooltip id='remove-dm-tooltip'>\n                    <FormattedMessage\n                        id='sidebar.removeList'\n                        defaultMessage='Remove from list'\n                    />\n                </Tooltip>\n            );\n\n            if (this.props.channelType === Constants.OPEN_CHANNEL || this.props.channelType === Constants.PRIVATE_CHANNEL) {\n                removeTooltip = (\n                    <Tooltip id='remove-dm-tooltip'>\n                        <FormattedMessage\n                            id='sidebar.leave'\n                            defaultMessage='Leave channel'\n                        />\n                    </Tooltip>\n                );\n            }\n\n            closeButton = (\n                <OverlayTrigger\n                    trigger={this.overlayTriggerAttr}\n                    delayShow={1000}\n                    placement='top'\n                    overlay={removeTooltip}\n                >\n                    <span\n                        onClick={this.handleClose}\n                        className='btn-close'\n                    >\n                        {'×'}\n                    </span>\n                </OverlayTrigger>\n            );\n        }\n        return closeButton;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {mark, trackEvent} from 'actions/diagnostics_actions.jsx';\nimport {isDesktopApp} from 'utils/user_agent.jsx';\nimport CopyUrlContextMenu from 'components/copy_url_context_menu';\n\nimport SidebarChannelButtonOrLinkIcon from './sidebar_channel_button_or_link_icon.jsx';\nimport SidebarChannelButtonOrLinkCloseButton from './sidebar_channel_button_or_link_close_button.jsx';\n\nexport default class SidebarChannelButtonOrLink extends React.PureComponent {\n    static propTypes = {\n        link: PropTypes.string.isRequired,\n        rowClass: PropTypes.string.isRequired,\n        channelType: PropTypes.string.isRequired,\n        channelId: PropTypes.string.isRequired,\n        displayName: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.object,\n        ]).isRequired,\n        channelStatus: PropTypes.string,\n        handleClose: PropTypes.func,\n        hasDraft: PropTypes.bool.isRequired,\n        badge: PropTypes.bool,\n        membersCount: PropTypes.number.isRequired,\n        unreadMentions: PropTypes.number,\n        teammateId: PropTypes.string,\n        teammateDeletedAt: PropTypes.number,\n        channelIsArchived: PropTypes.bool.isRequired,\n    }\n\n    trackChannelSelectedEvent = () => {\n        mark('SidebarChannelLink#click');\n        trackEvent('ui', 'ui_channel_selected');\n    }\n\n    handleClick = () => {\n        this.trackChannelSelectedEvent();\n        browserHistory.push(this.props.link);\n    }\n\n    render = () => {\n        let badge = null;\n        if (this.props.badge) {\n            badge = <span className='badge'>{this.props.unreadMentions}</span>;\n        }\n\n        const content = (\n            <React.Fragment>\n                <SidebarChannelButtonOrLinkIcon\n                    channelStatus={this.props.channelStatus}\n                    channelType={this.props.channelType}\n                    channelIsArchived={this.props.channelIsArchived}\n                    hasDraft={this.props.hasDraft}\n                    membersCount={this.props.membersCount}\n                    teammateId={this.props.teammateId}\n                    teammateDeletedAt={this.props.teammateDeletedAt}\n                />\n                <span className='sidebar-item__name'>\n                    <span>{this.props.displayName}</span>\n                </span>\n                {badge}\n                <SidebarChannelButtonOrLinkCloseButton\n                    handleClose={this.props.handleClose}\n                    channelId={this.props.channelId}\n                    channelType={this.props.channelType}\n                    teammateId={this.props.teammateId}\n                    badge={this.props.badge}\n                />\n            </React.Fragment>\n        );\n\n        let element;\n        if (isDesktopApp()) {\n            element = (\n                <CopyUrlContextMenu\n                    link={this.props.link}\n                    menuId={this.props.channelId}\n                >\n                    <button\n                        className={'btn btn-link ' + this.props.rowClass}\n                        onClick={this.handleClick}\n                    >\n                        {content}\n                    </button>\n                </CopyUrlContextMenu>\n            );\n        } else {\n            element = (\n                <Link\n                    to={this.props.link}\n                    className={this.props.rowClass}\n                    onClick={this.trackChannelSelectedEvent}\n                >\n                    {content}\n                </Link>\n            );\n        }\n\n        return element;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Constants} from 'utils/constants.jsx';\nimport TutorialTip from 'components/tutorial/tutorial_tip';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nexport default class SidebarTutorialTip extends React.PureComponent {\n    static propTypes = {\n        townSquareDisplayName: PropTypes.string,\n        offTopicDisplayName: PropTypes.string,\n    }\n\n    render = () => {\n        const screens = [];\n\n        let townSquareDisplayName = Constants.DEFAULT_CHANNEL_UI_NAME;\n        if (this.props.townSquareDisplayName) {\n            townSquareDisplayName = this.props.townSquareDisplayName;\n        }\n\n        let offTopicDisplayName = Constants.OFFTOPIC_CHANNEL_UI_NAME;\n        if (this.props.offTopicDisplayName) {\n            offTopicDisplayName = this.props.offTopicDisplayName;\n        }\n\n        screens.push(\n            <div>\n                <h4>\n                    <FormattedMessage\n                        id='sidebar.tutorialScreen1.title'\n                        defaultMessage='Channels'\n                    />\n                </h4>\n                <p>\n                    <FormattedMarkdownMessage\n                        id='sidebar.tutorialScreen1.body'\n                        defaultMessage={'**Channels** organize conversations across different topics. They\\'re open to everyone on your team. To send private communications use **Direct Messages** for a single person or **Private Channels** for multiple people.'}\n                    />\n                </p>\n            </div>\n        );\n\n        screens.push(\n            <div>\n                <h4>\n                    <FormattedMessage\n                        id='sidebar.tutorialScreen2.title'\n                        defaultMessage='\"{townsquare}\" and \"{offtopic}\" channels'\n                        values={{\n                            townsquare: townSquareDisplayName,\n                            offtopic: offTopicDisplayName,\n                        }}\n                    />\n                </h4>\n                <p>\n                    <FormattedMessage\n                        id='sidebar.tutorialScreen2.body1'\n                        defaultMessage='Here are two public channels to start:'\n                    />\n                </p>\n                <p>\n                    <FormattedMarkdownMessage\n                        id='sidebar.tutorialScreen2.body2'\n                        defaultMessage='**{townsquare}** is a place for team-wide communication. Everyone in your team is a member of this channel.'\n                        values={{\n                            townsquare: townSquareDisplayName,\n                        }}\n                    />\n                </p>\n                <p>\n                    <FormattedMarkdownMessage\n                        id='sidebar.tutorialScreen2.body3'\n                        defaultMessage='**{offtopic}** is a place for fun and humor outside of work-related channels. You and your team can decide what other channels to create.'\n                        values={{\n                            offtopic: offTopicDisplayName,\n                        }}\n                    />\n                </p>\n            </div>\n        );\n\n        screens.push(\n            <div>\n                <h4>\n                    <FormattedMessage\n                        id='sidebar.tutorialScreen3.title'\n                        defaultMessage='Creating and Joining Channels'\n                    />\n                </h4>\n                <p>\n                    <FormattedMarkdownMessage\n                        id='sidebar.tutorialScreen3.body1'\n                        defaultMessage='Click **\"More...\"** to create a new channel or join an existing one.'\n                    />\n                </p>\n                <p>\n                    <FormattedMarkdownMessage\n                        id='sidebar.tutorialScreen3.body2'\n                        defaultMessage='You can also create a new channel by clicking the **\"+\" symbol** next to the public or private channel header.'\n                    />\n                </p>\n            </div>\n        );\n\n        return (\n            <TutorialTip\n                placement='right'\n                screens={screens}\n                overlayClass='tip-overlay--sidebar'\n                diagnosticsTag='tutorial_tip_2_channels'\n            />\n        );\n    }\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {Constants} from 'utils/constants.jsx';\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport SidebarChannelButtonOrLink from '../sidebar_channel_button_or_link/sidebar_channel_button_or_link.jsx';\nimport SidebarTutorialTip from '../sidebar_tutorial_tip.jsx';\n\nexport default class SidebarChannel extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Global config object\n         */\n        config: PropTypes.object.isRequired,\n\n        /**\n         * Channel id\n         */\n        channelId: PropTypes.string.isRequired,\n\n        /**\n         * Channel name\n         */\n        channelName: PropTypes.string.isRequired,\n\n        /**\n         * Channel display name\n         */\n        channelDisplayName: PropTypes.string.isRequired,\n\n        /**\n         * Channel is muted\n         */\n        channelMuted: PropTypes.bool,\n\n        /**\n         * Channel type\n         */\n        channelType: PropTypes.string.isRequired,\n\n        /**\n         * Channel status\n         */\n        channelStatus: PropTypes.string,\n\n        /**\n         * Channel is fake\n         */\n        channelFake: PropTypes.bool,\n\n        /**\n         * Serialized channel information (for fake channels)\n         */\n        channelStringified: PropTypes.string,\n\n        /**\n         * Teammate id (for direct messages)\n         */\n        channelTeammateId: PropTypes.string,\n\n        /**\n         * Teammate username (for direct messages)\n         */\n        channelTeammateUsername: PropTypes.string,\n\n        /**\n         * Teammate delete at date (for direct messages)\n         */\n        channelTeammateDeletedAt: PropTypes.number,\n\n        /**\n         * Whether the channel contains a draft in the center channel\n         */\n        hasDraft: PropTypes.bool.isRequired,\n\n        /**\n         * Whether or not to mark the channel as unread when it has unread messages and no mentions\n         */\n        showUnreadForMsgs: PropTypes.bool.isRequired,\n\n        /**\n         * Number of unread messages\n         */\n        unreadMsgs: PropTypes.number.isRequired,\n\n        /**\n         * Number of unread mentions\n         */\n        unreadMentions: PropTypes.number.isRequired,\n\n        /**\n         * Set if the channel is the current active channel\n         */\n        active: PropTypes.bool.isRequired,\n\n        /**\n         * Current team name\n         */\n        currentTeamName: PropTypes.string.isRequired,\n\n        /**\n         * Current user id\n         */\n        currentUserId: PropTypes.string.isRequired,\n\n        /**\n         * Set if the tutorial must be shown\n         */\n        showTutorialTip: PropTypes.bool.isRequired,\n\n        /**\n         * TownSquare (default channel) display name\n         */\n        townSquareDisplayName: PropTypes.string,\n\n        /**\n         * OffTopic (default channel) display name\n         */\n        offTopicDisplayName: PropTypes.string,\n\n        /**\n         * Number of members\n         */\n        membersCount: PropTypes.number.isRequired,\n\n        /**\n         * Flag if channel should be hidden in sidebar\n         */\n        shouldHideChannel: PropTypes.bool.isRequired,\n\n        channelIsArchived: PropTypes.bool.isRequired,\n\n        actions: PropTypes.shape({\n            savePreferences: PropTypes.func.isRequired,\n            leaveChannel: PropTypes.func.isRequired,\n            openLhs: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    isLeaving = false;\n\n    handleLeavePublicChannel = () => {\n        this.props.actions.leaveChannel(this.props.channelId);\n        trackEvent('ui', 'ui_public_channel_x_button_clicked');\n    }\n\n    handleLeavePrivateChannel = () => {\n        GlobalActions.showLeavePrivateChannelModal({id: this.props.channelId, display_name: this.props.channelDisplayName});\n        trackEvent('ui', 'ui_private_channel_x_button_clicked');\n    }\n\n    handleLeaveDirectChannel = () => {\n        if (!this.isLeaving) {\n            this.isLeaving = true;\n\n            let id;\n            let category;\n            if (this.props.channelType === Constants.DM_CHANNEL) {\n                id = this.props.channelTeammateId;\n                category = Constants.Preferences.CATEGORY_DIRECT_CHANNEL_SHOW;\n            } else {\n                id = this.props.channelId;\n                category = Constants.Preferences.CATEGORY_GROUP_CHANNEL_SHOW;\n            }\n\n            const currentUserId = this.props.currentUserId;\n            this.props.actions.savePreferences(currentUserId, [{user_id: currentUserId, category, name: id, value: 'false'}]).then(\n                () => {\n                    this.isLeaving = false;\n                }\n            );\n\n            trackEvent('ui', 'ui_direct_channel_x_button_clicked');\n        }\n\n        if (this.props.active) {\n            browserHistory.push(`/${this.props.currentTeamName}/channels/${Constants.DEFAULT_CHANNEL}`);\n        }\n    }\n\n    showChannelAsUnread = () => {\n        return this.props.unreadMentions > 0 || (this.props.unreadMsgs > 0 && this.props.showUnreadForMsgs);\n    };\n\n    render = () => {\n        if (this.props.channelIsArchived && !this.props.active) {\n            return null;\n        }\n        if (!this.props.channelDisplayName || !this.props.channelType) {\n            return (<div/>);\n        }\n\n        let closeHandler = null;\n        if (!this.showChannelAsUnread()) {\n            if (this.props.shouldHideChannel) {\n                return '';\n            }\n            if (this.props.channelType === Constants.DM_CHANNEL || this.props.channelType === Constants.GM_CHANNEL) {\n                closeHandler = this.handleLeaveDirectChannel;\n            } else if (this.props.config.EnableXToLeaveChannelsFromLHS === 'true') {\n                if (this.props.channelType === Constants.OPEN_CHANNEL && this.props.channelName !== Constants.DEFAULT_CHANNEL) {\n                    closeHandler = this.handleLeavePublicChannel;\n                } else if (this.props.channelType === Constants.PRIVATE_CHANNEL) {\n                    closeHandler = this.handleLeavePrivateChannel;\n                }\n            }\n        }\n\n        let linkClass = '';\n        if (this.props.active) {\n            linkClass = 'active';\n        }\n\n        let rowClass = 'sidebar-item';\n        let badge = false;\n        if (this.showChannelAsUnread()) {\n            rowClass += ' unread-title';\n        }\n\n        if (this.props.unreadMentions > 0) {\n            rowClass += ' has-badge';\n\n            badge = true;\n        }\n\n        if (this.props.channelMuted) {\n            rowClass += ' muted';\n        }\n\n        if (closeHandler && !badge) {\n            rowClass += ' has-close';\n        }\n\n        let tutorialTip = null;\n        if (this.props.showTutorialTip && this.props.channelName === Constants.DEFAULT_CHANNEL) {\n            tutorialTip = (\n                <SidebarTutorialTip\n                    townSquareDisplayName={this.props.townSquareDisplayName}\n                    offTopicDisplayName={this.props.offTopicDisplayName}\n                />\n            );\n            this.props.actions.openLhs();\n        }\n\n        let link = '';\n        if (this.props.channelFake) {\n            link = `/${this.props.currentTeamName}/channels/${this.props.channelName}?fakechannel=${encodeURIComponent(this.props.channelStringified)}`;\n        } else if (this.props.channelType === Constants.DM_CHANNEL) {\n            link = `/${this.props.currentTeamName}/messages/@${this.props.channelTeammateUsername}`;\n        } else if (this.props.channelType === Constants.GM_CHANNEL) {\n            link = `/${this.props.currentTeamName}/messages/${this.props.channelName}`;\n        } else {\n            link = `/${this.props.currentTeamName}/channels/${this.props.channelName}`;\n        }\n\n        let displayName = '';\n        if (this.props.currentUserId === this.props.channelTeammateId) {\n            displayName = (\n                <FormattedMessage\n                    id='sidebar.directchannel.you'\n                    defaultMessage='{displayname} (you)'\n                    values={{\n                        displayname: this.props.channelDisplayName,\n                    }}\n                />\n            );\n        } else {\n            displayName = this.props.channelDisplayName;\n        }\n\n        return (\n            <li\n                key={this.props.channelName}\n                ref={'channel'}\n                className={linkClass}\n            >\n                <SidebarChannelButtonOrLink\n                    link={link}\n                    rowClass={rowClass}\n                    channelId={this.props.channelId}\n                    channelStatus={this.props.channelStatus}\n                    channelType={this.props.channelType}\n                    displayName={displayName}\n                    handleClose={closeHandler}\n                    hasDraft={this.props.hasDraft}\n                    badge={badge}\n                    unreadMentions={this.props.unreadMentions}\n                    membersCount={this.props.membersCount}\n                    teammateId={this.props.channelTeammateId}\n                    teammateDeletedAt={this.props.channelTeammateDeletedAt}\n                    channelIsArchived={this.props.channelIsArchived}\n                />\n                {tutorialTip}\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {savePreferences} from 'mattermost-redux/actions/preferences';\nimport {leaveChannel} from 'mattermost-redux/actions/channels';\n\nimport {\n    getCurrentChannelId,\n    getChannelsNameMapInCurrentTeam,\n    makeGetChannel,\n    shouldHideDefaultChannel,\n} from 'mattermost-redux/selectors/entities/channels';\nimport {getMyChannelMemberships} from 'mattermost-redux/selectors/entities/common';\nimport {getUserIdsInChannels, getUser} from 'mattermost-redux/selectors/entities/users';\nimport {getInt, getTeammateNameDisplaySetting} from 'mattermost-redux/selectors/entities/preferences';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {isChannelMuted, isFavoriteChannel} from 'mattermost-redux/utils/channel_utils';\n\nimport {displayUsername} from 'mattermost-redux/utils/user_utils';\n\nimport {Constants, NotificationLevels, StoragePrefixes} from 'utils/constants.jsx';\n\nimport {open as openLhs} from 'actions/views/lhs.js';\nimport {getPostDraft} from 'selectors/rhs';\n\nimport SidebarChannel from './sidebar_channel.jsx';\n\nfunction makeMapStateToProps() {\n    const getChannel = makeGetChannel();\n\n    return (state, ownProps) => {\n        const channelId = ownProps.channelId;\n\n        const config = getConfig(state);\n        const currentChannelId = getCurrentChannelId(state);\n        const channel = getChannel(state, {id: channelId}) || {};\n        const draft = channel.id ? getPostDraft(state, StoragePrefixes.DRAFT, channel.id) : false;\n\n        const enableTutorial = config.EnableTutorial === 'true';\n        const tutorialStep = getInt(state, Constants.Preferences.TUTORIAL_STEP, ownProps.currentUserId, Constants.TutorialSteps.FINISHED);\n        const channelsByName = getChannelsNameMapInCurrentTeam(state);\n        const memberIds = getUserIdsInChannels(state);\n\n        let membersCount = 0;\n        if (memberIds && memberIds[channel.id]) {\n            membersCount = memberIds[channel.id].size;\n            if (memberIds[channel.id].has(ownProps.currentUserId)) {\n                membersCount--;\n            }\n        }\n\n        const member = getMyChannelMemberships(state)[channelId];\n\n        let unreadMentions = 0;\n        let unreadMsgs = 0;\n        let showUnreadForMsgs = true;\n        if (member) {\n            unreadMentions = member.mention_count;\n\n            if (channel) {\n                unreadMsgs = Math.max(channel.total_msg_count - member.msg_count, 0);\n            }\n\n            if (member.notify_props) {\n                showUnreadForMsgs = member.notify_props.mark_unread !== NotificationLevels.MENTION;\n            }\n        }\n\n        const teammateNameDisplay = getTeammateNameDisplaySetting(state);\n        let teammate = null;\n        let channelTeammateId = '';\n        let channelTeammateDeletedAt = 0;\n        let channelTeammateUsername = '';\n        let channelDisplayName = channel.display_name;\n        if (channel.type === Constants.DM_CHANNEL) {\n            teammate = getUser(state, channel.teammate_id);\n            if (teammate) {\n                channelTeammateId = teammate.id;\n                channelTeammateDeletedAt = teammate.delete_at;\n                channelTeammateUsername = teammate.username;\n            }\n\n            channelDisplayName = displayUsername(teammate, teammateNameDisplay, false);\n        }\n\n        let shouldHideChannel = false;\n        if (\n            channel.name === Constants.DEFAULT_CHANNEL &&\n            !ownProps.active &&\n            shouldHideDefaultChannel(state, channel) &&\n            !isFavoriteChannel(state.entities.preferences.myPreferences, channel.id)\n        ) {\n            shouldHideChannel = true;\n        }\n\n        return {\n            config,\n            channelId,\n            channelName: channel.name,\n            channelDisplayName,\n            channelType: channel.type,\n            channelStatus: channel.status,\n            channelFake: channel.fake,\n            channelMuted: isChannelMuted(member),\n            channelStringified: channel.fake && JSON.stringify(channel),\n            channelTeammateId,\n            channelTeammateUsername,\n            channelTeammateDeletedAt,\n            hasDraft: draft && Boolean(draft.message.trim() || draft.fileInfos.length || draft.uploadsInProgress.length) && currentChannelId !== channel.id,\n            showTutorialTip: enableTutorial && tutorialStep === Constants.TutorialSteps.CHANNEL_POPOVER,\n            townSquareDisplayName: channelsByName[Constants.DEFAULT_CHANNEL] && channelsByName[Constants.DEFAULT_CHANNEL].display_name,\n            offTopicDisplayName: channelsByName[Constants.OFFTOPIC_CHANNEL] && channelsByName[Constants.OFFTOPIC_CHANNEL].display_name,\n            showUnreadForMsgs,\n            unreadMsgs,\n            unreadMentions,\n            membersCount,\n            shouldHideChannel,\n            channelIsArchived: channel.delete_at !== 0,\n        };\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            savePreferences,\n            leaveChannel,\n            openLhs,\n        }, dispatch),\n    };\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps, null, {withRef: true})(SidebarChannel);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport React from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\nimport {PropTypes} from 'prop-types';\nimport Permissions from 'mattermost-redux/constants/permissions';\nimport classNames from 'classnames';\n\nimport Scrollbars from 'react-custom-scrollbars';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport * as ChannelUtils from 'utils/channel_utils.jsx';\nimport {ActionTypes, Constants} from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\nimport favicon from 'images/favicon/favicon-16x16.png';\nimport redFavicon from 'images/favicon/redfavicon-16x16.png';\nimport MoreChannels from 'components/more_channels';\nimport MoreDirectChannels from 'components/more_direct_channels';\nimport NewChannelFlow from 'components/new_channel_flow';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\nimport UnreadChannelIndicator from 'components/unread_channel_indicator.jsx';\nimport Pluggable from 'plugins/pluggable';\n\nimport SidebarHeader from './header';\nimport SidebarChannel from './sidebar_channel';\n\nexport function renderView(props) {\n    return (\n        <div\n            {...props}\n            className='scrollbar--view'\n        />);\n}\n\nexport function renderThumbHorizontal(props) {\n    return (\n        <div\n            {...props}\n            className='scrollbar--horizontal'\n        />);\n}\n\nexport function renderThumbVertical(props) {\n    return (\n        <div\n            {...props}\n            className='scrollbar--vertical'\n        />);\n}\n\nexport default class Sidebar extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Global config object\n         */\n        config: PropTypes.object.isRequired,\n\n        isOpen: PropTypes.bool.isRequired,\n\n        /**\n         * List of public channels (ids)\n         */\n        publicChannelIds: PropTypes.array.isRequired,\n\n        /**\n         * List of private channels (ids)\n         */\n        privateChannelIds: PropTypes.array.isRequired,\n\n        /**\n         * List of favorite channels (ids)\n         */\n        favoriteChannelIds: PropTypes.array.isRequired,\n\n        /**\n         * List of direct/group channels (ids)\n         */\n        directAndGroupChannelIds: PropTypes.array.isRequired,\n\n        /**\n         * List of unread channels (ids)\n         */\n        unreadChannelIds: PropTypes.array.isRequired,\n\n        /**\n         * Current channel object\n         */\n        currentChannel: PropTypes.object,\n\n        /**\n         * Current channel teammeat (for direct messages)\n         */\n        currentTeammate: PropTypes.object,\n\n        /**\n         * Current team object\n         */\n        currentTeam: PropTypes.object,\n\n        /**\n         * Current user object\n         */\n        currentUser: PropTypes.object,\n\n        /**\n         * Number of unread mentions/messages\n         */\n        unreads: PropTypes.object.isRequired,\n\n        /**\n         * Flag to display the Unread channels section\n         */\n        showUnreadSection: PropTypes.bool.isRequired,\n\n        /**\n         * Flag to display the Switch channel shortcut\n         */\n        channelSwitcherOption: PropTypes.bool.isRequired,\n\n        actions: PropTypes.shape({\n            close: PropTypes.func.isRequired,\n            switchToChannelById: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    static defaultProps = {\n        currentChannel: {},\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.badgesActive = false;\n        this.firstUnreadChannel = null;\n        this.lastUnreadChannel = null;\n\n        this.isLeaving = new Map();\n        this.isSwitchingChannel = false;\n        this.closedDirectChannel = false;\n\n        this.state = {\n            newChannelModalType: '',\n            showDirectChannelsModal: false,\n            showMoreChannelsModal: false,\n        };\n    }\n\n    componentDidMount() {\n        this.updateUnreadIndicators();\n        document.addEventListener('keydown', this.navigateChannelShortcut);\n        document.addEventListener('keydown', this.navigateUnreadChannelShortcut);\n    }\n\n    UNSAFE_componentWillUpdate() { // eslint-disable-line camelcase\n        this.updateUnreadIndicators();\n    }\n\n    componentDidUpdate(prevProps) {\n        // if the active channel disappeared (which can happen when dm channels autoclose), go to town square\n        if (this.props.currentTeam === prevProps.currentTeam &&\n            this.props.currentChannel.id === prevProps.currentChannel.id &&\n            !this.channelIdIsDisplayedForProps(this.props, this.props.currentChannel.id) &&\n            this.channelIdIsDisplayedForProps(prevProps, this.props.currentChannel.id)\n        ) {\n            this.closedDirectChannel = true;\n            browserHistory.push(`/${this.props.currentTeam.name}/channels/${Constants.DEFAULT_CHANNEL}`);\n            return;\n        }\n\n        // reset the scrollbar upon switching teams\n        if (this.props.currentTeam !== prevProps.currentTeam) {\n            this.refs.scrollbar.scrollToTop();\n        }\n\n        // close the LHS on mobile when you change channels\n        if (this.props.currentChannel.id !== prevProps.currentChannel.id) {\n            if (this.closedDirectChannel) {\n                this.closedDirectChannel = false;\n            } else {\n                this.props.actions.close();\n            }\n        }\n\n        this.updateTitle();\n        this.setBadgesActiveAndFavicon();\n        this.setFirstAndLastUnreadChannels();\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.navigateChannelShortcut);\n        document.removeEventListener('keydown', this.navigateUnreadChannelShortcut);\n    }\n\n    setBadgesActiveAndFavicon() {\n        this.lastBadgesActive = this.badgesActive;\n        this.badgesActive = this.props.unreads.mentions;\n\n        // update the favicon to show if there are any notifications\n        if (this.lastBadgesActive !== this.badgesActive) {\n            var link = document.createElement('link');\n            link.type = 'image/x-icon';\n            link.rel = 'shortcut icon';\n            link.id = 'favicon';\n            if (this.badgesActive) {\n                link.href = typeof redFavicon === 'string' ? redFavicon : '';\n            } else {\n                link.href = typeof favicon === 'string' ? favicon : '';\n            }\n            var head = document.getElementsByTagName('head')[0];\n            var oldLink = document.getElementById('favicon');\n            if (oldLink) {\n                head.removeChild(oldLink);\n            }\n            head.appendChild(link);\n        }\n    }\n\n    setFirstAndLastUnreadChannels() {\n        const {\n            currentChannel,\n            unreadChannelIds,\n        } = this.props;\n\n        this.getDisplayedChannels().map((channelId) => {\n            if (channelId !== currentChannel.id && unreadChannelIds.includes(channelId)) {\n                if (!this.firstUnreadChannel) {\n                    this.firstUnreadChannel = channelId;\n                }\n                this.lastUnreadChannel = channelId;\n            }\n            return null;\n        });\n    }\n\n    handleOpenMoreDirectChannelsModal = (e) => {\n        e.preventDefault();\n        if (this.state.showDirectChannelsModal) {\n            this.hideMoreDirectChannelsModal();\n        } else {\n            this.showMoreDirectChannelsModal();\n        }\n    }\n\n    updateTitle = () => {\n        const {\n            config,\n            currentChannel,\n            currentTeam,\n            currentTeammate,\n            unreads,\n        } = this.props;\n\n        if (currentChannel && currentTeam) {\n            let currentSiteName = '';\n            if (config.SiteName != null) {\n                currentSiteName = config.SiteName;\n            }\n\n            let currentChannelName = currentChannel.display_name;\n            if (currentChannel.type === Constants.DM_CHANNEL) {\n                if (currentTeammate != null) {\n                    currentChannelName = currentTeammate.display_name;\n                }\n            }\n\n            const mentionTitle = unreads.mentionCount > 0 ? '(' + unreads.mentionCount + ') ' : '';\n            const unreadTitle = unreads.messageCount > 0 ? '* ' : '';\n            document.title = mentionTitle + unreadTitle + currentChannelName + ' - ' + this.props.currentTeam.display_name + ' ' + currentSiteName;\n        }\n    }\n\n    onScroll = () => {\n        this.updateUnreadIndicators();\n    }\n\n    scrollToFirstUnreadChannel = () => {\n        if (this.firstUnreadChannel) {\n            const unreadMargin = 15;\n            const firstUnreadElement = $(ReactDOM.findDOMNode(this.refs[this.firstUnreadChannel]));\n            const scrollTop = firstUnreadElement.position().top - unreadMargin;\n            this.refs.scrollbar.scrollTop(scrollTop);\n        }\n    }\n\n    scrollToLastUnreadChannel = () => {\n        if (this.lastUnreadChannel) {\n            const unreadMargin = 15;\n            const lastUnreadElement = $(ReactDOM.findDOMNode(this.refs[this.lastUnreadChannel]));\n            const elementBottom = lastUnreadElement.position().top + lastUnreadElement.height();\n            const scrollTop = (elementBottom - this.refs.scrollbar.getClientHeight()) + unreadMargin;\n            this.refs.scrollbar.scrollTop(scrollTop);\n        }\n    }\n\n    updateUnreadIndicators = () => {\n        let showTopUnread = false;\n        let showBottomUnread = false;\n\n        // Consider partially obscured channels as above/below\n        const unreadMargin = 15;\n\n        if (this.firstUnreadChannel) {\n            const firstUnreadElement = $(ReactDOM.findDOMNode(this.refs[this.firstUnreadChannel]));\n            const firstUnreadPosition = firstUnreadElement ? firstUnreadElement.position() : null;\n\n            if (firstUnreadPosition && ((firstUnreadPosition.top + firstUnreadElement.height()) - unreadMargin) < this.refs.scrollbar.getScrollTop()) {\n                showTopUnread = true;\n            }\n        }\n\n        if (this.lastUnreadChannel) {\n            const lastUnreadElement = $(ReactDOM.findDOMNode(this.refs[this.lastUnreadChannel]));\n            const lastUnreadPosition = lastUnreadElement ? lastUnreadElement.position() : null;\n\n            if (lastUnreadPosition && (lastUnreadPosition.top + unreadMargin) > (this.refs.scrollbar.getScrollTop() + this.refs.scrollbar.getClientHeight())) {\n                showBottomUnread = true;\n            }\n        }\n\n        this.setState({\n            showTopUnread,\n            showBottomUnread,\n        });\n    }\n\n    updateScrollbarOnChannelChange = (channelId) => {\n        const curChannel = this.refs[channelId].getWrappedInstance().refs.channel.getBoundingClientRect();\n        if ((curChannel.top - Constants.CHANNEL_SCROLL_ADJUSTMENT < 0) || (curChannel.top + curChannel.height > this.refs.scrollbar.view.getBoundingClientRect().height)) {\n            this.refs.scrollbar.scrollTop(this.refs.scrollbar.view.scrollTop + (curChannel.top - Constants.CHANNEL_SCROLL_ADJUSTMENT));\n        }\n    }\n\n    navigateChannelShortcut = (e) => {\n        if (e.altKey && !e.shiftKey && (Utils.isKeyPressed(e, Constants.KeyCodes.UP) || Utils.isKeyPressed(e, Constants.KeyCodes.DOWN))) {\n            e.preventDefault();\n\n            if (this.isSwitchingChannel) {\n                return;\n            }\n\n            this.isSwitchingChannel = true;\n            const allChannelIds = this.getDisplayedChannels();\n            const curChannelId = this.props.currentChannel.id;\n            let curIndex = -1;\n            for (let i = 0; i < allChannelIds.length; i++) {\n                if (allChannelIds[i] === curChannelId) {\n                    curIndex = i;\n                }\n            }\n            let nextIndex = curIndex;\n            if (Utils.isKeyPressed(e, Constants.KeyCodes.DOWN)) {\n                nextIndex = curIndex + 1;\n            } else {\n                nextIndex = curIndex - 1;\n            }\n            const nextChannelId = allChannelIds[Utils.mod(nextIndex, allChannelIds.length)];\n            this.props.actions.switchToChannelById(nextChannelId);\n            this.updateScrollbarOnChannelChange(nextChannelId);\n\n            this.isSwitchingChannel = false;\n        } else if (Utils.cmdOrCtrlPressed(e) && e.shiftKey && Utils.isKeyPressed(e, Constants.KeyCodes.K)) {\n            this.handleOpenMoreDirectChannelsModal(e);\n        }\n    };\n\n    navigateUnreadChannelShortcut = (e) => {\n        if (e.altKey && e.shiftKey && (Utils.isKeyPressed(e, Constants.KeyCodes.UP) || Utils.isKeyPressed(e, Constants.KeyCodes.DOWN))) {\n            e.preventDefault();\n\n            if (this.isSwitchingChannel) {\n                return;\n            }\n\n            this.isSwitchingChannel = true;\n\n            const allChannelIds = this.getDisplayedChannels();\n\n            let direction = 0;\n            if (Utils.isKeyPressed(e, Constants.KeyCodes.UP)) {\n                direction = -1;\n            } else {\n                direction = 1;\n            }\n\n            const nextIndex = ChannelUtils.findNextUnreadChannelId(\n                this.props.currentChannel.id,\n                allChannelIds,\n                this.props.unreadChannelIds,\n                direction\n            );\n\n            if (nextIndex !== -1) {\n                const nextChannelId = allChannelIds[nextIndex];\n                this.props.actions.switchToChannelById(nextChannelId);\n                this.updateScrollbarOnChannelChange(nextChannelId);\n            }\n\n            this.isSwitchingChannel = false;\n        }\n    };\n\n    getDisplayedChannels = (props = this.props) => {\n        if (props.showUnreadSection) {\n            return props.unreadChannelIds.\n                concat(props.favoriteChannelIds).\n                concat(props.publicChannelIds).\n                concat(props.privateChannelIds).\n                concat(props.directAndGroupChannelIds);\n        }\n\n        return props.favoriteChannelIds.\n            concat(props.publicChannelIds).\n            concat(props.privateChannelIds).\n            concat(props.directAndGroupChannelIds);\n    };\n\n    channelIdIsDisplayedForProps = (props, id) => {\n        const allChannels = this.getDisplayedChannels(props);\n        for (let i = 0; i < allChannels.length; i++) {\n            if (allChannels[i] === id) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    showMoreChannelsModal = () => {\n        this.setState({showMoreChannelsModal: true});\n        trackEvent('ui', 'ui_channels_more_public');\n    }\n\n    hideMoreChannelsModal = () => {\n        this.setState({showMoreChannelsModal: false});\n    }\n\n    showNewChannelModal = (type) => {\n        this.setState({newChannelModalType: type});\n    }\n\n    hideNewChannelModal = () => {\n        this.setState({newChannelModalType: ''});\n    }\n\n    showMoreDirectChannelsModal = () => {\n        trackEvent('ui', 'ui_channels_more_direct');\n        this.setState({showDirectChannelsModal: true});\n    }\n\n    hideMoreDirectChannelsModal = () => {\n        this.setState({showDirectChannelsModal: false});\n    }\n\n    openQuickSwitcher = (e) => {\n        e.preventDefault();\n        AppDispatcher.handleViewAction({\n            type: ActionTypes.TOGGLE_QUICK_SWITCH_MODAL,\n        });\n    }\n\n    createSidebarChannel = (channelId) => {\n        return (\n            <SidebarChannel\n                key={channelId}\n                ref={channelId}\n                channelId={channelId}\n                active={channelId === this.props.currentChannel.id}\n                currentTeamName={this.props.currentTeam.name}\n                currentUserId={this.props.currentUser.id}\n            />\n        );\n    }\n\n    render() {\n        const {\n            directAndGroupChannelIds,\n            favoriteChannelIds,\n            publicChannelIds,\n            privateChannelIds,\n            unreadChannelIds,\n            showUnreadSection,\n            channelSwitcherOption,\n        } = this.props;\n\n        // Check if we have all info needed to render\n        if (this.props.currentTeam == null || this.props.currentUser == null) {\n            return (<div/>);\n        }\n\n        this.badgesActive = false;\n\n        // keep track of the first and last unread channels so we can use them to set the unread indicators\n        this.firstUnreadChannel = null;\n        this.lastUnreadChannel = null;\n\n        // create elements for all 5 types of channels\n        const unreadChannelItems = showUnreadSection ? unreadChannelIds.map(this.createSidebarChannel) : [];\n        const favoriteItems = favoriteChannelIds.map(this.createSidebarChannel);\n        const publicChannelItems = publicChannelIds.map(this.createSidebarChannel);\n        const privateChannelItems = privateChannelIds.map(this.createSidebarChannel);\n        const directMessageItems = directAndGroupChannelIds.map(this.createSidebarChannel);\n\n        var directMessageMore = (\n            <li key='more'>\n                <button\n                    id='moreDirectMessage'\n                    className='nav-more cursor--pointer style--none btn--block'\n                    onClick={this.handleOpenMoreDirectChannelsModal}\n                >\n                    <FormattedMessage\n                        id='sidebar.moreElips'\n                        defaultMessage='More...'\n                    />\n                </button>\n            </li>\n        );\n\n        let showChannelModal = false;\n        if (this.state.newChannelModalType !== '') {\n            showChannelModal = true;\n        }\n\n        const createChannelTootlip = (\n            <Tooltip id='new-channel-tooltip' >\n                <FormattedMessage\n                    id='sidebar.createChannel'\n                    defaultMessage='Create new public channel'\n                />\n            </Tooltip>\n        );\n        const createGroupTootlip = (\n            <Tooltip id='new-group-tooltip'>\n                <FormattedMessage\n                    id='sidebar.createGroup'\n                    defaultMessage='Create new private channel'\n                />\n            </Tooltip>\n        );\n\n        const createDirectMessageTooltip = (\n            <Tooltip\n                id='new-group-tooltip'\n                className='hidden-xs'\n            >\n                <FormattedMessage\n                    id='sidebar.createDirectMessage'\n                    defaultMessage='Create new direct message'\n                />\n            </Tooltip>\n        );\n\n        const above = (\n            <FormattedMessage\n                id='sidebar.unreads'\n                defaultMessage='More unreads'\n            />\n        );\n\n        const below = (\n            <FormattedMessage\n                id='sidebar.unreads'\n                defaultMessage='More unreads'\n            />\n        );\n\n        let tooltipTriggers = ['hover', 'focus'];\n\n        if (Utils.isMobile()) {\n            tooltipTriggers = [];\n        }\n\n        const createPublicChannelIcon = (\n            <OverlayTrigger\n                trigger={tooltipTriggers}\n                delayShow={500}\n                placement='top'\n                overlay={createChannelTootlip}\n            >\n                <button\n                    id='createPublicChannel'\n                    className='add-channel-btn cursor--pointer style--none'\n                    onClick={this.showNewChannelModal.bind(this, Constants.OPEN_CHANNEL)}\n                >\n                    {'+'}\n                </button>\n            </OverlayTrigger>\n        );\n\n        const createPrivateChannelIcon = (\n            <OverlayTrigger\n                trigger={tooltipTriggers}\n                delayShow={500}\n                placement='top'\n                overlay={createGroupTootlip}\n            >\n                <button\n                    id='createPrivateChannel'\n                    className='add-channel-btn cursor--pointer style--none'\n                    onClick={this.showNewChannelModal.bind(this, Constants.PRIVATE_CHANNEL)}\n                >\n                    {'+'}\n                </button>\n            </OverlayTrigger>\n        );\n\n        const createDirectMessageIcon = (\n            <OverlayTrigger\n                className='hidden-xs'\n                delayShow={500}\n                placement='top'\n                overlay={createDirectMessageTooltip}\n            >\n                <button\n                    className='add-channel-btn cursor--pointer style--none'\n                    onClick={this.handleOpenMoreDirectChannelsModal}\n                >\n                    {'+'}\n                </button>\n            </OverlayTrigger>\n        );\n\n        let moreDirectChannelsModal;\n        if (this.state.showDirectChannelsModal) {\n            moreDirectChannelsModal = (\n                <MoreDirectChannels\n                    onModalDismissed={this.hideMoreDirectChannelsModal}\n                    isExistingChannel={false}\n                />\n            );\n        }\n\n        let moreChannelsModal;\n        if (this.state.showMoreChannelsModal) {\n            moreChannelsModal = (\n                <MoreChannels\n                    onModalDismissed={this.hideMoreChannelsModal}\n                    handleNewChannel={() => {\n                        this.hideMoreChannelsModal();\n                        this.showNewChannelModal(Constants.OPEN_CHANNEL);\n                    }}\n                />\n            );\n        }\n\n        let quickSwitchText = null;\n        if (channelSwitcherOption) {\n            let quickSwitchTextShortcutId = t('quick_switch_modal.channelsShortcut.windows');\n            let quickSwitchTextShortcutDefault = '- CTRL+K';\n            if (Utils.isMac()) {\n                quickSwitchTextShortcutId = t('quick_switch_modal.channelsShortcut.mac');\n                quickSwitchTextShortcutDefault = '- ⌘K';\n            }\n\n            const quickSwitchTextShortcut = (\n                <span className='switch__shortcut hidden-xs'>\n                    <FormattedMessage\n                        id={quickSwitchTextShortcutId}\n                        defaultMessage={quickSwitchTextShortcutDefault}\n                    />\n                </span>\n            );\n\n            quickSwitchText = (\n                <div className='sidebar__switcher'>\n                    <button\n                        id='sidebarSwitcherButton'\n                        className='btn btn-link'\n                        onClick={this.openQuickSwitcher}\n                    >\n                        <FormattedMessage\n                            id={'channel_switch_modal.title'}\n                            defaultMessage='Switch Channels'\n                        />\n                        {quickSwitchTextShortcut}\n                    </button>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                className={classNames('sidebar--left', {'move--right': this.props.isOpen && Utils.isMobile()})}\n                id='sidebar-left'\n                key='sidebar-left'\n            >\n                <NewChannelFlow\n                    show={showChannelModal}\n                    channelType={this.state.newChannelModalType}\n                    onModalDismissed={this.hideNewChannelModal}\n                />\n                {moreDirectChannelsModal}\n                {moreChannelsModal}\n\n                <SidebarHeader\n                    teamId={this.props.currentTeam.id}\n                    teamDisplayName={this.props.currentTeam.display_name}\n                    teamDescription={this.props.currentTeam.description}\n                    teamName={this.props.currentTeam.name}\n                    teamType={this.props.currentTeam.type}\n                    currentUser={this.props.currentUser}\n                />\n\n                <div className='sidebar--left__icons'>\n                    <Pluggable pluggableName='LeftSidebarHeader'/>\n                </div>\n\n                <div className='sidebar--left__list'>\n                    <UnreadChannelIndicator\n                        name='Top'\n                        show={this.state.showTopUnread}\n                        onClick={this.scrollToFirstUnreadChannel}\n                        extraClass='nav-pills__unread-indicator-top'\n                        content={above}\n                    />\n                    <UnreadChannelIndicator\n                        name='Bottom'\n                        show={this.state.showBottomUnread}\n                        onClick={this.scrollToLastUnreadChannel}\n                        extraClass='nav-pills__unread-indicator-bottom'\n                        content={below}\n                    />\n\n                    <Scrollbars\n                        ref='scrollbar'\n                        autoHide={true}\n                        autoHideTimeout={500}\n                        autoHideDuration={500}\n                        renderThumbHorizontal={renderThumbHorizontal}\n                        renderThumbVertical={renderThumbVertical}\n                        renderView={renderView}\n                        onScroll={this.onScroll}\n                        style={{position: 'absolute'}}\n                    >\n                        <div\n                            id='sidebarChannelContainer'\n                            className='nav-pills__container'\n                        >\n                            {unreadChannelItems.length !== 0 && <ul className='nav nav-pills nav-stacked'>\n                                <li>\n                                    <h4 id='favoriteChannel'>\n                                        <FormattedMessage\n                                            id='sidebar.unreadSection'\n                                            defaultMessage='UNREADS'\n                                        />\n                                    </h4>\n                                </li>\n                                {unreadChannelItems}\n                            </ul>}\n                            {favoriteItems.length !== 0 && <ul className='nav nav-pills nav-stacked'>\n                                <li>\n                                    <h4 id='favoriteChannel'>\n                                        <FormattedMessage\n                                            id='sidebar.favorite'\n                                            defaultMessage='FAVORITE CHANNELS'\n                                        />\n                                    </h4>\n                                </li>\n                                {favoriteItems}\n                            </ul>}\n                            <ul className='nav nav-pills nav-stacked'>\n                                <li>\n                                    <h4 id='publicChannel'>\n                                        <FormattedMessage\n                                            id='sidebar.channels'\n                                            defaultMessage='PUBLIC CHANNELS'\n                                        />\n                                        <TeamPermissionGate\n                                            teamId={this.props.currentTeam.id}\n                                            permissions={[Permissions.CREATE_PUBLIC_CHANNEL]}\n                                        >\n                                            {createPublicChannelIcon}\n                                        </TeamPermissionGate>\n                                    </h4>\n                                </li>\n                                {publicChannelItems}\n                                <li>\n                                    <button\n                                        id='sidebarChannelsMore'\n                                        className='nav-more cursor--pointer style--none btn--block'\n                                        onClick={this.showMoreChannelsModal}\n                                    >\n                                        <FormattedMessage\n                                            id='sidebar.moreElips'\n                                            defaultMessage='More...'\n                                        />\n                                    </button>\n                                </li>\n                            </ul>\n\n                            <ul className='nav nav-pills nav-stacked'>\n                                <li>\n                                    <h4 id='privateChannel'>\n                                        <FormattedMessage\n                                            id='sidebar.pg'\n                                            defaultMessage='PRIVATE CHANNELS'\n                                        />\n                                        <TeamPermissionGate\n                                            teamId={this.props.currentTeam.id}\n                                            permissions={[Permissions.CREATE_PRIVATE_CHANNEL]}\n                                        >\n                                            {createPrivateChannelIcon}\n                                        </TeamPermissionGate>\n                                    </h4>\n                                </li>\n                                {privateChannelItems}\n                            </ul>\n                            <ul className='nav nav-pills nav-stacked'>\n                                <li>\n                                    <h4 id='directChannel'>\n                                        <FormattedMessage\n                                            id='sidebar.direct'\n                                            defaultMessage='DIRECT MESSAGES'\n                                        />\n                                        {createDirectMessageIcon}\n                                    </h4>\n                                </li>\n                                {directMessageItems}\n                                {directMessageMore}\n                            </ul>\n                        </div>\n                    </Scrollbars>\n                </div>\n                {quickSwitchText}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {Preferences} from 'mattermost-redux/constants/index';\nimport {\n    getSortedPublicChannelWithUnreadsIds,\n    getSortedPrivateChannelWithUnreadsIds,\n    getSortedFavoriteChannelWithUnreadsIds,\n    getSortedDirectChannelWithUnreadsIds,\n    getCurrentChannel,\n    getUnreads,\n    getSortedUnreadChannelIds,\n    getSortedDirectChannelIds,\n    getSortedFavoriteChannelIds,\n    getSortedPublicChannelIds,\n    getSortedPrivateChannelIds,\n} from 'mattermost-redux/selectors/entities/channels';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getBool as getBoolPreference} from 'mattermost-redux/selectors/entities/preferences';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {switchToChannelById} from 'actions/views/channel';\nimport {close} from 'actions/views/lhs';\nimport {getIsLhsOpen} from 'selectors/lhs';\nimport {GroupUnreadChannels} from 'utils/constants.jsx';\n\nimport Sidebar from './sidebar.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const currentChannel = getCurrentChannel(state);\n    const currentTeammate = currentChannel && currentChannel.teammate_id && getCurrentChannel(state, currentChannel.teammate_id);\n    let publicChannelIds;\n    let privateChannelIds;\n    let favoriteChannelIds;\n    let directAndGroupChannelIds;\n\n    const showUnreadSection = config.ExperimentalGroupUnreadChannels !== GroupUnreadChannels.DISABLED && getBoolPreference(\n        state,\n        Preferences.CATEGORY_SIDEBAR_SETTINGS,\n        'show_unread_section',\n        config.ExperimentalGroupUnreadChannels === GroupUnreadChannels.DEFAULT_ON\n    );\n\n    const channelSwitcherOption = getBoolPreference(\n        state,\n        Preferences.CATEGORY_SIDEBAR_SETTINGS,\n        'channel_switcher_section',\n        'true'\n    );\n\n    const keepChannelIdAsUnread = state.views.channel.keepChannelIdAsUnread;\n\n    if (showUnreadSection) {\n        publicChannelIds = getSortedPublicChannelIds(state, keepChannelIdAsUnread);\n        privateChannelIds = getSortedPrivateChannelIds(state, keepChannelIdAsUnread);\n        favoriteChannelIds = getSortedFavoriteChannelIds(state, keepChannelIdAsUnread);\n        directAndGroupChannelIds = getSortedDirectChannelIds(state, keepChannelIdAsUnread);\n    } else {\n        publicChannelIds = getSortedPublicChannelWithUnreadsIds(state);\n        privateChannelIds = getSortedPrivateChannelWithUnreadsIds(state);\n        favoriteChannelIds = getSortedFavoriteChannelWithUnreadsIds(state);\n        directAndGroupChannelIds = getSortedDirectChannelWithUnreadsIds(state);\n    }\n\n    return {\n        config,\n        isOpen: getIsLhsOpen(state),\n        showUnreadSection,\n        channelSwitcherOption,\n        publicChannelIds,\n        privateChannelIds,\n        favoriteChannelIds,\n        directAndGroupChannelIds,\n        unreadChannelIds: getSortedUnreadChannelIds(state, keepChannelIdAsUnread),\n        currentChannel,\n        currentTeammate,\n        currentTeam: getCurrentTeam(state),\n        currentUser: getCurrentUser(state),\n        unreads: getUnreads(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            close,\n            switchToChannelById,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport {memoizeResult} from 'mattermost-redux/utils/helpers';\n\nimport Markdown from 'components/markdown';\nimport GlobeIcon from 'components/svg/globe_icon';\nimport LockIcon from 'components/svg/lock_icon';\nimport ArchiveIcon from 'components/svg/archive_icon';\n\nimport Constants from 'utils/constants.jsx';\nimport {getSiteURL} from 'utils/url.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nconst headerMarkdownOptions = {singleline: false, mentionHighlight: false};\n\nexport default class ChannelInfoModal extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Function that is called when modal is hidden\n         */\n        onHide: PropTypes.func.isRequired,\n\n        /**\n         * Channel object\n         */\n        channel: PropTypes.object.isRequired,\n\n        /**\n         * Current team object\n         */\n        currentTeam: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.onHide = this.onHide.bind(this);\n\n        this.state = {show: true};\n\n        this.getHeaderMarkdownOptions = memoizeResult((channelNamesMap) => (\n            {...headerMarkdownOptions, channelNamesMap}\n        ));\n    }\n\n    onHide() {\n        this.setState({show: false});\n    }\n\n    render() {\n        let channel = this.props.channel;\n        const channelIsArchived = channel.delete_at !== 0;\n        let channelIcon;\n\n        if (!channel) {\n            const notFound = Utils.localizeMessage('channel_info.notFound', 'No Channel Found');\n\n            channel = {\n                display_name: notFound,\n                name: notFound,\n                purpose: notFound,\n                header: notFound,\n                id: notFound,\n            };\n        }\n\n        const channelNamesMap = this.props.channel.props && this.props.channel.props.channel_mentions;\n\n        if (channelIsArchived) {\n            channelIcon = (\n                <ArchiveIcon className='icon icon__archive'/>\n            );\n        } else if (channel.type === 'O') {\n            channelIcon = (\n                <GlobeIcon className='icon icon__globe icon--body'/>\n            );\n        } else if (channel.type === 'P') {\n            channelIcon = (\n                <LockIcon className='icon icon__globe icon--body'/>\n            );\n        }\n\n        const channelURL = getSiteURL() + '/' + this.props.currentTeam.name + '/channels/' + channel.name;\n\n        let channelPurpose;\n        if (channel.purpose) {\n            channelPurpose = channel.purpose;\n        } else if (channel.name === Constants.DEFAULT_CHANNEL) {\n            channelPurpose = (\n                <FormattedMessage\n                    id='default_channel.purpose'\n                    defaultMessage='Post messages here that you want everyone to see. Everyone automatically becomes a permanent member of this channel when they join the team.'\n                />\n            );\n        }\n\n        let channelPurposeElement;\n        if (channelPurpose) {\n            channelPurposeElement = (\n                <div className='form-group'>\n                    <div className='info__label'>\n                        <FormattedMessage\n                            id='channel_info.purpose'\n                            defaultMessage='Purpose:'\n                        />\n                    </div>\n                    <div className='info__value'>{channelPurpose}</div>\n                </div>\n            );\n        }\n\n        let channelHeader = null;\n        if (channel.header) {\n            channelHeader = (\n                <div className='form-group'>\n                    <div className='info__label'>\n                        <FormattedMessage\n                            id='channel_info.header'\n                            defaultMessage='Header:'\n                        />\n                    </div>\n                    <div className='info__value'>\n                        <Markdown\n                            message={channel.header}\n                            options={this.getHeaderMarkdownOptions(channelNamesMap)}\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <Modal\n                dialogClassName='about-modal'\n                show={this.state.show}\n                onHide={this.onHide}\n                onExited={this.props.onHide}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title>\n                        <FormattedMessage\n                            id='channel_info.about'\n                            defaultMessage='About'\n                        />\n                        <strong>{channelIcon}{channel.display_name}</strong>\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body ref='modalBody'>\n                    {channelPurposeElement}\n                    {channelHeader}\n                    <div className='form-group'>\n                        <div className='info__label'>\n                            <FormattedMessage\n                                id='channel_info.url'\n                                defaultMessage='URL:'\n                            />\n                        </div>\n                        <div className='info__value'>{channelURL}</div>\n                    </div>\n                    <div className='about-modal__hash form-group padding-top x2'>\n                        <p>\n                            <FormattedMessage\n                                id='channel_info.id'\n                                defaultMessage='ID: '\n                            />\n                            {channel.id}\n                        </p>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport ChannelInfoModal from './channel_info_modal.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        currentTeam: getCurrentTeam(state),\n    };\n}\n\nexport default connect(mapStateToProps)(ChannelInfoModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport {Client4} from 'mattermost-redux/client';\n\nimport {filterProfilesMatchingTerm} from 'mattermost-redux/utils/user_utils';\n\nimport {displayEntireNameForUser, localizeMessage} from 'utils/utils.jsx';\nimport ProfilePicture from 'components/profile_picture.jsx';\nimport MultiSelect from 'components/multiselect/multiselect.jsx';\n\nconst USERS_PER_PAGE = 50;\nconst MAX_SELECTABLE_VALUES = 20;\n\nexport default class ChannelInviteModal extends React.Component {\n    static propTypes = {\n        profilesNotInCurrentChannel: PropTypes.array.isRequired,\n        onHide: PropTypes.func.isRequired,\n        channel: PropTypes.object.isRequired,\n        actions: PropTypes.shape({\n            addUsersToChannel: PropTypes.func.isRequired,\n            getProfilesNotInChannel: PropTypes.func.isRequired,\n            getTeamStats: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            values: [],\n            term: '',\n            show: true,\n            saving: false,\n            loadingUsers: true,\n        };\n    }\n\n    addValue = (value) => {\n        const values = Object.assign([], this.state.values);\n        if (values.indexOf(value) === -1) {\n            values.push(value);\n        }\n\n        this.setState({values});\n    };\n\n    componentDidMount() {\n        this.props.actions.getProfilesNotInChannel(this.props.channel.team_id, this.props.channel.id, 0).then(() => {\n            this.setUsersLoadingState(false);\n        });\n        this.props.actions.getTeamStats(this.props.channel.team_id);\n    }\n\n    onHide = () => {\n        this.setState({show: false});\n    };\n\n    handleInviteError = (err) => {\n        if (err) {\n            this.setState({\n                saving: false,\n                inviteError: err.message,\n            });\n        }\n    };\n\n    handleDelete = (values) => {\n        this.setState({values});\n    };\n\n    setUsersLoadingState = (loadingState) => {\n        this.setState({\n            loadingUsers: loadingState,\n        });\n    };\n\n    handlePageChange = (page, prevPage) => {\n        if (page > prevPage) {\n            this.setUsersLoadingState(true);\n            this.props.actions.getProfilesNotInChannel(this.props.channel.team_id, this.props.channel.id, page + 1, USERS_PER_PAGE).then(() => {\n                this.setUsersLoadingState(false);\n            });\n        }\n    };\n\n    handleSubmit = (e) => {\n        const {actions, channel} = this.props;\n        if (e) {\n            e.preventDefault();\n        }\n\n        const userIds = this.state.values.map((v) => v.id);\n        if (userIds.length === 0) {\n            return;\n        }\n\n        this.setState({saving: true});\n\n        actions.addUsersToChannel(channel.id, userIds).then((result) => {\n            if (result.error) {\n                this.handleInviteError(result.error);\n            } else {\n                this.setState({\n                    saving: false,\n                    inviteError: null,\n                });\n                this.onHide();\n            }\n        });\n    };\n\n    search = (term) => {\n        this.setState({\n            term,\n        });\n    };\n\n    renderOption = (option, isSelected, onAdd) => {\n        var rowSelected = '';\n        if (isSelected) {\n            rowSelected = 'more-modal__row--selected';\n        }\n\n        return (\n            <div\n                key={option.id}\n                ref={isSelected ? 'selected' : option.id}\n                className={'more-modal__row clickable ' + rowSelected}\n                onClick={() => onAdd(option)}\n            >\n                <ProfilePicture\n                    src={Client4.getProfilePictureUrl(option.id, option.last_picture_update)}\n                    width='32'\n                    height='32'\n                />\n                <div className='more-modal__details'>\n                    <div className='more-modal__name'>\n                        {displayEntireNameForUser(option)}\n                    </div>\n                </div>\n                <div className='more-modal__actions'>\n                    <div className='more-modal__actions--round'>\n                        <i\n                            className='fa fa-plus'\n                            title={localizeMessage('generic_icons.add', 'Add Icon')}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    renderValue(props) {\n        return props.data.username;\n    }\n\n    render() {\n        let inviteError = null;\n        if (this.state.inviteError) {\n            inviteError = (<label className='has-error control-label'>{this.state.inviteError}</label>);\n        }\n\n        const numRemainingText = (\n            <FormattedMessage\n                id='multiselect.numPeopleRemaining'\n                defaultMessage='Use ↑↓ to browse, ↵ to select. You can add {num, number} more {num, plural, one {person} other {people}}. '\n                values={{\n                    num: MAX_SELECTABLE_VALUES - this.state.values.length,\n                }}\n            />\n        );\n\n        const buttonSubmitText = localizeMessage('multiselect.add', 'Add');\n\n        let users = filterProfilesMatchingTerm(this.props.profilesNotInCurrentChannel, this.state.term);\n        users = users.filter((user) => user.delete_at === 0);\n\n        const content = (\n            <MultiSelect\n                key='addUsersToChannelKey'\n                options={users}\n                optionRenderer={this.renderOption}\n                values={this.state.values}\n                valueKey='id'\n                valueRenderer={this.renderValue}\n                perPage={USERS_PER_PAGE}\n                handlePageChange={this.handlePageChange}\n                handleInput={this.search}\n                handleDelete={this.handleDelete}\n                handleAdd={this.addValue}\n                handleSubmit={this.handleSubmit}\n                maxValues={MAX_SELECTABLE_VALUES}\n                numRemainingText={numRemainingText}\n                buttonSubmitText={buttonSubmitText}\n                saving={this.state.saving}\n                loading={this.state.loadingUsers}\n            />\n        );\n\n        return (\n            <Modal\n                dialogClassName='more-modal'\n                show={this.state.show}\n                onHide={this.onHide}\n                onExited={this.props.onHide}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title>\n                        <FormattedMessage\n                            id='channel_invite.addNewMembers'\n                            defaultMessage='Add New Members to '\n                        />\n                        <span className='name'>{this.props.channel.display_name}</span>\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {inviteError}\n                    {content}\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getTeamStats} from 'mattermost-redux/actions/teams';\nimport {getProfilesNotInChannel} from 'mattermost-redux/actions/users';\nimport {getProfilesNotInCurrentChannel} from 'mattermost-redux/selectors/entities/users';\n\nimport {addUsersToChannel} from 'actions/channel_actions';\n\nimport ChannelInviteModal from './channel_invite_modal.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        profilesNotInCurrentChannel: getProfilesNotInCurrentChannel(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            addUsersToChannel,\n            getProfilesNotInChannel,\n            getTeamStats,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChannelInviteModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Constants} from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class ChannelMembersDropdown extends React.Component {\n    static propTypes = {\n        channel: PropTypes.object.isRequired,\n        user: PropTypes.object.isRequired,\n        currentUserId: PropTypes.string.isRequired,\n        channelMember: PropTypes.object.isRequired,\n        isLicensed: PropTypes.bool.isRequired,\n        canChangeMemberRoles: PropTypes.bool.isRequired,\n        canRemoveMember: PropTypes.bool.isRequired,\n        actions: PropTypes.shape({\n            getChannelStats: PropTypes.func.isRequired,\n            updateChannelMemberSchemeRoles: PropTypes.func.isRequired,\n            removeChannelMember: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: null,\n            user: null,\n            role: null,\n            removing: false,\n        };\n    }\n\n    handleRemoveFromChannel = () => {\n        if (this.state.removing) {\n            return;\n        }\n\n        const {actions, channel, user} = this.props;\n        this.setState({removing: true});\n\n        actions.removeChannelMember(channel.id, user.id).then((result) => {\n            if (result.error) {\n                this.setState({\n                    serverError: result.error.message,\n                    removing: false,\n                });\n                return;\n            }\n\n            this.setState({removing: false});\n            actions.getChannelStats(channel.id);\n        });\n    };\n\n    handleMakeChannelMember = async () => {\n        const {error} = await this.props.actions.updateChannelMemberSchemeRoles(this.props.channel.id, this.props.user.id, true, false);\n        if (error) {\n            this.setState({serverError: error.message});\n        } else {\n            this.props.actions.getChannelStats(this.props.channel.id);\n        }\n    };\n\n    handleMakeChannelAdmin = async () => {\n        const {error} = await this.props.actions.updateChannelMemberSchemeRoles(this.props.channel.id, this.props.user.id, true, true);\n        if (error) {\n            this.setState({serverError: error.message});\n        } else {\n            this.props.actions.getChannelStats(this.props.channel.id);\n        }\n    };\n\n    render() {\n        const supportsChannelAdmin = this.props.isLicensed;\n        const isChannelAdmin = supportsChannelAdmin && (Utils.isChannelAdmin(this.props.isLicensed, this.props.channelMember.roles) || this.props.channelMember.scheme_admin);\n\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div className='has-error'>\n                    <label className='has-error control-label'>{this.state.serverError}</label>\n                </div>\n            );\n        }\n\n        if (this.props.user.id === this.props.currentUserId) {\n            return null;\n        }\n\n        if (this.props.canChangeMemberRoles) {\n            let role = (\n                <FormattedMessage\n                    id='channel_members_dropdown.channel_member'\n                    defaultMessage='Channel Member'\n                />\n            );\n\n            if (isChannelAdmin) {\n                role = (\n                    <FormattedMessage\n                        id='channel_members_dropdown.channel_admin'\n                        defaultMessage='Channel Admin'\n                    />\n                );\n            }\n\n            let removeFromChannel = null;\n            if (this.props.canRemoveMember && this.props.channel.name !== Constants.DEFAULT_CHANNEL) {\n                removeFromChannel = (\n                    <li role='presentation'>\n                        <a\n                            id='removeFromChannel'\n                            role='menuitem'\n                            href='#'\n                            onClick={this.handleRemoveFromChannel}\n                        >\n                            <FormattedMessage\n                                id='channel_members_dropdown.remove_from_channel'\n                                defaultMessage='Remove From Channel'\n                            />\n                        </a>\n                    </li>\n                );\n            }\n\n            let makeChannelMember = null;\n            if (isChannelAdmin) {\n                makeChannelMember = (\n                    <li role='presentation'>\n                        <a\n                            id='makeChannelMember'\n                            role='menuitem'\n                            href='#'\n                            onClick={this.handleMakeChannelMember}\n                        >\n                            <FormattedMessage\n                                id='channel_members_dropdown.make_channel_member'\n                                defaultMessage='Make Channel Member'\n                            />\n                        </a>\n                    </li>\n                );\n            }\n\n            let makeChannelAdmin = null;\n            if (supportsChannelAdmin && !isChannelAdmin) {\n                makeChannelAdmin = (\n                    <li role='presentation'>\n                        <a\n                            id='makeChannelAdmin'\n                            role='menuitem'\n                            href='#'\n                            onClick={this.handleMakeChannelAdmin}\n                        >\n                            <FormattedMessage\n                                id='channel_members_dropdown.make_channel_admin'\n                                defaultMessage='Make Channel Admin'\n                            />\n                        </a>\n                    </li>\n                );\n            }\n\n            if ((makeChannelMember || makeChannelAdmin) && removeFromChannel) {\n                return (\n                    <div className='dropdown member-drop'>\n                        <button\n                            id='channelMemberDropdown'\n                            className='dropdown-toggle theme color--link style--none'\n                            type='button'\n                            data-toggle='dropdown'\n                            aria-expanded='true'\n                        >\n                            <span>{role} </span>\n                            <span\n                                className='fa fa-chevron-down'\n                                title={Utils.localizeMessage('generic_icons.dropdown', 'Dropdown Icon')}\n                            />\n                        </button>\n                        <ul\n                            className='dropdown-menu member-menu'\n                            role='menu'\n                        >\n                            {makeChannelMember}\n                            {makeChannelAdmin}\n                            {removeFromChannel}\n                        </ul>\n                        {serverError}\n                    </div>\n                );\n            }\n        }\n\n        if (this.props.canRemoveMember && this.props.channel.name !== Constants.DEFAULT_CHANNEL) {\n            return (\n                <button\n                    id='removeMember'\n                    type='button'\n                    className='btn btn-danger btn-message'\n                    onClick={this.handleRemoveFromChannel}\n                    disabled={this.state.removing}\n                >\n                    <FormattedMessage\n                        id='channel_members_dropdown.remove_member'\n                        defaultMessage='Remove Member'\n                    />\n                </button>\n            );\n        }\n\n        if (isChannelAdmin) {\n            if (this.props.channel.name === Constants.DEFAULT_CHANNEL) {\n                return (\n                    <div/>\n                );\n            }\n\n            return (\n                <div>\n                    <FormattedMessage\n                        id='channel_members_dropdown.channel_admin'\n                        defaultMessage='Channel Admin'\n                    />\n                </div>\n            );\n        }\n\n        if (this.props.channel.name === Constants.DEFAULT_CHANNEL) {\n            return (\n                <div/>\n            );\n        }\n\n        return (\n            <div>\n                <FormattedMessage\n                    id='channel_members_dropdown.channel_member'\n                    defaultMessage='Channel Member'\n                />\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getChannelStats, updateChannelMemberSchemeRoles, removeChannelMember} from 'mattermost-redux/actions/channels';\nimport {haveIChannelPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {getLicense} from 'mattermost-redux/selectors/entities/general';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\n\nimport {canManageMembers} from 'utils/channel_utils.jsx';\n\nimport ChannelMembersDropdown from './channel_members_dropdown.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const canChangeMemberRoles = haveIChannelPermission(\n        state,\n        {\n            channel: ownProps.channel.id,\n            team: ownProps.channel.team_id,\n            permission: Permissions.MANAGE_CHANNEL_ROLES,\n        }\n    );\n    const license = getLicense(state);\n    const isLicensed = license.IsLicensed === 'true';\n\n    const canRemoveMember = canManageMembers(ownProps.channel);\n\n    return {\n        currentUserId: getCurrentUserId(state),\n        isLicensed,\n        canChangeMemberRoles,\n        canRemoveMember,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getChannelStats,\n            updateChannelMemberSchemeRoles,\n            removeChannelMember,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChannelMembersDropdown);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {loadProfilesAndTeamMembersAndChannelMembers, loadTeamMembersAndChannelMembersForProfilesList} from 'actions/user_actions.jsx';\n\nimport Constants from 'utils/constants.jsx';\nimport * as UserAgent from 'utils/user_agent.jsx';\n\nimport ChannelMembersDropdown from 'components/channel_members_dropdown';\nimport SearchableUserList from 'components/searchable_user_list/searchable_user_list_container.jsx';\n\nconst USERS_PER_PAGE = 50;\n\nexport default class MemberListChannel extends React.PureComponent {\n    static propTypes = {\n        currentTeamId: PropTypes.string.isRequired,\n        currentChannelId: PropTypes.string.isRequired,\n        searchTerm: PropTypes.string.isRequired,\n        usersToDisplay: PropTypes.arrayOf(PropTypes.object).isRequired,\n        actionUserProps: PropTypes.object.isRequired,\n        totalChannelMembers: PropTypes.number.isRequired,\n        channel: PropTypes.object.isRequired,\n        actions: PropTypes.shape({\n            searchProfiles: PropTypes.func.isRequired,\n            getChannelStats: PropTypes.func.isRequired,\n            setModalSearchTerm: PropTypes.func.isRequired,\n            loadStatusesForProfilesList: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.searchTimeoutId = 0;\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        loadProfilesAndTeamMembersAndChannelMembers(0, Constants.PROFILE_CHUNK_SIZE, this.props.currentTeamId, this.props.currentChannelId, this.loadComplete);\n        this.props.actions.getChannelStats(this.props.currentChannelId);\n    }\n\n    componentWillUnmount() {\n        this.props.actions.setModalSearchTerm('');\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.searchTerm !== nextProps.searchTerm) {\n            clearTimeout(this.searchTimeoutId);\n            const searchTerm = nextProps.searchTerm;\n\n            if (searchTerm === '') {\n                this.loadComplete();\n                this.searchTimeoutId = '';\n                return;\n            }\n\n            const searchTimeoutId = setTimeout(\n                async () => {\n                    const {data} = await this.props.actions.searchProfiles(searchTerm, {team_id: nextProps.currentTeamId, in_channel_id: nextProps.currentChannelId});\n\n                    if (searchTimeoutId !== this.searchTimeoutId) {\n                        return;\n                    }\n\n                    this.setState({loading: true});\n\n                    this.props.actions.loadStatusesForProfilesList(data);\n                    loadTeamMembersAndChannelMembersForProfilesList(data, nextProps.currentTeamId, nextProps.currentChannelId, this.loadComplete);\n                },\n                Constants.SEARCH_TIMEOUT_MILLISECONDS\n            );\n\n            this.searchTimeoutId = searchTimeoutId;\n        }\n    }\n\n    loadComplete = () => {\n        this.setState({loading: false});\n    }\n\n    nextPage(page) {\n        loadProfilesAndTeamMembersAndChannelMembers(page + 1, USERS_PER_PAGE);\n    }\n\n    handleSearch = (term) => {\n        this.props.actions.setModalSearchTerm(term);\n    }\n\n    render() {\n        const channelIsArchived = this.props.channel.delete_at !== 0;\n        return (\n            <SearchableUserList\n                users={this.props.usersToDisplay}\n                usersPerPage={USERS_PER_PAGE}\n                total={this.props.totalChannelMembers}\n                nextPage={this.nextPage}\n                search={this.handleSearch}\n                actions={channelIsArchived ? [] : [ChannelMembersDropdown]}\n                actionUserProps={this.props.actionUserProps}\n                focusOnMount={!UserAgent.isMobile()}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {createSelector} from 'reselect';\nimport {searchProfilesInCurrentChannel, getProfilesInCurrentChannel} from 'mattermost-redux/selectors/entities/users';\nimport {getMembersInCurrentChannel, getCurrentChannelStats, getCurrentChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {getMembersInCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {getChannelStats} from 'mattermost-redux/actions/channels';\nimport {searchProfiles} from 'mattermost-redux/actions/users';\nimport {sortByUsername} from 'mattermost-redux/utils/user_utils';\n\nimport {loadStatusesForProfilesList} from 'actions/status_actions.jsx';\nimport {setModalSearchTerm} from 'actions/views/search';\n\nimport MemberListChannel from './member_list_channel.jsx';\n\nconst getUsersAndActionsToDisplay = createSelector(\n    (state, users) => users,\n    getMembersInCurrentTeam,\n    getMembersInCurrentChannel,\n    getCurrentChannel,\n    (users = [], teamMembers = {}, channelMembers = {}, channel = {}) => {\n        const actionUserProps = {};\n        const usersToDisplay = [];\n\n        for (let i = 0; i < users.length; i++) {\n            const user = users[i];\n\n            if (teamMembers[user.id] && channelMembers[user.id] && user.delete_at === 0) {\n                usersToDisplay.push(user);\n\n                actionUserProps[user.id] = {\n                    channel,\n                    teamMember: teamMembers[user.id],\n                    channelMember: channelMembers[user.id],\n                };\n            }\n        }\n\n        return {\n            usersToDisplay: usersToDisplay.sort(sortByUsername),\n            actionUserProps,\n        };\n    }\n);\n\nfunction mapStateToProps(state) {\n    const searchTerm = state.views.search.modalSearch;\n\n    let users;\n    if (searchTerm) {\n        users = searchProfilesInCurrentChannel(state, searchTerm);\n    } else {\n        users = getProfilesInCurrentChannel(state);\n    }\n\n    const stats = getCurrentChannelStats(state) || {member_count: 0};\n\n    return {\n        ...getUsersAndActionsToDisplay(state, users),\n        currentTeamId: state.entities.teams.currentTeamId,\n        currentChannelId: state.entities.channels.currentChannelId,\n        searchTerm,\n        totalChannelMembers: stats.member_count,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            searchProfiles,\n            getChannelStats,\n            setModalSearchTerm,\n            loadStatusesForProfilesList,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MemberListChannel);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport MemberListChannel from 'components/member_list_channel';\n\nexport default class ChannelMembersModal extends React.PureComponent {\n    static propTypes = {\n        canManageChannelMembers: PropTypes.bool.isRequired,\n        channel: PropTypes.shape({\n            display_name: PropTypes.string.isRequired,\n            delete_at: PropTypes.number.isRequired,\n        }).isRequired,\n        onModalDismissed: PropTypes.func.isRequired,\n        showInviteModal: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            show: true,\n        };\n    }\n\n    onHide = () => {\n        this.setState({\n            show: false,\n        });\n    }\n\n    onClickManageChannelsButton = () => {\n        this.props.showInviteModal();\n        this.onHide();\n    }\n\n    render() {\n        const channelIsArchived = this.props.channel.delete_at !== 0;\n        return (\n            <div>\n                <Modal\n                    dialogClassName='more-modal more-modal--action'\n                    onExited={this.props.onModalDismissed}\n                    onHide={this.onHide}\n                    show={this.state.show}\n                >\n                    <Modal.Header closeButton={true}>\n                        <Modal.Title>\n                            <span className='name'>{this.props.channel.display_name}</span>\n                            <FormattedMessage\n                                id='channel_members_modal.members'\n                                defaultMessage=' Members'\n                            />\n                        </Modal.Title>\n                        {this.props.canManageChannelMembers && !channelIsArchived &&\n                            <a\n                                id='showInviteModal'\n                                className='btn btn-md btn-primary'\n                                href='#'\n                                onClick={this.onClickManageChannelsButton}\n                            >\n                                <FormattedMessage\n                                    id='channel_members_modal.addNew'\n                                    defaultMessage=' Add New Members'\n                                />\n                            </a>\n                        }\n                    </Modal.Header>\n                    <Modal.Body>\n                        <MemberListChannel\n                            channel={this.props.channel}\n                        />\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {canManageChannelMembers} from 'mattermost-redux/selectors/entities/channels';\n\nimport ChannelMembersModal from './channel_members_modal.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        canManageChannelMembers: canManageChannelMembers(state),\n    };\n}\n\nexport default connect(mapStateToProps)(ChannelMembersModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {NotificationLevels, NotificationSections} from 'utils/constants.jsx';\n\nexport default function Describe({section, memberNotifyLevel, globalNotifyLevel}) {\n    if (memberNotifyLevel === NotificationLevels.DEFAULT && globalNotifyLevel) {\n        return (\n            <FormattedMessage\n                id='channel_notifications.globalDefault'\n                defaultMessage='Global default ({notifyLevel})'\n                values={{\n                    notifyLevel: (globalNotifyLevel),\n                }}\n            />\n        );\n    } else if (memberNotifyLevel === NotificationLevels.MENTION && section === NotificationSections.MARK_UNREAD) {\n        return (\n            <FormattedMessage\n                id='channel_notifications.muteChannel.on.title'\n                defaultMessage='On'\n            />\n        );\n    } else if (memberNotifyLevel === NotificationLevels.MENTION) {\n        return (\n            <FormattedMessage\n                id='channel_notifications.onlyMentions'\n                defaultMessage='Only for mentions'\n            />\n        );\n    } else if (\n        (section === NotificationSections.DESKTOP || section === NotificationSections.PUSH) &&\n        memberNotifyLevel === NotificationLevels.ALL\n    ) {\n        return (\n            <FormattedMessage\n                id='channel_notifications.allActivity'\n                defaultMessage='For all activity'\n            />\n        );\n    } else if (\n        section === NotificationSections.MARK_UNREAD &&\n        memberNotifyLevel === NotificationLevels.ALL\n    ) {\n        return (\n            <FormattedMessage\n                id='channel_notifications.muteChannel.off.title'\n                defaultMessage='Off'\n            />\n        );\n    }\n\n    return (\n        <FormattedMessage\n            id='channel_notifications.never'\n            defaultMessage='Never'\n        />\n    );\n}\n\nDescribe.propTypes = {\n    globalNotifyLevel: PropTypes.string,\n    memberNotifyLevel: PropTypes.string.isRequired,\n    section: PropTypes.string.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {NotificationSections} from 'utils/constants.jsx';\n\nexport default function SectionTitle({section}) {\n    if (section === NotificationSections.DESKTOP) {\n        return (\n            <FormattedMessage\n                id='channel_notifications.sendDesktop'\n                defaultMessage='Send desktop notifications'\n            />\n        );\n    } else if (section === NotificationSections.PUSH) {\n        return (\n            <FormattedMessage\n                id='channel_notifications.push'\n                defaultMessage='Send mobile push notifications'\n            />\n        );\n    } else if (section === NotificationSections.MARK_UNREAD) {\n        return (\n            <FormattedMessage\n                id='channel_notifications.muteChannel.settings'\n                defaultMessage='Mute Channel'\n            />\n        );\n    }\n\n    return null;\n}\n\nSectionTitle.propTypes = {\n    section: PropTypes.string.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport SettingItemMin from 'components/setting_item_min.jsx';\n\nimport Describe from './describe.jsx';\nimport SectionTitle from './section_title.jsx';\n\nexport default function CollapseView({onExpandSection, globalNotifyLevel, memberNotifyLevel, section}) {\n    return (\n        <SettingItemMin\n            title={<SectionTitle section={section}/>}\n            describe={\n                <Describe\n                    section={section}\n                    memberNotifyLevel={memberNotifyLevel}\n                    globalNotifyLevel={globalNotifyLevel}\n                />\n            }\n            updateSection={onExpandSection}\n            section={section}\n        />\n    );\n}\n\nCollapseView.propTypes = {\n    onExpandSection: PropTypes.func.isRequired,\n    globalNotifyLevel: PropTypes.string,\n    memberNotifyLevel: PropTypes.string.isRequired,\n    section: PropTypes.string.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {NotificationSections} from 'utils/constants.jsx';\n\nexport default function ExtraInfo({section}) {\n    switch (section) {\n    case NotificationSections.DESKTOP:\n        return (\n            <span>\n                <FormattedMessage\n                    id='channel_notifications.override'\n                    defaultMessage='Selecting an option other than \"Default\" will override the global notification settings. Desktop notifications are available on Firefox, Safari, and Chrome.'\n                />\n            </span>\n        );\n    case NotificationSections.PUSH:\n        return (\n            <span>\n                <FormattedMessage\n                    id='channel_notifications.overridePush'\n                    defaultMessage='Selecting an option other than \"Global default\" will override the global notification settings for mobile push notifications in account settings. Push notifications must be enabled by the System Admin.'\n                />\n            </span>\n        );\n    case NotificationSections.MARK_UNREAD:\n        return (\n            <span>\n                <FormattedMessage\n                    id='channel_notifications.muteChannel.help'\n                    defaultMessage='Muting turns off desktop, email and push notifications for this channel. The channel will not be marked as unread unless you are mentioned.'\n                />\n            </span>\n        );\n    default:\n        return null;\n    }\n}\n\nExtraInfo.propTypes = {\n    section: PropTypes.string.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {NotificationLevels, NotificationSections} from 'utils/constants.jsx';\n\nimport SettingItemMax from 'components/setting_item_max.jsx';\n\nimport Describe from './describe.jsx';\nimport ExtraInfo from './extra_info.jsx';\nimport SectionTitle from './section_title.jsx';\n\nexport default function ExpandView({\n    section,\n    memberNotifyLevel,\n    globalNotifyLevel,\n    onChange,\n    onSubmit,\n    serverError,\n    onCollapseSection,\n}) {\n    const inputs = [(\n        <div key='channel-notification-level-radio'>\n            {(section === NotificationSections.DESKTOP || section === NotificationSections.PUSH) &&\n            <div>\n                <div className='radio'>\n                    <label className=''>\n                        <input\n                            id='channelNotificationGlobalDefault'\n                            type='radio'\n                            value={NotificationLevels.DEFAULT}\n                            checked={memberNotifyLevel === NotificationLevels.DEFAULT}\n                            onChange={onChange}\n                        />\n                        <Describe\n                            section={section}\n                            memberNotifyLevel={NotificationLevels.DEFAULT}\n                            globalNotifyLevel={globalNotifyLevel}\n                        />\n                    </label>\n                </div>\n                <div className='radio'>\n                    <label className=''>\n                        <input\n                            id='channelNotificationAllActivity'\n                            type='radio'\n                            value={NotificationLevels.ALL}\n                            checked={memberNotifyLevel === NotificationLevels.ALL}\n                            onChange={onChange}\n                        />\n                        <Describe\n                            section={section}\n                            memberNotifyLevel={NotificationLevels.ALL}\n                        />\n                    </label>\n                </div>\n                <div className='radio'>\n                    <label className=''>\n                        <input\n                            id='channelNotificationMentions'\n                            type='radio'\n                            value={NotificationLevels.MENTION}\n                            checked={memberNotifyLevel === NotificationLevels.MENTION}\n                            onChange={onChange}\n                        />\n                        <Describe\n                            section={section}\n                            memberNotifyLevel={NotificationLevels.MENTION}\n                        />\n                    </label>\n                </div>\n                <div className='radio'>\n                    <label>\n                        <input\n                            id='channelNotificationNever'\n                            type='radio'\n                            value={NotificationLevels.NONE}\n                            checked={memberNotifyLevel === NotificationLevels.NONE}\n                            onChange={onChange}\n                        />\n                        <Describe\n                            section={section}\n                            memberNotifyLevel={NotificationLevels.NONE}\n                        />\n                    </label>\n                </div>\n            </div>\n            }\n            {section === NotificationSections.MARK_UNREAD &&\n            <div>\n                <div className='radio'>\n                    <label className=''>\n                        <input\n                            id='channelNotificationUnmute'\n                            type='radio'\n                            value={NotificationLevels.MENTION}\n                            checked={memberNotifyLevel === NotificationLevels.MENTION}\n                            onChange={onChange}\n                        />\n                        <Describe\n                            section={section}\n                            memberNotifyLevel={NotificationLevels.MENTION}\n                        />\n                    </label>\n                </div>\n                <div className='radio'>\n                    <label className=''>\n                        <input\n                            id='channelNotificationMute'\n                            type='radio'\n                            value={NotificationLevels.ALL}\n                            checked={memberNotifyLevel === NotificationLevels.ALL}\n                            onChange={onChange}\n                        />\n                        <Describe\n                            section={section}\n                            memberNotifyLevel={NotificationLevels.ALL}\n                        />\n                    </label>\n                </div>\n            </div>\n            }\n        </div>\n    )];\n\n    return (\n        <SettingItemMax\n            title={<SectionTitle section={section}/>}\n            inputs={inputs}\n            submit={onSubmit}\n            server_error={serverError}\n            updateSection={onCollapseSection}\n            extraInfo={<ExtraInfo section={section}/>}\n        />\n    );\n}\n\nExpandView.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    onCollapseSection: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    globalNotifyLevel: PropTypes.string,\n    memberNotifyLevel: PropTypes.string.isRequired,\n    section: PropTypes.string.isRequired,\n    serverError: PropTypes.string,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport CollapseView from './collapse_view.jsx';\nimport ExpandView from './expand_view.jsx';\n\nexport default class NotificationSection extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Notification section\n         */\n        section: PropTypes.string.isRequired,\n\n        /**\n         * Expand if true, else collapse the section\n         */\n        expand: PropTypes.bool.isRequired,\n\n        /**\n         * Member's desktop notification level\n         */\n        memberNotificationLevel: PropTypes.string.isRequired,\n\n        /**\n         * User's global notification level\n         */\n        globalNotificationLevel: PropTypes.string,\n\n        /**\n         * onChange handles update of desktop notification level\n         */\n        onChange: PropTypes.func.isRequired,\n\n        /**\n         * Submit function to save notification level\n         */\n        onSubmit: PropTypes.func.isRequired,\n\n        /**\n         * Update function to to expand or collapse a section\n         */\n        onUpdateSection: PropTypes.func.isRequired,\n\n        /**\n         * Error string from the server\n         */\n        serverError: PropTypes.string,\n    }\n\n    handleOnChange = (e) => {\n        this.props.onChange(e.target.value);\n    }\n\n    handleExpandSection = () => {\n        this.props.onUpdateSection(this.props.section);\n    }\n\n    handleCollapseSection = () => {\n        this.props.onUpdateSection();\n    }\n\n    render() {\n        const {\n            expand,\n            globalNotificationLevel,\n            memberNotificationLevel,\n            onSubmit,\n            section,\n            serverError,\n        } = this.props;\n\n        if (expand) {\n            return (\n                <ExpandView\n                    section={section}\n                    memberNotifyLevel={memberNotificationLevel}\n                    globalNotifyLevel={globalNotificationLevel}\n                    onChange={this.handleOnChange}\n                    onSubmit={onSubmit}\n                    serverError={serverError}\n                    onCollapseSection={this.handleCollapseSection}\n                />\n            );\n        }\n\n        return (\n            <CollapseView\n                section={section}\n                onExpandSection={this.handleExpandSection}\n                memberNotifyLevel={memberNotificationLevel}\n                globalNotifyLevel={globalNotificationLevel}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {isChannelMuted} from 'mattermost-redux/utils/channel_utils';\n\nimport {NotificationLevels, NotificationSections} from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport NotificationSection from 'components/channel_notifications_modal/components/notification_section.jsx';\n\nexport default class ChannelNotificationsModal extends React.Component {\n    static propTypes = {\n        show: PropTypes.bool.isRequired,\n        onHide: PropTypes.func.isRequired,\n        channel: PropTypes.object.isRequired,\n        channelMember: PropTypes.object.isRequired,\n        currentUser: PropTypes.object.isRequired,\n        sendPushNotifications: PropTypes.bool.isRequired,\n        actions: PropTypes.shape({\n            updateChannelNotifyProps: PropTypes.func.isRequired,\n        }),\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeSection: NotificationSections.NONE,\n            serverError: null,\n            ...this.getStateFromNotifyProps(props.channelMember.notify_props),\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!Utils.areObjectsEqual(this.props.channelMember.notify_props, prevProps.channelMember.notify_props)) {\n            this.resetStateFromNotifyProps(this.props.channelMember.notify_props);\n        }\n    }\n\n    resetStateFromNotifyProps(notifyProps) {\n        this.setState(this.getStateFromNotifyProps(notifyProps));\n    }\n\n    getStateFromNotifyProps(notifyProps) {\n        return {\n            desktopNotifyLevel: notifyProps.desktop || NotificationLevels.DEFAULT,\n            markUnreadNotifyLevel: notifyProps.mark_unread || NotificationLevels.ALL,\n            pushNotifyLevel: notifyProps.push || NotificationLevels.DEFAULT,\n        };\n    }\n\n    handleOnHide = () => {\n        this.updateSection('');\n\n        this.props.onHide();\n    }\n\n    updateSection = (section) => {\n        if ($('.section-max').length) {\n            $('.settings-modal .modal-body').scrollTop(0).perfectScrollbar('update');\n        }\n\n        this.setState({activeSection: section});\n\n        if (section === '') {\n            this.resetStateFromNotifyProps(this.props.channelMember.notify_props);\n        }\n    }\n\n    handleUpdateChannelNotifyProps = async (props) => {\n        const {\n            actions,\n            channel,\n            currentUser,\n        } = this.props;\n\n        const {error} = await actions.updateChannelNotifyProps(currentUser.id, channel.id, props);\n        if (error) {\n            this.setState({serverError: error.message});\n        } else {\n            this.updateSection('');\n        }\n    }\n\n    handleSubmitDesktopNotifyLevel = () => {\n        const {channelMember} = this.props;\n        const {desktopNotifyLevel} = this.state;\n\n        if (channelMember.notify_props.desktop === desktopNotifyLevel) {\n            this.updateSection('');\n            return;\n        }\n\n        const props = {desktop: desktopNotifyLevel};\n        this.handleUpdateChannelNotifyProps(props);\n    }\n\n    handleUpdateDesktopNotifyLevel = (desktopNotifyLevel) => {\n        this.setState({desktopNotifyLevel});\n    }\n\n    handleSubmitMarkUnreadLevel = () => {\n        const {channelMember} = this.props;\n        const {markUnreadNotifyLevel} = this.state;\n\n        if (channelMember.notify_props.mark_unread === markUnreadNotifyLevel) {\n            this.updateSection('');\n            return;\n        }\n\n        const props = {mark_unread: markUnreadNotifyLevel};\n        this.handleUpdateChannelNotifyProps(props);\n    }\n\n    handleUpdateMarkUnreadLevel = (markUnreadNotifyLevel) => {\n        this.setState({markUnreadNotifyLevel});\n    }\n\n    handleSubmitPushNotificationLevel = () => {\n        const {pushNotifyLevel} = this.state;\n\n        if (this.props.channelMember.notify_props.push === pushNotifyLevel) {\n            this.updateSection('');\n            return;\n        }\n\n        const props = {push: pushNotifyLevel};\n        this.handleUpdateChannelNotifyProps(props);\n    }\n\n    handleUpdatePushNotificationLevel = (pushNotifyLevel) => {\n        this.setState({pushNotifyLevel});\n    }\n\n    render() {\n        const {\n            activeSection,\n            desktopNotifyLevel,\n            markUnreadNotifyLevel,\n            pushNotifyLevel,\n            serverError,\n        } = this.state;\n\n        const {\n            channel,\n            channelMember,\n            currentUser,\n            sendPushNotifications,\n            show,\n        } = this.props;\n\n        let serverErrorTag = null;\n        if (serverError) {\n            serverErrorTag = <div className='form-group has-error'><label className='control-label'>{serverError}</label></div>;\n        }\n\n        return (\n            <Modal\n                show={show}\n                dialogClassName='settings-modal settings-modal--tabless'\n                onHide={this.handleOnHide}\n                onExited={this.handleOnHide}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title>\n                        <FormattedMessage\n                            id='channel_notifications.preferences'\n                            defaultMessage='Notification Preferences for '\n                        />\n                        <span className='name'>{channel.display_name}</span>\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className='settings-table'>\n                        <div className='settings-content'>\n                            <div\n                                ref='wrapper'\n                                className='user-settings'\n                            >\n                                <br/>\n                                <div className='divider-dark first'/>\n                                <NotificationSection\n                                    section={NotificationSections.MARK_UNREAD}\n                                    expand={activeSection === NotificationSections.MARK_UNREAD}\n                                    memberNotificationLevel={markUnreadNotifyLevel}\n                                    onChange={this.handleUpdateMarkUnreadLevel}\n                                    onSubmit={this.handleSubmitMarkUnreadLevel}\n                                    onUpdateSection={this.updateSection}\n                                    serverError={serverError}\n                                />\n                                {!isChannelMuted(channelMember) &&\n                                <div>\n                                    <div className='divider-light'/>\n                                    <NotificationSection\n                                        section={NotificationSections.DESKTOP}\n                                        expand={activeSection === NotificationSections.DESKTOP}\n                                        memberNotificationLevel={desktopNotifyLevel}\n                                        globalNotificationLevel={currentUser.notify_props ? currentUser.notify_props.desktop : NotificationLevels.ALL}\n                                        onChange={this.handleUpdateDesktopNotifyLevel}\n                                        onSubmit={this.handleSubmitDesktopNotifyLevel}\n                                        onUpdateSection={this.updateSection}\n                                        serverError={serverError}\n                                    />\n                                    <div className='divider-light'/>\n                                    {sendPushNotifications &&\n                                    <NotificationSection\n                                        section={NotificationSections.PUSH}\n                                        expand={activeSection === NotificationSections.PUSH}\n                                        memberNotificationLevel={pushNotifyLevel}\n                                        globalNotificationLevel={currentUser.notify_props ? currentUser.notify_props.push : NotificationLevels.ALL}\n                                        onChange={this.handleUpdatePushNotificationLevel}\n                                        onSubmit={this.handleSubmitPushNotificationLevel}\n                                        onUpdateSection={this.updateSection}\n                                        serverError={serverError}\n                                    />\n                                    }\n                                </div>\n                                }\n                                <div className='divider-dark'/>\n                            </div>\n                        </div>\n                    </div>\n                    {serverErrorTag}\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {updateChannelNotifyProps} from 'mattermost-redux/actions/channels';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport ChannelNotificationsModal from './channel_notifications_modal.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const sendPushNotifications = config.SendPushNotifications === 'true';\n\n    return {\n        sendPushNotifications,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            updateChannelNotifyProps,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChannelNotificationsModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport Constants from 'utils/constants.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nexport default class ConvertChannelModal extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * Function called when modal is dismissed\n        */\n        onHide: PropTypes.func.isRequired,\n        channelId: PropTypes.string.isRequired,\n        channelDisplayName: PropTypes.string.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * Function called for converting channel to private,\n            */\n            convertChannelToPrivate: PropTypes.func.isRequired,\n        }),\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {show: true};\n    }\n\n    handleConvert = () => {\n        const {actions, channelId} = this.props;\n        if (channelId.length !== Constants.CHANNEL_ID_LENGTH) {\n            return;\n        }\n\n        actions.convertChannelToPrivate(channelId);\n        trackEvent('actions', 'convert_to_private_channel', {channel_id: channelId});\n        this.onHide();\n    }\n\n    onHide = () => {\n        this.setState({show: false});\n    }\n\n    render() {\n        const {\n            channelDisplayName,\n            onHide,\n        } = this.props;\n\n        return (\n            <Modal\n                show={this.state.show}\n                onHide={this.onHide}\n                onExited={onHide}\n            >\n                <Modal.Header closeButton={true}>\n                    <h4 className='modal-title'>\n                        <FormattedMessage\n                            id='convert_channel.title'\n                            defaultMessage='Convert {display_name} to a private channel?'\n                            values={{\n                                display_name: channelDisplayName,\n                            }}\n                        />\n                    </h4>\n                </Modal.Header>\n                <Modal.Body>\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='convert_channel.question1'\n                            defaultMessage='When you convert **{display_name}** to a private channel, history and membership are preserved. Publicly shared files remain accessible to anyone with the link. Membership in a private channel is by invitation only.'\n                            values={{\n                                display_name: channelDisplayName,\n                            }}\n                        />\n                    </p>\n                    <p>\n                        <FormattedHTMLMessage\n                            id='convert_channel.question2'\n                            defaultMessage='The change is permanent and cannot be undone.'\n                        />\n                    </p>\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='convert_channel.question3'\n                            defaultMessage='Are you sure you want to convert **{display_name}** to a private channel?'\n                            values={{\n                                display_name: channelDisplayName,\n                            }}\n                        />\n                    </p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        type='button'\n                        className='btn btn-default'\n                        onClick={this.onHide}\n                        tabIndex='2'\n                    >\n                        <FormattedMessage\n                            id='convert_channel.cancel'\n                            defaultMessage='No, cancel'\n                        />\n                    </button>\n                    <button\n                        type='button'\n                        className='btn btn-primary'\n                        data-dismiss='modal'\n                        onClick={this.handleConvert}\n                        autoFocus={true}\n                        tabIndex='1'\n                    >\n                        <FormattedMessage\n                            id='convert_channel.confirm'\n                            defaultMessage='Yes, convert to private channel'\n                        />\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {convertChannelToPrivate} from 'mattermost-redux/actions/channels';\n\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport ConvertChannelModal from './convert_channel_modal.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        currentTeamDetails: getCurrentTeam(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            convertChannelToPrivate,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConvertChannelModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport Constants from 'utils/constants.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class DeleteChannelModal extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * Function called when modal is dismissed\n        */\n        onHide: PropTypes.func.isRequired,\n\n        /**\n         * channel data\n         */\n        channel: PropTypes.object.isRequired,\n\n        /**\n         * currentTeamDetails used for redirection after deleting channel\n         */\n        currentTeamDetails: PropTypes.object.isRequired,\n\n        canViewArchivedChannels: PropTypes.bool,\n        penultimateViewedChannelName: PropTypes.string.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * Function called for deleting channel,\n            */\n\n            deleteChannel: PropTypes.func.isRequired,\n        }),\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleDelete = this.handleDelete.bind(this);\n        this.onHide = this.onHide.bind(this);\n        this.state = {show: true};\n    }\n\n    handleDelete() {\n        if (this.props.channel.id.length !== Constants.CHANNEL_ID_LENGTH) {\n            return;\n        }\n        if (!this.props.canViewArchivedChannels) {\n            const {penultimateViewedChannelName} = this.props;\n            browserHistory.push('/' + this.props.currentTeamDetails.name + '/channels/' + penultimateViewedChannelName);\n        }\n        this.props.actions.deleteChannel(this.props.channel.id);\n        this.onHide();\n    }\n\n    onHide() {\n        this.setState({show: false});\n    }\n\n    render() {\n        const {canViewArchivedChannels} = this.props;\n        return (\n            <Modal\n                show={this.state.show}\n                onHide={this.onHide}\n                onExited={this.props.onHide}\n            >\n                <Modal.Header closeButton={true}>\n                    <h4 className='modal-title'>\n                        <FormattedMessage\n                            id='delete_channel.confirm'\n                            defaultMessage='Confirm ARCHIVE Channel'\n                        />\n                    </h4>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className='alert alert-danger'>\n                        {!canViewArchivedChannels &&\n                            <FormattedMarkdownMessage\n                                id='delete_channel.question'\n                                defaultMessage='This will archive the channel from the team and make its contents inaccessible for all users. \\n \\nAre you sure you wish to archive the **{display_name}** channel?'\n                                values={{\n                                    display_name: this.props.channel.display_name,\n                                }}\n                            />}\n                        {canViewArchivedChannels &&\n                            <FormattedMarkdownMessage\n                                id='delete_channel.viewArchived.question'\n                                defaultMessage={'This will archive the channel from the team. Channel contents will still be accessible by channel members.\\n \\nAre you sure you wish to archive the **{display_name}** channel?'}\n                                values={{\n                                    display_name: this.props.channel.display_name,\n                                }}\n                            />}\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        type='button'\n                        className='btn btn-default'\n                        onClick={this.onHide}\n                    >\n                        <FormattedMessage\n                            id='delete_channel.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </button>\n                    <button\n                        type='button'\n                        className='btn btn-danger'\n                        data-dismiss='modal'\n                        onClick={this.handleDelete}\n                        autoFocus={true}\n                    >\n                        <FormattedMessage\n                            id='delete_channel.del'\n                            defaultMessage='Archive'\n                        />\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {deleteChannel} from 'mattermost-redux/actions/channels';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport DeleteChannelModal from './delete_channel_modal.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    return {\n        canViewArchivedChannels: config.ExperimentalViewArchivedChannels === 'true',\n        currentTeamDetails: getCurrentTeam(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            deleteChannel,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteChannelModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport {Modal} from 'react-bootstrap';\nimport {defineMessages, FormattedMessage, injectIntl, intlShape} from 'react-intl';\n\nimport {RequestStatus} from 'mattermost-redux/constants';\n\nimport Textbox from 'components/textbox.jsx';\nimport Constants from 'utils/constants.jsx';\nimport {isMobile} from 'utils/user_agent.jsx';\nimport {isKeyPressed, localizeMessage} from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nconst KeyCodes = Constants.KeyCodes;\n\nconst holders = defineMessages({\n    error: {\n        id: t('edit_channel_header_modal.error'),\n        defaultMessage: 'This channel header is too long, please enter a shorter one',\n    },\n});\n\nclass EditChannelHeaderModal extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * react-intl helper object\n         */\n        intl: intlShape.isRequired,\n\n        /*\n         * callback to call when modal will hide\n         */\n        onHide: PropTypes.func.isRequired,\n\n        /*\n         * Object with info about current channel ,\n         */\n        channel: PropTypes.object.isRequired,\n\n        /*\n         * boolean should be `ctrl` button pressed to send\n         */\n        ctrlSend: PropTypes.bool.isRequired,\n\n        /*\n         * object with info about server error\n         */\n        serverError: PropTypes.object,\n\n        /*\n         * string with info about about request\n         */\n        requestStatus: PropTypes.string.isRequired,\n\n        /*\n         * Collection of redux actions\n         */\n        actions: PropTypes.shape({\n\n            /*\n             * patch channel redux-action\n             */\n            patchChannel: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            header: props.channel.header,\n            show: true,\n            showError: false,\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        const {requestStatus: nextRequestStatus} = nextProps;\n        const {requestStatus} = this.props;\n\n        if (requestStatus !== nextRequestStatus && nextRequestStatus === RequestStatus.FAILURE) {\n            this.setState({showError: true});\n        } else if (requestStatus !== nextRequestStatus && nextRequestStatus === RequestStatus.SUCCESS) {\n            this.onHide();\n        } else {\n            this.setState({showError: false});\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            header: e.target.value,\n        });\n    }\n\n    handleSave = () => {\n        const {channel, actions: {patchChannel}} = this.props;\n        const {header} = this.state;\n        patchChannel(channel.id, {header});\n    }\n\n    onHide = () => {\n        this.setState({show: false});\n    }\n\n    focusTextbox = () => {\n        if (this.refs.editChannelHeaderTextbox) {\n            this.refs.editChannelHeaderTextbox.focus();\n        }\n    }\n\n    handleEntering = () => {\n        this.focusTextbox();\n    }\n\n    handleKeyDown = (e) => {\n        const {ctrlSend} = this.props;\n        if (ctrlSend && isKeyPressed(e, KeyCodes.ENTER) && e.ctrlKey === true) {\n            this.handleKeyPress(e);\n        }\n    }\n\n    handleKeyPress = (e) => {\n        const {ctrlSend} = this.props;\n        if (!isMobile() && ((ctrlSend && e.ctrlKey) || !ctrlSend)) {\n            if (isKeyPressed(e, KeyCodes.ENTER) && !e.shiftKey && !e.altKey) {\n                e.preventDefault();\n                ReactDOM.findDOMNode(this.refs.editChannelHeaderTextbox).blur();\n                this.handleSave(e);\n            }\n        }\n    }\n\n    render() {\n        let serverError = null;\n        if (this.props.serverError && this.state.showError) {\n            let errorMsg;\n            if (this.props.serverError.server_error_id === 'model.channel.is_valid.header.app_error') {\n                errorMsg = this.props.intl.formatMessage(holders.error);\n            } else {\n                errorMsg = this.props.serverError.message;\n            }\n\n            serverError = (\n                <div className='form-group has-error'>\n                    <br/>\n                    <label className='control-label'>\n                        {errorMsg}\n                    </label>\n                </div>\n            );\n        }\n\n        let headerTitle = null;\n        if (this.props.channel.type === Constants.DM_CHANNEL) {\n            headerTitle = (\n                <FormattedMessage\n                    id='edit_channel_header_modal.title_dm'\n                    defaultMessage='Edit Header'\n                />\n            );\n        } else {\n            headerTitle = (\n                <FormattedMessage\n                    id='edit_channel_header_modal.title'\n                    defaultMessage='Edit Header for {channel}'\n                    values={{\n                        channel: this.props.channel.display_name,\n                    }}\n                />\n            );\n        }\n\n        return (\n            <Modal\n                show={this.state.show}\n                onHide={this.onHide}\n                onEntering={this.handleEntering}\n                onExited={this.props.onHide}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title>\n                        {headerTitle}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body bsClass='modal-body edit-modal-body'>\n                    <div>\n                        <p>\n                            <FormattedMessage\n                                id='edit_channel_header_modal.description'\n                                defaultMessage='Edit the text appearing next to the channel name in the channel header.'\n                            />\n                        </p>\n                        <Textbox\n                            value={this.state.header}\n                            onChange={this.handleChange}\n                            onKeyPress={this.handleKeyPress}\n                            onKeyDown={this.handleKeyDown}\n                            supportsCommands={false}\n                            suggestionListStyle='bottom'\n                            createMessage={localizeMessage('edit_channel_header.editHeader', 'Edit the Channel Header...')}\n                            previewMessageLink={localizeMessage('edit_channel_header.previewHeader', 'Edit Header')}\n                            handlePostError={this.handlePostError}\n                            id='edit_textbox'\n                            ref='editChannelHeaderTextbox'\n                            characterLimit={1024}\n                        />\n                        <br/>\n                        {serverError}\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        type='button'\n                        className='btn btn-default cancel-button'\n                        onClick={this.onHide}\n                    >\n                        <FormattedMessage\n                            id='edit_channel_header_modal.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </button>\n                    <button\n                        disabled={this.props.requestStatus === RequestStatus.STARTED}\n                        type='button'\n                        className='btn btn-primary save-button'\n                        onClick={this.handleSave}\n                    >\n                        <FormattedMessage\n                            id='edit_channel_header_modal.save'\n                            defaultMessage='Save'\n                        />\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n\nexport default injectIntl(EditChannelHeaderModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {createSelector} from 'reselect';\nimport {getBool} from 'mattermost-redux/selectors/entities/preferences';\nimport {patchChannel} from 'mattermost-redux/actions/channels';\n\nimport Constants from 'utils/constants.jsx';\n\nimport EditChannelHeaderModal from './edit_channel_header_modal.jsx';\n\nconst mapStateToProps = createSelector(\n    (state) => getBool(state, Constants.Preferences.CATEGORY_ADVANCED_SETTINGS, 'send_on_ctrl_enter'),\n    ({requests}) => {\n        const {channels: {updateChannel}} = requests;\n        return {\n            serverError: updateChannel.error,\n            requestStatus: updateChannel.status,\n        };\n    },\n    (ctrlSend, submitInfo) => ({\n        ctrlSend,\n        ...submitInfo,\n    }),\n);\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: {\n            patchChannel: bindActionCreators(patchChannel, dispatch),\n        },\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(EditChannelHeaderModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport {RequestStatus} from 'mattermost-redux/constants';\n\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class EditChannelPurposeModal extends React.Component {\n    static propTypes = {\n\n        /*\n         * Channel info object\n         */\n        channel: PropTypes.object,\n\n        /*\n         * Check should we send purpose on CTRL + ENTER\n         */\n        ctrlSend: PropTypes.bool.isRequired,\n\n        /*\n         * Info about patch serverError\n         */\n        serverError: PropTypes.object,\n\n        /*\n         *  Status of patch info about channel request\n         */\n        requestStatus: PropTypes.string.isRequired,\n\n        /*\n         * Callback to call on modal hide\n         */\n        onModalDismissed: PropTypes.func.isRequired,\n\n        /*\n         * Object with redux action creators\n         */\n        actions: PropTypes.shape({\n\n            /*\n             * Action creator to patch current channel\n             */\n            patchChannel: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            purpose: props.channel.purpose || '',\n            serverError: '',\n            show: true,\n            submitted: false,\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        const {requestStatus: nextRequestStatus, serverError: nextServerError} = nextProps;\n        const {requestStatus} = this.props;\n\n        if (requestStatus !== nextRequestStatus && nextRequestStatus === RequestStatus.SUCCESS) {\n            this.handleHide();\n        }\n\n        if (requestStatus !== nextRequestStatus && nextRequestStatus === RequestStatus.FAILURE) {\n            this.setError(nextServerError);\n        } else {\n            this.unsetError();\n        }\n    }\n\n    setError = (err) => {\n        if (err.id === 'api.context.invalid_param.app_error') {\n            this.setState({\n                serverError: Utils.localizeMessage(\n                    'edit_channel_purpose_modal.error',\n                    'This channel purpose is too long, please enter a shorter one'\n                ),\n            });\n        } else {\n            this.setState({serverError: err.message});\n        }\n    }\n\n    unsetError = () => {\n        this.setState({serverError: ''});\n    }\n\n    handleEntering = () => {\n        Utils.placeCaretAtEnd(this.purpose);\n    }\n\n    handleHide = () => {\n        this.setState({show: false});\n    }\n\n    handleKeyDown = (e) => {\n        const {ctrlSend} = this.props;\n\n        if (ctrlSend && Utils.isKeyPressed(e, Constants.KeyCodes.ENTER) && e.ctrlKey) {\n            e.preventDefault();\n            this.handleSave(e);\n        } else if (!ctrlSend && Utils.isKeyPressed(e, Constants.KeyCodes.ENTER) && !e.shiftKey && !e.altKey) {\n            e.preventDefault();\n            this.handleSave(e);\n        }\n    }\n\n    handleSave = () => {\n        const {channel, actions: {patchChannel}} = this.props;\n        const {purpose} = this.state;\n        if (!channel) {\n            return;\n        }\n\n        patchChannel(channel.id, {purpose});\n    }\n\n    handleChange = (e) => {\n        e.preventDefault();\n        this.setState({purpose: e.target.value});\n    }\n\n    getPurpose = (node) => {\n        this.purpose = node;\n    };\n\n    render() {\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div className='form-group has-error'>\n                    <br/>\n                    <label className='control-label'>{this.state.serverError}</label>\n                </div>\n            );\n        }\n\n        let title = (\n            <span>\n                <FormattedMessage\n                    id='edit_channel_purpose_modal.title1'\n                    defaultMessage='Edit Purpose'\n                />\n            </span>\n        );\n        if (this.props.channel.display_name) {\n            title = (\n                <span>\n                    <FormattedMessage\n                        id='edit_channel_purpose_modal.title2'\n                        defaultMessage='Edit Purpose for '\n                    />\n                    <span className='name'>{this.props.channel.display_name}</span>\n                </span>\n            );\n        }\n\n        let channelPurposeModal = (\n            <FormattedMessage\n                id='edit_channel_purpose_modal.body'\n                defaultMessage='Describe how this channel should be used. This text appears in the channel list in the \"More...\" menu and helps others decide whether to join.'\n            />\n        );\n        if (this.props.channel.type === 'P') {\n            channelPurposeModal = (\n                <FormattedMessage\n                    id='edit_channel_private_purpose_modal.body'\n                    defaultMessage='This text appears in the \\\"View Info\\\" modal of the private channel.'\n                />\n            );\n        }\n\n        return (\n            <Modal\n                className='modal-edit-channel-purpose'\n                ref='modal'\n                show={this.state.show}\n                onHide={this.handleHide}\n                onEntering={this.handleEntering}\n                onExited={this.props.onModalDismissed}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title>\n                        {title}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <p>\n                        {channelPurposeModal}\n                    </p>\n                    <textarea\n                        ref={this.getPurpose}\n                        className='form-control no-resize'\n                        rows='6'\n                        maxLength='250'\n                        value={this.state.purpose}\n                        onKeyDown={this.handleKeyDown}\n                        onChange={this.handleChange}\n                    />\n                    {serverError}\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        type='button'\n                        className='btn btn-default cancel-button'\n                        onClick={this.handleHide}\n                    >\n                        <FormattedMessage\n                            id='edit_channel_purpose_modal.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </button>\n                    <button\n                        type='button'\n                        className='btn btn-primary save-button'\n                        disabled={this.props.requestStatus === RequestStatus.STARTED}\n                        onClick={this.handleSave}\n                    >\n                        <FormattedMessage\n                            id='edit_channel_purpose_modal.save'\n                            defaultMessage='Save'\n                        />\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {createSelector} from 'reselect';\nimport {getBool} from 'mattermost-redux/selectors/entities/preferences';\nimport {patchChannel} from 'mattermost-redux/actions/channels';\n\nimport Constants from 'utils/constants.jsx';\n\nimport EditChannelPurposeModal from './edit_channel_purpose_modal.jsx';\n\nconst mapStateToProps = createSelector(\n    (state) => getBool(state, Constants.Preferences.CATEGORY_ADVANCED_SETTINGS, 'send_on_ctrl_enter'),\n    ({requests}) => {\n        const {channels: {updateChannel}} = requests;\n        return {\n            serverError: updateChannel.error,\n            requestStatus: updateChannel.status,\n        };\n    },\n    (ctrlSend, requestInfo) => ({ctrlSend, ...requestInfo})\n);\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: {\n            patchChannel: bindActionCreators(patchChannel, dispatch),\n        },\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(EditChannelPurposeModal);\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class MemberIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='14px'\n                    height='14px'\n                    viewBox='0 0 16 16'\n                    role='icon'\n                    aria-label={localizeMessage('generic_icons.member', 'Member Icon')}\n                >\n                    <g\n                        id='Symbols'\n                        stroke='none'\n                        strokeWidth='1'\n                        fill='inherit'\n                        fillRule='evenodd'\n                    >\n                        <g\n                            id='Channel-Header/Web-HD'\n                            transform='translate(-725.000000, -32.000000)'\n                            fillRule='nonzero'\n                            fill='inherit'\n                        >\n                            <g id='Channel-Header'>\n                                <g\n                                    id='user-count'\n                                    transform='translate(676.000000, 22.000000)'\n                                >\n                                    <path\n                                        d='M64.9481342,24 C64.6981342,20.955 63.2551342,19.076 60.6731342,18.354 C61.4831342,17.466 61.9881342,16.296 61.9881342,15 C61.9881342,12.238 59.7501342,10 56.9881342,10 C54.2261342,10 51.9881342,12.238 51.9881342,15 C51.9881342,16.297 52.4941342,17.467 53.3031342,18.354 C50.7221342,19.076 49.2771342,20.955 49.0271342,24 C49.0161342,24.146 49.0061342,24.577 49.0001342,25.001 C48.9911342,25.553 49.4361342,26 49.9881342,26 L63.9881342,26 C64.5411342,26 64.9851342,25.553 64.9761342,25.001 C64.9701342,24.577 64.9601342,24.146 64.9481342,24 Z M56.9881342,12 C58.6421342,12 59.9881342,13.346 59.9881342,15 C59.9881342,16.654 58.6421342,18 56.9881342,18 C55.3341342,18 53.9881342,16.654 53.9881342,15 C53.9881342,13.346 55.3341342,12 56.9881342,12 Z M51.0321342,24 C51.2981342,21.174 52.7911342,20 55.9881342,20 L57.9881342,20 C61.1851342,20 62.6781342,21.174 62.9441342,24 L51.0321342,24 Z'\n                                        id='User_4_x2C__Profile_5-Copy-9'\n                                    />\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class MessageIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='18px'\n                    height='16px'\n                    viewBox='0 0 18 16'\n                    role='icon'\n                    aria-label={localizeMessage('generic_icons.message', 'Message Icon')}\n                >\n                    <g\n                        stroke='none'\n                        strokeWidth='1'\n                        fill='inherit'\n                        fillRule='evenodd'\n                    >\n                        <g\n                            transform='translate(-200.000000, -174.000000)'\n                            fill='inherit'\n                        >\n                            <g transform='translate(200.000000, 174.000000)'>\n                                <path d='M7.2546625,1.42801356 C10.458475,1.42801356 12.999475,3.24528136 12.999475,5.52023729 C12.9895,8.04188475 10.6062625,9.89326102 7.40245,9.89326102 C7.40245,9.89326102 6.9134125,9.91229831 6.4115125,9.83747119 L5.82535,9.79622373 L5.15335,10.3586169 C4.997425,10.5397356 4.3199125,11.1095322 3.736375,11.4794373 C4.0915375,10.4598847 4.07605,10.1370441 4.07605,10.1370441 L4.1251375,9.49004068 L3.55315,9.19549153 C2.0986375,8.44616271 1.4444875,6.88616271 1.4444875,5.52023729 C1.4444875,3.24528136 4.05085,1.42801356 7.2546625,1.42801356 M7.2546625,0.370386441 C3.465475,0.370386441 0.3944875,2.65829831 0.3944875,5.52023729 C0.3944875,7.3028678 1.2623125,9.20342373 3.0751375,10.1370441 C3.0751375,10.1478847 3.07225,10.1560814 3.07225,10.1679797 C3.07225,10.9426915 2.43175,12.0048136 2.1794875,12.4429356 L2.1805375,12.4429356 C2.1605875,12.4902644 2.148775,12.5420881 2.148775,12.5973492 C2.148775,12.8141627 2.322025,12.9881424 2.5375375,12.9881424 C2.5693,12.9881424 2.6210125,12.9815322 2.6393875,12.9815322 C2.6446375,12.9815322 2.6467375,12.9815322 2.6462125,12.9831186 C3.986275,12.762339 5.9642125,11.2435864 6.2576875,10.8837288 C6.5585125,10.928678 6.761425,10.9358169 7.0136875,10.9358169 C7.120525,10.9358169 7.2347125,10.9342305 7.3696375,10.9342305 C11.1583,10.9342305 14.094625,8.75446102 14.049475,5.52023729 C14.049475,2.65829831 11.0435875,0.370386441 7.2546625,0.370386441'/>\n                                <path d='M17.2055125,9.79172881 C17.2055125,8.35811525 16.6498,7.26532203 15.2624875,6.4451322 C15.228625,6.82614237 15.120475,7.23517966 15.0031375,7.59477288 C15.8998375,8.21903729 16.1555125,8.85995932 16.1555125,9.79172881 C16.1555125,10.9323797 15.62815,11.7597085 14.40175,12.3919051 L13.879375,12.653139 C13.879375,12.653139 13.9337125,14.0082237 14.0140375,14.3511593 C12.9895,13.5946915 12.6374875,12.9630237 12.6374875,12.9630237 L12.08545,13.0486915 C11.86705,13.0809492 11.276425,13.0812136 11.276425,13.0812136 C9.85,13.0812136 8.7929125,12.7388068 7.8909625,12.0278169 C8.135875,12.0124814 6.42805,12.0132746 6.3899875,12.0468542 C7.4326375,13.3297559 9.1373125,14.1388407 11.276425,14.1388407 C11.3927125,14.1388407 11.49115,14.1398983 11.58355,14.1398983 C11.801425,14.1398983 11.9773,14.1338169 12.237175,14.095478 C12.491275,14.4058915 13.914025,15.7728746 15.0724375,15.9629831 C15.0719125,15.9619254 15.073225,15.9619254 15.078475,15.9619254 C15.0939625,15.9619254 15.13885,15.967478 15.16615,15.967478 C15.3522625,15.967478 15.5024125,15.8167661 15.5024125,15.6293017 C15.5024125,15.5817085 15.49165,15.5367593 15.47485,15.4960407 L15.4759,15.4960407 C15.258025,15.117939 14.9159875,14.0129831 14.9159875,13.3435051 C14.9159875,13.3331932 14.9128375,13.3260542 14.9128375,13.3168 C16.4797,12.5095661 17.2055125,11.3321627 17.2055125,9.79172881'/>\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {Client4} from 'mattermost-redux/client';\n\nimport ProfilePicture from 'components/profile_picture';\nimport MessageIcon from 'components/svg/message_icon';\nimport {UserStatuses} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class PopoverListMembersItem extends React.PureComponent {\n    static propTypes = {\n        showMessageIcon: PropTypes.bool.isRequired,\n        onItemClick: PropTypes.func.isRequired,\n        status: PropTypes.string.isRequired,\n        user: PropTypes.object.isRequired,\n    };\n\n    static defaultProps = {\n        status: UserStatuses.OFFLINE,\n    };\n\n    handleClick = () => {\n        this.props.onItemClick(this.props.user);\n    };\n\n    render() {\n        if (!this.props.user) {\n            return null;\n        }\n\n        const name = Utils.getDisplayNameByUser(this.props.user);\n        if (!name) {\n            return null;\n        }\n\n        let messageIcon;\n        if (this.props.showMessageIcon) {\n            messageIcon = (\n                <MessageIcon\n                    className='icon icon__message'\n                    aria-hidden='true'\n                />\n            );\n        }\n\n        return (\n            <div\n                className='more-modal__row'\n                onClick={this.handleClick}\n            >\n                <ProfilePicture\n                    src={Client4.getProfilePictureUrl(this.props.user.id, this.props.user.last_picture_update)}\n                    status={this.props.status}\n                    width='32'\n                    height='32'\n                />\n                <div className='more-modal__details'>\n                    <div className='more-modal__name'>\n                        {name}\n                    </div>\n                </div>\n                <div className='more-modal__actions'>\n                    {messageIcon}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Overlay, OverlayTrigger, Popover, Tooltip} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {openDirectChannelToUser} from 'actions/channel_actions.jsx';\nimport ChannelStore from 'stores/channel_store.jsx';\nimport TeamStore from 'stores/team_store.jsx';\nimport {canManageMembers} from 'utils/channel_utils.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport ChannelInviteModal from 'components/channel_invite_modal';\nimport ChannelMembersModal from 'components/channel_members_modal';\nimport MemberIcon from 'components/svg/member_icon';\nimport TeamMembersModal from 'components/team_members_modal';\n\nimport PopoverListMembersItem from './popover_list_members_item';\n\nexport default class PopoverListMembers extends React.Component {\n    static propTypes = {\n        channel: PropTypes.object.isRequired,\n        statuses: PropTypes.object.isRequired,\n        users: PropTypes.array.isRequired,\n        memberCount: PropTypes.number,\n        currentUserId: PropTypes.string.isRequired,\n        actions: PropTypes.shape({\n            getProfilesInChannel: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showPopover: false,\n            showTeamMembersModal: false,\n            showChannelMembersModal: false,\n            showChannelInviteModal: false,\n            sortedUsers: this.sortUsers(props.users, props.statuses),\n        };\n    }\n\n    componentDidUpdate() {\n        $('.member-list__popover .popover-content .more-modal__body').perfectScrollbar();\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.users !== nextProps.users || this.props.statuses !== nextProps.statuses) {\n            const sortedUsers = this.sortUsers(nextProps.users, nextProps.statuses);\n\n            this.setState({sortedUsers});\n        }\n    }\n\n    sortUsers = (users, statuses) => {\n        return Utils.sortUsersByStatusAndDisplayName(users, statuses);\n    };\n\n    handleShowDirectChannel = (user) => {\n        const teammateId = user.id;\n\n        if (teammateId) {\n            openDirectChannelToUser(\n                teammateId,\n                (channel, channelAlreadyExisted) => {\n                    browserHistory.push(TeamStore.getCurrentTeamRelativeUrl() + '/channels/' + channel.name);\n                    if (channelAlreadyExisted) {\n                        this.closePopover();\n                    }\n                },\n                () => {\n                    this.closePopover();\n                }\n            );\n        }\n    };\n\n    closePopover = () => {\n        this.setState({showPopover: false});\n    };\n\n    showMembersModal = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            showPopover: false,\n            showChannelMembersModal: true,\n        });\n    };\n\n    hideChannelMembersModal = () => {\n        this.setState({showChannelMembersModal: false});\n    };\n\n    showChannelInviteModal = () => {\n        this.setState({showChannelInviteModal: true});\n    };\n\n    hideChannelInviteModal = () => {\n        this.setState({showChannelInviteModal: false});\n    };\n\n    hideTeamMembersModal = () => {\n        this.setState({showTeamMembersModal: false});\n    };\n\n    handleGetProfilesInChannel = (e) => {\n        this.setState({popoverTarget: e.target, showPopover: !this.state.showPopover});\n        this.props.actions.getProfilesInChannel(this.props.channel.id, 0, undefined, 'status'); // eslint-disable-line no-undefined\n    };\n\n    getTargetPopover = () => {\n        return this.state.popoverTarget;\n    };\n\n    render() {\n        const isDirectChannel = this.props.channel.type === Constants.DM_CHANNEL;\n\n        const items = this.state.sortedUsers.map((user) => (\n            <PopoverListMembersItem\n                key={user.id}\n                onItemClick={this.handleShowDirectChannel}\n                showMessageIcon={this.props.currentUserId !== user.id && !isDirectChannel}\n                status={this.props.statuses[user.id]}\n                user={user}\n            />\n        ));\n\n        const channelIsArchived = this.props.channel.delete_at !== 0;\n        let popoverButton;\n        if (this.props.channel.type !== Constants.GM_CHANNEL && !channelIsArchived) {\n            let membersName = (\n                <FormattedMessage\n                    id='members_popover.manageMembers'\n                    defaultMessage='Manage Members'\n                />\n            );\n\n            const manageMembers = canManageMembers(this.props.channel);\n            const isDefaultChannel = ChannelStore.isDefault(this.props.channel);\n\n            if (isDefaultChannel || !manageMembers) {\n                membersName = (\n                    <FormattedMessage\n                        id='members_popover.viewMembers'\n                        defaultMessage='View Members'\n                    />\n                );\n            }\n\n            popoverButton = (\n                <div\n                    className='more-modal__button'\n                    key={'popover-member-more'}\n                >\n                    <button\n                        className='btn btn-link'\n                        onClick={this.showMembersModal}\n                    >\n                        {membersName}\n                    </button>\n                </div>\n            );\n        }\n\n        const count = this.props.memberCount;\n        let countText = '-';\n        if (count > 0) {\n            countText = count.toString();\n        }\n\n        const title = (\n            <FormattedMessage\n                id='members_popover.title'\n                defaultMessage='Channel Members'\n            />\n        );\n\n        let channelMembersModal;\n        if (this.state.showChannelMembersModal) {\n            channelMembersModal = (\n                <ChannelMembersModal\n                    onModalDismissed={this.hideChannelMembersModal}\n                    showInviteModal={this.showChannelInviteModal}\n                    channel={this.props.channel}\n                />\n            );\n        }\n\n        let teamMembersModal;\n        if (this.state.showTeamMembersModal) {\n            teamMembersModal = (\n                <TeamMembersModal\n                    onHide={this.hideTeamMembersModal}\n                />\n            );\n        }\n\n        let channelInviteModal;\n        if (this.state.showChannelInviteModal) {\n            channelInviteModal = (\n                <ChannelInviteModal\n                    onHide={this.hideChannelInviteModal}\n                    channel={this.props.channel}\n                />\n            );\n        }\n\n        const channelMembersTooltip = (\n            <Tooltip id='channelMembersTooltip'>\n                <FormattedMessage\n                    id='channel_header.channelMembers'\n                    defaultMessage='Members'\n                />\n            </Tooltip>\n        );\n\n        return (\n            <div\n                id='channelMember'\n                className={'channel-header__icon wide ' + (this.state.showPopover ? 'active' : '')}\n            >\n                <OverlayTrigger\n                    trigger={['hover', 'focus']}\n                    delayShow={Constants.OVERLAY_TIME_DELAY}\n                    placement='bottom'\n                    overlay={channelMembersTooltip}\n                >\n                    <div\n                        id='member_popover'\n                        className='member-popover__trigger'\n                        ref='member_popover_target'\n                        onClick={this.handleGetProfilesInChannel}\n                    >\n                        <span\n                            id='channelMemberCountText'\n                            className='icon__text'\n                        >\n                            {countText}\n                        </span>\n                        <MemberIcon\n                            id='channelMemberIcon'\n                            className='icon icon__members'\n                            aria-hidden='true'\n                        />\n                    </div>\n                </OverlayTrigger>\n                <Overlay\n                    rootClose={true}\n                    onHide={this.closePopover}\n                    show={this.state.showPopover}\n                    target={this.getTargetPopover}\n                    placement='bottom'\n                >\n                    <Popover\n                        ref='memebersPopover'\n                        className='member-list__popover'\n                        id='member-list-popover'\n                    >\n                        <div className='more-modal__header'>\n                            {title}\n                        </div>\n                        <div className='more-modal__body'>\n                            <div className='more-modal__list'>\n                                {items}\n                            </div>\n                        </div>\n                        {popoverButton}\n                    </Popover>\n                </Overlay>\n                {channelMembersModal}\n                {teamMembersModal}\n                {channelInviteModal}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getProfilesInChannel} from 'mattermost-redux/actions/users';\nimport {getAllChannelStats} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentUserId, getUserStatuses, makeGetProfilesInChannel} from 'mattermost-redux/selectors/entities/users';\n\nimport PopoverListMembers from './popover_list_members.jsx';\n\nfunction makeMapStateToProps() {\n    const doGetProfilesInChannel = makeGetProfilesInChannel();\n\n    return function mapStateToProps(state, ownProps) {\n        const stats = getAllChannelStats(state)[ownProps.channel.id] || {};\n        const users = doGetProfilesInChannel(state, ownProps.channel.id, true);\n\n        return {\n            currentUserId: getCurrentUserId(state),\n            memberCount: stats.member_count,\n            users,\n            statuses: getUserStatuses(state),\n        };\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getProfilesInChannel,\n        }, dispatch),\n    };\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(PopoverListMembers);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal, OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {defineMessages, FormattedMessage, injectIntl, intlShape} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport Constants from 'utils/constants.jsx';\nimport {cleanUpUrlable, getShortenedURL} from 'utils/url.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nconst holders = defineMessages({\n    required: {\n        id: t('rename_channel.required'),\n        defaultMessage: 'This field is required',\n    },\n    maxLength: {\n        id: t('rename_channel.maxLength'),\n        defaultMessage: 'This field must be less than {maxLength, number} characters',\n    },\n    lowercase: {\n        id: t('rename_channel.lowercase'),\n        defaultMessage: 'Must be lowercase alphanumeric characters',\n    },\n    url: {\n        id: t('rename_channel.url'),\n        defaultMessage: 'URL',\n    },\n    defaultError: {\n        id: t('rename_channel.defaultError'),\n        defaultMessage: ' - Cannot be changed for the default channel',\n    },\n    displayNameHolder: {\n        id: t('rename_channel.displayNameHolder'),\n        defaultMessage: 'Enter display name',\n    },\n    handleHolder: {\n        id: t('rename_channel.handleHolder'),\n        defaultMessage: 'lowercase alphanumeric characters',\n    },\n});\n\nexport class RenameChannelModal extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * react-intl helper object\n         */\n        intl: intlShape.isRequired,\n\n        /**\n         * Determines whether this modal should be shown or not\n         */\n        show: PropTypes.bool.isRequired,\n\n        /**\n         * Function that is called when modal is hidden\n         */\n        onHide: PropTypes.func.isRequired,\n\n        /**\n         * Object with info about current channel\n         */\n        channel: PropTypes.object.isRequired,\n\n        /**\n         * Object with info about current team\n         */\n        team: PropTypes.object.isRequired,\n\n        /**\n         * String with the current team URL\n         */\n        currentTeamUrl: PropTypes.string.isRequired,\n\n        /*\n         * Object with redux action creators\n         */\n        actions: PropTypes.shape({\n\n            /*\n             * Action creator to patch current channel\n             */\n            patchChannel: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            displayName: props.channel.display_name,\n            channelName: props.channel.name,\n            serverError: '',\n            nameError: '',\n            displayNameError: '',\n            invalid: false,\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (!Utils.areObjectsEqual(nextProps.channel, this.props.channel)) {\n            this.setState({\n                displayName: nextProps.channel.display_name,\n                channelName: nextProps.channel.name,\n            });\n        }\n    }\n\n    setError = (err) => {\n        this.setState({serverError: err.message});\n    }\n\n    unsetError = () => {\n        this.setState({serverError: ''});\n    }\n\n    handleEntering = () => {\n        Utils.placeCaretAtEnd(this.textbox);\n    }\n\n    handleHide = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        this.props.onHide();\n\n        this.setState({\n            serverError: '',\n            nameError: '',\n            displayNameError: '',\n            invalid: false,\n        });\n    }\n\n    handleSubmit = async (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        const channel = Object.assign({}, this.props.channel);\n        const oldName = channel.name;\n        const oldDisplayName = channel.display_name;\n        const state = {serverError: ''};\n        const {formatMessage} = this.props.intl;\n        const {actions: {patchChannel}} = this.props;\n\n        channel.display_name = this.state.displayName.trim();\n        if (!channel.display_name) {\n            state.displayNameError = formatMessage(holders.required);\n            state.invalid = true;\n        } else if (channel.display_name.length > Constants.MAX_CHANNELNAME_LENGTH) {\n            state.displayNameError = formatMessage(holders.maxLength, {maxLength: Constants.MAX_CHANNELNAME_LENGTH});\n            state.invalid = true;\n        } else if (channel.display_name.length < Constants.MIN_CHANNELNAME_LENGTH) {\n            state.displayNameError = (\n                <FormattedMessage\n                    id='rename_channel.minLength'\n                    defaultMessage='Channel name must be {minLength, number} or more characters'\n                    values={{\n                        minLength: Constants.MIN_CHANNELNAME_LENGTH,\n                    }}\n                />\n            );\n            state.invalid = true;\n        } else {\n            state.displayNameError = '';\n        }\n\n        channel.name = this.state.channelName.trim();\n        if (!channel.name) {\n            state.nameError = formatMessage(holders.required);\n            state.invalid = true;\n        } else if (channel.name.length > Constants.MAX_CHANNELNAME_LENGTH) {\n            state.nameError = formatMessage(holders.maxLength, {maxLength: Constants.MAX_CHANNELNAME_LENGTH});\n            state.invalid = true;\n        } else {\n            const cleanedName = cleanUpUrlable(channel.name);\n            if (cleanedName === channel.name) {\n                state.nameError = '';\n            } else {\n                state.nameError = formatMessage(holders.lowercase);\n                state.invalid = true;\n            }\n        }\n\n        this.setState(state);\n\n        if (state.invalid) {\n            return;\n        }\n        if (oldName === channel.name && oldDisplayName === channel.display_name) {\n            this.onSaveSuccess();\n            return;\n        }\n\n        const {data, error} = await patchChannel(channel.id, channel);\n\n        if (data) {\n            this.onSaveSuccess();\n        } else if (error) {\n            this.setError(error);\n        }\n    }\n\n    onSaveSuccess = () => {\n        this.handleHide();\n        this.unsetError();\n        browserHistory.push('/' + this.props.team.name + '/channels/' + this.state.channelName);\n    }\n\n    handleCancel = (e) => {\n        this.setState({\n            displayName: this.props.channel.display_name,\n            channelName: this.props.channel.name,\n        });\n\n        this.handleHide(e);\n    }\n\n    onNameChange = (e) => {\n        this.setState({channelName: e.target.value});\n    }\n\n    onDisplayNameChange = (e) => {\n        this.setState({displayName: e.target.value});\n    }\n\n    getTextbox = (node) => {\n        this.textbox = node;\n    }\n\n    render() {\n        let displayNameError = null;\n        let displayNameClass = 'form-group';\n        if (this.state.displayNameError) {\n            displayNameError = <label className='control-label'>{this.state.displayNameError}</label>;\n            displayNameClass += ' has-error';\n        }\n\n        let nameError = null;\n        let nameClass = 'form-group';\n        if (this.state.nameError) {\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\n            nameClass += ' has-error';\n        }\n\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = <div className='form-group has-error'><label className='control-label'>{this.state.serverError}</label></div>;\n        }\n\n        const {formatMessage} = this.props.intl;\n\n        let urlInputLabel = formatMessage(holders.url);\n        const handleInputClass = 'form-control';\n        let readOnlyHandleInput = false;\n        if (this.props.channel.name === Constants.DEFAULT_CHANNEL) {\n            urlInputLabel += formatMessage(holders.defaultError);\n            readOnlyHandleInput = true;\n        }\n\n        const fullUrl = this.props.currentTeamUrl + '/channels';\n        const shortUrl = getShortenedURL(fullUrl, 35);\n        const urlTooltip = (\n            <Tooltip id='urlTooltip'>{fullUrl}</Tooltip>\n        );\n\n        return (\n            <Modal\n                show={this.props.show}\n                onEntering={this.handleEntering}\n                onHide={this.handleCancel}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title>\n                        <FormattedMessage\n                            id='rename_channel.title'\n                            defaultMessage='Rename Channel'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <form role='form'>\n                    <Modal.Body>\n                        <div className={displayNameClass}>\n                            <label className='control-label'>\n                                <FormattedMessage\n                                    id='rename_channel.displayName'\n                                    defaultMessage='Display Name'\n                                />\n                            </label>\n                            <input\n                                onChange={this.onDisplayNameChange}\n                                type='text'\n                                ref={this.getTextbox}\n                                id='display_name'\n                                className='form-control'\n                                placeholder={formatMessage(holders.displayNameHolder)}\n                                value={this.state.displayName}\n                                maxLength={Constants.MAX_CHANNELNAME_LENGTH}\n                            />\n                            {displayNameError}\n                        </div>\n                        <div className={nameClass}>\n                            <label className='control-label'>{urlInputLabel}</label>\n\n                            <div className='input-group input-group--limit'>\n                                <OverlayTrigger\n                                    trigger={['hover', 'focus']}\n                                    delayShow={Constants.OVERLAY_TIME_DELAY}\n                                    placement='top'\n                                    overlay={urlTooltip}\n                                >\n                                    <span className='input-group-addon'>{shortUrl}</span>\n                                </OverlayTrigger>\n                                <input\n                                    onChange={this.onNameChange}\n                                    type='text'\n                                    className={handleInputClass}\n                                    id='channel_name'\n                                    placeholder={formatMessage(holders.handleHolder)}\n                                    value={this.state.channelName}\n                                    maxLength={Constants.MAX_CHANNELNAME_LENGTH}\n                                    readOnly={readOnlyHandleInput}\n                                />\n                            </div>\n                            {nameError}\n                        </div>\n                        {serverError}\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button\n                            type='button'\n                            className='btn btn-default'\n                            onClick={this.handleCancel}\n                        >\n                            <FormattedMessage\n                                id='rename_channel.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </button>\n                        <button\n                            onClick={this.handleSubmit}\n                            type='submit'\n                            id='save-button'\n                            className='btn btn-primary'\n                        >\n                            <FormattedMessage\n                                id='rename_channel.save'\n                                defaultMessage='Save'\n                            />\n                        </button>\n                    </Modal.Footer>\n                </form>\n            </Modal>\n        );\n    }\n}\n\nexport default injectIntl(RenameChannelModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {createSelector} from 'reselect';\nimport {patchChannel} from 'mattermost-redux/actions/channels';\nimport {getTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {getSiteURL} from 'utils/url.jsx';\n\nimport RenameChannelModal from './rename_channel_modal.jsx';\n\nconst mapStateToProps = createSelector(\n    (state) => {\n        const currentTeamId = state.entities.teams.currentTeamId;\n        const team = getTeam(state, currentTeamId);\n        const currentTeamUrl = `${getSiteURL()}/${team.name}`;\n        return {\n            currentTeamUrl,\n            team,\n        };\n    },\n    (teamInfo) => ({...teamInfo})\n);\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: {\n            patchChannel: bindActionCreators(patchChannel, dispatch),\n        },\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RenameChannelModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class PinIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='14px'\n                    height='14px'\n                    viewBox='0 0 16 16'\n                    version='1.1'\n                    role='icon'\n                    aria-label={localizeMessage('generic_icons.pin', 'Pin Icon')}\n                >\n                    <g\n                        id='Symbols'\n                        stroke='inherit'\n                        strokeWidth='1'\n                        fill='inherit'\n                        fillRule='evenodd'\n                    >\n                        <g\n                            transform='translate(-775.000000, -32.000000)'\n                            fillRule='nonzero'\n                            fill='inherit'\n                        >\n                            <g>\n                                <g transform='translate(764.000000, 22.000000)'>\n                                    <g transform='translate(10.000000, 10.000000)'>\n                                        <path d='M16.456,7.291 L9.483,0.25 C9.31,0.078 9.178,0 9.08,0 C8.896,0 8.831,0.276 8.831,0.732 L8.831,3.044 L5.831,5.96 L2.578,6.268 C1.887,6.405 1.668,6.917 2.167,7.41 L4.781,10.011 L3.83,10.961 L1.05,15.511 C0.93,15.761 1.03,15.862 1.28,15.74 L5.83,12.961 L6.786,12.005 L9.359,14.565 C9.556,14.76 9.754,14.854 9.929,14.854 C10.197,14.854 10.413,14.634 10.497,14.219 L10.83,10.961 L13.746,7.961 L16.082,7.961 C16.788,7.961 16.955,7.785 16.456,7.291 Z M12.312,6.567 L9.396,9.567 L8.911,10.065 L8.84,10.757 L8.797,11.184 L5.589,7.992 L6.018,7.952 L6.72,7.886 L7.225,7.396 L10.225,4.48 L10.547,4.167 L12.616,6.256 L12.312,6.567 Z'/>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\n/* eslint-disable react/no-multi-comp */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Dropdown} from 'react-bootstrap';\nimport {RootCloseWrapper} from 'react-overlays';\n\nimport HeaderIconWrapper from 'components/channel_header/components/header_icon_wrapper';\n\nclass CustomMenu extends React.PureComponent {\n    static propTypes = {\n        open: PropTypes.bool,\n        children: PropTypes.node,\n        onClose: PropTypes.func.isRequired,\n        rootCloseEvent: PropTypes.oneOf(['click', 'mousedown']),\n    }\n\n    handleRootClose = () => {\n        this.props.onClose();\n    }\n\n    render() {\n        const {\n            open,\n            rootCloseEvent,\n            children,\n        } = this.props;\n\n        return (\n            <RootCloseWrapper\n                disabled={!open}\n                onRootClose={this.handleRootClose}\n                event={rootCloseEvent}\n            >\n                <ul\n                    role='menu'\n                    className='dropdown-menu channel-header_plugin-dropdown'\n                >\n                    {children}\n                </ul>\n            </RootCloseWrapper>\n        );\n    }\n}\n\nclass CustomToggle extends React.PureComponent {\n    static propTypes = {\n        children: PropTypes.element,\n        dropdownOpen: PropTypes.bool,\n        onClick: PropTypes.func,\n    }\n\n    handleClick = (e) => {\n        this.props.onClick(e);\n    }\n\n    render() {\n        const {children} = this.props;\n\n        let activeClass = '';\n        if (this.props.dropdownOpen) {\n            activeClass = ' active';\n        }\n\n        return (\n            <button\n                id='pluginChannelHeaderButtonDropdown'\n                className={'channel-header__icon style--none' + activeClass}\n                type='button'\n                onClick={this.handleClick}\n            >\n                {children}\n            </button>\n        );\n    }\n}\n\nexport default class ChannelHeaderPlug extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Components or actions to add as channel header buttons\n         */\n        components: PropTypes.array,\n\n        channel: PropTypes.object.isRequired,\n        channelMember: PropTypes.object.isRequired,\n\n        /*\n         * Logged in user's theme\n         */\n        theme: PropTypes.object.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dropdownOpen: false,\n        };\n    }\n\n    toggleDropdown = (dropdownOpen) => {\n        this.setState({dropdownOpen});\n    }\n\n    onClose = () => {\n        this.toggleDropdown(false);\n    }\n\n    fireActionAndClose = (action) => {\n        action(this.props.channel, this.props.channelMember);\n        this.onClose();\n    }\n\n    createButton = (plug) => {\n        return (\n            <HeaderIconWrapper\n                buttonClass='channel-header__icon style--none'\n                iconComponent={plug.icon}\n                onClick={() => plug.action(this.props.channel, this.props.channelMember)}\n                buttonId={plug.id}\n            />\n        );\n    }\n\n    createDropdown = (plugs) => {\n        const items = plugs.map((plug) => {\n            return (\n                <li\n                    key={'channelHeaderPlug' + plug.id}\n                >\n                    <a\n                        href='#'\n                        className='overflow--ellipsis'\n                        onClick={() => this.fireActionAndClose(plug.action)}\n                    >\n                        <span>{plug.icon}</span>\n                        {plug.dropdownText}\n                    </a>\n                </li>\n            );\n        });\n\n        return (\n            <div className='flex-child'>\n                <Dropdown\n                    ref='dropdown'\n                    id='channelHeaderPlugDropdown'\n                    onToggle={this.toggleDropdown}\n                    onSelect={this.onSelect}\n                    open={this.state.dropdownOpen}\n                >\n                    <CustomToggle\n                        dropdownOpen={this.state.dropdownOpen}\n                        bsRole='toggle'\n                    >\n                        <span className='fa fa-ellipsis-h icon__ellipsis'/>\n                    </CustomToggle>\n                    <CustomMenu\n                        bsRole='menu'\n                        open={this.state.dropdownOpen}\n                        onClose={this.onClose}\n                    >\n                        {items}\n                    </CustomMenu>\n                </Dropdown>\n            </div>\n        );\n    }\n\n    render() {\n        const components = this.props.components || [];\n\n        if (components.length === 0) {\n            return null;\n        } else if (components.length === 1) {\n            return this.createButton(components[0]);\n        }\n\n        return this.createDropdown(components);\n    }\n}\n\n/* eslint-enable react/no-multi-comp */","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getTheme} from 'mattermost-redux/selectors/entities/preferences';\n\nimport ChannelHeaderPlug from './channel_header_plug.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        components: state.plugins.components.ChannelHeaderButton,\n        theme: getTheme(state),\n    };\n}\n\nexport default connect(mapStateToProps)(ChannelHeaderPlug);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {OverlayTrigger, Popover, Tooltip} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {memoizeResult} from 'mattermost-redux/utils/helpers';\n\nimport 'bootstrap';\n\nimport {isChannelMuted} from 'mattermost-redux/utils/channel_utils';\n\nimport * as GlobalActions from 'actions/global_actions.jsx';\n\nimport Markdown from 'components/markdown';\nimport {Constants, NotificationLevels, RHSStates, ModalIdentifiers} from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport ChannelInfoModal from 'components/channel_info_modal';\nimport ChannelInviteModal from 'components/channel_invite_modal';\nimport ChannelMembersModal from 'components/channel_members_modal';\nimport ChannelNotificationsModal from 'components/channel_notifications_modal';\nimport ConvertChannelModal from 'components/convert_channel_modal';\nimport DeleteChannelModal from 'components/delete_channel_modal';\nimport EditChannelHeaderModal from 'components/edit_channel_header_modal';\nimport EditChannelPurposeModal from 'components/edit_channel_purpose_modal';\nimport MoreDirectChannels from 'components/more_direct_channels';\nimport PopoverListMembers from 'components/popover_list_members';\nimport RenameChannelModal from 'components/rename_channel_modal';\nimport SearchBar from 'components/search_bar';\nimport StatusIcon from 'components/status_icon.jsx';\nimport FlagIcon from 'components/svg/flag_icon';\nimport MentionsIcon from 'components/svg/mentions_icon';\nimport PinIcon from 'components/svg/pin_icon';\nimport SearchIcon from 'components/svg/search_icon';\nimport ArchiveIcon from 'components/svg/archive_icon';\nimport ToggleModalButtonRedux from 'components/toggle_modal_button_redux';\nimport ChannelPermissionGate from 'components/permissions_gates/channel_permission_gate';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nimport ChannelHeaderPlug from 'plugins/channel_header_plug';\n\nimport HeaderIconWrapper from './components/header_icon_wrapper';\n\nconst headerMarkdownOptions = {singleline: true, mentionHighlight: false, atMentions: true};\nconst popoverMarkdownOptions = {singleline: false, mentionHighlight: false, atMentions: true};\n\nconst SEARCH_BAR_MINIMUM_WINDOW_SIZE = 1140;\n\nexport default class ChannelHeader extends React.Component {\n    static propTypes = {\n        actions: PropTypes.shape({\n            leaveChannel: PropTypes.func.isRequired,\n            favoriteChannel: PropTypes.func.isRequired,\n            unfavoriteChannel: PropTypes.func.isRequired,\n            showFlaggedPosts: PropTypes.func.isRequired,\n            showPinnedPosts: PropTypes.func.isRequired,\n            showMentions: PropTypes.func.isRequired,\n            closeRightHandSide: PropTypes.func.isRequired,\n            updateRhsState: PropTypes.func.isRequired,\n            openModal: PropTypes.func.isRequired,\n            getCustomEmojisInText: PropTypes.func.isRequired,\n            updateChannelNotifyProps: PropTypes.func.isRequired,\n            goToLastViewedChannel: PropTypes.func.isRequired,\n        }).isRequired,\n        channel: PropTypes.object.isRequired,\n        channelMember: PropTypes.object.isRequired,\n        isFavorite: PropTypes.bool,\n        isDefault: PropTypes.bool,\n        currentUser: PropTypes.object.isRequired,\n        dmUser: PropTypes.object,\n        isReadOnly: PropTypes.bool,\n        rhsState: PropTypes.oneOf(\n            Object.values(RHSStates)\n        ),\n        penultimateViewedChannelName: PropTypes.string.isRequired,\n    };\n\n    static defaultProps = {\n        dmUser: {},\n    };\n\n    constructor(props) {\n        super(props);\n\n        const showSearchBar = Utils.windowWidth() > SEARCH_BAR_MINIMUM_WINDOW_SIZE;\n        this.state = {\n            showSearchBar,\n            showEditChannelHeaderModal: false,\n            showEditChannelPurposeModal: false,\n            showMembersModal: false,\n            showRenameChannelModal: false,\n            showChannelNotificationsModal: false,\n        };\n\n        this.getHeaderMarkdownOptions = memoizeResult((channelNamesMap) => (\n            {...headerMarkdownOptions, channelNamesMap}\n        ));\n        this.getPopoverMarkdownOptions = memoizeResult((channelNamesMap) => (\n            {...popoverMarkdownOptions, channelNamesMap}\n        ));\n    }\n\n    componentDidMount() {\n        this.props.actions.getCustomEmojisInText(this.props.channel.header);\n        document.addEventListener('keydown', this.handleShortcut);\n        window.addEventListener('resize', this.handleResize);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleShortcut);\n        window.removeEventListener('resize', this.handleResize);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.channel.id !== nextProps.channel.id) {\n            this.props.actions.getCustomEmojisInText(nextProps.channel.header);\n        }\n    }\n\n    handleResize = () => {\n        const windowWidth = Utils.windowWidth();\n\n        this.setState({showSearchBar: windowWidth > SEARCH_BAR_MINIMUM_WINDOW_SIZE});\n    };\n\n    handleLeave = () => {\n        if (this.props.channel.type === Constants.PRIVATE_CHANNEL) {\n            GlobalActions.showLeavePrivateChannelModal(this.props.channel);\n        } else {\n            this.props.actions.leaveChannel(this.props.channel.id);\n        }\n    };\n\n    handleClose = () => {\n        this.props.actions.goToLastViewedChannel();\n    };\n\n    toggleFavorite = () => {\n        if (this.props.isFavorite) {\n            this.props.actions.unfavoriteChannel(this.props.channel.id);\n        } else {\n            this.props.actions.favoriteChannel(this.props.channel.id);\n        }\n    };\n\n    unmute = () => {\n        const {actions, channel, channelMember, currentUser} = this.props;\n\n        if (!channelMember || !currentUser || !channel) {\n            return;\n        }\n\n        const options = {mark_unread: NotificationLevels.ALL};\n        actions.updateChannelNotifyProps(currentUser.id, channel.id, options);\n    };\n\n    mute = () => {\n        const {actions, channel, channelMember, currentUser} = this.props;\n\n        if (!channelMember || !currentUser || !channel) {\n            return;\n        }\n\n        const options = {mark_unread: NotificationLevels.MENTION};\n        actions.updateChannelNotifyProps(currentUser.id, channel.id, options);\n    };\n\n    searchMentions = (e) => {\n        e.preventDefault();\n        if (this.props.rhsState === RHSStates.MENTION) {\n            this.props.actions.closeRightHandSide();\n        } else {\n            this.props.actions.showMentions();\n        }\n    };\n\n    getPinnedPosts = (e) => {\n        e.preventDefault();\n        if (this.props.rhsState === RHSStates.PIN) {\n            this.props.actions.closeRightHandSide();\n        } else {\n            this.props.actions.showPinnedPosts();\n        }\n    };\n\n    getFlagged = (e) => {\n        e.preventDefault();\n        if (this.props.rhsState === RHSStates.FLAG) {\n            this.props.actions.closeRightHandSide();\n        } else {\n            this.props.actions.showFlaggedPosts();\n        }\n    };\n\n    searchButtonClick = (e) => {\n        e.preventDefault();\n        this.props.actions.updateRhsState(RHSStates.SEARCH);\n    };\n\n    handleShortcut = (e) => {\n        if (Utils.cmdOrCtrlPressed(e) && e.shiftKey) {\n            if (Utils.isKeyPressed(e, Constants.KeyCodes.M)) {\n                e.preventDefault();\n                this.searchMentions(e);\n            }\n        }\n    };\n\n    showRenameChannelModal = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            showRenameChannelModal: true,\n        });\n    };\n\n    hideRenameChannelModal = () => {\n        this.setState({\n            showRenameChannelModal: false,\n        });\n    };\n\n    showChannelNotificationsModal = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            showChannelNotificationsModal: true,\n        });\n    };\n\n    hideChannelNotificationsModal = () => {\n        this.setState({\n            showChannelNotificationsModal: false,\n        });\n    };\n\n    handleOnMouseOver = () => {\n        if (this.refs.headerOverlay) {\n            this.refs.headerOverlay.show();\n        }\n    };\n\n    handleOnMouseOut = () => {\n        if (this.refs.headerOverlay) {\n            this.refs.headerOverlay.hide();\n        }\n    };\n\n    showMembersModal = () => {\n        this.setState({showMembersModal: true});\n    };\n\n    hideMembersModal = () => {\n        this.setState({showMembersModal: false});\n    };\n\n    showEditChannelPurposeModal = () => {\n        this.setState({showEditChannelPurposeModal: true});\n    };\n\n    hideEditChannelPurposeModal = () => {\n        this.setState({showEditChannelPurposeModal: false});\n    };\n\n    hideEditChannelHeaderModal = () => {\n        this.setState({showEditChannelHeaderModal: false});\n    };\n\n    showEditChannelHeaderModal = () => {\n        this.setState({showEditChannelHeaderModal: true});\n    };\n\n    showInviteModal = () => {\n        const {channel, currentUser, actions} = this.props;\n        const inviteModalData = {\n            modalId: ModalIdentifiers.CHANNEL_INVITE,\n            dialogType: ChannelInviteModal,\n            dialogProps: {channel, currentUser},\n        };\n\n        actions.openModal(inviteModalData);\n    };\n\n    renderMute = () => {\n        const channelMuted = isChannelMuted(this.props.channelMember);\n\n        if (channelMuted) {\n            return (\n                <li\n                    key='dropdown_unmute'\n                    role='presentation'\n                >\n                    <button\n                        className='style--none'\n                        id='channelUnmute'\n                        role='menuitem'\n                        onClick={this.unmute}\n                    >\n                        <FormattedMessage\n                            id='channel_header.unmute'\n                            defaultMessage='Unmute Channel'\n                        />\n                    </button>\n                </li>\n            );\n        }\n\n        return (\n            <li\n                key='dropdown_mute'\n                role='presentation'\n            >\n                <button\n                    className='style--none'\n                    id='channelMute'\n                    role='menuitem'\n                    onClick={this.mute}\n                >\n                    <FormattedMessage\n                        id='channel_header.mute'\n                        defaultMessage='Mute Channel'\n                    />\n                </button>\n            </li>\n        );\n    };\n\n    render() {\n        const channelIsArchived = this.props.channel.delete_at !== 0;\n        if (Utils.isEmptyObject(this.props.channel) ||\n            Utils.isEmptyObject(this.props.channelMember) ||\n            Utils.isEmptyObject(this.props.currentUser)) {\n            // Use an empty div to make sure the header's height stays constant\n            return (\n                <div className='channel-header'/>\n            );\n        }\n\n        const channel = this.props.channel;\n        const channelNamesMap = this.props.channel.props && this.props.channel.props.channel_mentions;\n\n        const popoverContent = (\n            <Popover\n                id='header-popover'\n                bStyle='info'\n                bSize='large'\n                placement='bottom'\n                className='channel-header__popover'\n                onMouseOver={this.handleOnMouseOver}\n                onMouseOut={this.handleOnMouseOut}\n            >\n                <Markdown\n                    message={channel.header}\n                    options={this.getPopoverMarkdownOptions(channelNamesMap)}\n                />\n            </Popover>\n        );\n\n        let channelTitle = channel.display_name;\n        let archivedIcon = null;\n        if (channelIsArchived) {\n            archivedIcon = (<ArchiveIcon className='icon icon__archive icon channel-header-archived-icon svg-text-color'/>);\n        }\n        const isDirect = (this.props.channel.type === Constants.DM_CHANNEL);\n        const isGroup = (this.props.channel.type === Constants.GM_CHANNEL);\n        const isPrivate = (this.props.channel.type === Constants.PRIVATE_CHANNEL);\n\n        const channelMuted = isChannelMuted(this.props.channelMember);\n\n        const teamId = this.props.channel.team_id;\n\n        if (isDirect) {\n            const teammateId = Utils.getUserIdFromChannelName(channel);\n            if (this.props.currentUser.id === teammateId) {\n                channelTitle = (\n                    <FormattedMessage\n                        id='channel_header.directchannel.you'\n                        defaultMessage='{displayname} (you) '\n                        values={{\n                            displayname: Utils.getDisplayNameByUserId(teammateId),\n                        }}\n                    />\n                );\n            } else {\n                channelTitle = Utils.getDisplayNameByUserId(teammateId) + ' ';\n            }\n        }\n\n        let popoverListMembers;\n        if (!isDirect) {\n            popoverListMembers = (\n                <PopoverListMembers\n                    channel={channel}\n                />\n            );\n        }\n\n        const dropdownContents = [];\n        if (isDirect) {\n            dropdownContents.push(\n                <li\n                    key='edit_header_direct'\n                    role='presentation'\n                >\n                    <ToggleModalButtonRedux\n                        id='channelEditHeaderDirect'\n                        role='menuitem'\n                        modalId={ModalIdentifiers.EDIT_CHANNEL_HEADER}\n                        dialogType={EditChannelHeaderModal}\n                        dialogProps={{channel}}\n                    >\n                        <FormattedMessage\n                            id='channel_header.channelHeader'\n                            defaultMessage='Edit Channel Header'\n                        />\n                    </ToggleModalButtonRedux>\n                </li>\n            );\n        } else if (isGroup) {\n            dropdownContents.push(\n                <li\n                    key='edit_header_direct'\n                    role='presentation'\n                >\n                    <ToggleModalButtonRedux\n                        id='channelEditHeaderGroup'\n                        role='menuitem'\n                        modalId={ModalIdentifiers.EDIT_CHANNEL_HEADER}\n                        dialogType={EditChannelHeaderModal}\n                        dialogProps={{channel}}\n                    >\n                        <FormattedMessage\n                            id='channel_header.channelHeader'\n                            defaultMessage='Edit Channel Header'\n                        />\n                    </ToggleModalButtonRedux>\n                </li>\n            );\n\n            dropdownContents.push(\n                <li\n                    key='notification_preferences'\n                    role='presentation'\n                >\n                    <button\n                        className='style--none'\n                        id='channelNotificationsGroup'\n                        role='menuitem'\n                        onClick={this.showChannelNotificationsModal}\n                    >\n                        <FormattedMessage\n                            id='channel_header.notificationPreferences'\n                            defaultMessage='Notification Preferences'\n                        />\n                    </button>\n                </li>\n            );\n\n            dropdownContents.push(this.renderMute());\n\n            dropdownContents.push(\n                <li\n                    key='add_members'\n                    role='presentation'\n                >\n                    <ToggleModalButtonRedux\n                        id='channelAddMembersGroup'\n                        role='menuitem'\n                        modalId={ModalIdentifiers.CREATE_DM_CHANNEL}\n                        dialogType={MoreDirectChannels}\n                        dialogProps={{isExistingChannel: true}}\n                    >\n                        <FormattedMessage\n                            id='channel_header.addMembers'\n                            defaultMessage='Add Members'\n                        />\n                    </ToggleModalButtonRedux>\n                </li>\n            );\n        } else {\n            dropdownContents.push(\n                <li\n                    key='view_info'\n                    role='presentation'\n                >\n                    <ToggleModalButtonRedux\n                        id='channelViewInfo'\n                        role='menuitem'\n                        modalId={ModalIdentifiers.CHANNEL_INFO}\n                        dialogType={ChannelInfoModal}\n                        dialogProps={{channel}}\n                    >\n                        <FormattedMessage\n                            id='channel_header.viewInfo'\n                            defaultMessage='View Info'\n                        />\n                    </ToggleModalButtonRedux>\n                </li>\n            );\n\n            if (this.props.isDefault || channelIsArchived) {\n                dropdownContents.push(\n                    <li\n                        key='manage_members'\n                        role='presentation'\n                    >\n                        <button\n                            className='style--none'\n                            id='channelManageMembers'\n                            role='menuitem'\n                            onClick={this.showMembersModal}\n                        >\n                            <FormattedMessage\n                                id='channel_header.viewMembers'\n                                defaultMessage='View Members'\n                            />\n                        </button>\n                    </li>\n                );\n            }\n\n            if (!channelIsArchived) {\n                dropdownContents.push(\n                    <li\n                        key='notification_preferences'\n                        role='presentation'\n                    >\n                        <button\n                            className='style--none'\n                            id='channelNotificationsGroup'\n                            role='menuitem'\n                            onClick={this.showChannelNotificationsModal}\n                        >\n                            <FormattedMessage\n                                id='channel_header.notificationPreferences'\n                                defaultMessage='Notification Preferences'\n                            />\n                        </button>\n                    </li>\n                );\n            }\n\n            dropdownContents.push(this.renderMute());\n\n            if (!this.props.isDefault) {\n                dropdownContents.push(\n                    <li\n                        key='divider-1'\n                        className='divider'\n                    />\n                );\n\n                if (!channelIsArchived) {\n                    dropdownContents.push(\n                        <ChannelPermissionGate\n                            channelId={channel.id}\n                            teamId={teamId}\n                            permissions={[isPrivate ? Permissions.MANAGE_PRIVATE_CHANNEL_MEMBERS : Permissions.MANAGE_PUBLIC_CHANNEL_MEMBERS]}\n                            key='add_members_permission'\n                        >\n                            <li\n                                key='add_members'\n                                role='presentation'\n                            >\n                                <ToggleModalButtonRedux\n                                    id='channelAddMembers'\n                                    ref='channelInviteModalButton'\n                                    role='menuitem'\n                                    modalId={ModalIdentifiers.CHANNEL_INVITE}\n                                    dialogType={ChannelInviteModal}\n                                    dialogProps={{channel, currentUser: this.props.currentUser}}\n                                >\n                                    <FormattedMessage\n                                        id='channel_header.addMembers'\n                                        defaultMessage='Add Members'\n                                    />\n                                </ToggleModalButtonRedux>\n                            </li>\n                        </ChannelPermissionGate>\n                    );\n                    dropdownContents.push(\n                        <ChannelPermissionGate\n                            channelId={channel.id}\n                            teamId={teamId}\n                            permissions={[isPrivate ? Permissions.MANAGE_PRIVATE_CHANNEL_MEMBERS : Permissions.MANAGE_PUBLIC_CHANNEL_MEMBERS]}\n                            key='manage_members_permission'\n                        >\n                            <li\n                                key='manage_members'\n                                role='presentation'\n                            >\n                                <button\n                                    className='style--none'\n                                    id='channelManageMembers'\n                                    role='menuitem'\n                                    onClick={this.showMembersModal}\n                                >\n                                    <FormattedMessage\n                                        id='channel_header.manageMembers'\n                                        defaultMessage='Manage Members'\n                                    />\n                                </button>\n                            </li>\n                        </ChannelPermissionGate>\n                    );\n                }\n\n                dropdownContents.push(\n                    <ChannelPermissionGate\n                        channelId={channel.id}\n                        teamId={teamId}\n                        permissions={[isPrivate ? Permissions.MANAGE_PRIVATE_CHANNEL_MEMBERS : Permissions.MANAGE_PUBLIC_CHANNEL_MEMBERS]}\n                        invert={true}\n                        key='view_members_permission'\n                    >\n                        <li\n                            key='view_members'\n                            role='presentation'\n                        >\n                            <button\n                                className='style--none'\n                                id='channelViewMembers'\n                                role='menuitem'\n                                onClick={this.showMembersModal}\n                            >\n                                <FormattedMessage\n                                    id='channel_header.viewMembers'\n                                    defaultMessage='View Members'\n                                />\n                            </button>\n                        </li>\n                    </ChannelPermissionGate>\n                );\n            }\n\n            if (!this.props.isReadOnly && !channelIsArchived) {\n                dropdownContents.push(\n                    <ChannelPermissionGate\n                        channelId={channel.id}\n                        teamId={teamId}\n                        permissions={[isPrivate ? Permissions.MANAGE_PRIVATE_CHANNEL_PROPERTIES : Permissions.MANAGE_PUBLIC_CHANNEL_PROPERTIES]}\n                        key='set_channel_info_permission'\n                    >\n                        <li\n                            key='divider-2'\n                            className='divider'\n                        />\n\n                        <li\n                            key='set_channel_header'\n                            role='presentation'\n                        >\n                            <ToggleModalButtonRedux\n                                id='channelEditHeader'\n                                role='menuitem'\n                                modalId={ModalIdentifiers.EDIT_CHANNEL_HEADER}\n                                dialogType={EditChannelHeaderModal}\n                                dialogProps={{channel}}\n                            >\n                                <FormattedMessage\n                                    id='channel_header.setHeader'\n                                    defaultMessage='Edit Channel Header'\n                                />\n                            </ToggleModalButtonRedux>\n                        </li>\n\n                        <li\n                            key='set_channel_purpose'\n                            role='presentation'\n                        >\n                            <button\n                                className='style--none'\n                                id='channelEditPurpose'\n                                role='menuitem'\n                                onClick={this.showEditChannelPurposeModal}\n                            >\n                                <FormattedMessage\n                                    id='channel_header.setPurpose'\n                                    defaultMessage='Edit Channel Purpose'\n                                />\n                            </button>\n                        </li>\n\n                        <li\n                            key='rename_channel'\n                            role='presentation'\n                        >\n                            <button\n                                className='style--none'\n                                id='channelRename'\n                                role='menuitem'\n                                onClick={this.showRenameChannelModal}\n                            >\n                                <FormattedMessage\n                                    id='channel_header.rename'\n                                    defaultMessage='Rename Channel'\n                                />\n                            </button>\n                        </li>\n                    </ChannelPermissionGate>\n                );\n            }\n\n            if (!this.props.isDefault && channel.type === Constants.OPEN_CHANNEL && !channelIsArchived) {\n                dropdownContents.push(\n                    <TeamPermissionGate\n                        teamId={teamId}\n                        permissions={[Permissions.MANAGE_TEAM]}\n                        key='convert_channel_permission'\n                    >\n                        <li\n                            key='convert_channel'\n                            role='presentation'\n                        >\n                            <ToggleModalButtonRedux\n                                id='channelConvert'\n                                role='menuitem'\n                                modalId={ModalIdentifiers.CONVERT_CHANNEL}\n                                dialogType={ConvertChannelModal}\n                                dialogProps={{\n                                    channelId: channel.id,\n                                    channelDisplayName: channel.display_name,\n                                }}\n                            >\n                                <FormattedMessage\n                                    id='channel_header.convert'\n                                    defaultMessage='Convert to Private Channel'\n                                />\n                            </ToggleModalButtonRedux>\n                        </li>\n                    </TeamPermissionGate>\n                );\n            }\n\n            if (!this.props.isDefault && !channelIsArchived) {\n                dropdownContents.push(\n                    <ChannelPermissionGate\n                        channelId={channel.id}\n                        teamId={teamId}\n                        permissions={[isPrivate ? Permissions.DELETE_PRIVATE_CHANNEL : Permissions.DELETE_PUBLIC_CHANNEL]}\n                        key='delete_channel_permission'\n                    >\n                        <li\n                            key='delete_channel'\n                            role='presentation'\n                        >\n                            <ToggleModalButtonRedux\n                                id='channelDelete'\n                                role='menuitem'\n                                modalId={ModalIdentifiers.DELETE_CHANNEL}\n                                dialogType={DeleteChannelModal}\n                                dialogProps={{channel, penultimateViewedChannelName: this.props.penultimateViewedChannelName}}\n                            >\n                                <FormattedMessage\n                                    id='channel_header.delete'\n                                    defaultMessage='Archive Channel'\n                                />\n                            </ToggleModalButtonRedux>\n                        </li>\n                    </ChannelPermissionGate>\n                );\n\n                dropdownContents.push(\n                    <li\n                        key='divider-3'\n                        className='divider'\n                    />\n                );\n            }\n\n            if (!this.props.isDefault) {\n                dropdownContents.push(\n                    <li\n                        key='leave_channel'\n                        role='presentation'\n                    >\n                        <button\n                            className='style--none'\n                            id='channelLeave'\n                            role='menuitem'\n                            onClick={this.handleLeave}\n                        >\n                            <FormattedMessage\n                                id='channel_header.leave'\n                                defaultMessage='Leave Channel'\n                            />\n                        </button>\n                    </li>\n                );\n            }\n\n            if (channelIsArchived) {\n                dropdownContents.push(\n                    <li\n                        key='close_channel'\n                        role='presentation'\n                    >\n                        <button\n                            className='style--none'\n                            id='channelClose'\n                            role='menuitem'\n                            onClick={this.handleClose}\n                        >\n                            <FormattedMessage\n                                id='center_panel.archived.closeChannel'\n                                defaultMessage='Close Channel'\n                            />\n                        </button>\n                    </li>\n                );\n            }\n        }\n\n        let dmHeaderIconStatus;\n        let dmHeaderTextStatus;\n        if (channel.type === Constants.DM_CHANNEL && !this.props.dmUser.delete_at) {\n            dmHeaderIconStatus = (\n                <StatusIcon\n                    type='avatar'\n                    status={channel.status}\n                />\n            );\n\n            dmHeaderTextStatus = (\n                <span className='header-status__text'>\n                    <FormattedMessage\n                        id={`status_dropdown.set_${channel.status}`}\n                        defaultMessage={Utils.toTitleCase(channel.status)}\n                    />\n                </span>\n            );\n        }\n\n        let headerTextContainer;\n        if (channel.header) {\n            headerTextContainer = (\n                <OverlayTrigger\n                    trigger={'click'}\n                    placement='bottom'\n                    rootClose={true}\n                    overlay={popoverContent}\n                    ref='headerOverlay'\n                >\n                    <div\n                        id='channelHeaderDescription'\n                        className='channel-header__description'\n                    >\n                        {dmHeaderIconStatus}\n                        {dmHeaderTextStatus}\n                        <span onClick={Utils.handleFormattedTextClick}>\n                            <Markdown\n                                message={channel.header}\n                                options={this.getHeaderMarkdownOptions(channelNamesMap)}\n                            />\n                        </span>\n                    </div>\n                </OverlayTrigger>\n            );\n        } else {\n            let editMessage;\n            if (!this.props.isReadOnly && !channelIsArchived) {\n                if (isDirect || isGroup) {\n                    editMessage = (\n                        <button\n                            className='style--none'\n                            onClick={this.showEditChannelHeaderModal}\n                        >\n                            <FormattedMessage\n                                id='channel_header.addChannelHeader'\n                                defaultMessage='Add a channel description'\n                            />\n                        </button>\n                    );\n                } else {\n                    editMessage = (\n                        <ChannelPermissionGate\n                            channelId={channel.id}\n                            teamId={teamId}\n                            permissions={[isPrivate ? Permissions.MANAGE_PRIVATE_CHANNEL_PROPERTIES : Permissions.MANAGE_PUBLIC_CHANNEL_PROPERTIES]}\n                        >\n                            <button\n                                className='style--none'\n                                onClick={this.showEditChannelHeaderModal}\n                            >\n                                <FormattedMessage\n                                    id='channel_header.addChannelHeader'\n                                    defaultMessage='Add a channel description'\n                                />\n                            </button>\n                        </ChannelPermissionGate>\n                    );\n                }\n            }\n            headerTextContainer = (\n                <div\n                    id='channelHeaderDescription'\n                    className='channel-header__description light'\n                >\n                    {dmHeaderIconStatus}\n                    {dmHeaderTextStatus}\n                    {editMessage}\n                </div>\n            );\n        }\n\n        let editHeaderModal;\n        if (this.state.showEditChannelHeaderModal) {\n            editHeaderModal = (\n                <EditChannelHeaderModal\n                    onHide={this.hideEditChannelHeaderModal}\n                    channel={channel}\n                />\n            );\n        }\n\n        let toggleFavoriteTooltip;\n        let toggleFavorite = null;\n        if (!channelIsArchived) {\n            if (this.props.isFavorite) {\n                toggleFavoriteTooltip = (\n                    <Tooltip id='favoriteTooltip'>\n                        <FormattedMessage\n                            id='channelHeader.removeFromFavorites'\n                            defaultMessage='Remove from Favorites'\n                        />\n                    </Tooltip>\n                );\n            } else {\n                toggleFavoriteTooltip = (\n                    <Tooltip id='favoriteTooltip'>\n                        <FormattedMessage\n                            id='channelHeader.addToFavorites'\n                            defaultMessage='Add to Favorites'\n                        />\n                    </Tooltip>\n                );\n            }\n\n            toggleFavorite = (\n                <OverlayTrigger\n                    trigger={['hover', 'focus']}\n                    delayShow={Constants.OVERLAY_TIME_DELAY}\n                    placement='bottom'\n                    overlay={toggleFavoriteTooltip}\n                >\n                    <button\n                        id='toggleFavorite'\n                        onClick={this.toggleFavorite}\n                        className={'style--none color--link channel-header__favorites ' + (this.props.isFavorite ? 'active' : 'inactive')}\n                    >\n                        <i className={'icon fa ' + (this.props.isFavorite ? 'fa-star' : 'fa-star-o')}/>\n                    </button>\n                </OverlayTrigger>\n            );\n        }\n\n        const channelMutedTooltip = (\n            <Tooltip id='channelMutedTooltip'>\n                <FormattedMessage\n                    id='channelHeader.unmute'\n                    defaultMessage='Unmute'\n                />\n            </Tooltip>\n        );\n\n        let muteTrigger;\n        if (channelMuted) {\n            muteTrigger = (\n                <OverlayTrigger\n                    trigger={['hover', 'focus']}\n                    delayShow={Constants.OVERLAY_TIME_DELAY}\n                    placement='bottom'\n                    overlay={channelMutedTooltip}\n                >\n                    <button\n                        id='toggleMute'\n                        onClick={this.unmute}\n                        className={'style--none color--link channel-header__mute inactive'}\n                        aria-label={Utils.localizeMessage('generic_icons.muted', 'Muted Icon')}\n                    >\n                        <i className={'icon fa fa-bell-slash-o'}/>\n                    </button>\n                </OverlayTrigger>\n            );\n        }\n\n        let channelMembersModal;\n        if (this.state.showMembersModal) {\n            channelMembersModal = (\n                <ChannelMembersModal\n                    onModalDismissed={this.hideMembersModal}\n                    showInviteModal={this.showInviteModal}\n                    channel={channel}\n                />\n            );\n        }\n\n        let editPurposeModal;\n        if (this.state.showEditChannelPurposeModal) {\n            editPurposeModal = (\n                <EditChannelPurposeModal\n                    onModalDismissed={this.hideEditChannelPurposeModal}\n                    channel={channel}\n                />\n            );\n        }\n\n        let pinnedIconClass = 'channel-header__icon';\n        if (this.props.rhsState === RHSStates.PIN) {\n            pinnedIconClass += ' active';\n        }\n\n        return (\n            <div\n                id='channel-header'\n                className='channel-header alt'\n            >\n                <div className='flex-parent'>\n                    <div className='flex-child'>\n                        <div\n                            id='channelHeaderInfo'\n                            className='channel-header__info'\n                        >\n                            <div\n                                id='channelHeaderTitle'\n                                className='channel-header__title dropdown'\n                            >\n                                {toggleFavorite}\n                                <h2>\n                                    <button\n                                        id='channelHeaderDropdownButton'\n                                        className='dropdown-toggle theme style--none'\n                                        type='button'\n                                        data-toggle='dropdown'\n                                        aria-expanded='true'\n                                    >\n                                        <strong\n                                            id='channelHeaderTitle'\n                                            className='heading'\n                                        >\n                                            {archivedIcon}\n                                            {channelTitle}\n                                        </strong>\n                                        <span\n                                            id='channelHeaderDropdownIcon'\n                                            className='fa fa-angle-down header-dropdown__icon'\n                                            title={Utils.localizeMessage('generic_icons.dropdown', 'Dropdown Icon')}\n                                        />\n                                    </button>\n                                    <ul\n                                        id='channelHeaderDropdownMenu'\n                                        className='dropdown-menu'\n                                        role='menu'\n                                        aria-labelledby='channel_header_dropdown'\n                                    >\n                                        {dropdownContents}\n                                    </ul>\n                                </h2>\n                                {muteTrigger}\n                            </div>\n                            {headerTextContainer}\n                        </div>\n                    </div>\n                    <div className='flex-child'>\n                        {popoverListMembers}\n                    </div>\n                    <ChannelHeaderPlug\n                        channel={this.props.channel}\n                        channelMember={this.props.channelMember}\n                    />\n                    <HeaderIconWrapper\n                        iconComponent={\n                            <PinIcon\n                                className='icon icon__pin'\n                                aria-hidden='true'\n                            />\n                        }\n                        buttonClass={'style--none ' + pinnedIconClass}\n                        buttonId={'channelHeaderPinButton'}\n                        onClick={this.getPinnedPosts}\n                        tooltipKey={'pinnedPosts'}\n                    />\n                    {this.state.showSearchBar ? (\n                        <div className='flex-child search-bar__container'>\n                            <SearchBar\n                                showMentionFlagBtns={false}\n                                isFocus={Utils.isMobile()}\n                            />\n                        </div>\n                    ) : (\n                        <HeaderIconWrapper\n                            iconComponent={\n                                <SearchIcon\n                                    className='icon icon__search icon--stroke'\n                                    aria-hidden='true'\n                                />\n                            }\n                            buttonId={'channelHeaderSearchButton'}\n                            onClick={this.searchButtonClick}\n                            tooltipKey={'search'}\n                        />\n                    )}\n                    <HeaderIconWrapper\n                        iconComponent={\n                            <MentionsIcon\n                                className='icon icon__mentions'\n                                aria-hidden='true'\n                            />\n                        }\n                        buttonId={'channelHeaderMentionButton'}\n                        onClick={this.searchMentions}\n                        tooltipKey={'recentMentions'}\n                    />\n                    <HeaderIconWrapper\n                        iconComponent={\n                            <FlagIcon className='icon icon__flag'/>\n                        }\n                        buttonId={'channelHeaderFlagButton'}\n                        onClick={this.getFlagged}\n                        tooltipKey={'flaggedPosts'}\n                    />\n                </div>\n                {editHeaderModal}\n                {editPurposeModal}\n                {channelMembersModal}\n                <ChannelNotificationsModal\n                    show={this.state.showChannelNotificationsModal}\n                    onHide={this.hideChannelNotificationsModal}\n                    channel={channel}\n                    channelMember={this.props.channelMember}\n                    currentUser={this.props.currentUser}\n                />\n                <RenameChannelModal\n                    show={this.state.showRenameChannelModal}\n                    onHide={this.hideRenameChannelModal}\n                    channel={channel}\n                />\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {favoriteChannel, leaveChannel, unfavoriteChannel, updateChannelNotifyProps} from 'mattermost-redux/actions/channels';\nimport {getCustomEmojisInText} from 'mattermost-redux/actions/emojis';\nimport {General} from 'mattermost-redux/constants';\nimport {getChannel, getMyChannelMember, isCurrentChannelReadOnly} from 'mattermost-redux/selectors/entities/channels';\nimport {getMyTeamMember} from 'mattermost-redux/selectors/entities/teams';\nimport {getCurrentUser, getUser} from 'mattermost-redux/selectors/entities/users';\nimport {getUserIdFromChannelName, isDefault, isFavoriteChannel} from 'mattermost-redux/utils/channel_utils';\nimport {getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport {withRouter} from 'react-router-dom';\n\nimport {goToLastViewedChannel} from 'actions/views/channel';\n\nimport {getPenultimateViewedChannelName} from 'selectors/local_storage';\nimport {Constants} from 'utils/constants.jsx';\n\nimport {\n    showFlaggedPosts,\n    showPinnedPosts,\n    showMentions,\n    closeRightHandSide,\n    updateRhsState,\n} from 'actions/views/rhs';\nimport {openModal} from 'actions/views/modals';\nimport {getRhsState} from 'selectors/rhs';\n\nimport ChannelHeader from './channel_header.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const channel = getChannel(state, ownProps.channelId) || {};\n    const prefs = state.entities.preferences.myPreferences;\n    const user = getCurrentUser(state);\n\n    let dmUser;\n    if (channel && channel.type === General.DM_CHANNEL) {\n        const dmUserId = getUserIdFromChannelName(user.id, channel.name);\n        dmUser = getUser(state, dmUserId);\n    }\n\n    const license = getLicense(state);\n\n    let penultimateViewedChannelName = getPenultimateViewedChannelName(state);\n    if (!penultimateViewedChannelName) {\n        penultimateViewedChannelName = Constants.DEFAULT_CHANNEL;\n    }\n\n    return {\n        channel,\n        channelMember: getMyChannelMember(state, ownProps.channelId),\n        teamMember: getMyTeamMember(state, channel.team_id),\n        isFavorite: isFavoriteChannel(prefs, ownProps.channelId),\n        isDefault: isDefault(channel),\n        currentUser: user,\n        dmUser,\n        rhsState: getRhsState(state),\n        isLicensed: license.IsLicensed === 'true',\n        isReadOnly: isCurrentChannelReadOnly(state),\n        penultimateViewedChannelName,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            leaveChannel,\n            favoriteChannel,\n            unfavoriteChannel,\n            showFlaggedPosts,\n            showPinnedPosts,\n            showMentions,\n            closeRightHandSide,\n            updateRhsState,\n            openModal,\n            getCustomEmojisInText,\n            updateChannelNotifyProps,\n            goToLastViewedChannel,\n        }, dispatch),\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ChannelHeader));\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport EventEmitter from 'events';\n\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport EventTypes from 'utils/event_types.jsx';\n\nclass GlobalEventEmitterClass extends EventEmitter {\n    constructor() {\n        super();\n        this.dispatchToken = AppDispatcher.register(this.handleEventPayload);\n    }\n\n    handleEventPayload = (payload) => {\n        const {type, value, ...args} = payload.action; //eslint-disable-line no-use-before-define\n\n        switch (type) {\n        case EventTypes.POST_LIST_SCROLL_CHANGE:\n            this.emit(type, value, args);\n            break;\n        }\n    }\n}\n\nconst GlobalEventEmitter = new GlobalEventEmitterClass();\nexport default GlobalEventEmitter;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport UnreadBelowIcon from 'components/svg/unread_below_icon';\n\nexport default class NewMessageIndicator extends React.PureComponent {\n    static propTypes = {\n        onClick: PropTypes.func.isRequired,\n        newMessages: PropTypes.number,\n    };\n\n    static defaultProps = {\n        newMessages: 0,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            rendered: false,\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (nextProps.newMessages > 0) {\n            this.setState({rendered: true}, () => {\n                this.setState({visible: true});\n            });\n        } else {\n            this.setState({visible: false});\n        }\n    }\n\n    render() {\n        let className = 'new-messages__button';\n        if (this.state.visible) {\n            className += ' visible';\n        }\n        if (!this.state.rendered) {\n            className += ' disabled';\n        }\n        return (\n            <div\n                className={className}\n                onTransitionEnd={this.setRendered.bind(this)}\n                ref='indicator'\n            >\n                <div onClick={this.props.onClick}>\n                    <FormattedMessage\n                        id='posts_view.newMsgBelow'\n                        defaultMessage='New {count, plural, one {message} other {messages}}'\n                        values={{count: this.props.newMessages}}\n                    />\n                    <UnreadBelowIcon className='icon icon__unread'/>\n                </div>\n            </div>\n        );\n    }\n\n    // Sync 'rendered' state with visibility param, only after transitions\n    // have ended\n    setRendered() {\n        this.setState({rendered: this.state.visible});\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class CommentedOnFilesMessage extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * The id of the post that was commented on\n         */\n        parentPostId: PropTypes.string.isRequired,\n\n        /*\n         * An array of file metadata for the parent post\n         */\n        fileInfos: PropTypes.arrayOf(PropTypes.object),\n\n        actions: PropTypes.shape({\n\n            /*\n             * Function to get file metadata for a post\n             */\n            getFilesForPost: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    componentDidMount() {\n        if (!this.props.fileInfos || this.props.fileInfos.length === 0) {\n            this.props.actions.getFilesForPost(this.props.parentPostId);\n        }\n    }\n\n    render() {\n        if (!this.props.fileInfos || this.props.fileInfos.length === 0) {\n            return null;\n        }\n\n        let plusMore = null;\n        if (this.props.fileInfos.length > 1) {\n            plusMore = (\n                <FormattedMessage\n                    id='post_body.plusMore'\n                    defaultMessage=' plus {count, number} other {count, plural, one {file} other {files}}'\n                    values={{\n                        count: this.props.fileInfos.length - 1,\n                    }}\n                />\n            );\n        }\n\n        return (\n            <span>\n                {this.props.fileInfos[0].name}\n                {plusMore}\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getFilesForPost} from 'mattermost-redux/actions/files';\nimport {makeGetFilesForPost} from 'mattermost-redux/selectors/entities/files';\n\nimport CommentedOnFilesMessage from './commented_on_files_message.jsx';\n\nfunction makeMapStateToProps() {\n    const selectFileInfosForPost = makeGetFilesForPost();\n\n    return function mapStateToProps(state, ownProps) {\n        let fileInfos;\n        if (ownProps.parentPostId) {\n            fileInfos = selectFileInfosForPost(state, ownProps.parentPostId);\n        }\n\n        return {\n            fileInfos,\n        };\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getFilesForPost,\n        }, dispatch),\n    };\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(CommentedOnFilesMessage);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport {stripMarkdown} from 'utils/markdown';\n\nimport CommentedOnFilesMessage from 'components/post_view/commented_on_files_message';\n\nexport default class CommentedOn extends PureComponent {\n    static propTypes = {\n        displayName: PropTypes.string,\n        enablePostUsernameOverride: PropTypes.bool,\n        onCommentClick: PropTypes.func.isRequired,\n        post: PropTypes.object.isRequired,\n        actions: PropTypes.shape({\n            showSearchResults: PropTypes.func.isRequired,\n            updateSearchTerms: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    handleOnClick = () => {\n        const {actions} = this.props;\n        const displayName = this.makeUsername();\n        actions.updateSearchTerms(displayName);\n        actions.showSearchResults();\n    }\n\n    makeUsername = () => {\n        const postProps = this.props.post.props;\n        let username = this.props.displayName;\n        if (this.props.enablePostUsernameOverride && postProps && postProps.from_webhook === 'true' && postProps.override_username) {\n            username = postProps.override_username;\n        }\n        return username;\n    }\n\n    makeCommentedOnMessage = () => {\n        const {post} = this.props;\n        let message = '';\n        if (post.message) {\n            message = Utils.replaceHtmlEntities(post.message);\n        } else if (post.file_ids && post.file_ids.length > 0) {\n            message = (\n                <CommentedOnFilesMessage parentPostId={post.id}/>\n            );\n        } else if (post.props && post.props.attachments && post.props.attachments.length > 0) {\n            const attachment = post.props.attachments[0];\n            const webhookMessage = attachment.pretext || attachment.title || attachment.text || attachment.fallback || '';\n            message = Utils.replaceHtmlEntities(webhookMessage);\n        }\n\n        return message;\n    }\n\n    render() {\n        const username = this.makeUsername();\n        const message = this.makeCommentedOnMessage();\n\n        const name = (\n            <a\n                className='theme'\n                onClick={this.handleOnClick}\n            >\n                {username}\n            </a>\n        );\n\n        return (\n            <div className='post__link'>\n                <span>\n                    <FormattedMessage\n                        id='post_body.commentedOn'\n                        defaultMessage=\"Commented on {name}'s message: \"\n                        values={{\n                            name,\n                        }}\n                    />\n                    <a\n                        className='theme'\n                        onClick={this.props.onCommentClick}\n                    >\n                        {stripMarkdown(message)}\n                    </a>\n                </span>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getUser} from 'mattermost-redux/selectors/entities/users';\n\nimport {showSearchResults, updateSearchTerms} from 'actions/views/rhs';\n\nimport {getDisplayNameByUser} from 'utils/utils.jsx';\n\nimport CommentedOn from './commented_on.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    let displayName = '';\n    if (ownProps.post) {\n        const user = getUser(state, ownProps.post.user_id);\n        displayName = getDisplayNameByUser(user);\n    }\n\n    const config = getConfig(state);\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n\n    return {\n        displayName,\n        enablePostUsernameOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            showSearchResults,\n            updateSearchTerms,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentedOn);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Posts} from 'mattermost-redux/constants';\n\nimport * as PostUtils from 'utils/post_utils.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport DelayedAction from 'utils/delayed_action.jsx';\n\nimport CommentedOn from 'components/post_view/commented_on';\nimport FileAttachmentListContainer from 'components/file_attachment_list';\nimport FailedPostOptions from 'components/post_view/failed_post_options';\nimport PostBodyAdditionalContent from 'components/post_view/post_body_additional_content';\nimport PostMessageView from 'components/post_view/post_message_view';\nimport ReactionListContainer from 'components/post_view/reaction_list';\n\nimport loadingGif from 'images/load.gif';\n\nconst SENDING_ANIMATION_DELAY = 3000;\n\nexport default class PostBody extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The post to render the body of\n         */\n        post: PropTypes.object.isRequired,\n\n        /**\n         * The parent post of the thread this post is in\n         */\n        parentPost: PropTypes.object,\n\n        /**\n         * The poster of the parent post, if exists\n         */\n        parentPostUser: PropTypes.object,\n\n        /**\n         * The function called when the comment icon is clicked\n         */\n        handleCommentClick: PropTypes.func.isRequired,\n\n        /**\n         * Set to render post body compactly\n         */\n        compactDisplay: PropTypes.bool,\n\n        /**\n         * Set to highlight comment as a mention\n         */\n        isCommentMention: PropTypes.bool,\n\n        /**\n         * Set to render a preview of the parent post above this reply\n         */\n        isFirstReply: PropTypes.bool,\n\n        /**\n         * User's preference to link previews\n         */\n        previewEnabled: PropTypes.bool,\n\n        /**\n         * Post identifiers for selenium tests\n         */\n        lastPostCount: PropTypes.number,\n\n        /*\n         * Post type components from plugins\n         */\n        pluginPostTypes: PropTypes.object,\n\n        /**\n         * Flag passed down to PostBodyAdditionalContent for determining if post embed is visible\n         */\n        isEmbedVisible: PropTypes.bool,\n\n        /**\n         * Whether or not the post username can be overridden.\n         */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n         * Set not to allow edits on post\n         */\n        isReadOnly: PropTypes.bool,\n    }\n\n    static defaultProps = {\n        isReadOnly: false,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.sendingAction = new DelayedAction(\n            () => {\n                const post = this.props.post;\n                if (post && post.id === post.pending_post_id) {\n                    this.setState({sending: true});\n                }\n            }\n        );\n\n        this.state = {sending: false};\n    }\n\n    componentDidMount() {\n        const post = this.props.post;\n        if (post && post.id === post.pending_post_id) {\n            this.sendingAction.fireAfter(SENDING_ANIMATION_DELAY);\n        }\n    }\n\n    componentWillUnmount() {\n        this.sendingAction.cancel();\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        const post = nextProps.post;\n        if (post && post.id !== post.pending_post_id) {\n            this.sendingAction.cancel();\n            this.setState({sending: false});\n        }\n    }\n\n    render() {\n        const post = this.props.post;\n        const parentPost = this.props.parentPost;\n\n        let comment;\n        let postClass = '';\n        const isEphemeral = Utils.isPostEphemeral(post);\n        if (this.props.isFirstReply && parentPost && !isEphemeral) {\n            comment = (\n                <CommentedOn\n                    post={parentPost}\n                    onCommentClick={this.props.handleCommentClick}\n                />\n            );\n        }\n\n        let failedOptions;\n        if (this.props.post.failed) {\n            postClass += ' post--fail';\n            failedOptions = <FailedPostOptions post={this.props.post}/>;\n        }\n\n        if (PostUtils.isEdited(this.props.post)) {\n            postClass += ' post--edited';\n        }\n\n        let fileAttachmentHolder = null;\n        if (((post.file_ids && post.file_ids.length > 0) || (post.filenames && post.filenames.length > 0)) && this.props.post.state !== Posts.POST_DELETED) {\n            fileAttachmentHolder = (\n                <FileAttachmentListContainer\n                    post={post}\n                    compactDisplay={this.props.compactDisplay}\n                />\n            );\n        }\n\n        let sending;\n        if (this.state.sending) {\n            sending = (\n                <img\n                    className='post-loading-gif pull-right'\n                    src={loadingGif}\n                />\n            );\n\n            postClass += ' post-waiting';\n        }\n\n        const messageWrapper = (\n            <React.Fragment>\n                {failedOptions}\n                {sending}\n                <PostMessageView\n                    lastPostCount={this.props.lastPostCount}\n                    post={this.props.post}\n                    compactDisplay={this.props.compactDisplay}\n                    hasMention={true}\n                />\n            </React.Fragment>\n        );\n\n        const hasPlugin = post.type && this.props.pluginPostTypes.hasOwnProperty(post.type);\n\n        let messageWithAdditionalContent;\n        if (this.props.post.state === Posts.POST_DELETED || hasPlugin) {\n            messageWithAdditionalContent = messageWrapper;\n        } else {\n            messageWithAdditionalContent = (\n                <PostBodyAdditionalContent\n                    post={this.props.post}\n                    previewEnabled={this.props.previewEnabled}\n                    isEmbedVisible={this.props.isEmbedVisible}\n                >\n                    {messageWrapper}\n                </PostBodyAdditionalContent>\n            );\n        }\n\n        let mentionHighlightClass = '';\n        if (this.props.isCommentMention) {\n            mentionHighlightClass = 'mention-comment';\n        }\n\n        let ephemeralPostClass = '';\n        if (isEphemeral) {\n            ephemeralPostClass = 'post--ephemeral';\n        }\n\n        return (\n            <div>\n                {comment}\n                <div\n                    id={`${post.id}_message`}\n                    className={`post__body ${mentionHighlightClass} ${ephemeralPostClass} ${postClass}`}\n                >\n                    {messageWithAdditionalContent}\n                    {fileAttachmentHolder}\n                    <ReactionListContainer\n                        post={post}\n                        isReadOnly={this.props.isReadOnly}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getPost} from 'mattermost-redux/selectors/entities/posts';\nimport {isCurrentChannelReadOnly, getCurrentChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {getBool} from 'mattermost-redux/selectors/entities/preferences';\nimport {getUser} from 'mattermost-redux/selectors/entities/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {isEmbedVisible} from 'selectors/posts';\nimport {Preferences} from 'utils/constants.jsx';\n\nimport PostBody from './post_body.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    let parentPost;\n    let parentPostUser;\n    if (ownProps.post.root_id) {\n        parentPost = getPost(state, ownProps.post.root_id);\n        parentPostUser = parentPost ? getUser(state, parentPost.user_id) : null;\n    }\n\n    const config = getConfig(state);\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n\n    const currentChannel = getCurrentChannel(state);\n    const channelIsArchived = currentChannel.delete_at !== 0;\n\n    return {\n        parentPost,\n        parentPostUser,\n        pluginPostTypes: state.plugins.postTypes,\n        previewEnabled: getBool(state, Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.LINK_PREVIEW_DISPLAY, true),\n        isEmbedVisible: isEmbedVisible(state, ownProps.post.id),\n        enablePostUsernameOverride,\n        isReadOnly: isCurrentChannelReadOnly(state) || channelIsArchived,\n    };\n}\n\nexport default connect(mapStateToProps)(PostBody);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\n\nimport {Posts} from 'mattermost-redux/constants';\nimport * as ReduxPostUtils from 'mattermost-redux/utils/post_utils';\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport {emitEmojiPosted} from 'actions/post_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as PostUtils from 'utils/post_utils.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport CommentIcon from 'components/common/comment_icon.jsx';\nimport DotMenu from 'components/dot_menu';\nimport EmojiPickerOverlay from 'components/emoji_picker/emoji_picker_overlay.jsx';\nimport PostFlagIcon from 'components/post_view/post_flag_icon';\nimport PostTime from 'components/post_view/post_time.jsx';\nimport EmojiIcon from 'components/svg/emoji_icon';\nimport ChannelPermissionGate from 'components/permissions_gates/channel_permission_gate';\n\nexport default class PostInfo extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * The post to render the info for\n         */\n        post: PropTypes.object.isRequired,\n\n        /*\n         * The id of the team which belongs the post\n         */\n        teamId: PropTypes.string,\n\n        /*\n         * Function called when the comment icon is clicked\n         */\n        handleCommentClick: PropTypes.func.isRequired,\n\n        /*\n         * Funciton called when the post options dropdown is opened\n         */\n        handleDropdownOpened: PropTypes.func.isRequired,\n\n        /*\n         * Set to mark the post as flagged\n         */\n        isFlagged: PropTypes.bool,\n\n        /*\n         * The number of replies in the same thread as this post\n         */\n        replyCount: PropTypes.number,\n\n        /**\n         * Set to indicate that this is previous post was not a reply to the same thread\n         */\n        isFirstReply: PropTypes.bool,\n\n        /**\n         * Set to render in mobile view\n         */\n        isMobile: PropTypes.bool,\n\n        /*\n         * Post identifiers for selenium tests\n         */\n        lastPostCount: PropTypes.number,\n\n        /**\n         * Set to render in compact view\n         */\n        compactDisplay: PropTypes.bool,\n\n        /**\n         * Function to get the post list HTML element\n         */\n        getPostList: PropTypes.func.isRequired,\n\n        /**\n         * Set to mark post as being hovered over\n         */\n        hover: PropTypes.bool.isRequired,\n\n        /**\n         * Set to render the post time when not hovering\n         */\n        showTimeWithoutHover: PropTypes.bool.isRequired,\n\n        /**\n         * Whether to show the emoji picker.\n         */\n        enableEmojiPicker: PropTypes.bool.isRequired,\n\n        /**\n         * Set not to allow edits on post\n         */\n        isReadOnly: PropTypes.bool,\n\n        actions: PropTypes.shape({\n\n            /*\n             * Function to remove the post\n             */\n            removePost: PropTypes.func.isRequired,\n\n            /*\n             * Function to add a reaction to the post\n             */\n            addReaction: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showEmojiPicker: false,\n            reactionPickerOffset: 21,\n        };\n    }\n\n    toggleEmojiPicker = () => {\n        const showEmojiPicker = !this.state.showEmojiPicker;\n\n        this.setState({showEmojiPicker});\n        this.props.handleDropdownOpened(showEmojiPicker);\n    };\n\n    hideEmojiPicker = () => {\n        this.setState({showEmojiPicker: false});\n        this.props.handleDropdownOpened(false);\n    };\n\n    removePost = () => {\n        this.props.actions.removePost(this.props.post);\n    };\n\n    createRemovePostButton = () => {\n        return (\n            <button\n                className='post__remove theme color--link style--none'\n                type='button'\n                onClick={this.removePost}\n            >\n                {'×'}\n            </button>\n        );\n    };\n\n    reactEmojiClick = (emoji) => {\n        const pickerOffset = 21;\n        this.setState({showEmojiPicker: false, reactionPickerOffset: pickerOffset});\n        const emojiName = emoji.name || emoji.aliases[0];\n        this.props.actions.addReaction(this.props.post.id, emojiName);\n        emitEmojiPosted(emojiName);\n        this.props.handleDropdownOpened(false);\n    };\n\n    handleDotMenuOpened = (open) => {\n        this.setState({showDotMenu: open});\n        this.props.handleDropdownOpened(open);\n    };\n\n    getDotMenu = () => {\n        return this.refs.dotMenu;\n    };\n\n    buildOptions = (post, isSystemMessage, fromAutoResponder, idCount) => {\n        if (!PostUtils.shouldShowDotMenu(post)) {\n            return null;\n        }\n\n        const {isMobile, isReadOnly} = this.props;\n        const hover = this.props.hover || this.state.showEmojiPicker || this.state.showDotMenu;\n\n        let comments;\n        let react;\n\n        if (fromAutoResponder) {\n            comments = (\n                <CommentIcon\n                    idPrefix='commentIcon'\n                    idCount={idCount}\n                    handleCommentClick={this.props.handleCommentClick}\n                    commentCount={this.props.replyCount}\n                    id={post.channel_id + '_' + post.id}\n                />\n            );\n        }\n\n        if (!isSystemMessage) {\n            if (isMobile || hover || (!post.root_id && this.props.replyCount) || this.props.isFirstReply) {\n                const extraClass = isMobile ? '' : 'pull-right';\n                comments = (\n                    <CommentIcon\n                        idPrefix='commentIcon'\n                        idCount={idCount}\n                        handleCommentClick={this.props.handleCommentClick}\n                        commentCount={this.props.replyCount}\n                        id={post.channel_id + '_' + post.id}\n                        extraClass={extraClass}\n                    />\n                );\n            }\n\n            if (hover && !isReadOnly && this.props.enableEmojiPicker) {\n                const tooltip = (\n                    <Tooltip\n                        id='reaction-icon-tooltip'\n                        className='hidden-xs'\n                    >\n                        <FormattedMessage\n                            id='post_info.tooltip.add_reactions'\n                            defaultMessage='Add Reaction'\n                        />\n                    </Tooltip>\n                );\n\n                react = (\n                    <ChannelPermissionGate\n                        channelId={post.channel_id}\n                        teamId={this.props.teamId}\n                        permissions={[Permissions.ADD_REACTION]}\n                    >\n                        <div>\n                            <EmojiPickerOverlay\n                                show={this.state.showEmojiPicker}\n                                container={this.props.getPostList}\n                                target={this.getDotMenu}\n                                onHide={this.hideEmojiPicker}\n                                onEmojiClick={this.reactEmojiClick}\n                                rightOffset={7}\n                            />\n                            <OverlayTrigger\n                                className='hidden-xs'\n                                delayShow={500}\n                                placement='top'\n                                overlay={tooltip}\n                            >\n                                <button\n                                    className='reacticon__container color--link style--none'\n                                    onClick={this.toggleEmojiPicker}\n                                >\n                                    <EmojiIcon className='icon icon--emoji'/>\n                                </button>\n                            </OverlayTrigger>\n                        </div>\n                    </ChannelPermissionGate>\n                );\n            }\n        }\n\n        let dotMenu;\n        if (isMobile || hover) {\n            dotMenu = (\n                <DotMenu\n                    post={post}\n                    location={'CENTER'}\n                    commentCount={this.props.replyCount}\n                    isFlagged={this.props.isFlagged}\n                    handleCommentClick={this.props.handleCommentClick}\n                    handleDropdownOpened={this.handleDotMenuOpened}\n                    isReadOnly={isReadOnly}\n                />\n            );\n        }\n\n        return (\n            <div\n                ref='dotMenu'\n                className={'col col__reply'}\n            >\n                {dotMenu}\n                {react}\n                {comments}\n            </div>\n        );\n    };\n\n    render() {\n        const post = this.props.post;\n\n        let idCount = -1;\n        if (this.props.lastPostCount >= 0 && this.props.lastPostCount < Constants.TEST_ID_COUNT) {\n            idCount = this.props.lastPostCount;\n        }\n\n        const isEphemeral = Utils.isPostEphemeral(post);\n        const isSystemMessage = PostUtils.isSystemMessage(post);\n        const fromAutoResponder = PostUtils.fromAutoResponder(post);\n\n        let flagIcon;\n        if (!isEphemeral && !post.failed && !isSystemMessage && (this.props.hover || this.props.isFlagged)) {\n            flagIcon = (\n                <PostFlagIcon\n                    idPrefix='centerPostFlag'\n                    idCount={idCount}\n                    postId={post.id}\n                    isFlagged={this.props.isFlagged}\n                    isEphemeral={isEphemeral}\n                />\n            );\n        }\n\n        let options;\n        if (isEphemeral) {\n            options = (\n                <div className='col col__remove'>\n                    {this.createRemovePostButton()}\n                </div>\n            );\n        } else if (!post.failed) {\n            options = this.buildOptions(post, isSystemMessage, fromAutoResponder, idCount);\n        }\n\n        let visibleMessage;\n        if (isEphemeral && !this.props.compactDisplay && post.state !== Posts.POST_DELETED) {\n            visibleMessage = (\n                <span className='post__visibility'>\n                    <FormattedMessage\n                        id='post_info.message.visible'\n                        defaultMessage='(Only visible to you)'\n                    />\n                </span>\n            );\n        }\n\n        let pinnedBadge;\n        if (post.is_pinned) {\n            pinnedBadge = (\n                <span className='post__pinned-badge'>\n                    <FormattedMessage\n                        id='post_info.pinned'\n                        defaultMessage='Pinned'\n                    />\n                </span>\n            );\n        }\n\n        let postTime;\n        if (this.props.hover || this.props.showTimeWithoutHover) {\n            // timestamp should not be a permalink if the post has been deleted, is ephemeral message, or is pending\n            const isPermalink = !(isEphemeral ||\n                Posts.POST_DELETED === post.state ||\n                ReduxPostUtils.isPostPendingOrFailed(post));\n\n            postTime = (\n                <PostTime\n                    isPermalink={isPermalink}\n                    eventTime={post.create_at}\n                    postId={post.id}\n                />\n            );\n        }\n\n        return (\n            <div className='post__header--info'>\n                <div className='col'>\n                    {postTime}\n                    {pinnedBadge}\n                    {flagIcon}\n                    {visibleMessage}\n                </div>\n                {options}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {addReaction, removePost} from 'mattermost-redux/actions/posts';\nimport {isCurrentChannelReadOnly} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {get} from 'mattermost-redux/selectors/entities/preferences';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {Preferences} from 'utils/constants.jsx';\n\nimport PostInfo from './post_info.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const channel = state.entities.channels.channels[ownProps.post.channel_id];\n    const channelIsArchived = channel ? channel.delete_at !== 0 : null;\n    const enableEmojiPicker = config.EnableEmojiPicker === 'true' && !channelIsArchived;\n    const teamId = getCurrentTeamId(state);\n\n    return {\n        teamId,\n        isFlagged: get(state, Preferences.CATEGORY_FLAGGED_POST, ownProps.post.id, null) != null,\n        isMobile: state.views.channel.mobileView,\n        enableEmojiPicker,\n        isReadOnly: isCurrentChannelReadOnly(state) || channelIsArchived,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            removePost,\n            addReaction,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostInfo);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants.jsx';\nimport * as PostUtils from 'utils/post_utils.jsx';\nimport PostInfo from 'components/post_view/post_info';\nimport UserProfile from 'components/user_profile.jsx';\n\nexport default class PostHeader extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * The post to render the header for\n         */\n        post: PropTypes.object.isRequired,\n\n        /*\n         * The user who created the post\n         */\n        user: PropTypes.object,\n\n        /*\n         * Function called when the comment icon is clicked\n         */\n        handleCommentClick: PropTypes.func.isRequired,\n\n        /*\n         * Function called when the post options dropdown is opened\n         */\n        handleDropdownOpened: PropTypes.func.isRequired,\n\n        /*\n         * Set to render compactly\n         */\n        compactDisplay: PropTypes.bool,\n\n        /*\n         * The method for displaying the post creator's name\n         */\n        displayNameType: PropTypes.string,\n\n        /*\n         * The status of the user who created the post\n         */\n        status: PropTypes.string,\n\n        /*\n         * The number of replies in the same thread as this post\n         */\n        replyCount: PropTypes.number,\n\n        /**\n         * Set to indicate that this is previous post was not a reply to the same thread\n         */\n        isFirstReply: PropTypes.bool,\n\n        /*\n         * Post identifiers for selenium tests\n         */\n        lastPostCount: PropTypes.number,\n\n        /**\n         * Function to get the post list HTML element\n         */\n        getPostList: PropTypes.func.isRequired,\n\n        /**\n         * Set to mark post as being hovered over\n         */\n        hover: PropTypes.bool.isRequired,\n\n        /*\n         * Set to render the post time when not hovering\n         */\n        showTimeWithoutHover: PropTypes.bool,\n\n        /**\n         * Whether or not the post username can be overridden.\n         */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n    }\n\n    render() {\n        const post = this.props.post;\n        const isSystemMessage = PostUtils.isSystemMessage(post);\n        const fromAutoResponder = PostUtils.fromAutoResponder(post);\n        const fromWebhook = post && post.props && post.props.from_webhook === 'true';\n\n        let userProfile = (\n            <UserProfile\n                user={this.props.user}\n                displayNameType={this.props.displayNameType}\n                status={this.props.status}\n                hasMention={true}\n            />\n        );\n        let indicator;\n        let colon;\n\n        if (fromWebhook) {\n            if (post.props.override_username && this.props.enablePostUsernameOverride) {\n                userProfile = (\n                    <UserProfile\n                        user={this.props.user}\n                        overwriteName={post.props.override_username}\n                        disablePopover={true}\n                    />\n                );\n            } else {\n                userProfile = (\n                    <UserProfile\n                        user={this.props.user}\n                        displayNameType={this.props.displayNameType}\n                        disablePopover={true}\n                    />\n                );\n            }\n\n            indicator = (\n                <div className='bot-indicator'>\n                    <FormattedMessage\n                        id='post_info.bot'\n                        defaultMessage='BOT'\n                    />\n                </div>\n            );\n        } else if (fromAutoResponder) {\n            userProfile = (\n                <UserProfile\n                    user={this.props.user}\n                    displayNameType={this.props.displayNameType}\n                    status={this.props.status}\n                    hasMention={true}\n                />\n            );\n\n            indicator = (\n                <div className='bot-indicator'>\n                    <FormattedMessage\n                        id='post_info.auto_responder'\n                        defaultMessage='AUTOMATIC REPLY'\n                    />\n                </div>\n            );\n        } else if (isSystemMessage) {\n            userProfile = (\n                <UserProfile\n                    user={{}}\n                    overwriteName={\n                        <FormattedMessage\n                            id='post_info.system'\n                            defaultMessage='System'\n                        />\n                    }\n                    overwriteImage={Constants.SYSTEM_MESSAGE_PROFILE_IMAGE}\n                    disablePopover={true}\n                />\n            );\n        }\n\n        if (this.props.compactDisplay) {\n            colon = (<strong className='colon'>{':'}</strong>);\n        }\n\n        return (\n            <div className='post__header'>\n                <div className='col col__name'>{userProfile}{colon}</div>\n                {indicator}\n                <div className='col'>\n                    <PostInfo\n                        post={post}\n                        handleCommentClick={this.props.handleCommentClick}\n                        handleDropdownOpened={this.props.handleDropdownOpened}\n                        compactDisplay={this.props.compactDisplay}\n                        lastPostCount={this.props.lastPostCount}\n                        replyCount={this.props.replyCount}\n                        isFirstReply={this.props.isFirstReply}\n                        showTimeWithoutHover={this.props.showTimeWithoutHover}\n                        getPostList={this.props.getPostList}\n                        hover={this.props.hover}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {Preferences} from 'mattermost-redux/constants';\nimport {get} from 'mattermost-redux/selectors/entities/preferences';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport PostHeader from './post_header.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n\n    return {\n        displayNameType: get(state, Preferences.CATEGORY_DISPLAY_SETTINGS, 'name_format', 'false'),\n        enablePostUsernameOverride,\n    };\n}\n\nexport default connect(mapStateToProps)(PostHeader);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Posts} from 'mattermost-redux/constants';\n\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport {ActionTypes} from 'utils/constants.jsx';\nimport * as PostUtils from 'utils/post_utils.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport PostProfilePicture from 'components/post_profile_picture';\nimport PostBody from 'components/post_view/post_body';\nimport PostHeader from 'components/post_view/post_header';\n\nexport default class Post extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The post to render\n         */\n        post: PropTypes.object.isRequired,\n\n        /**\n         * The user who created the post\n         */\n        user: PropTypes.object,\n\n        /**\n         * The status of the poster\n         */\n        status: PropTypes.string,\n\n        /**\n         * The logged in user\n         */\n        currentUser: PropTypes.object.isRequired,\n\n        /**\n         * Set to center the post\n         */\n        center: PropTypes.bool,\n\n        /**\n         * Set to render post compactly\n         */\n        compactDisplay: PropTypes.bool,\n\n        /**\n         * Set to render a preview of the parent post above this reply\n         */\n        isFirstReply: PropTypes.bool,\n\n        /**\n         * Set to highlight the background of the post\n         */\n        highlight: PropTypes.bool,\n\n        /**\n         * Set to render this post as if it was attached to the previous post\n         */\n        consecutivePostByUser: PropTypes.bool,\n\n        /**\n         * Set if the previous post is a comment\n         */\n        previousPostIsComment: PropTypes.bool,\n\n        /**\n         * Set to render this comment as a mention\n         */\n        isCommentMention: PropTypes.bool,\n\n        /**\n         * The number of replies in the same thread as this post\n         */\n        replyCount: PropTypes.number,\n\n        /**\n         * The post count used for selenium tests\n         */\n        lastPostCount: PropTypes.number,\n\n        /**\n         * Function to get the post list HTML element\n         */\n        getPostList: PropTypes.func.isRequired,\n    }\n\n    static defaultProps = {\n        post: {},\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dropdownOpened: false,\n            hover: false,\n            sameRoot: this.hasSameRoot(props),\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        this.setState({sameRoot: this.hasSameRoot(nextProps)});\n    }\n\n    handleCommentClick = (e) => {\n        e.preventDefault();\n\n        const post = this.props.post;\n        if (!post) {\n            return;\n        }\n\n        AppDispatcher.handleServerAction({\n            type: ActionTypes.RECEIVED_POST_SELECTED,\n            postId: Utils.getRootId(post),\n            channelId: post.channel_id,\n        });\n    }\n\n    handleDropdownOpened = (opened) => {\n        this.setState({\n            dropdownOpened: opened,\n        });\n    }\n\n    hasSameRoot = (props) => {\n        const post = props.post;\n\n        if (props.isFirstReply) {\n            return false;\n        } else if (!post.root_id && !props.previousPostIsComment && props.consecutivePostByUser) {\n            return true;\n        } else if (post.root_id) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getClassName = (post, isSystemMessage, fromWebhook, fromAutoResponder) => {\n        let className = 'post';\n\n        if (post.failed || post.state === Posts.POST_DELETED) {\n            className += ' post--hide-controls';\n        }\n\n        if (this.props.highlight) {\n            className += ' post--highlight';\n        }\n\n        let rootUser = '';\n        if (this.state.sameRoot) {\n            rootUser = 'same--root';\n        } else {\n            rootUser = 'other--root';\n        }\n\n        let currentUserCss = '';\n        if (this.props.currentUser.id === post.user_id && !fromWebhook && !isSystemMessage) {\n            currentUserCss = 'current--user';\n        }\n\n        let sameUserClass = '';\n        if (this.props.consecutivePostByUser) {\n            sameUserClass = 'same--user';\n        }\n\n        let postType = '';\n        if (post.root_id && post.root_id.length > 0) {\n            postType = 'post--comment';\n        } else if (this.props.replyCount > 0) {\n            postType = 'post--root';\n            sameUserClass = '';\n            rootUser = '';\n        }\n\n        if (isSystemMessage) {\n            className += ' post--system';\n            sameUserClass = '';\n            currentUserCss = '';\n            postType = '';\n            rootUser = '';\n        }\n\n        if (fromAutoResponder) {\n            postType = 'post--comment same--root';\n        }\n\n        if (this.props.compactDisplay) {\n            className += ' post--compact';\n        }\n\n        if (this.state.dropdownOpened) {\n            className += ' post--hovered';\n        }\n\n        if (post.is_pinned) {\n            className += ' post--pinned';\n        }\n\n        return className + ' ' + sameUserClass + ' ' + rootUser + ' ' + postType + ' ' + currentUserCss;\n    }\n\n    getRef = (node) => {\n        this.domNode = node;\n    }\n\n    setHover = () => {\n        this.setState({hover: true});\n    }\n\n    unsetHover = () => {\n        this.setState({hover: false});\n    }\n\n    render() {\n        const {post} = this.props;\n        if (!post.id) {\n            return null;\n        }\n\n        const isSystemMessage = PostUtils.isSystemMessage(post);\n        const fromAutoResponder = PostUtils.fromAutoResponder(post);\n        const fromWebhook = post && post.props && post.props.from_webhook === 'true';\n\n        let profilePic;\n        const hideProfilePicture = this.state.sameRoot && this.props.consecutivePostByUser && (!post.root_id && this.props.replyCount === 0);\n        if (!hideProfilePicture) {\n            profilePic = (\n                <PostProfilePicture\n                    compactDisplay={this.props.compactDisplay}\n                    post={post}\n                    status={this.props.status}\n                    user={this.props.user}\n                />\n            );\n\n            if (fromAutoResponder) {\n                profilePic = (\n                    <span className='auto-responder'>\n                        {profilePic}\n                    </span>\n                );\n            }\n        }\n\n        let centerClass = '';\n        if (this.props.center) {\n            centerClass = 'center';\n        }\n\n        return (\n            <div\n                ref={this.getRef}\n                id={'post_' + post.id}\n                className={this.getClassName(post, isSystemMessage, fromWebhook, fromAutoResponder)}\n                onMouseOver={this.setHover}\n                onMouseLeave={this.unsetHover}\n                onTouchStart={this.setHover}\n            >\n                <div className={'post__content ' + centerClass}>\n                    <div className='post__img'>\n                        {profilePic}\n                    </div>\n                    <div>\n                        <PostHeader\n                            post={post}\n                            handleCommentClick={this.handleCommentClick}\n                            handleDropdownOpened={this.handleDropdownOpened}\n                            user={this.props.user}\n                            currentUser={this.props.currentUser}\n                            compactDisplay={this.props.compactDisplay}\n                            status={this.props.status}\n                            lastPostCount={this.props.lastPostCount}\n                            isFirstReply={this.props.isFirstReply}\n                            replyCount={this.props.replyCount}\n                            showTimeWithoutHover={!hideProfilePicture}\n                            getPostList={this.props.getPostList}\n                            hover={this.state.hover}\n                        />\n                        <PostBody\n                            post={post}\n                            handleCommentClick={this.handleCommentClick}\n                            compactDisplay={this.props.compactDisplay}\n                            lastPostCount={this.props.lastPostCount}\n                            isCommentMention={this.props.isCommentMention}\n                            isFirstReply={this.props.isFirstReply}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getPost} from 'mattermost-redux/selectors/entities/posts';\nimport {get} from 'mattermost-redux/selectors/entities/preferences';\nimport {getCurrentUser, getStatusForUserId, getUser} from 'mattermost-redux/selectors/entities/users';\n\nimport {Preferences} from 'utils/constants.jsx';\n\nimport Post from './post.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const detailedPost = ownProps.post || {};\n\n    return {\n        post: getPost(state, detailedPost.id),\n        lastPostCount: ownProps.lastPostCount,\n        user: getUser(state, detailedPost.user_id),\n        status: getStatusForUserId(state, detailedPost.user_id),\n        currentUser: getCurrentUser(state),\n        isFirstReply: Boolean(detailedPost.isFirstReply && detailedPost.commentedOnPost),\n        highlight: detailedPost.highlight,\n        consecutivePostByUser: detailedPost.consecutivePostByUser,\n        previousPostIsComment: detailedPost.previousPostIsComment,\n        replyCount: detailedPost.replyCount,\n        isCommentMention: detailedPost.isCommentMention,\n        center: get(state, Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.CHANNEL_DISPLAY_MODE, Preferences.CHANNEL_DISPLAY_MODE_DEFAULT) === Preferences.CHANNEL_DISPLAY_MODE_CENTERED,\n        compactDisplay: get(state, Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.MESSAGE_DISPLAY, Preferences.MESSAGE_DISPLAY_DEFAULT) === Preferences.MESSAGE_DISPLAY_COMPACT,\n    };\n}\n\nexport default connect(mapStateToProps)(Post);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class ScrollToBottomIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    id='Layer_1'\n                    x='0px'\n                    y='0px'\n                    viewBox='-239 239 21 23'\n                    style={style}\n                    role='icon'\n                    aria-label={localizeMessage('generic_icons.arrow.down', 'Down Arrow Icon')}\n                >\n                    <path d='M-239,241.4l2.4-2.4l8.1,8.2l8.1-8.2l2.4,2.4l-10.5,10.6L-239,241.4z M-228.5,257.2l8.1-8.2l2.4,2.4l-10.5,10.6l-10.5-10.6 l2.4-2.4L-228.5,257.2z'/>\n                </svg>\n            </span>\n        );\n    }\n}\n\nconst style = {\n    enableBackground: 'new -239 239 21 23',\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport ScrollToBottomIcon from 'components/svg/scroll_to_bottom_icon';\n\nexport default class ScrollToBottomArrows extends React.PureComponent {\n    static propTypes = {\n        isScrolling: PropTypes.bool.isRequired,\n        atBottom: PropTypes.bool.isRequired,\n        onClick: PropTypes.func.isRequired,\n    };\n\n    render() {\n        // only show on mobile\n        if ($(window).width() > 768) {\n            return null;\n        }\n\n        let className = 'post-list__arrows';\n        if (this.props.isScrolling && !this.props.atBottom) {\n            className += ' scrolling';\n        }\n\n        return (\n            <div\n                className={className}\n                onClick={this.props.onClick}\n            >\n                <ScrollToBottomIcon/>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedDate, FormattedMessage} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport ChannelInviteModal from 'components/channel_invite_modal';\nimport EditChannelHeaderModal from 'components/edit_channel_header_modal';\nimport ProfilePicture from 'components/profile_picture.jsx';\nimport ToggleModalButton from 'components/toggle_modal_button.jsx';\nimport UserProfile from 'components/user_profile.jsx';\nimport ChannelPermissionGate from 'components/permissions_gates/channel_permission_gate';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport {getMonthLong} from 'utils/i18n.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class ChannelIntroMessage extends React.PureComponent {\n    static propTypes = {\n        channel: PropTypes.object.isRequired,\n        fullWidth: PropTypes.bool.isRequired,\n        locale: PropTypes.string.isRequired,\n        channelProfiles: PropTypes.array.isRequired,\n        enableUserCreation: PropTypes.bool,\n        isReadOnly: PropTypes.bool,\n    };\n\n    render() {\n        const {\n            channel,\n            fullWidth,\n            locale,\n            enableUserCreation,\n            isReadOnly,\n            channelProfiles,\n        } = this.props;\n\n        let centeredIntro = '';\n        if (!fullWidth) {\n            centeredIntro = 'channel-intro--centered';\n        }\n\n        if (channel.type === Constants.DM_CHANNEL) {\n            return createDMIntroMessage(channel, centeredIntro);\n        } else if (channel.type === Constants.GM_CHANNEL) {\n            return createGMIntroMessage(channel, centeredIntro, channelProfiles);\n        } else if (channel.name === Constants.DEFAULT_CHANNEL) {\n            return createDefaultIntroMessage(channel, centeredIntro, enableUserCreation, isReadOnly);\n        } else if (channel.name === Constants.OFFTOPIC_CHANNEL) {\n            return createOffTopicIntroMessage(channel, centeredIntro);\n        } else if (channel.type === Constants.OPEN_CHANNEL || channel.type === Constants.PRIVATE_CHANNEL) {\n            return createStandardIntroMessage(channel, centeredIntro, locale);\n        }\n        return null;\n    }\n}\n\nfunction createGMIntroMessage(channel, centeredIntro, profiles) {\n    const channelIntroId = 'channelIntro';\n\n    if (profiles.length > 0) {\n        const pictures = [];\n        let names = '';\n        for (let i = 0; i < profiles.length; i++) {\n            const profile = profiles[i];\n\n            pictures.push(\n                <ProfilePicture\n                    key={'introprofilepicture' + profile.id}\n                    src={Utils.imageURLForUser(profile)}\n                    width='50'\n                    height='50'\n                    user={profile}\n                />\n            );\n\n            if (i === profiles.length - 1) {\n                names += Utils.getDisplayNameByUser(profile);\n            } else if (i === profiles.length - 2) {\n                names += Utils.getDisplayNameByUser(profile) + ' and ';\n            } else {\n                names += Utils.getDisplayNameByUser(profile) + ', ';\n            }\n        }\n\n        return (\n            <div\n                id={channelIntroId}\n                className={'channel-intro ' + centeredIntro}\n            >\n                <div className='post-profile-img__container channel-intro-img'>\n                    {pictures}\n                </div>\n                <p className='channel-intro-text'>\n                    <FormattedMarkdownMessage\n                        id='intro_messages.GM'\n                        defaultMessage='This is the start of your group message history with {names}.\\nMessages and files shared here are not shown to people outside this area.'\n                        values={{\n                            names,\n                        }}\n                    />\n                </p>\n                {createSetHeaderButton(channel)}\n            </div>\n        );\n    }\n\n    return (\n        <div\n            id={channelIntroId}\n            className={'channel-intro ' + centeredIntro}\n        >\n            <p className='channel-intro-text'>\n                <FormattedMessage\n                    id='intro_messages.group_message'\n                    defaultMessage='This is the start of your group message history with these teammates. Messages and files shared here are not shown to people outside this area.'\n                />\n            </p>\n        </div>\n    );\n}\n\nfunction createDMIntroMessage(channel, centeredIntro) {\n    var teammate = Utils.getDirectTeammate(channel.id);\n    const channelIntroId = 'channelIntro';\n\n    if (teammate) {\n        var teammateName = teammate.username;\n        if (teammate.nickname.length > 0) {\n            teammateName = teammate.nickname;\n        }\n\n        return (\n            <div\n                id={channelIntroId}\n                className={'channel-intro ' + centeredIntro}\n            >\n                <div className='post-profile-img__container channel-intro-img'>\n                    <ProfilePicture\n                        src={Utils.imageURLForUser(teammate)}\n                        width='50'\n                        height='50'\n                        user={teammate}\n                        hasMention={true}\n                    />\n                </div>\n                <div className='channel-intro-profile'>\n                    <strong>\n                        <UserProfile\n                            user={teammate}\n                            disablePopover={false}\n                            hasMention={true}\n                        />\n                    </strong>\n                </div>\n                <p className='channel-intro-text'>\n                    <FormattedMarkdownMessage\n                        id='intro_messages.DM'\n                        defaultMessage='This is the start of your direct message history with {teammate}.\\nDirect messages and files shared here are not shown to people outside this area.'\n                        values={{\n                            teammate: teammateName,\n                        }}\n                    />\n                </p>\n                {createSetHeaderButton(channel)}\n            </div>\n        );\n    }\n\n    return (\n        <div\n            id={channelIntroId}\n            className={'channel-intro ' + centeredIntro}\n        >\n            <p className='channel-intro-text'>\n                <FormattedMessage\n                    id='intro_messages.teammate'\n                    defaultMessage='This is the start of your direct message history with this teammate. Direct messages and files shared here are not shown to people outside this area.'\n                />\n            </p>\n        </div>\n    );\n}\n\nfunction createOffTopicIntroMessage(channel, centeredIntro) {\n    var uiType = (\n        <FormattedMessage\n            id='intro_messages.channel'\n            defaultMessage='channel'\n        />\n    );\n\n    const isPrivate = channel.type === Constants.PRIVATE_CHANNEL;\n    const children = createSetHeaderButton(channel);\n    let setHeaderButton = null;\n    if (children) {\n        setHeaderButton = (\n            <ChannelPermissionGate\n                teamId={channel.team_id}\n                channelId={channel.id}\n                permissions={[isPrivate ? Permissions.MANAGE_PRIVATE_CHANNEL_PROPERTIES : Permissions.MANAGE_PUBLIC_CHANNEL_PROPERTIES]}\n            >\n                {children}\n            </ChannelPermissionGate>\n        );\n    }\n\n    const channelInviteButton = createInviteChannelMemberButton(channel, uiType);\n\n    return (\n        <div\n            id='channelIntro'\n            className={'channel-intro ' + centeredIntro}\n        >\n            <h4 className='channel-intro__title'>\n                <FormattedMessage\n                    id='intro_messages.beginning'\n                    defaultMessage='Beginning of {name}'\n                    values={{\n                        name: channel.display_name,\n                    }}\n                />\n            </h4>\n            <p className='channel-intro__content'>\n                <FormattedMessage\n                    id='intro_messages.offTopic'\n                    defaultMessage='This is the start of {display_name}, a channel for non-work-related conversations.'\n                    values={{\n                        display_name: channel.display_name,\n                    }}\n                />\n            </p>\n            {channelInviteButton}\n            {setHeaderButton}\n        </div>\n    );\n}\n\nexport function createDefaultIntroMessage(channel, centeredIntro, enableUserCreation, isReadOnly) {\n    let teamInviteLink = null;\n\n    if (!isReadOnly && enableUserCreation) {\n        teamInviteLink = (\n            <TeamPermissionGate\n                teamId={channel.team_id}\n                permissions={[Permissions.INVITE_USER]}\n            >\n                <TeamPermissionGate\n                    teamId={channel.team_id}\n                    permissions={[Permissions.ADD_USER_TO_TEAM]}\n                >\n                    <span\n                        className='intro-links color--link cursor--pointer'\n                        onClick={GlobalActions.showGetTeamInviteLinkModal}\n                    >\n                        <i\n                            className='fa fa-user-plus'\n                            title={Utils.localizeMessage('generic_icons.add', 'Add Icon')}\n                        />\n                        <FormattedMessage\n                            id='intro_messages.inviteOthers'\n                            defaultMessage='Invite others to this team'\n                        />\n                    </span>\n                </TeamPermissionGate>\n            </TeamPermissionGate>\n        );\n    }\n\n    const isPrivate = channel.type === Constants.PRIVATE_CHANNEL;\n\n    let setHeaderButton = null;\n    if (!isReadOnly) {\n        const children = createSetHeaderButton(channel);\n        if (children) {\n            setHeaderButton = (\n                <ChannelPermissionGate\n                    teamId={channel.team_id}\n                    channelId={channel.id}\n                    permissions={[isPrivate ? Permissions.MANAGE_PRIVATE_CHANNEL_PROPERTIES : Permissions.MANAGE_PUBLIC_CHANNEL_PROPERTIES]}\n                >\n                    {children}\n                </ChannelPermissionGate>\n            );\n        }\n    }\n\n    return (\n        <div\n            id='channelIntro'\n            className={'channel-intro ' + centeredIntro}\n        >\n            <h4 className='channel-intro__title'>\n                <FormattedMessage\n                    id='intro_messages.beginning'\n                    defaultMessage='Beginning of {name}'\n                    values={{\n                        name: channel.display_name,\n                    }}\n                />\n            </h4>\n            <p className='channel-intro__content'>\n                {!isReadOnly &&\n                    <FormattedMarkdownMessage\n                        id='intro_messages.default'\n                        defaultMessage='**Welcome to {display_name}!**\\n \\nPost messages here that you want everyone to see. Everyone automatically becomes a permanent member of this channel when they join the team.'\n                        values={{\n                            display_name: channel.display_name,\n                        }}\n                    />\n                }\n                {isReadOnly &&\n                    <FormattedMarkdownMessage\n                        id='intro_messages.readonly.default'\n                        defaultMessage='**Welcome to {display_name}!**\\n \\nMessages can only be posted by system admins. Everyone automatically becomes a permanent member of this channel when they join the team.'\n                        values={{\n                            display_name: channel.display_name,\n                        }}\n                    />\n                }\n            </p>\n            {teamInviteLink}\n            {setHeaderButton}\n            <br/>\n        </div>\n    );\n}\n\nfunction createStandardIntroMessage(channel, centeredIntro, locale) {\n    var uiName = channel.display_name;\n    var creatorName = Utils.getDisplayNameByUserId(channel.creator_id);\n    var uiType;\n    var memberMessage;\n    const channelIsArchived = channel.delete_at !== 0;\n\n    if (channelIsArchived) {\n        memberMessage = '';\n    } else if (channel.type === Constants.PRIVATE_CHANNEL) {\n        uiType = (\n            <FormattedMessage\n                id='intro_messages.group'\n                defaultMessage='private channel'\n            />\n        );\n        memberMessage = (\n            <FormattedMessage\n                id='intro_messages.onlyInvited'\n                defaultMessage=' Only invited members can see this private channel.'\n            />\n        );\n    } else {\n        uiType = (\n            <FormattedMessage\n                id='intro_messages.channel'\n                defaultMessage='channel'\n            />\n        );\n        memberMessage = (\n            <FormattedMessage\n                id='intro_messages.anyMember'\n                defaultMessage=' Any member can join and read this channel.'\n            />\n        );\n    }\n\n    const date = (\n        <FormattedDate\n            value={channel.create_at}\n            month={getMonthLong(locale)}\n            day='2-digit'\n            year='numeric'\n        />\n    );\n\n    var createMessage;\n    if (creatorName === '') {\n        createMessage = (\n            <FormattedMessage\n                id='intro_messages.noCreator'\n                defaultMessage='This is the start of the {name} {type}, created on {date}.'\n                values={{\n                    name: (uiName),\n                    type: (uiType),\n                    date,\n                }}\n            />\n        );\n    } else {\n        createMessage = (\n            <span>\n                <FormattedMessage\n                    id='intro_messages.creator'\n                    defaultMessage='This is the start of the {name} {type}, created by {creator} on {date}.'\n                    values={{\n                        name: (uiName),\n                        type: (uiType),\n                        creator: (creatorName),\n                        date,\n                    }}\n                />\n            </span>\n        );\n    }\n\n    var purposeMessage = '';\n    if (channel.purpose && channel.purpose !== '') {\n        purposeMessage = (\n            <span>\n                <FormattedMessage\n                    id='intro_messages.purpose'\n                    defaultMessage=\" This {type}'s purpose is: {purpose}\"\n                    values={{\n                        purpose: channel.purpose,\n                        type: (uiType),\n                    }}\n                />\n            </span>\n        );\n    }\n\n    const isPrivate = channel.type === Constants.PRIVATE_CHANNEL;\n    let setHeaderButton = null;\n    const children = createSetHeaderButton(channel);\n    if (children) {\n        setHeaderButton = (\n            <ChannelPermissionGate\n                teamId={channel.team_id}\n                channelId={channel.id}\n                permissions={[isPrivate ? Permissions.MANAGE_PRIVATE_CHANNEL_PROPERTIES : Permissions.MANAGE_PUBLIC_CHANNEL_PROPERTIES]}\n            >\n                {children}\n            </ChannelPermissionGate>\n        );\n    }\n\n    const channelInviteButton = createInviteChannelMemberButton(channel, uiType);\n\n    return (\n        <div\n            id='channelIntro'\n            className={'channel-intro ' + centeredIntro}\n        >\n            <h4 className='channel-intro__title'>\n                <FormattedMessage\n                    id='intro_messages.beginning'\n                    defaultMessage='Beginning of {name}'\n                    values={{\n                        name: (uiName),\n                    }}\n                />\n            </h4>\n            <p className='channel-intro__content'>\n                {createMessage}\n                {memberMessage}\n                {purposeMessage}\n                <br/>\n            </p>\n            {channelInviteButton}\n            {setHeaderButton}\n        </div>\n    );\n}\n\nfunction createInviteChannelMemberButton(channel, uiType) {\n    const channelIsArchived = channel.delete_at !== 0;\n    if (channelIsArchived) {\n        return null;\n    }\n    const isPrivate = channel.type === Constants.PRIVATE_CHANNEL;\n    return (\n        <ChannelPermissionGate\n            channelId={channel.id}\n            teamId={channel.team_id}\n            permissions={[isPrivate ? Permissions.MANAGE_PRIVATE_CHANNEL_MEMBERS : Permissions.MANAGE_PUBLIC_CHANNEL_MEMBERS]}\n        >\n            <ToggleModalButton\n                className='intro-links color--link'\n                dialogType={ChannelInviteModal}\n                dialogProps={{channel}}\n            >\n                <i\n                    className='fa fa-user-plus'\n                    title={Utils.localizeMessage('generic_icons.add', 'Add Icon')}\n                />\n                <FormattedMessage\n                    id='intro_messages.invite'\n                    defaultMessage='Invite others to this {type}'\n                    values={{\n                        type: (uiType),\n                    }}\n                />\n            </ToggleModalButton>\n        </ChannelPermissionGate>\n    );\n}\n\nfunction createSetHeaderButton(channel) {\n    const channelIsArchived = channel.delete_at !== 0;\n    if (channelIsArchived) {\n        return null;\n    }\n    return (\n        <ToggleModalButton\n            className='intro-links color--link'\n            dialogType={EditChannelHeaderModal}\n            dialogProps={{channel}}\n        >\n            <i\n                className='fa fa-pencil'\n                title={Utils.localizeMessage('generic_icons.edit', 'Edit Icon')}\n\n            />\n            <FormattedMessage\n                id='intro_messages.setHeader'\n                defaultMessage='Set a Header'\n            />\n        </ToggleModalButton>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {isCurrentChannelReadOnly} from 'mattermost-redux/selectors/entities/channels';\nimport {getProfilesInCurrentChannel} from 'mattermost-redux/selectors/entities/users';\n\nimport {getCurrentLocale} from 'selectors/i18n';\n\nimport ChannelIntroMessage from './channel_intro_message.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enableUserCreation = config.EnableUserCreation === 'true';\n    const isReadOnly = isCurrentChannelReadOnly(state);\n\n    return {\n        locale: getCurrentLocale(state),\n        channelProfiles: getProfilesInCurrentChannel(state),\n        enableUserCreation,\n        isReadOnly,\n    };\n}\n\nexport default connect(mapStateToProps)(ChannelIntroMessage);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {debounce} from 'mattermost-redux/actions/helpers';\nimport {isUserActivityPost} from 'mattermost-redux/utils/post_utils';\n\nimport Constants, {PostTypes} from 'utils/constants.jsx';\nimport DelayedAction from 'utils/delayed_action.jsx';\nimport EventTypes from 'utils/event_types.jsx';\nimport GlobalEventEmitter from 'utils/global_event_emitter.jsx';\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport {isFromWebhook} from 'utils/post_utils.jsx';\n\nimport LoadingScreen from 'components/loading_screen.jsx';\nimport DateSeparator from 'components/post_view/date_separator.jsx';\n\nimport FloatingTimestamp from './floating_timestamp.jsx';\nimport NewMessageIndicator from './new_message_indicator.jsx';\nimport Post from './post';\nimport ScrollToBottomArrows from './scroll_to_bottom_arrows.jsx';\nimport CreateChannelIntroMessage from './channel_intro_message';\n\nconst CLOSE_TO_BOTTOM_SCROLL_MARGIN = 10;\nconst POSTS_PER_PAGE = Constants.POST_CHUNK_SIZE / 2;\nconst MAX_EXTRA_PAGES_LOADED = 10;\n\nexport default class PostList extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Array of posts in the channel, ordered from oldest to newest\n         */\n        posts: PropTypes.array,\n\n        /**\n         * The number of posts that should be rendered\n         */\n        postVisibility: PropTypes.number,\n\n        /**\n         * The channel the posts are in\n         */\n        channel: PropTypes.object.isRequired,\n\n        /**\n         * The last time the channel was viewed, sets the new message separator\n         */\n        lastViewedAt: PropTypes.number,\n\n        /**\n         * Set if more posts are being loaded\n         */\n        loadingPosts: PropTypes.bool,\n\n        /**\n         * The user id of the logged in user\n         */\n        currentUserId: PropTypes.string,\n\n        /**\n         * Set to focus this post\n         */\n        focusedPostId: PropTypes.string,\n\n        /**\n         * Whether to display the channel intro at full width\n         */\n        fullWidth: PropTypes.bool,\n\n        actions: PropTypes.shape({\n\n            /**\n             * Function to get posts in the channel\n             */\n            getPosts: PropTypes.func.isRequired,\n\n            /**\n             * Function to get posts in the channel older than the focused post\n             */\n            getPostsBefore: PropTypes.func.isRequired,\n\n            /**\n             * Function to get posts in the channel newer than the focused post\n             */\n            getPostsAfter: PropTypes.func.isRequired,\n\n            /**\n             * Function to get the post thread for the focused post\n             */\n            getPostThread: PropTypes.func.isRequired,\n\n            /**\n             * Function to increase the number of posts being rendered\n             */\n            increasePostVisibility: PropTypes.func.isRequired,\n\n            /**\n             * Function to check and set if app is in mobile view\n             */\n            checkAndSetMobileView: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.scrollStopAction = new DelayedAction(this.handleScrollStop);\n\n        this.previousScrollTop = Number.MAX_SAFE_INTEGER;\n        this.previousScrollHeight = 0;\n        this.previousClientHeight = 0;\n        this.atBottom = false;\n\n        this.extraPagesLoaded = 0;\n\n        this.state = {\n            atEnd: false,\n            unViewedCount: 0,\n            isDoingInitialLoad: true,\n            isScrolling: false,\n            lastViewed: props.lastViewedAt,\n        };\n    }\n\n    componentDidMount() {\n        this.loadPosts(this.props.channel.id, this.props.focusedPostId);\n        this.props.actions.checkAndSetMobileView();\n        GlobalEventEmitter.addListener(EventTypes.POST_LIST_SCROLL_CHANGE, this.handleResize);\n\n        window.addEventListener('resize', this.handleWindowResize);\n\n        this.initialScroll();\n    }\n\n    componentWillUnmount() {\n        GlobalEventEmitter.removeListener(EventTypes.POST_LIST_SCROLL_CHANGE, this.handleResize);\n        window.removeEventListener('resize', this.handleWindowResize);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        // Focusing on a new post so load posts around it\n        if (nextProps.focusedPostId && this.props.focusedPostId !== nextProps.focusedPostId) {\n            this.hasScrolledToFocusedPost = false;\n            this.hasScrolledToNewMessageSeparator = false;\n            this.setState({atEnd: false, isDoingInitialLoad: !nextProps.posts});\n            this.loadPosts(nextProps.channel.id, nextProps.focusedPostId);\n            return;\n        }\n\n        const channel = this.props.channel || {};\n        const nextChannel = nextProps.channel || {};\n\n        if (nextProps.focusedPostId == null) {\n            // Channel changed so load posts for new channel\n            if (channel.id !== nextChannel.id) {\n                this.hasScrolled = false;\n                this.hasScrolledToFocusedPost = false;\n                this.hasScrolledToNewMessageSeparator = false;\n                this.atBottom = false;\n\n                this.extraPagesLoaded = 0;\n\n                this.setState({atEnd: false, lastViewed: nextProps.lastViewedAt, isDoingInitialLoad: !nextProps.posts, unViewedCount: 0});\n\n                if (nextChannel.id) {\n                    this.loadPosts(nextChannel.id);\n                }\n            }\n        }\n    }\n\n    UNSAFE_componentWillUpdate() { // eslint-disable-line camelcase\n        if (this.refs.postlist) {\n            this.previousScrollTop = this.refs.postlist.scrollTop;\n            this.previousScrollHeight = this.refs.postlist.scrollHeight;\n            this.previousClientHeight = this.refs.postlist.clientHeight;\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        this.loadPostsToFillScreenIfNecessary();\n\n        // Do not update scrolling unless posts, visibility or intro message change\n        if (this.props.posts === prevProps.posts && this.props.postVisibility === prevProps.postVisibility && this.state.atEnd === prevState.atEnd) {\n            return;\n        }\n\n        const prevPosts = prevProps.posts || [];\n        const posts = this.props.posts || [];\n\n        if (this.props.focusedPostId == null) {\n            const hasNewPosts = (prevPosts.length === 0 && posts.length > 0) || (prevPosts.length > 0 && posts.length > 0 && prevPosts[0].id !== posts[0].id);\n\n            if (!this.checkBottom() && hasNewPosts) {\n                this.setUnreadsBelow(posts, this.props.currentUserId);\n            }\n        }\n\n        const postList = this.refs.postlist;\n        if (!postList) {\n            return;\n        }\n\n        // Scroll to focused post on first load\n        const focusedPost = this.refs[this.props.focusedPostId];\n        if (focusedPost && this.props.posts) {\n            if (!this.hasScrolledToFocusedPost) {\n                const element = ReactDOM.findDOMNode(focusedPost);\n                const rect = element.getBoundingClientRect();\n                const listHeight = postList.clientHeight / 2;\n                postList.scrollTop += rect.top - listHeight;\n                this.atBottom = this.checkBottom();\n            } else if (this.previousScrollHeight !== postList.scrollHeight && posts[0].id === prevPosts[0].id) {\n                postList.scrollTop = this.previousScrollTop + (postList.scrollHeight - this.previousScrollHeight);\n            }\n            return;\n        }\n\n        const didInitialScroll = this.initialScroll();\n\n        if (posts.length >= POSTS_PER_PAGE) {\n            this.hasScrolledToNewMessageSeparator = true;\n        }\n\n        if (didInitialScroll) {\n            return;\n        }\n\n        if (postList && prevPosts && posts && posts[0] && prevPosts[0]) {\n            // A new message was posted, so scroll to bottom if user\n            // was already scrolled close to bottom\n            let doScrollToBottom = false;\n            const postId = posts[0].id;\n            const prevPostId = prevPosts[0].id;\n            const pendingPostId = posts[0].pending_post_id;\n            if (postId !== prevPostId && pendingPostId !== prevPostId) {\n                // If already scrolled to bottom\n                if (this.atBottom) {\n                    doScrollToBottom = true;\n                }\n\n                // If new post was ephemeral\n                if (Utils.isPostEphemeral(posts[0])) {\n                    doScrollToBottom = true;\n                }\n            }\n\n            if (doScrollToBottom) {\n                this.atBottom = true;\n                postList.scrollTop = postList.scrollHeight;\n                return;\n            }\n\n            // New posts added at the top, maintain scroll position\n            if (this.previousScrollHeight !== postList.scrollHeight && posts[0].id === prevPosts[0].id) {\n                postList.scrollTop = this.previousScrollTop + (postList.scrollHeight - this.previousScrollHeight);\n            }\n        }\n    }\n\n    loadPostsToFillScreenIfNecessary = () => {\n        if (this.props.focusedPostId) {\n            return;\n        }\n\n        if (this.state.isDoingInitialLoad) {\n            // Should already be loading posts\n            return;\n        }\n\n        if (this.state.atEnd || !this.refs.postListContent || !this.refs.postlist) {\n            // No posts to load\n            return;\n        }\n\n        if (this.refs.postListContent.scrollHeight >= this.refs.postlist.clientHeight) {\n            // Screen is full\n            return;\n        }\n\n        if (this.extraPagesLoaded > MAX_EXTRA_PAGES_LOADED) {\n            // Prevent this from loading a lot of pages in a channel with only hidden messages\n            return;\n        }\n\n        this.doLoadPostsToFillScreen();\n    };\n\n    doLoadPostsToFillScreen = debounce(() => {\n        this.extraPagesLoaded += 1;\n\n        this.loadMorePosts();\n    }, 100);\n\n    // Scroll to new message indicator or bottom on first load. Returns true\n    // if we just scrolled for the initial load.\n    initialScroll = () => {\n        if (this.hasScrolledToNewMessageSeparator) {\n            // Already scrolled to new messages indicator\n            return false;\n        }\n\n        const postList = this.refs.postlist;\n        const posts = this.props.posts;\n        if (!postList || !posts) {\n            // Not able to do initial scroll yet\n            return false;\n        }\n\n        const messageSeparator = this.refs.newMessageSeparator;\n\n        // Scroll to new message indicator since we have unread posts and we can't show every new post in the screen\n        if (messageSeparator && (postList.scrollHeight - messageSeparator.offsetTop) > postList.clientHeight) {\n            messageSeparator.scrollIntoView();\n            this.setUnreadsBelow(posts, this.props.currentUserId);\n            return true;\n        }\n\n        // Scroll to bottom since we don't have unread posts or we can show every new post in the screen\n        postList.scrollTop = postList.scrollHeight;\n        this.atBottom = true;\n        return true;\n    }\n\n    setUnreadsBelow = (posts, currentUserId) => {\n        const unViewedCount = posts.reduce((count, post) => {\n            if (post.create_at > this.state.lastViewed &&\n                post.user_id !== currentUserId &&\n                post.state !== Constants.POST_DELETED) {\n                return count + 1;\n            }\n            return count;\n        }, 0);\n        this.setState({unViewedCount});\n    }\n\n    handleScrollStop = () => {\n        this.setState({\n            isScrolling: false,\n        });\n    }\n\n    checkBottom = () => {\n        if (!this.refs.postlist) {\n            return true;\n        }\n\n        // No scroll bar so we're at the bottom\n        if (this.refs.postlist.scrollHeight <= this.refs.postlist.clientHeight) {\n            return true;\n        }\n\n        return this.refs.postlist.clientHeight + this.refs.postlist.scrollTop >= this.refs.postlist.scrollHeight - CLOSE_TO_BOTTOM_SCROLL_MARGIN;\n    }\n\n    handleWindowResize = () => {\n        this.handleResize();\n    }\n\n    handleResize = (forceScrollToBottom) => {\n        const postList = this.refs.postlist;\n        const messageSeparator = this.refs.newMessageSeparator;\n        const doScrollToBottom = this.atBottom || forceScrollToBottom;\n\n        if (postList) {\n            if (doScrollToBottom) {\n                postList.scrollTop = postList.scrollHeight;\n            } else if (!this.hasScrolled && messageSeparator) {\n                const element = ReactDOM.findDOMNode(messageSeparator);\n                element.scrollIntoView();\n            }\n\n            this.previousScrollHeight = postList.scrollHeight;\n            this.previousScrollTop = postList.scrollTop;\n            this.previousClientHeight = postList.clientHeight;\n\n            this.atBottom = this.checkBottom();\n        }\n\n        this.props.actions.checkAndSetMobileView();\n    }\n\n    loadPosts = async (channelId, focusedPostId) => {\n        let posts;\n        if (focusedPostId) {\n            const getPostThreadAsync = this.props.actions.getPostThread(focusedPostId, false);\n            const getPostsBeforeAsync = this.props.actions.getPostsBefore(channelId, focusedPostId, 0, POSTS_PER_PAGE);\n            const getPostsAfterAsync = this.props.actions.getPostsAfter(channelId, focusedPostId, 0, POSTS_PER_PAGE);\n\n            const result = await getPostsBeforeAsync;\n            posts = result.data;\n            await getPostsAfterAsync;\n            await getPostThreadAsync;\n\n            this.hasScrolledToFocusedPost = true;\n        } else {\n            const result = await this.props.actions.getPosts(channelId, 0, POSTS_PER_PAGE);\n            posts = result.data;\n\n            if (!this.checkBottom()) {\n                const postsArray = posts.order.map((id) => posts.posts[id]);\n                this.setUnreadsBelow(postsArray, this.props.currentUserId);\n            }\n\n            this.hasScrolledToNewMessageSeparator = true;\n        }\n\n        this.setState({\n            isDoingInitialLoad: false,\n            atEnd: Boolean(posts && posts.order.length < POSTS_PER_PAGE),\n        });\n    }\n\n    loadMorePosts = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        this.props.actions.increasePostVisibility(this.props.channel.id, this.props.focusedPostId).then((moreToLoad) => {\n            this.setState({atEnd: !moreToLoad && this.props.posts.length < this.props.postVisibility});\n        });\n    }\n\n    handleScroll = () => {\n        // Only count as user scroll if we've already performed our first load scroll\n        this.hasScrolled = this.hasScrolledToNewMessageSeparator || this.hasScrolledToFocusedPost;\n        if (!this.refs.postlist) {\n            return;\n        }\n\n        this.previousScrollTop = this.refs.postlist.scrollTop;\n\n        if (this.refs.postlist.scrollHeight === this.previousScrollHeight) {\n            this.atBottom = this.checkBottom();\n        }\n\n        this.updateFloatingTimestamp();\n\n        if (!this.state.isScrolling) {\n            this.setState({\n                isScrolling: true,\n            });\n        }\n\n        if (this.checkBottom()) {\n            this.setState({\n                lastViewed: new Date().getTime(),\n                unViewedCount: 0,\n                isScrolling: false,\n            });\n        }\n\n        this.scrollStopAction.fireAfter(Constants.SCROLL_DELAY);\n    }\n\n    updateFloatingTimestamp = () => {\n        // skip this in non-mobile view since that's when the timestamp is visible\n        if (!Utils.isMobile()) {\n            return;\n        }\n\n        if (this.props.posts) {\n            // iterate through posts starting at the bottom since users are more likely to be viewing newer posts\n            for (let i = 0; i < this.props.posts.length; i++) {\n                const post = this.props.posts[i];\n                const element = this.refs[post.id];\n                const domNode = ReactDOM.findDOMNode(element);\n\n                if (!element || !domNode || domNode.offsetTop + domNode.clientHeight <= this.refs.postlist.scrollTop) {\n                    // this post is off the top of the screen so the last one is at the top of the screen\n                    let topPost;\n\n                    if (i > 0) {\n                        topPost = this.props.posts[i - 1];\n                    } else {\n                        // the first post we look at should always be on the screen, but handle that case anyway\n                        topPost = post;\n                    }\n\n                    if (!this.state.topPost || topPost.id !== this.state.topPost.id) {\n                        this.setState({\n                            topPost,\n                        });\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n\n    scrollToBottom = () => {\n        if (this.refs.postlist) {\n            this.refs.postlist.scrollTop = this.refs.postlist.scrollHeight;\n        }\n    }\n\n    createPosts = (posts) => {\n        const postCtls = [];\n        let previousPostDay = new Date(0);\n        const currentUserId = this.props.currentUserId;\n        const lastViewed = this.props.lastViewedAt || 0;\n\n        let renderedLastViewed = false;\n\n        for (let i = posts.length - 1; i >= 0; i--) {\n            const post = posts[i];\n\n            if (\n                post == null ||\n                post.type === PostTypes.EPHEMERAL_ADD_TO_CHANNEL ||\n                isUserActivityPost(post.type)\n            ) {\n                continue;\n            }\n\n            const postCtl = (\n                <Post\n                    ref={post.id}\n                    key={'post ' + (post.id || post.pending_post_id)}\n                    post={post}\n                    lastPostCount={(i >= 0 && i < Constants.TEST_ID_COUNT) ? i : -1}\n                    getPostList={this.getPostList}\n                />\n            );\n\n            const currentPostDay = Utils.getDateForUnixTicks(post.create_at);\n            if (currentPostDay.toDateString() !== previousPostDay.toDateString()) {\n                postCtls.push(\n                    <DateSeparator\n                        key={currentPostDay}\n                        date={currentPostDay}\n                    />\n                );\n            }\n\n            const isNotCurrentUser = post.user_id !== currentUserId || isFromWebhook(post);\n            if (isNotCurrentUser &&\n                    lastViewed !== 0 &&\n                    post.create_at > lastViewed &&\n                    !Utils.isPostEphemeral(post) &&\n                    !renderedLastViewed) {\n                renderedLastViewed = true;\n\n                // Temporary fix to solve ie11 rendering issue\n                let newSeparatorId = '';\n                if (!UserAgent.isInternetExplorer()) {\n                    newSeparatorId = 'new_message_' + post.id;\n                }\n                postCtls.push(\n                    <div\n                        id={newSeparatorId}\n                        key='unviewed'\n                        ref='newMessageSeparator'\n                        className='new-separator'\n                    >\n                        <hr\n                            className='separator__hr'\n                        />\n                        <div className='separator__text'>\n                            <FormattedMessage\n                                id='posts_view.newMsg'\n                                defaultMessage='New Messages'\n                            />\n                        </div>\n                    </div>\n                );\n            }\n\n            postCtls.push(postCtl);\n            previousPostDay = currentPostDay;\n        }\n\n        return postCtls;\n    }\n\n    getPostList = () => {\n        return this.refs.postlist;\n    }\n\n    render() {\n        const posts = this.props.posts || [];\n        const channel = this.props.channel;\n\n        if ((posts.length === 0 && this.state.isDoingInitialLoad) || channel == null) {\n            return (\n                <div id='post-list'>\n                    <LoadingScreen\n                        position='absolute'\n                        key='loading'\n                    />\n                </div>\n            );\n        }\n\n        let topRow;\n        if (this.state.atEnd) {\n            topRow = (\n                <CreateChannelIntroMessage\n                    channel={channel}\n                    fullWidth={this.props.fullWidth}\n                />\n            );\n        } else if (this.props.postVisibility >= Constants.MAX_POST_VISIBILITY) {\n            topRow = (\n                <div className='post-list__loading post-list__loading-search'>\n                    <FormattedMessage\n                        id='posts_view.maxLoaded'\n                        defaultMessage='Looking for a specific message? Try searching for it'\n                    />\n                </div>\n            );\n        } else if (this.state.isDoingInitialLoad) {\n            topRow = <LoadingScreen style={{height: '0px'}}/>;\n        } else {\n            topRow = (\n                <button\n                    ref='loadmoretop'\n                    className='more-messages-text theme style--none color--link'\n                    onClick={this.loadMorePosts}\n                >\n                    <FormattedMessage\n                        id='posts_view.loadMore'\n                        defaultMessage='Load more messages'\n                    />\n                </button>\n            );\n        }\n\n        const topPostCreateAt = this.state.topPost ? this.state.topPost.create_at : 0;\n\n        let postVisibility = this.props.postVisibility;\n\n        // In focus mode there's an extra (Constants.POST_CHUNK_SIZE / 2) posts to show\n        if (this.props.focusedPostId) {\n            postVisibility += Constants.POST_CHUNK_SIZE / 2;\n        }\n\n        return (\n            <div id='post-list'>\n                <FloatingTimestamp\n                    isScrolling={this.state.isScrolling}\n                    isMobile={Utils.isMobile()}\n                    createAt={topPostCreateAt}\n                />\n                <ScrollToBottomArrows\n                    isScrolling={this.state.isScrolling}\n                    atBottom={this.atBottom}\n                    onClick={this.scrollToBottom}\n                />\n                <NewMessageIndicator\n                    newMessages={this.state.unViewedCount}\n                    onClick={this.scrollToBottom}\n                />\n                <div\n                    ref='postlist'\n                    className='post-list-holder-by-time'\n                    key={'postlist-' + channel.id}\n                    onScroll={this.handleScroll}\n                >\n                    <div className='post-list__table'>\n                        <div\n                            id='postListContent'\n                            ref='postListContent'\n                            className='post-list__content'\n                        >\n                            {topRow}\n                            {this.createPosts(posts.slice(0, postVisibility))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getPosts, getPostsAfter, getPostsBefore, getPostThread} from 'mattermost-redux/actions/posts';\nimport {getChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {makeGetPostsAroundPost, makeGetPostsInChannel} from 'mattermost-redux/selectors/entities/posts';\nimport {get} from 'mattermost-redux/selectors/entities/preferences';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\n\nimport {increasePostVisibility} from 'actions/post_actions.jsx';\nimport {checkAndSetMobileView} from 'actions/views/channel';\nimport {Preferences} from 'utils/constants.jsx';\n\nimport PostList from './post_list.jsx';\n\nfunction makeMapStateToProps() {\n    const getPostsInChannel = makeGetPostsInChannel();\n    const getPostsAroundPost = makeGetPostsAroundPost();\n\n    return function mapStateToProps(state, ownProps) {\n        const postVisibility = state.views.channel.postVisibility[ownProps.channelId];\n\n        let posts;\n        if (ownProps.focusedPostId) {\n            posts = getPostsAroundPost(state, ownProps.focusedPostId, ownProps.channelId);\n        } else {\n            posts = getPostsInChannel(state, ownProps.channelId, postVisibility);\n        }\n\n        return {\n            channel: getChannel(state, ownProps.channelId) || {},\n            lastViewedAt: state.views.channel.lastChannelViewTime[ownProps.channelId],\n            posts,\n            postVisibility,\n            loadingPosts: state.views.channel.loadingPosts[ownProps.channelId],\n            focusedPostId: ownProps.focusedPostId,\n            currentUserId: getCurrentUserId(state),\n            fullWidth: get(state, Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.CHANNEL_DISPLAY_MODE, Preferences.CHANNEL_DISPLAY_MODE_DEFAULT) === Preferences.CHANNEL_DISPLAY_MODE_FULL_SCREEN,\n        };\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getPosts,\n            getPostsBefore,\n            getPostsAfter,\n            getPostThread,\n            increasePostVisibility,\n            checkAndSetMobileView,\n        }, dispatch),\n    };\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(PostList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport ChannelHeader from 'components/channel_header';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport PostView from 'components/post_view';\nimport {emitPostFocusEvent} from 'actions/global_actions.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class PermalinkView extends React.PureComponent {\n    static propTypes = {\n        channelId: PropTypes.string,\n        channelName: PropTypes.string,\n        channelIsArchived: PropTypes.bool,\n\n        /*\n         * Object from react-router\n         */\n        match: PropTypes.shape({\n            params: PropTypes.shape({\n                postid: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        returnTo: PropTypes.string.isRequired,\n        teamName: PropTypes.string,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {valid: false};\n    }\n\n    componentDidMount() {\n        this.doPermalinkEvent(this.props);\n        document.body.classList.add('app__body');\n    }\n\n    componentWillUnmount() {\n        document.body.classList.remove('app__body');\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.match.params.postid !== nextProps.match.params.postid) {\n            this.doPermalinkEvent(nextProps);\n        }\n    }\n\n    doPermalinkEvent = async (props) => {\n        this.setState({valid: false});\n        const postId = props.match.params.postid;\n        await emitPostFocusEvent(postId, this.props.returnTo);\n        this.setState({valid: true});\n    }\n\n    isStateValid = () => {\n        return this.state.valid && this.props.channelId && this.props.teamName;\n    }\n\n    render() {\n        const {\n            channelId,\n            channelName,\n            channelIsArchived,\n            match,\n            teamName,\n        } = this.props;\n\n        if (!this.isStateValid()) {\n            return (\n                <div\n                    id='app-content'\n                    className='app__content'\n                />\n            );\n        }\n\n        return (\n            <div\n                id='app-content'\n                className='app__content'\n            >\n                <ChannelHeader\n                    channelId={channelId}\n                />\n                <PostView\n                    channelId={channelId}\n                    focusedPostId={match.params.postid}\n                />\n                <div id='archive-link-home'>\n                    <Link\n                        to={'/' + teamName + '/channels/' + channelName}\n                    >\n                        {channelIsArchived &&\n                            <FormattedMarkdownMessage\n                                id='center_panel.permalink.archivedChannel'\n                                defaultMessage='You are viewing an **archived channel**. '\n                            />\n                        }\n                        <FormattedMessage\n                            id='center_panel.recent'\n                            defaultMessage='Click here to jump to recent messages. '\n                        />\n                        <i\n                            className='fa fa-arrow-down'\n                            title={localizeMessage('center_panel.recent.icon', 'Jump to recent messages Icon')}\n                        />\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getCurrentChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport PermalinkView from './permalink_view.jsx';\n\nfunction mapStateToProps(state) {\n    const team = getCurrentTeam(state);\n    const channel = getCurrentChannel(state);\n    let channelId = '';\n    let channelName = '';\n    let channelIsArchived;\n    if (channel) {\n        channelId = channel.id;\n        channelName = channel.name;\n        channelIsArchived = channel.delete_at !== 0;\n    }\n\n    let teamName = '';\n    if (team) {\n        teamName = team.name;\n    }\n\n    return {\n        channelId,\n        channelName,\n        teamName,\n        channelIsArchived,\n    };\n}\n\nexport default connect(mapStateToProps)(PermalinkView);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class NotifyCounts extends React.PureComponent {\n    static propTypes = {\n        mentionCount: PropTypes.number.isRequired,\n        messageCount: PropTypes.number.isRequired,\n    }\n    render() {\n        if (this.props.mentionCount) {\n            return <span className='badge badge-notify'>{this.props.mentionCount}</span>;\n        } else if (this.props.messageCount) {\n            return <span className='badge badge-notify'>{'•'}</span>;\n        }\n        return null;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getUnreadsInCurrentTeam} from 'mattermost-redux/selectors/entities/channels';\n\nimport NotifyCounts from './notify_counts.jsx';\n\nfunction mapStateToProps(state) {\n    const {mentionCount, messageCount} = getUnreadsInCurrentTeam(state);\n    return {\n        mentionCount,\n        messageCount,\n    };\n}\n\nexport default connect(mapStateToProps)(NotifyCounts);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {UserTypes} from 'mattermost-redux/action_types';\nimport {Client4} from 'mattermost-redux/client';\nimport {Preferences} from 'mattermost-redux/constants';\nimport {\n    getChannelsInCurrentTeam,\n    getDirectAndGroupChannels,\n    getSortedUnreadChannelIds,\n    makeGetChannel,\n} from 'mattermost-redux/selectors/entities/channels';\nimport {getMyChannelMemberships} from 'mattermost-redux/selectors/entities/common';\nimport {getBool} from 'mattermost-redux/selectors/entities/preferences';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {\n    getCurrentUserId,\n    getUserIdsInChannels,\n    getUser,\n    searchProfiles,\n} from 'mattermost-redux/selectors/entities/users';\nimport * as ChannelActions from 'mattermost-redux/actions/channels';\n\nimport {sortChannelsByTypeAndDisplayName} from 'mattermost-redux/utils/channel_utils';\n\nimport DraftIcon from 'components/svg/draft_icon';\nimport GlobeIcon from 'components/svg/globe_icon';\nimport LockIcon from 'components/svg/lock_icon';\nimport ArchiveIcon from 'components/svg/archive_icon';\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport {getPostDraft} from 'selectors/rhs';\nimport store from 'stores/redux_store.jsx';\nimport {ActionTypes, Constants, StoragePrefixes} from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport UserStore from 'stores/user_store.jsx';\n\nimport Provider from './provider.jsx';\nimport Suggestion from './suggestion.jsx';\n\nconst getState = store.getState;\n\nfunction getChannelDisplayName(channel) {\n    if (channel.type !== Constants.GM_CHANNEL) {\n        return channel.display_name;\n    }\n\n    const currentUser = UserStore.getCurrentUser();\n\n    if (currentUser) {\n        return channel.display_name.\n            split(',').\n            map((username) => username.trim()).\n            filter((username) => username !== currentUser.username).\n            join(', ');\n    }\n\n    return channel.display_name;\n}\n\nclass SwitchChannelSuggestion extends Suggestion {\n    static get propTypes() {\n        return {\n            ...super.propTypes,\n            channelMember: PropTypes.object,\n            hasDraft: PropTypes.bool,\n        };\n    }\n\n    render() {\n        const {item, isSelection} = this.props;\n        const channel = item.channel;\n        const channelIsArchived = channel.delete_at && channel.delete_at !== 0;\n\n        const member = this.props.channelMember;\n        let badge = null;\n        if (member) {\n            if (member.notify_props && member.mention_count > 0) {\n                badge = <span className='badge'>{member.mention_count}</span>;\n            }\n        }\n\n        let className = 'mentions__name';\n        if (isSelection) {\n            className += ' suggestion--selected';\n        }\n\n        let displayName = channel.display_name;\n        let icon = null;\n        if (channelIsArchived) {\n            icon = (\n                <ArchiveIcon className='icon icon__archive'/>\n            );\n        } else if (this.props.hasDraft) {\n            icon = (\n                <DraftIcon className='icon icon__draft icon--body'/>\n            );\n        } else if (channel.type === Constants.OPEN_CHANNEL) {\n            icon = (\n                <GlobeIcon className='icon icon__globe icon--body'/>\n            );\n        } else if (channel.type === Constants.PRIVATE_CHANNEL) {\n            icon = (\n                <LockIcon className='icon icon__lock icon--body'/>\n            );\n        } else if (channel.type === Constants.GM_CHANNEL) {\n            displayName = getChannelDisplayName(channel);\n            icon = <div className='status status--group'>{'G'}</div>;\n        } else {\n            icon = (\n                <div className='pull-left'>\n                    <img\n                        className='mention__image'\n                        src={Utils.imageURLForUser(channel.userId)}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div\n                onClick={this.handleClick}\n                className={className}\n                {...Suggestion.baseProps}\n            >\n                {icon}\n                {displayName}\n                {badge}\n            </div>\n        );\n    }\n}\n\nfunction mapStateToPropsForSwitchChannelSuggestion(state, ownProps) {\n    const channelId = ownProps.item && ownProps.item.channel ? ownProps.item.channel.id : '';\n    const draft = channelId ? getPostDraft(state, StoragePrefixes.DRAFT, channelId) : false;\n\n    return {\n        channelMember: getMyChannelMemberships(state)[channelId],\n        hasDraft: draft && Boolean(draft.message.trim() || draft.fileInfos.length || draft.uploadsInProgress.length),\n    };\n}\n\nconst ConnectedSwitchChannelSuggestion = connect(mapStateToPropsForSwitchChannelSuggestion)(SwitchChannelSuggestion);\n\nlet prefix = '';\n\nfunction quickSwitchSorter(wrappedA, wrappedB) {\n    const aIsArchived = wrappedA.channel.delete_at ? wrappedA.channel.delete_at !== 0 : false;\n    const bIsArchived = wrappedB.channel.delete_at ? wrappedB.channel.delete_at !== 0 : false;\n    if (aIsArchived && !bIsArchived) {\n        return 1;\n    } else if (!aIsArchived && bIsArchived) {\n        return -1;\n    } else if (wrappedA.type === Constants.MENTION_CHANNELS && wrappedB.type === Constants.MENTION_MORE_CHANNELS) {\n        return -1;\n    } else if (wrappedB.type === Constants.MENTION_CHANNELS && wrappedA.type === Constants.MENTION_MORE_CHANNELS) {\n        return 1;\n    }\n\n    if (wrappedA.deactivated && !wrappedB.deactivated) {\n        return 1;\n    } else if (wrappedB.deactivated && !wrappedA.deactivated) {\n        return -1;\n    }\n\n    const a = wrappedA.channel;\n    const b = wrappedB.channel;\n\n    let aDisplayName = getChannelDisplayName(a).toLowerCase();\n    let bDisplayName = getChannelDisplayName(b).toLowerCase();\n\n    if (a.type === Constants.DM_CHANNEL) {\n        aDisplayName = aDisplayName.substring(1);\n    }\n\n    if (b.type === Constants.DM_CHANNEL) {\n        bDisplayName = bDisplayName.substring(1);\n    }\n\n    const aStartsWith = aDisplayName.startsWith(prefix);\n    const bStartsWith = bDisplayName.startsWith(prefix);\n    if ((aStartsWith && bStartsWith) || (!aStartsWith && !bStartsWith)) {\n        //\n        // MM-12677 When this is migrated this needs to be fixed to pull the user's locale\n        //\n        return sortChannelsByTypeAndDisplayName('en', a, b);\n    } else if (aStartsWith) {\n        return -1;\n    }\n\n    return 1;\n}\n\nfunction makeChannelSearchFilter(channelPrefix) {\n    const channelPrefixLower = channelPrefix.toLowerCase();\n    const curState = getState();\n    const usersInChannels = getUserIdsInChannels(curState);\n    const userSearchStrings = {};\n\n    return (channel) => {\n        let searchString = channel.display_name;\n\n        if (channel.type === Constants.GM_CHANNEL || channel.type === Constants.DM_CHANNEL) {\n            const usersInChannel = usersInChannels[channel.id] || new Set([]);\n\n            // In case the channel is a DM and the profilesInChannel is not populated\n            if (!usersInChannel.length && channel.type === Constants.DM_CHANNEL) {\n                const userId = Utils.getUserIdFromChannelId(channel.name);\n                const user = getUser(curState, userId);\n                if (user) {\n                    usersInChannel.add(userId);\n                }\n            }\n\n            for (const userId of usersInChannel) {\n                let userString = userSearchStrings[userId];\n\n                if (!userString) {\n                    const user = getUser(curState, userId);\n                    if (!user) {\n                        continue;\n                    }\n                    const {nickname, username} = user;\n                    userString = `${nickname}${username}${Utils.getFullName(user)}`;\n                    userSearchStrings[userId] = userString;\n                }\n                searchString += userString;\n            }\n        }\n\n        return searchString.toLowerCase().includes(channelPrefixLower);\n    };\n}\n\nexport default class SwitchChannelProvider extends Provider {\n    handlePretextChanged(suggestionId, channelPrefix) {\n        if (channelPrefix) {\n            prefix = channelPrefix;\n            this.startNewRequest(suggestionId, channelPrefix);\n\n            // Dispatch suggestions for local data\n            const channels = getChannelsInCurrentTeam(getState()).concat(getDirectAndGroupChannels(getState()));\n            const users = Object.assign([], searchProfiles(getState(), channelPrefix, false));\n            this.formatChannelsAndDispatch(channelPrefix, suggestionId, channels, users, true);\n\n            // Fetch data from the server and dispatch\n            this.fetchUsersAndChannels(channelPrefix, suggestionId);\n        } else {\n            this.formatUnreadChannelsAndDispatch(suggestionId);\n        }\n\n        return true;\n    }\n\n    async fetchUsersAndChannels(channelPrefix, suggestionId) {\n        const state = getState();\n        const teamId = getCurrentTeamId(state);\n        if (!teamId) {\n            return;\n        }\n\n        const config = getConfig(state);\n        let usersAsync;\n        if (config.RestrictDirectMessage === 'team') {\n            usersAsync = Client4.autocompleteUsers(channelPrefix, teamId, '');\n        } else {\n            usersAsync = Client4.autocompleteUsers(channelPrefix, '', '');\n        }\n\n        const channelsAsync = ChannelActions.searchChannels(teamId, channelPrefix)(store.dispatch, store.getState);\n\n        let usersFromServer = [];\n        let channelsFromServer = [];\n        try {\n            usersFromServer = await usersAsync;\n            const {data} = await channelsAsync;\n            channelsFromServer = data;\n        } catch (err) {\n            AppDispatcher.handleServerAction({\n                type: ActionTypes.RECEIVED_ERROR,\n                err,\n            });\n        }\n\n        if (this.shouldCancelDispatch(channelPrefix)) {\n            return;\n        }\n\n        const users = Object.assign([], searchProfiles(state, channelPrefix, false)).concat(usersFromServer.users);\n        const currentUserId = getCurrentUserId(state);\n        store.dispatch({\n            type: UserTypes.RECEIVED_PROFILES_LIST,\n            data: users.filter((user) => user.id !== currentUserId),\n        });\n\n        const channels = getChannelsInCurrentTeam(state).concat(getDirectAndGroupChannels(state)).concat(channelsFromServer);\n        this.formatChannelsAndDispatch(channelPrefix, suggestionId, channels, users);\n    }\n\n    userWrappedChannel(user, channel) {\n        let displayName = `@${user.username}`;\n\n        if ((user.first_name || user.last_name) && user.nickname) {\n            displayName += ` - ${Utils.getFullName(user)} (${user.nickname})`;\n        } else if (user.nickname) {\n            displayName += ` - (${user.nickname})`;\n        } else if (user.first_name || user.last_name) {\n            displayName += ` - ${Utils.getFullName(user)}`;\n        }\n\n        if (user.delete_at) {\n            displayName += ' - ' + Utils.localizeMessage('channel_switch_modal.deactivated', 'Deactivated');\n        }\n\n        return {\n            channel: {\n                display_name: displayName,\n                name: user.username,\n                id: channel ? channel.id : user.id,\n                userId: user.id,\n                update_at: user.update_at,\n                type: Constants.DM_CHANNEL,\n                last_picture_update: user.last_picture_update || 0,\n            },\n            name: user.username,\n            deactivated: user.delete_at,\n        };\n    }\n\n    formatChannelsAndDispatch(channelPrefix, suggestionId, allChannels, users, skipNotInChannel = false) {\n        const channels = [];\n\n        const members = getMyChannelMemberships(getState());\n\n        if (this.shouldCancelDispatch(channelPrefix)) {\n            return;\n        }\n\n        const completedChannels = {};\n\n        const channelFilter = makeChannelSearchFilter(channelPrefix);\n\n        const state = getState();\n        const config = getConfig(state);\n        const viewArchivedChannels = config.ExperimentalViewArchivedChannels === 'true';\n\n        for (const id of Object.keys(allChannels)) {\n            const channel = allChannels[id];\n\n            if (completedChannels[channel.id]) {\n                continue;\n            }\n\n            if (channelFilter(channel)) {\n                const newChannel = Object.assign({}, channel);\n                const channelIsArchived = channel.delete_at !== 0;\n\n                let wrappedChannel = {channel: newChannel, name: newChannel.name, deactivated: false};\n                if (!viewArchivedChannels && channelIsArchived) {\n                    continue;\n                } else if (channelIsArchived && members[channel.id]) {\n                    wrappedChannel.type = Constants.ARCHIVED_CHANNEL;\n                } else if (channelIsArchived && !members[channel.id]) {\n                    continue;\n                } else if (newChannel.type === Constants.GM_CHANNEL) {\n                    newChannel.name = getChannelDisplayName(newChannel);\n                    wrappedChannel.name = newChannel.name;\n                    const isGMVisible = getBool(getState(), Preferences.CATEGORY_GROUP_CHANNEL_SHOW, newChannel.id, false);\n                    if (isGMVisible) {\n                        wrappedChannel.type = Constants.MENTION_CHANNELS;\n                    } else {\n                        wrappedChannel.type = Constants.MENTION_MORE_CHANNELS;\n                        if (skipNotInChannel) {\n                            continue;\n                        }\n                    }\n                } else if (newChannel.type === Constants.DM_CHANNEL) {\n                    const userId = Utils.getUserIdFromChannelId(newChannel.name);\n                    const user = users.find((u) => u.id === userId);\n\n                    if (user) {\n                        completedChannels[user.id] = true;\n                        wrappedChannel = this.userWrappedChannel(\n                            user,\n                            newChannel\n                        );\n                        const isDMVisible = getBool(getState(), Preferences.CATEGORY_DIRECT_CHANNEL_SHOW, user.id, false);\n                        if (isDMVisible) {\n                            wrappedChannel.type = Constants.MENTION_CHANNELS;\n                        } else {\n                            wrappedChannel.type = Constants.MENTION_MORE_CHANNELS;\n                            if (skipNotInChannel) {\n                                continue;\n                            }\n                        }\n                    } else {\n                        continue;\n                    }\n                } else if (members[channel.id]) {\n                    wrappedChannel.type = Constants.MENTION_CHANNELS;\n                } else {\n                    wrappedChannel.type = Constants.MENTION_MORE_CHANNELS;\n                    if (skipNotInChannel || !newChannel.display_name.toLowerCase().startsWith(channelPrefix)) {\n                        continue;\n                    }\n                }\n\n                completedChannels[channel.id] = true;\n                channels.push(wrappedChannel);\n            }\n        }\n\n        for (let i = 0; i < users.length; i++) {\n            const user = users[i];\n\n            if (completedChannels[user.id]) {\n                continue;\n            }\n\n            const isDMVisible = getBool(getState(), Preferences.CATEGORY_DIRECT_CHANNEL_SHOW, user.id, false);\n\n            const wrappedChannel = this.userWrappedChannel(user);\n\n            if (isDMVisible) {\n                wrappedChannel.type = Constants.MENTION_CHANNELS;\n            } else {\n                wrappedChannel.type = Constants.MENTION_MORE_CHANNELS;\n                if (skipNotInChannel) {\n                    continue;\n                }\n            }\n\n            completedChannels[user.id] = true;\n            channels.push(wrappedChannel);\n        }\n\n        const channelNames = channels.\n            sort(quickSwitchSorter).\n            map((wrappedChannel) => wrappedChannel.channel.name);\n\n        if (skipNotInChannel) {\n            channels.push({\n                type: Constants.MENTION_MORE_CHANNELS,\n                loading: true,\n            });\n        }\n\n        setTimeout(() => {\n            AppDispatcher.handleServerAction({\n                type: ActionTypes.SUGGESTION_RECEIVED_SUGGESTIONS,\n                id: suggestionId,\n                matchedPretext: channelPrefix,\n                terms: channelNames,\n                items: channels,\n                component: ConnectedSwitchChannelSuggestion,\n            });\n        }, 0);\n    }\n\n    formatUnreadChannelsAndDispatch(suggestionId) {\n        const getChannel = makeGetChannel();\n\n        const unreadChannelIds = getSortedUnreadChannelIds(getState(), false);\n\n        const channels = [];\n        for (let i = 0; i < unreadChannelIds.length; i++) {\n            const channel = getChannel(getState(), {id: unreadChannelIds[i]}) || {};\n\n            let wrappedChannel = {channel, name: channel.name, deactivated: false};\n            if (channel.type === Constants.GM_CHANNEL) {\n                wrappedChannel.name = getChannelDisplayName(channel);\n            } else if (channel.type === Constants.DM_CHANNEL) {\n                const user = getUser(getState(), Utils.getUserIdFromChannelId(channel.name));\n\n                if (!user) {\n                    continue;\n                }\n\n                wrappedChannel = this.userWrappedChannel(\n                    user,\n                    channel\n                );\n            }\n            wrappedChannel.type = Constants.MENTION_UNREAD_CHANNELS;\n            channels.push(wrappedChannel);\n        }\n\n        const channelNames = channels.map((wrappedChannel) => wrappedChannel.channel.name);\n\n        setTimeout(() => {\n            AppDispatcher.handleServerAction({\n                type: ActionTypes.SUGGESTION_RECEIVED_SUGGESTIONS,\n                id: suggestionId,\n                matchedPretext: '',\n                terms: channelNames,\n                items: channels,\n                component: ConnectedSwitchChannelSuggestion,\n            });\n        }, 0);\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport * as Selectors from 'mattermost-redux/selectors/entities/teams';\n\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport {getCurrentLocale} from 'selectors/i18n';\nimport store from 'stores/redux_store.jsx';\nimport {ActionTypes} from 'utils/constants.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport Provider from './provider.jsx';\nimport Suggestion from './suggestion.jsx';\n\nconst getState = store.getState;\n\nclass SwitchTeamSuggestion extends Suggestion {\n    render() {\n        const {item, isSelection} = this.props;\n\n        let className = 'mentions__name';\n        if (isSelection) {\n            className += ' suggestion--selected';\n        }\n\n        return (\n            <div\n                onClick={this.handleClick}\n                className={className}\n                {...Suggestion.baseProps}\n            >\n                <div className='status'>\n                    <i\n                        className='fa fa-group'\n                        title={localizeMessage('general_tab.teamIcon', 'Team Icon')}\n                    />\n                </div>\n                {item.display_name}\n            </div>\n        );\n    }\n}\n\nlet prefix = '';\n\nfunction quickSwitchSorter(a, b) {\n    const aDisplayName = a.display_name.toLowerCase();\n    const bDisplayName = b.display_name.toLowerCase();\n    const aStartsWith = aDisplayName.startsWith(prefix);\n    const bStartsWith = bDisplayName.startsWith(prefix);\n\n    if (aStartsWith && bStartsWith) {\n        const locale = getCurrentLocale(getState());\n\n        if (aDisplayName !== bDisplayName) {\n            return aDisplayName.localeCompare(bDisplayName, locale, {numeric: true});\n        }\n\n        return a.name.localeCompare(b.name, locale, {numeric: true});\n    } else if (aStartsWith) {\n        return -1;\n    }\n\n    return 1;\n}\n\nexport default class SwitchTeamProvider extends Provider {\n    handlePretextChanged(suggestionId, teamPrefix) {\n        if (teamPrefix) {\n            prefix = teamPrefix;\n            this.startNewRequest(suggestionId, teamPrefix);\n\n            const allTeams = Selectors.getMyTeams(getState());\n\n            const teams = allTeams.filter((team) => {\n                return team.display_name.toLowerCase().indexOf(teamPrefix) !== -1 ||\n                    team.name.indexOf(teamPrefix) !== -1;\n            });\n\n            const teamNames = teams.\n                sort(quickSwitchSorter).\n                map((team) => team.name);\n\n            setTimeout(() => {\n                AppDispatcher.handleServerAction({\n                    type: ActionTypes.SUGGESTION_RECEIVED_SUGGESTIONS,\n                    id: suggestionId,\n                    matchedPretext: teamPrefix,\n                    terms: teamNames,\n                    items: teams,\n                    component: SwitchTeamSuggestion,\n                });\n            }, 0);\n\n            return true;\n        }\n\n        return false;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport {t} from 'utils/i18n';\nimport SuggestionBox from 'components/suggestion/suggestion_box.jsx';\nimport SuggestionList from 'components/suggestion/suggestion_list.jsx';\nimport SwitchChannelProvider from 'components/suggestion/switch_channel_provider.jsx';\nimport SwitchTeamProvider from 'components/suggestion/switch_team_provider.jsx';\n\nconst CHANNEL_MODE = 'channel';\nconst TEAM_MODE = 'team';\n\nexport default class QuickSwitchModal extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The mode to start in when showing the modal, either 'channel' or 'team'\n         */\n        initialMode: PropTypes.string.isRequired,\n\n        /**\n         * Set to show the modal\n         */\n        show: PropTypes.bool.isRequired,\n\n        /**\n         * The function called to hide the modal\n         */\n        onHide: PropTypes.func.isRequired,\n\n        /**\n         * Set to show team switcher\n         */\n        showTeamSwitcher: PropTypes.bool,\n\n        actions: PropTypes.shape({\n            switchToChannel: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        initialMode: CHANNEL_MODE,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.channelProviders = [new SwitchChannelProvider()];\n        this.teamProviders = [new SwitchTeamProvider()];\n\n        this.switchBox = null;\n\n        this.state = {\n            text: '',\n            mode: props.initialMode,\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (!this.props.show && nextProps.show) {\n            this.setState({mode: nextProps.initialMode, text: ''});\n        }\n    }\n\n    focusTextbox = () => {\n        if (this.switchBox == null) {\n            return;\n        }\n\n        const textbox = this.switchBox.getTextbox();\n        if (document.activeElement !== textbox) {\n            textbox.focus();\n            Utils.placeCaretAtEnd(textbox);\n        }\n    };\n\n    setSwitchBoxRef = (input) => {\n        this.switchBox = input;\n        this.focusTextbox();\n    }\n\n    onShow = () => {\n        this.setState({\n            text: '',\n        });\n    };\n\n    onHide = () => {\n        this.focusPostTextbox();\n        this.setState({\n            text: '',\n        });\n        this.props.onHide();\n    };\n\n    focusPostTextbox = () => {\n        if (!UserAgent.isMobile()) {\n            setTimeout(() => {\n                const textbox = document.querySelector('#post_textbox');\n                if (textbox) {\n                    textbox.focus();\n                }\n            });\n        }\n    }\n\n    onChange = (e) => {\n        this.setState({text: e.target.value});\n    };\n\n    handleKeyDown = (e) => {\n        if (Utils.isKeyPressed(e, Constants.KeyCodes.TAB)) {\n            e.preventDefault();\n            this.switchMode();\n        }\n    };\n\n    handleSubmit = (selected) => {\n        if (!selected) {\n            return;\n        }\n\n        if (this.state.mode === CHANNEL_MODE) {\n            const selectedChannel = selected.channel;\n            this.props.actions.switchToChannel(selectedChannel).then((result) => {\n                if (result.data) {\n                    this.onHide();\n                }\n            });\n        } else {\n            browserHistory.push('/' + selected.name);\n            this.onHide();\n        }\n    };\n\n    enableChannelProvider = () => {\n        this.channelProviders[0].disableDispatches = false;\n        this.teamProviders[0].disableDispatches = true;\n    };\n\n    enableTeamProvider = () => {\n        this.teamProviders[0].disableDispatches = false;\n        this.channelProviders[0].disableDispatches = true;\n    };\n\n    switchMode = () => {\n        if (this.state.mode === CHANNEL_MODE && this.props.showTeamSwitcher) {\n            this.enableTeamProvider();\n            this.setState({mode: TEAM_MODE});\n        } else if (this.state.mode === TEAM_MODE) {\n            this.enableChannelProvider();\n            this.setState({mode: CHANNEL_MODE});\n        }\n    };\n\n    handleOnClick = (e) => {\n        e.preventDefault();\n        const mode = e.currentTarget.getAttribute('data-mode');\n        this.enableChannelProvider();\n        this.setState({mode});\n        this.focusTextbox();\n    }\n\n    render() {\n        let providers = this.channelProviders;\n        let header;\n        let renderDividers = true;\n\n        let channelShortcut = t('quick_switch_modal.channelsShortcut.windows');\n        let defaultChannelShortcut = 'CTRL+K';\n        if (Utils.isMac()) {\n            channelShortcut = t('quick_switch_modal.channelsShortcut.mac');\n            defaultChannelShortcut = 'CMD+K';\n        }\n\n        let teamShortcut = t('quick_switch_modal.teamsShortcut.windows');\n        let defaultTeamShortcut = 'CTRL+ALT+K';\n        if (Utils.isMac()) {\n            teamShortcut = t('quick_switch_modal.teamsShortcut.mac');\n            defaultTeamShortcut = 'CMD+ALT+K';\n        }\n\n        if (this.props.showTeamSwitcher) {\n            let channelsActiveClass = '';\n            let teamsActiveClass = '';\n            if (this.state.mode === TEAM_MODE) {\n                providers = this.teamProviders;\n                renderDividers = false;\n                teamsActiveClass = 'active';\n            } else {\n                channelsActiveClass = 'active';\n            }\n\n            header = (\n                <div className='nav nav-tabs'>\n                    <li className={channelsActiveClass}>\n                        <a\n                            data-mode={'channel'}\n                            href='#'\n                            onClick={this.handleOnClick}\n                        >\n                            <FormattedMessage\n                                id='quick_switch_modal.channels'\n                                defaultMessage='Channels'\n                            />\n                            <span className='small'>\n                                <FormattedMessage\n                                    id={channelShortcut}\n                                    defaultMessage={defaultChannelShortcut}\n                                />\n                            </span>\n                        </a>\n                    </li>\n                    <li className={teamsActiveClass}>\n                        <a\n                            data-mode={'team'}\n                            href='#'\n                            onClick={this.handleOnClick}\n                        >\n                            <FormattedMessage\n                                id='quick_switch_modal.teams'\n                                defaultMessage='Teams'\n                            />\n                            <span className='small'>\n                                <FormattedMessage\n                                    id={teamShortcut}\n                                    defaultMessage={defaultTeamShortcut}\n                                />\n                            </span>\n                        </a>\n                    </li>\n                </div>\n            );\n        }\n\n        let help;\n        if (Utils.isMobile()) {\n            help = (\n                <FormattedMessage\n                    id='quick_switch_modal.help_mobile'\n                    defaultMessage='Type to find a channel.'\n                />\n            );\n        } else if (this.props.showTeamSwitcher) {\n            help = (\n                <FormattedMessage\n                    id='quick_switch_modal.help'\n                    defaultMessage='Start typing then use TAB to toggle channels/teams, ↑↓ to browse, ↵ to select, and ESC to dismiss.'\n                />\n            );\n        } else {\n            help = (\n                <FormattedMessage\n                    id='quick_switch_modal.help_no_team'\n                    defaultMessage='Type to find a channel. Use ↑↓ to browse, ↵ to select, ESC to dismiss.'\n                />\n            );\n        }\n\n        return (\n            <Modal\n                dialogClassName='channel-switch-modal modal--overflow'\n                ref='modal'\n                show={this.props.show}\n                onHide={this.onHide}\n                enforceFocus={false}\n                restoreFocus={false}\n            >\n                <Modal.Header closeButton={true}/>\n                <Modal.Body>\n                    {header}\n                    <div className='modal__hint'>\n                        {help}\n                    </div>\n                    <SuggestionBox\n                        ref={this.setSwitchBoxRef}\n                        className='form-control focused'\n                        onChange={this.onChange}\n                        value={this.state.text}\n                        onKeyDown={this.handleKeyDown}\n                        onItemSelected={this.handleSubmit}\n                        listComponent={SuggestionList}\n                        maxLength='64'\n                        providers={providers}\n                        listStyle='bottom'\n                        completeOnTab={false}\n                        renderDividers={renderDividers}\n                        delayInputUpdate={true}\n                        openWhenEmpty={true}\n                    />\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {switchToChannel} from 'actions/views/channel';\n\nimport QuickSwitchModal from './quick_switch_modal.jsx';\n\nfunction mapStateToProps() {\n    return {\n        showTeamSwitcher: false,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            switchToChannel,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuickSwitchModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class MobileChannelHeaderPlug extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Components or actions to add as channel header buttons\n         */\n        components: PropTypes.array,\n\n        /*\n         * Set to true if the plug is in the dropdown\n         */\n        isDropdown: PropTypes.bool.isRequired,\n\n        channel: PropTypes.object.isRequired,\n        channelMember: PropTypes.object.isRequired,\n\n        /*\n         * Logged in user's theme\n         */\n        theme: PropTypes.object.isRequired,\n    }\n\n    createButton(plug) {\n        return (\n            <button\n                className='navbar-toggle navbar-right__icon'\n                onClick={() => this.fireAction(plug)}\n            >\n                <span className='icon navbar-plugin-button'>\n                    {plug.icon}\n                </span>\n            </button>\n        );\n    }\n\n    createList(plugs) {\n        return plugs.map((plug) => {\n            return (\n                <li\n                    key={'mobileChannelHeaderItem' + plug.id}\n                    role='presentation'\n                >\n                    <a\n                        role='menuitem'\n                        href='#'\n                        onClick={() => this.fireAction(plug)}\n                    >\n                        {plug.dropdownText}\n                    </a>\n                </li>\n            );\n        });\n    }\n\n    fireAction(plug) {\n        return plug.action(this.props.channel, this.props.channelMember);\n    }\n\n    render() {\n        const components = this.props.components || [];\n\n        if (components.length === 0) {\n            return null;\n        } else if (components.length === 1) {\n            return this.createButton(components[0]);\n        }\n\n        if (!this.props.isDropdown) {\n            return null;\n        }\n\n        return this.createList(components);\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getTheme} from 'mattermost-redux/selectors/entities/preferences';\nimport {getMyCurrentChannelMembership} from 'mattermost-redux/selectors/entities/channels';\n\nimport MobileChannelHeaderPlug from './mobile_channel_header_plug.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        channelMember: getMyCurrentChannelMembership(state),\n        components: state.plugins.components.MobileChannelHeaderButton,\n        theme: getTheme(state),\n    };\n}\n\nexport default connect(mapStateToProps)(MobileChannelHeaderPlug);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class InfoIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='18px'\n                    height='18px'\n                    viewBox='0 0 22 22'\n                    role='icon'\n                    aria-label={localizeMessage('generic_icons.info', 'Info Icon')}\n                >\n                    <g\n                        stroke='none'\n                        strokeWidth='1'\n                        fill='inherit'\n                        fillRule='evenodd'\n                    >\n                        <g\n                            transform='translate(-388.000000, -18.000000)'\n                            fill='inherit'\n                        >\n                            <g>\n                                <g transform='translate(381.000000, 11.000000)'>\n                                    <g transform='translate(7.000000, 7.000000)'>\n                                        <path d='M11,22 C4.92486775,22 0,17.0751322 0,11 C0,4.92486775 4.92486775,0 11,0 C17.0751322,0 22,4.92486775 22,11 C22,17.0751322 17.0751322,22 11,22 Z M11,20.7924685 C16.408231,20.7924685 20.7924685,16.408231 20.7924685,11 C20.7924685,5.59176898 16.408231,1.20753149 11,1.20753149 C5.59176898,1.20753149 1.20753149,5.59176898 1.20753149,11 C1.20753149,16.408231 5.59176898,20.7924685 11,20.7924685 Z M10.1572266,16.0625 L10.1572266,8.69335938 L11.3466797,8.69335938 L11.3466797,16.0625 L10.1572266,16.0625 Z M10.7519531,7.50390625 C10.3417969,7.50390625 10,7.16210938 10,6.75195312 C10,6.33496094 10.3417969,6 10.7519531,6 C11.1689453,6 11.5039062,6.33496094 11.5039062,6.75195312 C11.5039062,7.16210938 11.1689453,7.50390625 10.7519531,7.50390625 Z'/>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {OverlayTrigger, Popover} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {ModalIdentifiers} from 'utils/constants.jsx';\n\nimport EditChannelHeaderModal from 'components/edit_channel_header_modal';\nimport Markdown from 'components/markdown';\nimport InfoIcon from 'components/svg/info_icon';\n\nconst headerMarkdownOptions = {mentionHighlight: false};\n\nexport default class NavbarInfoButton extends React.PureComponent {\n    static propTypes = {\n        channel: PropTypes.object,\n        isReadOnly: PropTypes.bool,\n        actions: PropTypes.shape({\n            openModal: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    showEditChannelHeaderModal = () => {\n        if (this.refs.headerOverlay) {\n            this.refs.headerOverlay.hide();\n        }\n\n        const {actions, channel} = this.props;\n        const modalData = {\n            modalId: ModalIdentifiers.EDIT_CHANNEL_HEADER,\n            dialogType: EditChannelHeaderModal,\n            dialogProps: {channel},\n        };\n\n        actions.openModal(modalData);\n    }\n\n    hide = () => {\n        if (this.refs.headerOverlay) {\n            this.refs.headerOverlay.hide();\n        }\n    }\n\n    render() {\n        let popoverContent = null;\n        if (this.props.channel) {\n            if (this.props.channel.header) {\n                popoverContent = (\n                    <Markdown\n                        message={this.props.channel.header}\n                        options={headerMarkdownOptions}\n                    />\n                );\n            } else {\n                let addOne;\n                if (!this.props.isReadOnly) {\n                    const link = (\n                        <a\n                            href='#'\n                            onClick={this.showEditChannelHeaderModal}\n                        >\n                            <FormattedMessage\n                                id='navbar.click'\n                                defaultMessage='Click here'\n                            />\n                        </a>\n                    );\n                    addOne = (\n                        <React.Fragment>\n                            <br/>\n                            <FormattedMessage\n                                id='navbar.clickToAddHeader'\n                                defaultMessage='{clickHere} to add one.'\n                                values={{clickHere: link}}\n                            />\n                        </React.Fragment>\n                    );\n                }\n\n                popoverContent = (\n                    <div>\n                        <FormattedMessage\n                            id='navbar.noHeader'\n                            defaultMessage='No channel header yet.'\n                        />\n                        {addOne}\n                    </div>\n                );\n            }\n        }\n\n        const popover = (\n            <Popover\n                bsStyle='info'\n                placement='bottom'\n                className='navbar__popover'\n                id='header-popover'\n            >\n                {popoverContent}\n                <div\n                    className='close visible-xs-block'\n                    onClick={this.hide}\n                >\n                    {'×'}\n                </div>\n            </Popover>\n        );\n\n        return (\n            <OverlayTrigger\n                ref='headerOverlay'\n                trigger='click'\n                placement='bottom'\n                overlay={popover}\n                className='description'\n                rootClose={true}\n            >\n                <button className='navbar-toggle navbar-right__icon navbar-info-button pull-right'>\n                    <InfoIcon\n                        className='icon icon__info'\n                        aria-hidden='true'\n                    />\n                </button>\n            </OverlayTrigger>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {openModal} from 'actions/views/modals';\n\nimport NavbarInfoButton from './navbar_info_button.jsx';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            openModal,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(NavbarInfoButton);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {Permissions} from 'mattermost-redux/constants';\nimport {isChannelMuted} from 'mattermost-redux/utils/channel_utils';\n\nimport EditChannelHeaderModal from 'components/edit_channel_header_modal';\nimport EditChannelPurposeModal from 'components/edit_channel_purpose_modal';\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport ChannelStore from 'stores/channel_store.jsx';\nimport ModalStore from 'stores/modal_store.jsx';\nimport PreferenceStore from 'stores/preference_store.jsx';\nimport TeamStore from 'stores/team_store.jsx';\nimport UserStore from 'stores/user_store.jsx';\nimport {\n    ActionTypes,\n    Constants,\n    ModalIdentifiers,\n    NotificationLevels,\n    RHSStates,\n} from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport ConvertChannelModal from 'components/convert_channel_modal';\nimport ChannelInfoModal from 'components/channel_info_modal';\nimport ChannelInviteModal from 'components/channel_invite_modal';\nimport ChannelMembersModal from 'components/channel_members_modal';\nimport ChannelNotificationsModal from 'components/channel_notifications_modal';\nimport DeleteChannelModal from 'components/delete_channel_modal';\nimport MoreDirectChannels from 'components/more_direct_channels';\nimport NotifyCounts from 'components/notify_counts';\nimport QuickSwitchModal from 'components/quick_switch_modal';\nimport RenameChannelModal from 'components/rename_channel_modal';\nimport StatusIcon from 'components/status_icon.jsx';\nimport MenuIcon from 'components/svg/menu_icon';\nimport SearchIcon from 'components/svg/search_icon';\nimport ToggleModalButton from 'components/toggle_modal_button.jsx';\nimport ToggleModalButtonRedux from 'components/toggle_modal_button_redux';\nimport ChannelPermissionGate from 'components/permissions_gates/channel_permission_gate';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nimport MobileChannelHeaderPlug from 'plugins/mobile_channel_header_plug';\n\nimport NavbarInfoButton from './navbar_info_button';\n\nexport default class Navbar extends React.Component {\n    static propTypes = {\n        teamDisplayName: PropTypes.string,\n        isPinnedPosts: PropTypes.bool,\n        isReadOnly: PropTypes.bool,\n        isFavoriteChannel: PropTypes.bool.isRequired,\n        actions: PropTypes.shape({\n            closeLhs: PropTypes.func.isRequired,\n            closeRhs: PropTypes.func.isRequired,\n            closeRhsMenu: PropTypes.func.isRequired,\n            leaveChannel: PropTypes.func.isRequired,\n            markFavorite: PropTypes.func.isRequired,\n            showPinnedPosts: PropTypes.func,\n            toggleLhs: PropTypes.func.isRequired,\n            toggleRhsMenu: PropTypes.func.isRequired,\n            unmarkFavorite: PropTypes.func.isRequired,\n            updateChannelNotifyProps: PropTypes.func.isRequired,\n            updateRhsState: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    static defaultProps = {\n        teamDisplayName: '',\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ...this.getStateFromStores(),\n            showEditChannelPurposeModal: false,\n            showMembersModal: false,\n            showRenameChannelModal: false,\n            showQuickSwitchModal: false,\n            showChannelNotificationsModal: false,\n            quickSwitchMode: 'channel',\n        };\n    }\n\n    componentDidMount() {\n        ChannelStore.addChangeListener(this.onChange);\n        ChannelStore.addStatsChangeListener(this.onChange);\n        UserStore.addStatusesChangeListener(this.onChange);\n        UserStore.addChangeListener(this.onChange);\n        PreferenceStore.addChangeListener(this.onChange);\n        ModalStore.addModalListener(ActionTypes.TOGGLE_QUICK_SWITCH_MODAL, this.toggleQuickSwitchModal);\n        ModalStore.addModalListener(ActionTypes.TOGGLE_CHANNEL_PURPOSE_UPDATE_MODAL, this.showChannelPurposeModal);\n        ModalStore.addModalListener(ActionTypes.TOGGLE_CHANNEL_NAME_UPDATE_MODAL, this.showRenameChannelModal);\n        document.addEventListener('keydown', this.handleQuickSwitchKeyPress);\n        $('.inner-wrap').on('click', this.hideSidebars);\n    }\n\n    componentWillUnmount() {\n        ChannelStore.removeChangeListener(this.onChange);\n        ChannelStore.removeStatsChangeListener(this.onChange);\n        UserStore.removeStatusesChangeListener(this.onChange);\n        UserStore.removeChangeListener(this.onChange);\n        PreferenceStore.removeChangeListener(this.onChange);\n        ModalStore.removeModalListener(ActionTypes.TOGGLE_QUICK_SWITCH_MODAL, this.toggleQuickSwitchModal);\n        ModalStore.removeModalListener(ActionTypes.TOGGLE_CHANNEL_PURPOSE_UPDATE_MODAL, this.showChannelPurposeModal);\n        ModalStore.removeModalListener(ActionTypes.TOGGLE_CHANNEL_NAME_UPDATE_MODAL, this.showRenameChannelModal);\n        document.removeEventListener('keydown', this.handleQuickSwitchKeyPress);\n        $('.inner-wrap').off('click', this.hideSidebars);\n    }\n\n    getStateFromStores = () => {\n        const channel = ChannelStore.getCurrent();\n\n        let contactId = null;\n        if (channel && channel.type === 'D') {\n            contactId = Utils.getUserIdFromChannelName(channel);\n        }\n\n        return {\n            channel,\n            member: ChannelStore.getCurrentMember(),\n            users: [],\n            userCount: ChannelStore.getCurrentStats().member_count,\n            currentUser: UserStore.getCurrentUser(),\n            contactId,\n        };\n    }\n\n    isStateValid = () => {\n        return this.state.channel && this.state.member && this.state.users && this.state.currentUser;\n    }\n\n    handleLeave = () => {\n        const {actions} = this.props;\n        if (this.state.channel.type === Constants.PRIVATE_CHANNEL) {\n            GlobalActions.showLeavePrivateChannelModal(this.state.channel);\n        } else {\n            actions.leaveChannel(this.state.channel.id);\n        }\n    }\n\n    hideSidebars = (e) => {\n        var windowWidth = $(window).outerWidth();\n        if (windowWidth <= 768) {\n            this.props.actions.closeRhs();\n\n            if (e.target.className !== 'navbar-toggle' && e.target.className !== 'icon-bar') {\n                this.props.actions.closeLhs();\n                this.props.actions.closeRhs();\n                this.props.actions.closeRhsMenu();\n            }\n        }\n    }\n\n    toggleLeftSidebar = () => {\n        this.props.actions.toggleLhs();\n    }\n\n    toggleRightSidebar = () => {\n        this.props.actions.toggleRhsMenu();\n    }\n\n    showSearch = () => {\n        this.props.actions.updateRhsState(RHSStates.SEARCH);\n    }\n\n    onChange = () => {\n        this.setState(this.getStateFromStores());\n    }\n\n    showChannelNotificationsModal = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            showChannelNotificationsModal: true,\n        });\n    }\n\n    hideChannelNotificationsModal = () => {\n        this.setState({\n            showChannelNotificationsModal: false,\n        });\n    }\n\n    showChannelPurposeModal = () => {\n        this.setState({\n            showEditChannelPurposeModal: true,\n        });\n    }\n\n    hideChannelPurposeModal = () => {\n        this.setState({\n            showEditChannelPurposeModal: false,\n        });\n    }\n\n    showRenameChannelModal = () => {\n        this.setState({\n            showRenameChannelModal: true,\n        });\n    }\n\n    hideRenameChannelModal = () => {\n        this.setState({\n            showRenameChannelModal: false,\n        });\n    }\n\n    showMembersModal = (e) => {\n        e.preventDefault();\n\n        this.setState({showMembersModal: true});\n    }\n\n    hideMembersModal = () => {\n        this.setState({showMembersModal: false});\n    }\n\n    handleQuickSwitchKeyPress = (e) => {\n        if (Utils.cmdOrCtrlPressed(e) && !e.shiftKey && Utils.isKeyPressed(e, Constants.KeyCodes.K)) {\n            if (!e.altKey) {\n                e.preventDefault();\n                this.toggleQuickSwitchModal('channel');\n            }\n        }\n    }\n\n    toggleQuickSwitchModal = (mode = 'channel') => {\n        if (this.state.showQuickSwitchModal) {\n            this.setState({showQuickSwitchModal: false, quickSwitchMode: 'channel'});\n        } else {\n            this.setState({showQuickSwitchModal: true, quickSwitchMode: mode});\n        }\n    }\n\n    hideQuickSwitchModal = () => {\n        this.setState({\n            showQuickSwitchModal: false,\n            quickSwitchMode: 'channel',\n        });\n    }\n\n    getPinnedPosts = (e) => {\n        e.preventDefault();\n        if (this.props.isPinnedPosts) {\n            GlobalActions.emitCloseRightHandSide();\n        } else {\n            this.props.actions.showPinnedPosts(this.state.channel.id);\n        }\n    }\n\n    toggleFavorite = (e) => {\n        const {markFavorite, unmarkFavorite} = this.props.actions;\n        e.preventDefault();\n\n        if (this.props.isFavoriteChannel) {\n            unmarkFavorite(this.state.channel.id);\n        } else {\n            markFavorite(this.state.channel.id);\n        }\n    };\n\n    renderEditChannelHeaderOption = (channel) => {\n        if (!channel || !channel.id) {\n            return null;\n        }\n\n        return (\n            <li role='presentation'>\n                <ToggleModalButtonRedux\n                    id='editChannelHeader'\n                    role='menuitem'\n                    modalId={ModalIdentifiers.EDIT_CHANNEL_HEADER}\n                    dialogType={EditChannelHeaderModal}\n                    dialogProps={{channel}}\n                >\n                    <FormattedMessage\n                        id='channel_header.setHeader'\n                        defaultMessage='Edit Channel Header'\n                    />\n                </ToggleModalButtonRedux>\n            </li>\n        );\n    }\n\n    handleUnmuteChannel = () => {\n        const {channel, currentUser} = this.state;\n\n        if (!currentUser || !channel) {\n            return;\n        }\n\n        const props = {mark_unread: NotificationLevels.ALL};\n        this.props.actions.updateChannelNotifyProps(currentUser.id, channel.id, props);\n    };\n\n    createDropdown = (teamId, channel, channelTitle, isDirect, isGroup) => {\n        if (channel) {\n            let viewInfoOption;\n            let viewPinnedPostsOption;\n            let addMembersOption;\n            let manageMembersOption;\n            let setChannelHeaderOption;\n            let setChannelPurposeOption;\n            let notificationPreferenceOption;\n            let renameChannelOption;\n            let convertChannelOption;\n            let deleteChannelOption;\n            let leaveChannelOption;\n\n            if (isDirect) {\n                setChannelHeaderOption = this.renderEditChannelHeaderOption(channel);\n            } else if (isGroup) {\n                setChannelHeaderOption = this.renderEditChannelHeaderOption(channel);\n\n                notificationPreferenceOption = (\n                    <li role='presentation'>\n                        <button\n                            role='menuitem'\n                            className='style--none'\n                            onClick={this.showChannelNotificationsModal}\n                        >\n                            <FormattedMessage\n                                id='navbar.preferences'\n                                defaultMessage='Notification Preferences'\n                            />\n                        </button>\n                    </li>\n                );\n\n                addMembersOption = (\n                    <li role='presentation'>\n                        <ToggleModalButtonRedux\n                            id='channelAddMembersGroup'\n                            role='menuitem'\n                            modalId={ModalIdentifiers.CREATE_DM_CHANNEL}\n                            dialogType={MoreDirectChannels}\n                            dialogProps={{isExistingChannel: true}}\n                        >\n                            <FormattedMessage\n                                id='navbar.addMembers'\n                                defaultMessage='Add Members'\n                            />\n                        </ToggleModalButtonRedux>\n                    </li>\n                );\n            } else {\n                const isPrivate = channel.type === Constants.PRIVATE_CHANNEL;\n                viewInfoOption = (\n                    <li role='presentation'>\n                        <ToggleModalButtonRedux\n                            role='menuitem'\n                            modalId={ModalIdentifiers.CHANNEL_INFO}\n                            dialogType={ChannelInfoModal}\n                            dialogProps={{channel}}\n                        >\n                            <FormattedMessage\n                                id='navbar.viewInfo'\n                                defaultMessage='View Info'\n                            />\n                        </ToggleModalButtonRedux>\n                    </li>\n                );\n\n                viewPinnedPostsOption = (\n                    <li role='presentation'>\n                        <button\n                            role='menuitem'\n                            className='style--none'\n                            onClick={this.getPinnedPosts}\n                        >\n                            <FormattedMessage\n                                id='navbar.viewPinnedPosts'\n                                defaultMessage='View Pinned Posts'\n                            />\n                        </button>\n                    </li>\n                );\n\n                if (ChannelStore.isDefault(channel)) {\n                    manageMembersOption = (\n                        <li\n                            key='view_members'\n                            role='presentation'\n                        >\n                            <button\n                                role='menuitem'\n                                className='style--none'\n                                onClick={this.showMembersModal}\n                            >\n                                <FormattedMessage\n                                    id='channel_header.viewMembers'\n                                    defaultMessage='View Members'\n                                />\n                            </button>\n                        </li>\n                    );\n                } else {\n                    addMembersOption = (\n                        <ChannelPermissionGate\n                            channelId={channel.id}\n                            teamId={teamId}\n                            permissions={[isPrivate ? Permissions.MANAGE_PRIVATE_CHANNEL_MEMBERS : Permissions.MANAGE_PUBLIC_CHANNEL_MEMBERS]}\n                            key='add_members_permission'\n                        >\n                            <li role='presentation'>\n                                <ToggleModalButton\n                                    ref='channelInviteModalButton'\n                                    role='menuitem'\n                                    dialogType={ChannelInviteModal}\n                                    dialogProps={{channel, currentUser: this.state.currentUser}}\n                                >\n                                    <FormattedMessage\n                                        id='navbar.addMembers'\n                                        defaultMessage='Add Members'\n                                    />\n                                </ToggleModalButton>\n                            </li>\n                        </ChannelPermissionGate>\n                    );\n\n                    manageMembersOption = (\n                        <li\n                            key='manage_members'\n                            role='presentation'\n                        >\n                            <button\n                                role='menuitem'\n                                className='style--none'\n                                onClick={this.showMembersModal}\n                            >\n                                <ChannelPermissionGate\n                                    channelId={channel.id}\n                                    teamId={teamId}\n                                    permissions={[isPrivate ? Permissions.MANAGE_PRIVATE_CHANNEL_MEMBERS : Permissions.MANAGE_PUBLIC_CHANNEL_MEMBERS]}\n                                >\n                                    <FormattedMessage\n                                        id='channel_header.manageMembers'\n                                        defaultMessage='Manage Members'\n                                    />\n                                </ChannelPermissionGate>\n                                <ChannelPermissionGate\n                                    channelId={channel.id}\n                                    teamId={teamId}\n                                    invert={true}\n                                    permissions={[isPrivate ? Permissions.MANAGE_PRIVATE_CHANNEL_MEMBERS : Permissions.MANAGE_PUBLIC_CHANNEL_MEMBERS]}\n                                >\n                                    <FormattedMessage\n                                        id='channel_header.viewMembers'\n                                        defaultMessage='View Members'\n                                    />\n                                </ChannelPermissionGate>\n                            </button>\n                        </li>\n                    );\n                }\n\n                notificationPreferenceOption = (\n                    <li role='presentation'>\n                        <button\n                            role='menuitem'\n                            className='style--none'\n                            onClick={this.showChannelNotificationsModal}\n                        >\n                            <FormattedMessage\n                                id='navbar.preferences'\n                                defaultMessage='Notification Preferences'\n                            />\n                        </button>\n                    </li>\n                );\n\n                if (!this.props.isReadOnly) {\n                    setChannelHeaderOption = (\n                        <ChannelPermissionGate\n                            channelId={channel.id}\n                            teamId={teamId}\n                            permissions={[isPrivate ? Permissions.MANAGE_PRIVATE_CHANNEL_PROPERTIES : Permissions.MANAGE_PUBLIC_CHANNEL_PROPERTIES]}\n                        >\n                            {this.renderEditChannelHeaderOption(channel)}\n                        </ChannelPermissionGate>\n                    );\n\n                    setChannelPurposeOption = (\n                        <ChannelPermissionGate\n                            channelId={channel.id}\n                            teamId={teamId}\n                            permissions={[isPrivate ? Permissions.MANAGE_PRIVATE_CHANNEL_PROPERTIES : Permissions.MANAGE_PUBLIC_CHANNEL_PROPERTIES]}\n                        >\n                            <li role='presentation'>\n                                <button\n                                    role='menuitem'\n                                    className='style--none'\n                                    onClick={this.showChannelPurposeModal}\n                                >\n                                    <FormattedMessage\n                                        id='channel_header.setPurpose'\n                                        defaultMessage='Edit Channel Purpose'\n                                    />\n                                </button>\n                            </li>\n                        </ChannelPermissionGate>\n                    );\n\n                    if (!ChannelStore.isDefault(channel) && channel.type === Constants.OPEN_CHANNEL) {\n                        convertChannelOption = (\n                            <TeamPermissionGate\n                                teamId={teamId}\n                                permissions={[Permissions.MANAGE_TEAM]}\n                            >\n                                <li role='presentation'>\n                                    <ToggleModalButton\n                                        role='menuitem'\n                                        dialogType={ConvertChannelModal}\n                                        dialogProps={{\n                                            channelId: channel.id,\n                                            channelDisplayName: channel.display_name,\n                                        }}\n                                    >\n                                        <FormattedMessage\n                                            id='channel_header.convert'\n                                            defaultMessage='Convert to Private Channel'\n                                        />\n                                    </ToggleModalButton>\n                                </li>\n                            </TeamPermissionGate>\n                        );\n                    }\n\n                    renameChannelOption = (\n                        <ChannelPermissionGate\n                            channelId={channel.id}\n                            teamId={teamId}\n                            permissions={[isPrivate ? Permissions.MANAGE_PRIVATE_CHANNEL_PROPERTIES : Permissions.MANAGE_PUBLIC_CHANNEL_PROPERTIES]}\n                        >\n                            <li role='presentation'>\n                                <button\n                                    role='menuitem'\n                                    className='style--none'\n                                    onClick={this.showRenameChannelModal}\n                                >\n                                    <FormattedMessage\n                                        id='channel_header.rename'\n                                        defaultMessage='Rename Channel'\n                                    />\n                                </button>\n                            </li>\n                        </ChannelPermissionGate>\n                    );\n                }\n\n                if (!ChannelStore.isDefault(channel)) {\n                    deleteChannelOption = (\n                        <ChannelPermissionGate\n                            channelId={channel.id}\n                            teamId={teamId}\n                            permissions={[isPrivate ? Permissions.DELETE_PRIVATE_CHANNEL : Permissions.DELETE_PUBLIC_CHANNEL]}\n                        >\n                            <li role='presentation'>\n                                <ToggleModalButton\n                                    role='menuitem'\n                                    dialogType={DeleteChannelModal}\n                                    dialogProps={{channel}}\n                                >\n                                    <FormattedMessage\n                                        id='channel_header.delete'\n                                        defaultMessage='Archive Channel'\n                                    />\n                                </ToggleModalButton>\n                            </li>\n                        </ChannelPermissionGate>\n                    );\n\n                    leaveChannelOption = (\n                        <li role='presentation'>\n                            <button\n                                role='menuitem'\n                                className='style--none'\n                                onClick={this.handleLeave}\n                            >\n                                <FormattedMessage\n                                    id='channel_header.leave'\n                                    defaultMessage='Leave Channel'\n                                />\n                            </button>\n                        </li>\n                    );\n                }\n            }\n\n            const toggleFavoriteOption = (\n                <li\n                    key='toggle_favorite'\n                    role='presentation'\n                >\n                    <button\n                        role='menuitem'\n                        className='style--none'\n                        onClick={this.toggleFavorite}\n                    >\n                        {this.props.isFavoriteChannel ?\n                            <FormattedMessage\n                                id='channelHeader.removeFromFavorites'\n                                defaultMessage='Remove from Favorites'\n                            /> :\n                            <FormattedMessage\n                                id='channelHeader.addToFavorites'\n                                defaultMessage='Add to Favorites'\n                            />}\n                    </button>\n                </li>\n            );\n\n            const channelMuted = isChannelMuted(this.state.member);\n\n            return (\n                <div className='navbar-brand'>\n                    <div className='dropdown'>\n                        <a\n                            href='#'\n                            className='dropdown-toggle theme'\n                            type='button'\n                            aria-expanded='true'\n                            data-toggle='dropdown'\n                        >\n                            <span className='heading'><StatusIcon status={this.getTeammateStatus()}/>{channelTitle} </span>\n                            <span\n                                className='fa fa-angle-down header-dropdown__icon'\n                                title={Utils.localizeMessage('generic_icons.dropdown', 'Dropdown Icon')}\n                            />\n                        </a>\n                        <ul\n                            className='dropdown-menu'\n                            role='menu'\n                        >\n                            {viewInfoOption}\n                            {viewPinnedPostsOption}\n                            {notificationPreferenceOption}\n                            {addMembersOption}\n                            {manageMembersOption}\n                            {setChannelHeaderOption}\n                            {setChannelPurposeOption}\n                            {renameChannelOption}\n                            {convertChannelOption}\n                            {deleteChannelOption}\n                            {leaveChannelOption}\n                            {toggleFavoriteOption}\n                            <li className='dropdown-item__plugin'>\n                                <MobileChannelHeaderPlug\n                                    channel={channel}\n                                    isDropdown={false}\n                                />\n                            </li>\n                            <div className='close visible-xs-block'>\n                                {'×'}\n                            </div>\n                        </ul>\n                    </div>\n                    {channelMuted &&\n                        <button\n                            type='button'\n                            className='navbar-toggle icon icon__mute'\n                            onClick={this.handleUnmuteChannel}\n                        >\n                            <span className='fa fa-bell-slash-o icon'/>\n                        </button>\n                    }\n                </div>\n            );\n        }\n\n        return (\n            <div className='navbar-brand'>\n                <Link\n                    to={TeamStore.getCurrentTeamUrl() + `/channels/${Constants.DEFAULT_CHANNEL}`}\n                    className='heading'\n                >\n                    {channelTitle}\n                </Link>\n            </div>\n        );\n    }\n\n    createLhsButton = (currentId) => {\n        let lhsButton;\n\n        if (currentId == null) {\n            lhsButton = (\n                <button\n                    key='navbar-toggle-collapse'\n                    type='button'\n                    className='navbar-toggle'\n                    data-toggle='collapse'\n                    data-target='#navbar-collapse-1'\n                >\n                    <span className='sr-only'>\n                        <FormattedMessage\n                            id='navbar.toggle1'\n                            defaultMessage='Toggle sidebar'\n                        />\n                    </span>\n                    <span className='icon-bar'/>\n                    <span className='icon-bar'/>\n                    <span className='icon-bar'/>\n                </button>\n            );\n        } else {\n            lhsButton = (\n                <button\n                    key='navbar-toggle-sidebar'\n                    type='button'\n                    className='navbar-toggle'\n                    data-toggle='collapse'\n                    data-target='#sidebar-nav'\n                    onClick={this.toggleLeftSidebar}\n                >\n                    <span className='sr-only'>\n                        <FormattedMessage\n                            id='navbar.toggle2'\n                            defaultMessage='Toggle sidebar'\n                        />\n                    </span>\n                    <MenuIcon className='icon icon__menu icon--sidebarHeaderTextColor'/>\n                    <NotifyCounts/>\n                </button>\n            );\n        }\n\n        return lhsButton;\n    }\n\n    createRhsButton = (currentId) => {\n        let rhsButton;\n        if (currentId != null) {\n            rhsButton = (\n                <button\n                    key='navbar-toggle-menu'\n                    type='button'\n                    className='navbar-toggle navbar-right__icon menu-toggle pull-right'\n                    data-toggle='collapse'\n                    data-target='#sidebar-nav'\n                    onClick={this.toggleRightSidebar}\n                >\n                    <MenuIcon/>\n                </button>\n            );\n        }\n\n        return rhsButton;\n    }\n\n    getTeammateStatus = () => {\n        const channel = this.state.channel;\n\n        // get status for direct message channels\n        if (channel.type === 'D') {\n            const currentUserId = this.state.currentUser.id;\n            const teammate = this.state.users.find((user) => user.id !== currentUserId);\n            if (teammate) {\n                return UserStore.getStatus(teammate.id);\n            }\n        }\n        return null;\n    }\n\n    showChannelInviteModalButton = () => {\n        if (this.refs.channelInviteModalButton) {\n            this.refs.channelInviteModalButton.show();\n        }\n    }\n\n    render() {\n        if (!this.isStateValid()) {\n            return null;\n        }\n\n        var currentId = this.state.currentUser.id;\n        var channel = this.state.channel;\n        var channelTitle = this.props.teamDisplayName;\n        var isDirect = false;\n        let isGroup = false;\n        const teamId = channel && channel.team_id;\n\n        var editChannelPurposeModal = null;\n        let renameChannelModal = null;\n        let channelMembersModal = null;\n        let channelNotificationsModal = null;\n        let quickSwitchModal = null;\n\n        if (channel) {\n            channelTitle = channel.display_name;\n\n            if (channel.type === Constants.DM_CHANNEL) {\n                isDirect = true;\n                const teammateId = Utils.getUserIdFromChannelName(channel);\n                if (currentId === teammateId) {\n                    channelTitle = (\n                        <FormattedMessage\n                            id='channel_header.directchannel.you'\n                            defaultMessage='{displayname} (you) '\n                            values={{\n                                displayname: Utils.getDisplayNameByUserId(teammateId),\n                            }}\n                        />\n                    );\n                } else {\n                    channelTitle = Utils.getDisplayNameByUserId(teammateId);\n                }\n            } else if (channel.type === Constants.GM_CHANNEL) {\n                isGroup = true;\n            }\n\n            if (this.state.showEditChannelPurposeModal) {\n                editChannelPurposeModal = (\n                    <EditChannelPurposeModal\n                        onModalDismissed={this.hideChannelPurposeModal}\n                        channel={channel}\n                    />\n                );\n            }\n\n            renameChannelModal = (\n                <RenameChannelModal\n                    show={this.state.showRenameChannelModal}\n                    onHide={this.hideRenameChannelModal}\n                    channel={channel}\n                />\n            );\n\n            if (this.state.showMembersModal) {\n                channelMembersModal = (\n                    <ChannelMembersModal\n                        onModalDismissed={this.hideMembersModal}\n                        showInviteModal={this.showChannelInviteModalButton}\n                        channel={channel}\n                    />\n                );\n            }\n\n            channelNotificationsModal = (\n                <ChannelNotificationsModal\n                    show={this.state.showChannelNotificationsModal}\n                    onHide={this.hideChannelNotificationsModal}\n                    channel={channel}\n                    channelMember={this.state.member}\n                    currentUser={this.state.currentUser}\n                />\n            );\n\n            quickSwitchModal = (\n                <QuickSwitchModal\n                    show={this.state.showQuickSwitchModal}\n                    onHide={this.hideQuickSwitchModal}\n                    initialMode={this.state.quickSwitchMode}\n                />\n            );\n        }\n\n        const searchButton = (\n            <button\n                type='button'\n                className='navbar-toggle navbar-right__icon navbar-search pull-right'\n                onClick={this.showSearch}\n            >\n                <SearchIcon\n                    className='icon icon__search'\n                    aria-hidden='true'\n                />\n            </button>\n        );\n\n        const channelMenuDropdown = this.createDropdown(teamId, channel, channelTitle, isDirect, isGroup);\n\n        return (\n            <div>\n                <nav\n                    className='navbar navbar-default navbar-fixed-top'\n                    role='navigation'\n                >\n                    <div className='container-fluid theme'>\n                        <div className='navbar-header'>\n                            {this.createLhsButton(currentId)}\n                            {channelMenuDropdown}\n                            <NavbarInfoButton\n                                ref='headerOverlay'\n                                channel={channel}\n                                showEditChannelHeaderModal={this.showEditChannelHeaderModal}\n                                isReadOnly={this.props.isReadOnly}\n                            />\n                            {searchButton}\n                            {this.createRhsButton(currentId)}\n                        </div>\n                    </div>\n                </nav>\n                {editChannelPurposeModal}\n                {renameChannelModal}\n                {channelMembersModal}\n                {channelNotificationsModal}\n                {quickSwitchModal}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {updateChannelNotifyProps, favoriteChannel, unfavoriteChannel} from 'mattermost-redux/actions/channels';\nimport {isCurrentChannelReadOnly, getCurrentChannelId} from 'mattermost-redux/selectors/entities/channels';\nimport {isFavoriteChannel} from 'mattermost-redux/utils/channel_utils';\n\nimport {leaveChannel} from 'actions/views/channel';\nimport {\n    closeRightHandSide as closeRhs,\n    updateRhsState,\n    showPinnedPosts,\n    toggleMenu as toggleRhsMenu,\n    closeMenu as closeRhsMenu,\n} from 'actions/views/rhs';\nimport {toggle as toggleLhs, close as closeLhs} from 'actions/views/lhs';\nimport {getRhsState} from 'selectors/rhs';\nimport {RHSStates} from 'utils/constants.jsx';\n\nimport Navbar from './navbar.jsx';\n\nfunction mapStateToProps(state) {\n    const prefs = state.entities.preferences.myPreferences;\n    const currentChannelId = getCurrentChannelId(state);\n\n    const rhsState = getRhsState(state);\n\n    return {\n        isPinnedPosts: rhsState === RHSStates.PIN,\n        isReadOnly: isCurrentChannelReadOnly(state),\n        isFavoriteChannel: isFavoriteChannel(prefs, currentChannelId),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            closeLhs,\n            closeRhs,\n            closeRhsMenu,\n            leaveChannel,\n            markFavorite: favoriteChannel,\n            showPinnedPosts,\n            toggleLhs,\n            toggleRhsMenu,\n            unmarkFavorite: unfavoriteChannel,\n            updateChannelNotifyProps,\n            updateRhsState,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {joinChannel, getChannelByNameAndTeamName, markGroupChannelOpen} from 'mattermost-redux/actions/channels';\nimport {getUser, getUserByUsername, getUserByEmail} from 'mattermost-redux/actions/users';\nimport {getTeamByName} from 'mattermost-redux/selectors/entities/teams';\nimport {getCurrentUserId, getUserByUsername as selectUserByUsername, getUser as selectUser} from 'mattermost-redux/selectors/entities/users';\nimport {getChannelByName, getOtherChannels, getChannel, getChannelsNameMapInTeam} from 'mattermost-redux/selectors/entities/channels';\n\nimport {Constants} from 'utils/constants.jsx';\nimport {openDirectChannelToUser} from 'actions/channel_actions.jsx';\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nconst LENGTH_OF_ID = 26;\nconst LENGTH_OF_GROUP_ID = 40;\nconst LENGTH_OF_USER_ID_PAIR = 54;\n\nexport function onChannelByIdentifierEnter({match, history}) {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {path, identifier, team} = match.params;\n\n        if (!getTeamByName(state, team)) {\n            return;\n        }\n\n        if (path === 'channels') {\n            if (identifier.length === LENGTH_OF_ID) {\n            // It's hard to tell an ID apart from a channel name of the same length, so check first if\n            // the identifier matches a channel that we have\n                const channelsByName = getChannelByName(state, identifier);\n                const moreChannelsByName = getOtherChannels(state).find((chan) => chan.name === identifier);\n                if (channelsByName || moreChannelsByName) {\n                    dispatch(goToChannelByChannelName(match, history));\n                } else {\n                    dispatch(goToChannelByChannelId(match, history));\n                }\n            } else if (identifier.length === LENGTH_OF_GROUP_ID) {\n                dispatch(goToGroupChannelByGroupId(match, history));\n            } else if (identifier.length === LENGTH_OF_USER_ID_PAIR) {\n                dispatch(goToDirectChannelByUserIds(match, history));\n            } else {\n                dispatch(goToChannelByChannelName(match, history));\n            }\n        } else if (path === 'messages') {\n            if (identifier.indexOf('@') === 0) {\n                dispatch(goToDirectChannelByUsername(match, history));\n            } else if (identifier.indexOf('@') > 0) {\n                dispatch(goToDirectChannelByEmail(match, history));\n            } else if (identifier.length === LENGTH_OF_ID) {\n                dispatch(goToDirectChannelByUserId(match, history, identifier));\n            } else if (identifier.length === LENGTH_OF_GROUP_ID) {\n                dispatch(goToGroupChannelByGroupId(match, history));\n            } else {\n                handleError(match, history);\n            }\n        }\n    };\n}\n\nfunction goToChannelByChannelId(match, history) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const {team, identifier} = match.params;\n        const channelId = identifier.toLowerCase();\n\n        let channel = getChannel(state, channelId);\n        const teamObj = getTeamByName(state, team);\n        if (!channel) {\n            const {data, error} = await dispatch(joinChannel(getCurrentUserId(state), teamObj.id, channelId, null));\n            if (error) {\n                handleChannelJoinError(match, history);\n                return;\n            }\n            channel = data.channel;\n        }\n\n        if (channel.type === Constants.DM_CHANNEL) {\n            dispatch(goToDirectChannelByUserId(match, history, Utils.getUserIdFromChannelId(channel.name)));\n        } else if (channel.type === Constants.GM_CHANNEL) {\n            history.replace(`/${team}/messages/${channel.name}`);\n        } else {\n            history.replace(`/${team}/channels/${channel.name}`);\n        }\n    };\n}\n\nexport function goToChannelByChannelName(match, history) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const {team, identifier} = match.params;\n        const channelName = identifier.toLowerCase();\n\n        const teamObj = getTeamByName(state, team);\n        if (!teamObj) {\n            return;\n        }\n\n        let channel = getChannelsNameMapInTeam(state, teamObj.id)[channelName];\n\n        if (!channel) {\n            const {data, error: joinError} = await dispatch(joinChannel(getCurrentUserId(state), teamObj.id, null, channelName));\n            if (joinError) {\n                const {data: data2, error: getChannelError} = await dispatch(getChannelByNameAndTeamName(team, channelName, true));\n                if (getChannelError || data2.delete_at === 0) {\n                    handleChannelJoinError(match, history);\n                    return;\n                }\n                channel = data2;\n            } else {\n                channel = data.channel;\n            }\n        }\n\n        if (channel.type === Constants.DM_CHANNEL) {\n            dispatch(goToDirectChannelByUserIds(match, history));\n        } else if (channel.type === Constants.GM_CHANNEL) {\n            history.replace(`/${team}/messages/${channel.name}`);\n        } else {\n            doChannelChange(channel);\n        }\n    };\n}\n\nfunction goToDirectChannelByUsername(match, history) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const {identifier} = match.params;\n        const username = identifier.slice(1, identifier.length).toLowerCase();\n\n        let user = selectUserByUsername(state, username);\n        if (!user) {\n            const {data, error} = await dispatch(getUserByUsername(username));\n            if (error) {\n                handleError(match, history);\n                return;\n            }\n            user = data;\n        }\n\n        openDirectChannelToUser(\n            user.id,\n            (channel) => {\n                doChannelChange(channel);\n            },\n            () => handleError(match, history)\n        );\n    };\n}\n\nexport function goToDirectChannelByUserId(match, history, userId) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const {team} = match.params;\n\n        let user = selectUser(state, userId);\n        if (!user) {\n            const {data, error} = await dispatch(getUser(userId));\n            if (error) {\n                handleError(match, history);\n                return;\n            }\n            user = data;\n        }\n\n        history.replace(`/${team}/messages/@${user.username}`);\n    };\n}\n\nexport function goToDirectChannelByUserIds(match, history) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const {team, identifier} = match.params;\n        const userId = Utils.getUserIdFromChannelId(identifier.toLowerCase(), getCurrentUserId(getState()));\n\n        let user = selectUser(state, userId);\n        if (!user) {\n            const {data, error} = await dispatch(getUser(userId));\n            if (error) {\n                handleError(match, history);\n                return;\n            }\n            user = data;\n        }\n\n        history.replace(`/${team}/messages/@${user.username}`);\n    };\n}\n\nfunction goToDirectChannelByEmail(match, history) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const {team, identifier} = match.params;\n        const email = identifier.toLowerCase();\n\n        let user = getUserByEmail(state, email);\n        if (!user) {\n            const {data, error} = await dispatch(getUserByEmail(email));\n            if (error) {\n                handleError(match, history);\n                return;\n            }\n            user = data;\n        }\n\n        history.replace(`/${team}/messages/@${user.username}`);\n    };\n}\n\nfunction goToGroupChannelByGroupId(match, history) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const {identifier, team} = match.params;\n        const groupId = identifier.toLowerCase();\n\n        history.replace(match.url.replace('/channels/', '/messages/'));\n\n        let channel = getChannelByName(state, groupId);\n        const teamObj = getTeamByName(state, team);\n        if (!channel) {\n            const {data, error} = await dispatch(joinChannel(getCurrentUserId(state), teamObj.id, null, groupId));\n            if (error) {\n                handleError(match, history);\n                return;\n            }\n            channel = data.channel;\n        }\n\n        dispatch(markGroupChannelOpen(channel.id));\n\n        doChannelChange(channel);\n    };\n}\n\nfunction doChannelChange(channel) {\n    GlobalActions.emitChannelClickEvent(channel);\n}\n\nfunction handleError(match, history) {\n    const {team} = match.params;\n    history.push(team ? `/${team}/channels/${Constants.DEFAULT_CHANNEL}` : '/');\n}\n\nfunction handleChannelJoinError(match, history) {\n    const {team} = match.params;\n    history.push(team ? `/error?type=channel_not_found&returnTo=/${team}/channels/${Constants.DEFAULT_CHANNEL}` : '/');\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport hoistStatics from 'hoist-non-react-statics';\nimport React from 'react';\n\n/**\n * Allows two animation frames to complete to allow other components to update\n * and re-render before mounting and rendering an expensive `WrappedComponent`.\n * If provided, `PreRenderComponent` will be rendered instead of null when not\n * rendering the `Wrapped Component`.\n *\n * Based on this Twitter built component\n * https://gist.github.com/paularmstrong/cc2ead7e2a0dec37d8b2096fc8d85759#file-defercomponentrender-js\n */\nexport default function deferComponentRender(WrappedComponent, PreRenderComponent = null) {\n    class DeferredRenderWrapper extends React.Component {\n        constructor(props, context) {\n            super(props, context);\n\n            this.state = {\n                shouldRender: false,\n            };\n        }\n\n        componentDidMount() {\n            window.requestAnimationFrame(() => {\n                window.requestAnimationFrame(() => this.setState({shouldRender: true}));\n            });\n        }\n\n        render() {\n            return this.state.shouldRender ? <WrappedComponent {...this.props}/> : PreRenderComponent;\n        }\n    }\n\n    return hoistStatics(DeferredRenderWrapper, WrappedComponent);\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Posts} from 'mattermost-redux/constants';\nimport {sortFileInfos} from 'mattermost-redux/utils/file_utils';\n\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport {emitEmojiPosted} from 'actions/post_actions.jsx';\nimport Constants, {StoragePrefixes, ModalIdentifiers} from 'utils/constants.jsx';\nimport {containsAtChannel, postMessageOnKeyPress, shouldFocusMainTextbox} from 'utils/post_utils.jsx';\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport EditChannelHeaderModal from 'components/edit_channel_header_modal';\nimport EmojiPickerOverlay from 'components/emoji_picker/emoji_picker_overlay.jsx';\nimport FilePreview from 'components/file_preview.jsx';\nimport FileUpload from 'components/file_upload';\nimport MsgTyping from 'components/msg_typing';\nimport PostDeletedModal from 'components/post_deleted_modal.jsx';\nimport ResetStatusModal from 'components/reset_status_modal';\nimport EmojiIcon from 'components/svg/emoji_icon';\nimport Textbox from 'components/textbox.jsx';\nimport TutorialTip from 'components/tutorial/tutorial_tip';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nconst KeyCodes = Constants.KeyCodes;\n\nexport default class CreatePost extends React.Component {\n    static propTypes = {\n\n        /**\n        *  ref passed from channelView for EmojiPickerOverlay\n        */\n        getChannelView: PropTypes.func,\n\n        /**\n        *  Data used in notifying user for @all and @channel\n        */\n        currentChannelMembersCount: PropTypes.number,\n\n        /**\n        *  Data used in multiple places of the component\n        */\n        currentChannel: PropTypes.object,\n\n        /**\n        *  Data used in executing commands for channel actions passed down to client4 function\n        */\n        currentTeamId: PropTypes.string,\n\n        /**\n        *  Data used for posting message\n        */\n        currentUserId: PropTypes.string,\n\n        /**\n         * Force message submission on CTRL/CMD + ENTER\n         */\n        codeBlockOnCtrlEnter: PropTypes.bool,\n\n        /**\n        *  Flag used for handling submit\n        */\n        ctrlSend: PropTypes.bool,\n\n        /**\n        *  Flag used for adding a class center to Postbox based on user pref\n        */\n        fullWidthTextBox: PropTypes.bool,\n\n        /**\n        *  Data used for deciding if tutorial tip is to be shown\n        */\n        showTutorialTip: PropTypes.bool.isRequired,\n\n        /**\n        *  Data used populating message state when triggered by shortcuts\n        */\n        messageInHistoryItem: PropTypes.string,\n\n        /**\n        *  Data used for populating message state from previous draft\n        */\n        draft: PropTypes.shape({\n            message: PropTypes.string.isRequired,\n            uploadsInProgress: PropTypes.array.isRequired,\n            fileInfos: PropTypes.array.isRequired,\n        }).isRequired,\n\n        /**\n        *  Data used adding reaction on +/- to recent post\n        */\n        recentPostIdInChannel: PropTypes.string,\n\n        /**\n        *  Data used dispatching handleViewAction\n        */\n        commentCountForPost: PropTypes.number,\n\n        /**\n        *  Data used dispatching handleViewAction ex: edit post\n        */\n        latestReplyablePostId: PropTypes.string,\n        locale: PropTypes.string.isRequired,\n\n        /**\n        *  Data used for calling edit of post\n        */\n        currentUsersLatestPost: PropTypes.object,\n\n        /**\n        *  Set if the channel is read only.\n        */\n        readOnlyChannel: PropTypes.bool,\n\n        /**\n         * Whether or not file upload is allowed.\n         */\n        canUploadFiles: PropTypes.bool.isRequired,\n\n        /**\n         * Whether to show the emoji picker.\n         */\n        enableEmojiPicker: PropTypes.bool.isRequired,\n\n        /**\n         * Whether to show the gif picker.\n         */\n        enableGifPicker: PropTypes.bool.isRequired,\n\n        /**\n         * Whether to check with the user before notifying the whole channel.\n         */\n        enableConfirmNotificationsToChannel: PropTypes.bool.isRequired,\n\n        /**\n         * The maximum length of a post\n         */\n        maxPostSize: PropTypes.number.isRequired,\n        emojiMap: PropTypes.object.isRequired,\n\n        /**\n         * Whether to display a confirmation modal to reset status.\n         */\n        userIsOutOfOffice: PropTypes.bool.isRequired,\n        rhsExpanded: PropTypes.bool.isRequired,\n        actions: PropTypes.shape({\n\n            /**\n            *  func called after message submit.\n            */\n            addMessageIntoHistory: PropTypes.func.isRequired,\n\n            /**\n            *  func called for navigation through messages by Up arrow\n            */\n            moveHistoryIndexBack: PropTypes.func.isRequired,\n\n            /**\n            *  func called for navigation through messages by Down arrow\n            */\n            moveHistoryIndexForward: PropTypes.func.isRequired,\n\n            /**\n            *  func called for adding a reaction\n            */\n            addReaction: PropTypes.func.isRequired,\n\n            /**\n            *  func called for posting message\n            */\n            onSubmitPost: PropTypes.func.isRequired,\n\n            /**\n            *  func called for removing a reaction\n            */\n            removeReaction: PropTypes.func.isRequired,\n\n            /**\n            *  func called on load of component to clear drafts\n            */\n            clearDraftUploads: PropTypes.func.isRequired,\n\n            /**\n            *  func called for setting drafts\n            */\n            setDraft: PropTypes.func.isRequired,\n\n            /**\n            *  func called for editing posts\n            */\n            setEditingPost: PropTypes.func.isRequired,\n\n            /**\n             *  func called for opening the last replayable post in the RHS\n             */\n            selectPostFromRightHandSideSearchByPostId: PropTypes.func.isRequired,\n\n            /**\n             * Function to open a modal\n             */\n            openModal: PropTypes.func.isRequired,\n            executeCommand: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        latestReplyablePostId: '',\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: this.props.draft.message,\n            submitting: false,\n            showPostDeletedModal: false,\n            enableSendButton: false,\n            showEmojiPicker: false,\n            showConfirmModal: false,\n        };\n\n        this.lastBlurAt = 0;\n        this.draftsForChannel = {};\n    }\n\n    UNSAFE_componentWillMount() { // eslint-disable-line camelcase\n        const enableSendButton = this.handleEnableSendButton(this.state.message, this.props.draft.fileInfos);\n        this.props.actions.clearDraftUploads(StoragePrefixes.DRAFT, (key, value) => {\n            if (value) {\n                return {...value, uploadsInProgress: []};\n            }\n            return value;\n        });\n\n        // wait to load these since they may have changed since the component was constructed (particularly in the case of skipping the tutorial)\n        this.setState({\n            enableSendButton,\n        });\n    }\n\n    componentDidMount() {\n        this.focusTextbox();\n        document.addEventListener('keydown', this.documentKeyHandler);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (nextProps.currentChannel.id !== this.props.currentChannel.id) {\n            const draft = nextProps.draft;\n\n            this.setState({\n                message: draft.message,\n                submitting: false,\n                serverError: null,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentChannel.id !== this.props.currentChannel.id) {\n            this.focusTextbox();\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.documentKeyHandler);\n    }\n\n    handlePostError = (postError) => {\n        this.setState({postError});\n    }\n\n    toggleEmojiPicker = () => {\n        this.setState({showEmojiPicker: !this.state.showEmojiPicker});\n    }\n\n    hideEmojiPicker = () => {\n        this.setState({showEmojiPicker: false});\n    }\n\n    doSubmit = (e) => {\n        const channelId = this.props.currentChannel.id;\n        if (e) {\n            e.preventDefault();\n        }\n\n        if (this.props.draft.uploadsInProgress.length > 0 || this.state.submitting) {\n            return;\n        }\n\n        const post = {};\n        post.file_ids = [];\n        post.message = this.state.message;\n\n        if (post.message.trim().length === 0 && this.props.draft.fileInfos.length === 0) {\n            return;\n        }\n\n        if (this.state.postError) {\n            this.setState({errorClass: 'animation--highlight'});\n            setTimeout(() => {\n                this.setState({errorClass: null});\n            }, Constants.ANIMATION_TIMEOUT);\n            return;\n        }\n\n        this.props.actions.addMessageIntoHistory(this.state.message);\n\n        this.setState({submitting: true, serverError: null});\n\n        const isReaction = Utils.REACTION_PATTERN.exec(post.message);\n        if (post.message.indexOf('/') === 0) {\n            this.setState({message: '', postError: null, enableSendButton: false});\n            const args = {};\n            args.channel_id = channelId;\n            args.team_id = this.props.currentTeamId;\n            this.props.actions.executeCommand(post.message, args).then(\n                ({error}) => {\n                    this.setState({submitting: false});\n                    if (error) {\n                        if (error.sendMessage) {\n                            this.sendMessage(post);\n                        } else {\n                            this.setState({\n                                serverError: error.message,\n                                message: post.message,\n                            });\n                        }\n                    }\n                }\n            );\n        } else if (isReaction && this.props.emojiMap.has(isReaction[2])) {\n            this.sendReaction(isReaction);\n        } else {\n            this.sendMessage(post);\n        }\n\n        this.setState({\n            message: '',\n            submitting: false,\n            postError: null,\n            serverError: null,\n            enableSendButton: false,\n        });\n\n        this.props.actions.setDraft(StoragePrefixes.DRAFT + channelId, null);\n        this.draftsForChannel[channelId] = null;\n\n        const fasterThanHumanWillClick = 150;\n        const forceFocus = (Date.now() - this.lastBlurAt < fasterThanHumanWillClick);\n\n        this.focusTextbox(forceFocus);\n    }\n\n    handleNotifyAllConfirmation = (e) => {\n        this.hideNotifyAllModal();\n        this.doSubmit(e);\n    }\n\n    hideNotifyAllModal = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    showNotifyAllModal = () => {\n        this.setState({showConfirmModal: true});\n    }\n\n    getStatusFromSlashCommand = () => {\n        const {message} = this.state;\n        const tokens = message.split(' ');\n\n        if (tokens.length > 0) {\n            return tokens[0].substring(1);\n        }\n        return '';\n    };\n\n    isStatusSlashCommand = (command) => {\n        return command === 'online' || command === 'away' ||\n            command === 'dnd' || command === 'offline';\n    };\n\n    handleSubmit = (e) => {\n        const {\n            currentChannel: updateChannel,\n            userIsOutOfOffice,\n        } = this.props;\n\n        if (this.props.enableConfirmNotificationsToChannel &&\n            this.props.currentChannelMembersCount > Constants.NOTIFY_ALL_MEMBERS &&\n            containsAtChannel(this.state.message)) {\n            this.showNotifyAllModal();\n            return;\n        }\n\n        const status = this.getStatusFromSlashCommand();\n        if (userIsOutOfOffice && this.isStatusSlashCommand(status)) {\n            const resetStatusModalData = {\n                ModalId: ModalIdentifiers.RESET_STATUS,\n                dialogType: ResetStatusModal,\n                dialogProps: {newStatus: status},\n            };\n\n            this.props.actions.openModal(resetStatusModalData);\n\n            this.setState({message: ''});\n            return;\n        }\n\n        if (this.state.message.trimRight() === '/header') {\n            const editChannelHeaderModalData = {\n                modalId: ModalIdentifiers.EDIT_CHANNEL_HEADER,\n                dialogType: EditChannelHeaderModal,\n                dialogProps: {channel: updateChannel},\n            };\n\n            this.props.actions.openModal(editChannelHeaderModalData);\n\n            this.setState({message: ''});\n            return;\n        }\n\n        const isDirectOrGroup = ((updateChannel.type === Constants.DM_CHANNEL) || (updateChannel.type === Constants.GM_CHANNEL));\n        if (!isDirectOrGroup && this.state.message.trimRight() === '/purpose') {\n            GlobalActions.showChannelPurposeUpdateModal(updateChannel);\n            this.setState({message: ''});\n            return;\n        }\n\n        if (!isDirectOrGroup && this.state.message.trimRight() === '/rename') {\n            GlobalActions.showChannelNameUpdateModal(updateChannel);\n            this.setState({message: ''});\n            return;\n        }\n\n        this.doSubmit(e);\n    }\n\n    sendMessage = (post) => {\n        const {\n            actions,\n            currentChannel,\n            currentUserId,\n            draft,\n        } = this.props;\n\n        post.channel_id = currentChannel.id;\n\n        const time = Utils.getTimestamp();\n        const userId = currentUserId;\n        post.pending_post_id = `${userId}:${time}`;\n        post.user_id = userId;\n        post.create_at = time;\n        post.parent_id = this.state.parentId;\n\n        actions.onSubmitPost(post, draft.fileInfos);\n\n        this.setState({\n            submitting: false,\n        });\n    }\n\n    sendReaction(isReaction) {\n        const channelId = this.props.currentChannel.id;\n        const action = isReaction[1];\n        const emojiName = isReaction[2];\n        const postId = this.props.latestReplyablePostId;\n\n        if (postId && action === '+') {\n            this.props.actions.addReaction(postId, emojiName);\n            emitEmojiPosted(emojiName);\n        } else if (postId && action === '-') {\n            this.props.actions.removeReaction(postId, emojiName);\n        }\n\n        this.props.actions.setDraft(StoragePrefixes.DRAFT + channelId, null);\n        this.draftsForChannel[channelId] = null;\n    }\n\n    focusTextbox = (keepFocus = false) => {\n        if (this.refs.textbox && (keepFocus || !UserAgent.isMobile())) {\n            this.refs.textbox.focus();\n        }\n    }\n\n    postMsgKeyPress = (e) => {\n        const {ctrlSend, codeBlockOnCtrlEnter, currentChannel} = this.props;\n\n        const {allowSending, withClosedCodeBlock, message} = postMessageOnKeyPress(e, this.state.message, ctrlSend, codeBlockOnCtrlEnter);\n\n        if (allowSending) {\n            e.persist();\n            this.refs.textbox.blur();\n\n            if (withClosedCodeBlock && message) {\n                this.setState({message}, () => this.handleSubmit(e));\n            } else {\n                this.handleSubmit(e);\n            }\n        }\n\n        GlobalActions.emitLocalUserTypingEvent(currentChannel.id, '');\n    }\n\n    handleChange = (e) => {\n        const message = e.target.value;\n        const channelId = this.props.currentChannel.id;\n        const enableSendButton = this.handleEnableSendButton(message, this.props.draft.fileInfos);\n        this.setState({\n            message,\n            enableSendButton,\n        });\n\n        const draft = {\n            ...this.props.draft,\n            message,\n        };\n\n        this.props.actions.setDraft(StoragePrefixes.DRAFT + channelId, draft);\n        this.draftsForChannel[channelId] = draft;\n    }\n\n    handleFileUploadChange = () => {\n        this.focusTextbox();\n    }\n\n    handleUploadStart = (clientIds, channelId) => {\n        const uploadsInProgress = [\n            ...this.props.draft.uploadsInProgress,\n            ...clientIds,\n        ];\n\n        const draft = {\n            ...this.props.draft,\n            uploadsInProgress,\n        };\n\n        this.props.actions.setDraft(StoragePrefixes.DRAFT + channelId, draft);\n        this.draftsForChannel[channelId] = draft;\n\n        // this is a bit redundant with the code that sets focus when the file input is clicked,\n        // but this also resets the focus after a drag and drop\n        this.focusTextbox();\n    }\n\n    handleFileUploadComplete = (fileInfos, clientIds, channelId) => {\n        const draft = {...this.draftsForChannel[channelId]};\n\n        // remove each finished file from uploads\n        for (let i = 0; i < clientIds.length; i++) {\n            if (draft.uploadsInProgress) {\n                const index = draft.uploadsInProgress.indexOf(clientIds[i]);\n\n                if (index !== -1) {\n                    draft.uploadsInProgress = draft.uploadsInProgress.filter((item, itemIndex) => index !== itemIndex);\n                }\n            }\n        }\n\n        if (draft.fileInfos) {\n            draft.fileInfos = sortFileInfos(draft.fileInfos.concat(fileInfos), this.props.locale);\n        }\n\n        this.draftsForChannel[channelId] = draft;\n        this.props.actions.setDraft(StoragePrefixes.DRAFT + channelId, draft);\n    }\n\n    handleUploadError = (err, clientId, channelId) => {\n        const draft = {...this.draftsForChannel[channelId]};\n\n        let message = err;\n        if (message && typeof message !== 'string') {\n            // err is an AppError from the server\n            message = err.message;\n        }\n\n        if (clientId !== -1 && draft.uploadsInProgress) {\n            const index = draft.uploadsInProgress.indexOf(clientId);\n\n            if (index !== -1) {\n                const uploadsInProgress = draft.uploadsInProgress.filter((item, itemIndex) => index !== itemIndex);\n                const modifiedDraft = {\n                    ...draft,\n                    uploadsInProgress,\n                };\n                this.props.actions.setDraft(StoragePrefixes.DRAFT + channelId, modifiedDraft);\n                this.draftsForChannel[channelId] = modifiedDraft;\n            }\n        }\n\n        this.setState({serverError: message});\n    }\n\n    removePreview = (id) => {\n        let modifiedDraft = {};\n        const draft = {...this.props.draft};\n        const channelId = this.props.currentChannel.id;\n\n        // Clear previous errors\n        this.setState({serverError: null});\n\n        // id can either be the id of an uploaded file or the client id of an in progress upload\n        let index = draft.fileInfos.findIndex((info) => info.id === id);\n        if (index === -1) {\n            index = draft.uploadsInProgress.indexOf(id);\n\n            if (index !== -1) {\n                const uploadsInProgress = draft.uploadsInProgress.filter((item, itemIndex) => index !== itemIndex);\n\n                modifiedDraft = {\n                    ...draft,\n                    uploadsInProgress,\n                };\n\n                if (this.refs.fileUpload && this.refs.fileUpload.getWrappedInstance()) {\n                    this.refs.fileUpload.getWrappedInstance().cancelUpload(id);\n                }\n            }\n        } else {\n            const fileInfos = draft.fileInfos.filter((item, itemIndex) => index !== itemIndex);\n\n            modifiedDraft = {\n                ...draft,\n                fileInfos,\n            };\n        }\n\n        this.props.actions.setDraft(StoragePrefixes.DRAFT + channelId, modifiedDraft);\n        this.draftsForChannel[channelId] = modifiedDraft;\n        const enableSendButton = this.handleEnableSendButton(this.state.message, draft.fileInfos);\n\n        this.setState({enableSendButton});\n\n        this.handleFileUploadChange();\n    }\n\n    focusTextboxIfNecessary = (e) => {\n        // Focus should go to the RHS when it is expanded\n        if (this.props.rhsExpanded) {\n            return;\n        }\n\n        // Bit of a hack to not steal focus from the channel switch modal if it's open\n        // This is a special case as the channel switch modal does not enforce focus like\n        // most modals do\n        if (document.getElementsByClassName('channel-switch-modal').length) {\n            return;\n        }\n\n        if (shouldFocusMainTextbox(e, document.activeElement)) {\n            this.focusTextbox();\n        }\n    }\n\n    documentKeyHandler = (e) => {\n        if ((e.ctrlKey || e.metaKey) && Utils.isKeyPressed(e, KeyCodes.FORWARD_SLASH)) {\n            e.preventDefault();\n\n            GlobalActions.toggleShortcutsModal();\n            return;\n        }\n\n        this.focusTextboxIfNecessary(e);\n    }\n\n    getFileCount = () => {\n        const draft = this.props.draft;\n        return draft.fileInfos.length + draft.uploadsInProgress.length;\n    }\n\n    getFileUploadTarget = () => {\n        return this.refs.textbox;\n    }\n\n    getCreatePostControls = () => {\n        return this.refs.createPostControls;\n    }\n\n    fillMessageFromHistory() {\n        const lastMessage = this.props.messageInHistoryItem;\n        if (lastMessage) {\n            this.setState({\n                message: lastMessage,\n            });\n        }\n    }\n\n    handleKeyDown = (e) => {\n        const ctrlOrMetaKeyPressed = e.ctrlKey || e.metaKey;\n        const messageIsEmpty = this.state.message.length === 0;\n        const draftMessageIsEmpty = this.props.draft.message.length === 0;\n        const ctrlEnterKeyCombo = (this.props.ctrlSend || this.props.codeBlockOnCtrlEnter) && Utils.isKeyPressed(e, KeyCodes.ENTER) && ctrlOrMetaKeyPressed;\n        const upKeyOnly = !ctrlOrMetaKeyPressed && !e.altKey && !e.shiftKey && Utils.isKeyPressed(e, KeyCodes.UP);\n        const shiftUpKeyCombo = !ctrlOrMetaKeyPressed && !e.altKey && e.shiftKey && Utils.isKeyPressed(e, KeyCodes.UP);\n        const ctrlKeyCombo = ctrlOrMetaKeyPressed && !e.altKey && !e.shiftKey;\n\n        if (ctrlEnterKeyCombo) {\n            this.postMsgKeyPress(e);\n        } else if (upKeyOnly && messageIsEmpty) {\n            this.editLastPost(e);\n        } else if (shiftUpKeyCombo && messageIsEmpty) {\n            this.replyToLastPost(e);\n        } else if (ctrlKeyCombo && draftMessageIsEmpty && Utils.isKeyPressed(e, KeyCodes.UP)) {\n            this.loadPrevMessage(e);\n        } else if (ctrlKeyCombo && draftMessageIsEmpty && Utils.isKeyPressed(e, KeyCodes.DOWN)) {\n            this.loadNextMessage(e);\n        }\n    }\n\n    editLastPost = (e) => {\n        e.preventDefault();\n\n        const lastPost = this.props.currentUsersLatestPost;\n        if (!lastPost) {\n            return;\n        }\n\n        let type;\n        if (lastPost.root_id && lastPost.root_id.length > 0) {\n            type = Utils.localizeMessage('create_post.comment', Posts.MESSAGE_TYPES.COMMENT);\n        } else {\n            type = Utils.localizeMessage('create_post.post', Posts.MESSAGE_TYPES.POST);\n        }\n        if (this.refs.textbox) {\n            this.refs.textbox.blur();\n        }\n        this.props.actions.setEditingPost(lastPost.id, this.props.commentCountForPost, 'post_textbox', type);\n    }\n\n    replyToLastPost = (e) => {\n        e.preventDefault();\n        const latestReplyablePostId = this.props.latestReplyablePostId;\n        const replyBox = document.getElementById('reply_textbox');\n        if (replyBox) {\n            replyBox.focus();\n        }\n        if (latestReplyablePostId) {\n            this.props.actions.selectPostFromRightHandSideSearchByPostId(latestReplyablePostId);\n        }\n    }\n\n    loadPrevMessage = (e) => {\n        e.preventDefault();\n        this.props.actions.moveHistoryIndexBack(Posts.MESSAGE_TYPES.POST).then(() => this.fillMessageFromHistory());\n    }\n\n    loadNextMessage = (e) => {\n        e.preventDefault();\n        this.props.actions.moveHistoryIndexForward(Posts.MESSAGE_TYPES.POST).then(() => this.fillMessageFromHistory());\n    }\n\n    handleBlur = () => {\n        this.lastBlurAt = Date.now();\n    }\n\n    showPostDeletedModal = () => {\n        this.setState({\n            showPostDeletedModal: true,\n        });\n    }\n\n    hidePostDeletedModal = () => {\n        this.setState({\n            showPostDeletedModal: false,\n        });\n    }\n\n    handleEmojiClick = (emoji) => {\n        const emojiAlias = emoji.name || emoji.aliases[0];\n\n        if (!emojiAlias) {\n            //Oops.. There went something wrong\n            return;\n        }\n\n        if (this.state.message === '') {\n            this.setState({message: ':' + emojiAlias + ': '});\n        } else {\n            //check whether there is already a blank at the end of the current message\n            const newMessage = ((/\\s+$/).test(this.state.message)) ? this.state.message + ':' + emojiAlias + ': ' : this.state.message + ' :' + emojiAlias + ': ';\n\n            this.setState({message: newMessage});\n        }\n\n        this.setState({showEmojiPicker: false});\n\n        this.focusTextbox();\n    }\n\n    handleGifClick = (gif) => {\n        if (this.state.message === '') {\n            this.setState({message: gif});\n        } else {\n            const newMessage = ((/\\s+$/).test(this.state.message)) ? this.state.message + gif : this.state.message + ' ' + gif;\n            this.setState({message: newMessage});\n        }\n        this.setState({showEmojiPicker: false});\n        this.focusTextbox();\n    }\n\n    createTutorialTip() {\n        const screens = [];\n\n        screens.push(\n            <div>\n                <h4>\n                    <FormattedMessage\n                        id='create_post.tutorialTip.title'\n                        defaultMessage='Sending Messages'\n                    />\n                </h4>\n                <p>\n                    <FormattedMarkdownMessage\n                        id='create_post.tutorialTip1'\n                        defaultMessage='Type here to write a message and press **Enter** to post it.'\n                    />\n                </p>\n                <p>\n                    <FormattedMarkdownMessage\n                        id='create_post.tutorialTip2'\n                        defaultMessage='Click the **Attachment** button to upload an image or a file.'\n                    />\n                </p>\n            </div>\n        );\n\n        return (\n            <TutorialTip\n                id='postTextboxTipMessage'\n                placement='top'\n                screens={screens}\n                overlayClass='tip-overlay--chat'\n                diagnosticsTag='tutorial_tip_1_sending_messages'\n            />\n        );\n    }\n\n    handleEnableSendButton(message, fileInfos) {\n        return message.trim().length !== 0 || fileInfos.length !== 0;\n    }\n\n    render() {\n        const {\n            currentChannel,\n            currentChannelMembersCount,\n            draft,\n            fullWidthTextBox,\n            getChannelView,\n            showTutorialTip,\n            readOnlyChannel,\n        } = this.props;\n        const members = currentChannelMembersCount - 1;\n\n        const notifyAllTitle = (\n            <FormattedMessage\n                id='notify_all.title.confirm'\n                defaultMessage='Confirm sending notifications to entire channel'\n            />\n        );\n\n        const notifyAllConfirm = (\n            <FormattedMessage\n                id='notify_all.confirm'\n                defaultMessage='Confirm'\n            />\n        );\n\n        const notifyAllMessage = (\n            <FormattedMessage\n                id='notify_all.question'\n                defaultMessage='By using @all or @channel you are about to send notifications to {totalMembers} people. Are you sure you want to do this?'\n                values={{\n                    totalMembers: members,\n                }}\n            />\n        );\n\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div className='has-error'>\n                    <label className='control-label'>{this.state.serverError}</label>\n                </div>\n            );\n        }\n\n        let postError = null;\n        if (this.state.postError) {\n            const postErrorClass = 'post-error' + (this.state.errorClass ? (' ' + this.state.errorClass) : '');\n            postError = <label className={postErrorClass}>{this.state.postError}</label>;\n        }\n\n        let preview = null;\n        if (!readOnlyChannel && (draft.fileInfos.length > 0 || draft.uploadsInProgress.length > 0)) {\n            preview = (\n                <FilePreview\n                    fileInfos={draft.fileInfos}\n                    onRemove={this.removePreview}\n                    uploadsInProgress={draft.uploadsInProgress}\n                />\n            );\n        }\n\n        let postFooterClassName = 'post-create-footer';\n        if (postError) {\n            postFooterClassName += ' has-error';\n        }\n\n        let tutorialTip = null;\n        if (showTutorialTip) {\n            tutorialTip = this.createTutorialTip();\n        }\n\n        let centerClass = '';\n        if (!fullWidthTextBox) {\n            centerClass = 'center';\n        }\n\n        let sendButtonClass = 'send-button theme';\n        if (!this.state.enableSendButton) {\n            sendButtonClass += ' disabled';\n        }\n\n        let attachmentsDisabled = '';\n        if (!this.props.canUploadFiles) {\n            attachmentsDisabled = ' post-create--attachment-disabled';\n        }\n\n        let fileUpload;\n        if (!readOnlyChannel) {\n            fileUpload = (\n                <FileUpload\n                    ref='fileUpload'\n                    fileCount={this.getFileCount()}\n                    getTarget={this.getFileUploadTarget}\n                    onFileUploadChange={this.handleFileUploadChange}\n                    onUploadStart={this.handleUploadStart}\n                    onFileUpload={this.handleFileUploadComplete}\n                    onUploadError={this.handleUploadError}\n                    postType='post'\n                />\n            );\n        }\n\n        let emojiPicker = null;\n        if (this.props.enableEmojiPicker && !readOnlyChannel) {\n            emojiPicker = (\n                <span\n                    role='button'\n                    tabIndex='0'\n                    aria-label={Utils.localizeMessage('create_post.open_emoji_picker', 'Open emoji picker')}\n                    className='emoji-picker__container'\n                >\n                    <EmojiPickerOverlay\n                        show={this.state.showEmojiPicker}\n                        container={getChannelView}\n                        target={this.getCreatePostControls}\n                        onHide={this.hideEmojiPicker}\n                        onEmojiClick={this.handleEmojiClick}\n                        onGifClick={this.handleGifClick}\n                        enableGifPicker={this.props.enableGifPicker}\n                        rightOffset={15}\n                        topOffset={-7}\n                    />\n                    <EmojiIcon\n                        id='emojiPickerButton'\n                        className={'icon icon--emoji ' + (this.state.showEmojiPicker ? 'active' : '')}\n                        onClick={this.toggleEmojiPicker}\n                    />\n                </span>\n            );\n        }\n\n        let createMessage;\n        if (readOnlyChannel) {\n            createMessage = Utils.localizeMessage('create_post.read_only', 'This channel is read-only. Only members with permission can post here.');\n        } else {\n            createMessage = Utils.localizeMessage('create_post.write', 'Write a message...');\n        }\n\n        return (\n            <form\n                id='create_post'\n                ref='topDiv'\n                role='form'\n                className={centerClass}\n                onSubmit={this.handleSubmit}\n            >\n                <div className={'post-create' + attachmentsDisabled}>\n                    <div className='post-create-body'>\n                        <div className='post-body__cell'>\n                            <Textbox\n                                onChange={this.handleChange}\n                                onKeyPress={this.postMsgKeyPress}\n                                onKeyDown={this.handleKeyDown}\n                                handlePostError={this.handlePostError}\n                                value={readOnlyChannel ? '' : this.state.message}\n                                onBlur={this.handleBlur}\n                                emojiEnabled={this.props.enableEmojiPicker}\n                                createMessage={createMessage}\n                                channelId={currentChannel.id}\n                                popoverMentionKeyClick={true}\n                                id='post_textbox'\n                                ref='textbox'\n                                disabled={readOnlyChannel}\n                                characterLimit={this.props.maxPostSize}\n                            />\n                            <span\n                                ref='createPostControls'\n                                className='post-body__actions'\n                            >\n                                {fileUpload}\n                                {emojiPicker}\n                                <a\n                                    role='button'\n                                    tabIndex='0'\n                                    aria-label={Utils.localizeMessage('create_post.send_message', 'Send a message')}\n                                    className={sendButtonClass}\n                                    onClick={this.handleSubmit}\n                                >\n                                    <i\n                                        className='fa fa-paper-plane'\n                                        title={Utils.localizeMessage('create_post.icon', 'Send Post Icon')}\n                                    />\n                                </a>\n                            </span>\n                        </div>\n                        {tutorialTip}\n                    </div>\n                    <div\n                        id='postCreateFooter'\n                        className={postFooterClassName}\n                    >\n                        <MsgTyping\n                            channelId={currentChannel.id}\n                            postId=''\n                        />\n                        {postError}\n                        {preview}\n                        {serverError}\n                    </div>\n                </div>\n                <PostDeletedModal\n                    show={this.state.showPostDeletedModal}\n                    onHide={this.hidePostDeletedModal}\n                />\n                <ConfirmModal\n                    title={notifyAllTitle}\n                    message={notifyAllMessage}\n                    confirmButtonText={notifyAllConfirm}\n                    show={this.state.showConfirmModal}\n                    onConfirm={this.handleNotifyAllConfirmation}\n                    onCancel={this.hideNotifyAllModal}\n                />\n            </form>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {getCurrentChannel, getCurrentChannelStats} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentUserId, isCurrentUserSystemAdmin, getStatusForUserId} from 'mattermost-redux/selectors/entities/users';\nimport {get, getInt, getBool} from 'mattermost-redux/selectors/entities/preferences';\nimport {\n    getCurrentUsersLatestPost,\n    getLatestReplyablePostId,\n    getMostRecentPostIdInChannel,\n    getPost,\n    makeGetCommentCountForPost,\n    makeGetMessageInHistoryItem,\n} from 'mattermost-redux/selectors/entities/posts';\nimport {\n    addMessageIntoHistory,\n    moveHistoryIndexBack,\n    moveHistoryIndexForward,\n    addReaction,\n    removeReaction,\n} from 'mattermost-redux/actions/posts';\nimport {Posts, Preferences as PreferencesRedux} from 'mattermost-redux/constants';\n\nimport {emitUserPostedEvent, postListScrollChangeToBottom} from 'actions/global_actions.jsx';\nimport {createPost, setEditingPost} from 'actions/post_actions.jsx';\nimport {selectPostFromRightHandSideSearchByPostId} from 'actions/views/rhs';\nimport {executeCommand} from 'actions/command';\nimport {getPostDraft, getIsRhsExpanded} from 'selectors/rhs';\nimport {getCurrentLocale} from 'selectors/i18n';\nimport {getEmojiMap} from 'selectors/emojis';\nimport {setGlobalItem, actionOnGlobalItemsWithPrefix} from 'actions/storage';\nimport {openModal} from 'actions/views/modals';\nimport {Constants, Preferences, StoragePrefixes, TutorialSteps, UserStatuses} from 'utils/constants.jsx';\nimport {canUploadFiles} from 'utils/file_utils';\n\nimport CreatePost from './create_post.jsx';\n\nfunction mapStateToProps() {\n    return (state, ownProps) => {\n        const config = getConfig(state);\n        const currentChannel = getCurrentChannel(state) || {};\n        const draft = getPostDraft(state, StoragePrefixes.DRAFT, currentChannel.id);\n        const recentPostIdInChannel = getMostRecentPostIdInChannel(state, currentChannel.id);\n        const post = getPost(state, recentPostIdInChannel);\n        const getCommentCountForPost = makeGetCommentCountForPost();\n        const latestReplyablePostId = getLatestReplyablePostId(state);\n        const currentChannelMembersCount = getCurrentChannelStats(state) ? getCurrentChannelStats(state).member_count : 1;\n        const enableTutorial = config.EnableTutorial === 'true';\n        const tutorialStep = getInt(state, Preferences.TUTORIAL_STEP, getCurrentUserId(state), TutorialSteps.FINISHED);\n        const enableEmojiPicker = config.EnableEmojiPicker === 'true';\n        const enableGifPicker = config.EnableGifPicker === 'true';\n        const enableConfirmNotificationsToChannel = config.EnableConfirmNotificationsToChannel === 'true';\n        const currentUserId = getCurrentUserId(state);\n        const userIsOutOfOffice = getStatusForUserId(state, currentUserId) === UserStatuses.OUT_OF_OFFICE;\n\n        return {\n            currentTeamId: getCurrentTeamId(state),\n            currentChannel,\n            currentChannelMembersCount,\n            currentUserId,\n            codeBlockOnCtrlEnter: getBool(state, PreferencesRedux.CATEGORY_ADVANCED_SETTINGS, 'code_block_ctrl_enter', true),\n            ctrlSend: getBool(state, Preferences.CATEGORY_ADVANCED_SETTINGS, 'send_on_ctrl_enter'),\n            fullWidthTextBox: get(state, Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.CHANNEL_DISPLAY_MODE, Preferences.CHANNEL_DISPLAY_MODE_DEFAULT) === Preferences.CHANNEL_DISPLAY_MODE_FULL_SCREEN,\n            showTutorialTip: enableTutorial && tutorialStep === TutorialSteps.POST_POPOVER,\n            messageInHistoryItem: makeGetMessageInHistoryItem(Posts.MESSAGE_TYPES.POST)(state),\n            draft,\n            recentPostIdInChannel,\n            commentCountForPost: getCommentCountForPost(state, {post}),\n            latestReplyablePostId,\n            locale: getCurrentLocale(state),\n            currentUsersLatestPost: getCurrentUsersLatestPost(state),\n            readOnlyChannel: ownProps.readOnlyChannel || (!isCurrentUserSystemAdmin(state) && config.ExperimentalTownSquareIsReadOnly === 'true' && currentChannel.name === Constants.DEFAULT_CHANNEL),\n            canUploadFiles: canUploadFiles(config),\n            enableEmojiPicker,\n            enableGifPicker,\n            enableConfirmNotificationsToChannel,\n            maxPostSize: parseInt(config.MaxPostSize, 10) || Constants.DEFAULT_CHARACTER_LIMIT,\n            userIsOutOfOffice,\n            rhsExpanded: getIsRhsExpanded(state),\n            emojiMap: getEmojiMap(state),\n        };\n    };\n}\n\nfunction onSubmitPost(post, fileInfos) {\n    return () => {\n        emitUserPostedEvent(post);\n        createPost(post, fileInfos);\n        postListScrollChangeToBottom();\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            addMessageIntoHistory,\n            onSubmitPost,\n            moveHistoryIndexBack,\n            moveHistoryIndexForward,\n            addReaction,\n            removeReaction,\n            setDraft: setGlobalItem,\n            clearDraftUploads: actionOnGlobalItemsWithPrefix,\n            selectPostFromRightHandSideSearchByPostId,\n            setEditingPost,\n            openModal,\n            executeCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePost);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport {savePreference} from 'actions/user_actions.jsx';\nimport {Constants, Preferences} from 'utils/constants.jsx';\nimport {useSafeUrl} from 'utils/url.jsx';\nimport AppIcons from 'images/appIcons.png';\n\nconst NUM_SCREENS = 3;\n\nexport default class TutorialIntroScreens extends React.Component {\n    static propTypes = {\n        currentUserId: PropTypes.string.isRequired,\n        teamType: PropTypes.string,\n        step: PropTypes.number,\n        townSquareDisplayName: PropTypes.string.isRequired,\n        appDownloadLink: PropTypes.string,\n        isLicensed: PropTypes.bool.isRequired,\n        restrictTeamInvite: PropTypes.string.isRequired,\n        supportEmail: PropTypes.string.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {currentScreen: 0};\n    }\n\n    handleNext = () => {\n        switch (this.state.currentScreen) {\n        case 0:\n            trackEvent('tutorial', 'tutorial_screen_1_welcome_to_mattermost_next');\n            break;\n        case 1:\n            trackEvent('tutorial', 'tutorial_screen_2_how_mattermost_works_next');\n            break;\n        case 2:\n            trackEvent('tutorial', 'tutorial_screen_3_youre_all_set_next');\n            break;\n        }\n\n        if (this.state.currentScreen < 2) {\n            this.setState({currentScreen: this.state.currentScreen + 1});\n            return;\n        }\n\n        savePreference(\n            Preferences.TUTORIAL_STEP,\n            this.props.currentUserId,\n            (this.props.step + 1).toString()\n        );\n    }\n\n    skipTutorial = (e) => {\n        e.preventDefault();\n\n        switch (this.state.currentScreen) {\n        case 0:\n            trackEvent('tutorial', 'tutorial_screen_1_welcome_to_mattermost_skip');\n            break;\n        case 1:\n            trackEvent('tutorial', 'tutorial_screen_2_how_mattermost_works_skip');\n            break;\n        case 2:\n            trackEvent('tutorial', 'tutorial_screen_3_youre_all_set_skip');\n            break;\n        }\n\n        savePreference(\n            Preferences.TUTORIAL_STEP,\n            this.props.currentUserId,\n            Constants.TutorialSteps.FINISHED.toString(),\n        );\n    }\n    createScreen = () => {\n        switch (this.state.currentScreen) {\n        case 0:\n            return this.createScreenOne();\n        case 1:\n            return this.createScreenTwo();\n        case 2:\n            return this.createScreenThree();\n        }\n        return null;\n    }\n\n    createScreenOne() {\n        const circles = this.createCircles();\n\n        return (\n            <div id='tutorialIntroOne'>\n                <h3>\n                    <FormattedMessage\n                        id='tutorial_intro.screenOne.title1'\n                        defaultMessage='Welcome to:'\n                    />\n                </h3>\n                <h1>\n                    <FormattedMessage\n                        id='tutorial_intro.screenOne.title2'\n                        defaultMessage='Mattermost'\n                    />\n                </h1>\n                <p>\n                    <FormattedMessage\n                        id='tutorial_intro.screenOne.body1'\n                        defaultMessage='Your team communication all in one place, instantly searchable and available anywhere.'\n                    />\n                </p>\n                <p>\n                    <FormattedMessage\n                        id='tutorial_intro.screenOne.body2'\n                        defaultMessage='Keep your team connected to help them achieve what matters most.'\n                    />\n                </p>\n                {circles}\n            </div>\n        );\n    }\n\n    createScreenTwo() {\n        const circles = this.createCircles();\n\n        let appDownloadLink = null;\n        let appDownloadImage = null;\n        if (this.props.appDownloadLink) {\n            const link = useSafeUrl(this.props.appDownloadLink);\n\n            // not using a FormattedHTMLMessage here since appDownloadLink is configurable and could be used\n            // to inject HTML if we're not careful\n            appDownloadLink = (\n                <FormattedMessage\n                    id='tutorial_intro.mobileApps'\n                    defaultMessage='Install the apps for {link} for easy access and notifications on the go.'\n                    values={{\n                        link: (\n                            <a\n                                id='appDownloadLink'\n                                href={link}\n                                target='_blank'\n                                rel='noopener noreferrer'\n                            >\n                                <FormattedMessage\n                                    id='tutorial_intro.mobileAppsLinkText'\n                                    defaultMessage='PC, Mac, iOS and Android'\n                                />\n                            </a>\n                        ),\n                    }}\n                />\n            );\n\n            appDownloadImage = (\n                <a\n                    id='appDownloadImage'\n                    href={link}\n                    target='_blank'\n                    rel='noopener noreferrer'\n                >\n                    <img\n                        className='tutorial__app-icons'\n                        src={AppIcons}\n                    />\n                </a>\n            );\n        }\n\n        return (\n            <div id='tutorialIntroTwo'>\n                <h3>\n                    <FormattedMessage\n                        id='tutorial_intro.screenTwo.title'\n                        defaultMessage='How Mattermost works:'\n                    />\n                </h3>\n                <p>\n                    <FormattedMessage\n                        id='tutorial_intro.screenTwo.body1'\n                        defaultMessage='Communication happens in public discussion channels, private channels and direct messages.'\n                    />\n                </p>\n                <p>\n                    <FormattedMessage\n                        id='tutorial_intro.screenTwo.body2'\n                        defaultMessage='Everything is archived and searchable from any web-enabled desktop, laptop or phone.'\n                    />\n                </p>\n                {appDownloadLink}\n                {appDownloadImage}\n                {circles}\n            </div>\n        );\n    }\n\n    createScreenThree() {\n        let inviteModalLink;\n        let inviteText;\n        const {teamType} = this.props;\n\n        if (!this.props.isLicensed || this.props.restrictTeamInvite === Constants.PERMISSIONS_ALL) {\n            if (teamType === Constants.INVITE_TEAM) {\n                inviteModalLink = (\n                    <button\n                        id='tutorialIntroInvite'\n                        className='intro-links color--link style--none'\n                        onClick={GlobalActions.showInviteMemberModal}\n                    >\n                        <FormattedMessage\n                            id='tutorial_intro.invite'\n                            defaultMessage='Invite teammates'\n                        />\n                    </button>\n                );\n            } else {\n                inviteModalLink = (\n                    <button\n                        id='tutorialIntroInvite'\n                        className='intro-links color--link style--none'\n                        onClick={GlobalActions.showGetTeamInviteLinkModal}\n                    >\n                        <FormattedMessage\n                            id='tutorial_intro.teamInvite'\n                            defaultMessage='Invite teammates'\n                        />\n                    </button>\n                );\n            }\n\n            inviteText = (\n                <p>\n                    {inviteModalLink}\n                    <FormattedMessage\n                        id='tutorial_intro.whenReady'\n                        defaultMessage={' when you\\'re ready.'}\n                    />\n                </p>\n            );\n        }\n\n        const circles = this.createCircles();\n\n        let supportInfo = null;\n        if (this.props.supportEmail) {\n            supportInfo = (\n                <p id='supportInfo'>\n                    <FormattedMessage\n                        id='tutorial_intro.support'\n                        defaultMessage='Need anything, just email us at '\n                    />\n                    <a\n                        href={'mailto:' + this.props.supportEmail}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                    >\n                        {this.props.supportEmail}\n                    </a>\n                    {'.'}\n                </p>\n            );\n        }\n\n        return (\n            <div id='tutorialIntroThree'>\n                <h3>\n                    <FormattedMessage\n                        id='tutorial_intro.allSet'\n                        defaultMessage={'You\\'re all set'}\n                    />\n                </h3>\n                {inviteText}\n                {supportInfo}\n                <FormattedMessage\n                    id='tutorial_intro.end'\n                    defaultMessage='Click \"Next\" to enter {channel}. This is the first channel teammates see when they sign up. Use it for posting updates everyone needs to know.'\n                    values={{\n                        channel: this.props.townSquareDisplayName,\n                    }}\n                />\n                {circles}\n            </div>\n        );\n    }\n\n    handleCircleClick = (e, screen) => {\n        e.preventDefault();\n        this.setState({currentScreen: screen});\n    }\n\n    createCircles = () => {\n        const circles = [];\n        for (let i = 0; i < NUM_SCREENS; i++) {\n            let className = 'circle';\n            if (i === this.state.currentScreen) {\n                className += ' active';\n            }\n\n            circles.push(\n                <a\n                    id={'tutorialIntroCircle' + i}\n                    href='#'\n                    key={'circle' + i}\n                    className={className}\n                    data-screen={i}\n                    onClick={(e) => this.handleCircleClick(e, i)}\n                />\n            );\n        }\n\n        return (\n            <div className='tutorial__circles'>\n                {circles}\n            </div>\n        );\n    }\n\n    render() {\n        const screen = this.createScreen();\n\n        return (\n            <div className='tutorial-steps__container'>\n                <div\n                    id='tutorialIntroContent'\n                    className='tutorial__content'\n                >\n                    <div className='tutorial__steps'>\n                        {screen}\n                        <div className='tutorial__footer'>\n                            <button\n                                id='tutorialNextButton'\n                                className='btn btn-primary'\n                                tabIndex='1'\n                                onClick={this.handleNext}\n                            >\n                                <FormattedMessage\n                                    id='tutorial_intro.next'\n                                    defaultMessage='Next'\n                                />\n                            </button>\n                            <a\n                                id='tutorialSkipLink'\n                                className='tutorial-skip'\n                                href='#'\n                                onClick={this.skipTutorial}\n                            >\n                                <FormattedMessage\n                                    id='tutorial_intro.skip'\n                                    defaultMessage='Skip tutorial'\n                                />\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {connect} from 'react-redux';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {getInt} from 'mattermost-redux/selectors/entities/preferences';\n\nimport {Preferences} from 'utils/constants.jsx';\n\nimport TutorialIntroScreens from './tutorial_intro_screens.jsx';\n\nfunction mapStateToProps(state) {\n    const currentUserId = getCurrentUserId(state);\n    const team = getCurrentTeam(state) || {};\n    return {\n        currentUserId,\n        teamType: team.type,\n        step: getInt(state, Preferences.TUTORIAL_STEP, currentUserId, 0),\n    };\n}\n\nexport default connect(mapStateToProps)(TutorialIntroScreens);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport TutorialIntroScreens from './tutorial_intro_screens';\n\nexport default class TutorialView extends React.Component {\n    componentDidMount() {\n        if (this.props.isRoot) {\n            $('body').addClass('app__body');\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.props.isRoot) {\n            $('body').removeClass('app__body');\n        }\n    }\n\n    render() {\n        return (\n            <div\n                id='app-content'\n                className='app__content'\n            >\n                <TutorialIntroScreens\n                    townSquareDisplayName={this.props.townSquareDisplayName}\n                    appDownloadLink={this.props.appDownloadLink}\n                    isLicensed={this.props.isLicensed}\n                    restrictTeamInvite={this.props.restrictTeamInvite}\n                    supportEmail={this.props.supportEmail}\n                />\n            </div>\n        );\n    }\n}\n\nTutorialView.propTypes = {\n    isRoot: PropTypes.bool,\n    townSquareDisplayName: PropTypes.string.isRequired,\n    appDownloadLink: PropTypes.string,\n    isLicensed: PropTypes.bool.isRequired,\n    restrictTeamInvite: PropTypes.string.isRequired,\n    supportEmail: PropTypes.string.isRequired,\n};\n\nTutorialView.defaultProps = {\n    isRoot: true,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {connect} from 'react-redux';\nimport {getChannelsNameMapInCurrentTeam} from 'mattermost-redux/selectors/entities/channels';\nimport {getLicense, getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport Constants from 'utils/constants.jsx';\n\nimport TutorialView from './tutorial_view.jsx';\n\nfunction mapStateToProps(state) {\n    const license = getLicense(state);\n    const config = getConfig(state);\n\n    const teamChannels = getChannelsNameMapInCurrentTeam(state);\n    const townSquare = teamChannels[Constants.DEFAULT_CHANNEL];\n    const townSquareDisplayName = townSquare ? townSquare.display_name : Constants.DEFAULT_CHANNEL_UI_NAME;\n\n    const appDownloadLink = config.AppDownloadLink;\n    const isLicensed = license.IsLicensed === 'true';\n    const restrictTeamInvite = config.RestrictTeamInvite;\n    const supportEmail = config.SupportEmail;\n\n    return {\n        townSquareDisplayName,\n        appDownloadLink,\n        isLicensed,\n        restrictTeamInvite,\n        supportEmail,\n    };\n}\n\nexport default connect(mapStateToProps)(TutorialView);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport deferComponentRender from 'components/deferComponentRender';\nimport ChannelHeader from 'components/channel_header';\nimport CreatePost from 'components/create_post';\nimport FileUploadOverlay from 'components/file_upload_overlay.jsx';\nimport PostView from 'components/post_view';\nimport TutorialView from 'components/tutorial';\nimport {clearMarks, mark, measure, trackEvent} from 'actions/diagnostics_actions.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class ChannelView extends React.PureComponent {\n    static propTypes = {\n        channelId: PropTypes.string.isRequired,\n        deactivatedChannel: PropTypes.bool.isRequired,\n        match: PropTypes.shape({\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n        showTutorial: PropTypes.bool.isRequired,\n        channelIsArchived: PropTypes.bool.isRequired,\n        viewArchivedChannels: PropTypes.bool.isRequired,\n        actions: PropTypes.shape({\n            goToLastViewedChannel: PropTypes.func.isRequired,\n        }),\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.createDeferredPostView();\n    }\n\n    createDeferredPostView = () => {\n        this.deferredPostView = deferComponentRender(\n            PostView,\n            <div id='post-list'/>\n        );\n    }\n\n    componentDidMount() {\n        $('body').addClass('app__body');\n\n        // IE Detection\n        if (UserAgent.isInternetExplorer() || UserAgent.isEdge()) {\n            $('body').addClass('browser--ie');\n        }\n    }\n\n    componentWillUnmount() {\n        $('body').removeClass('app__body');\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.match.url !== nextProps.match.url) {\n            this.createDeferredPostView();\n        }\n    }\n\n    getChannelView = () => {\n        return this.refs.channelView;\n    }\n\n    onClickCloseChannel = () => {\n        this.props.actions.goToLastViewedChannel();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.channelId !== this.props.channelId || prevProps.channelIsArchived !== this.props.channelIsArchived) {\n            mark('ChannelView#componentDidUpdate');\n\n            const [dur1] = measure('SidebarChannelLink#click', 'ChannelView#componentDidUpdate');\n            const [dur2] = measure('TeamLink#click', 'ChannelView#componentDidUpdate');\n\n            clearMarks([\n                'SidebarChannelLink#click',\n                'ChannelView#componentDidUpdate',\n                'TeamLink#click',\n            ]);\n\n            if (dur1 !== -1) {\n                trackEvent('performance', 'channel_switch', {duration: Math.round(dur1)});\n            }\n            if (dur2 !== -1) {\n                trackEvent('performance', 'team_switch', {duration: Math.round(dur2)});\n            }\n            if (this.props.channelIsArchived && !this.props.viewArchivedChannels) {\n                this.props.actions.goToLastViewedChannel();\n            }\n        }\n    }\n\n    render() {\n        const {channelIsArchived} = this.props;\n        if (this.props.showTutorial) {\n            return (\n                <TutorialView\n                    isRoot={false}\n                />\n            );\n        }\n\n        let createPost;\n        if (this.props.deactivatedChannel) {\n            createPost = (\n                <div\n                    className='post-create-message'\n                >\n                    <FormattedMessage\n                        id='create_post.deactivated'\n                        defaultMessage='You are viewing an archived channel with a deactivated user.'\n                    />\n                </div>\n            );\n        } else {\n            createPost = (\n                <div\n                    className='post-create__container'\n                    id='post-create'\n                >\n                    {!channelIsArchived &&\n                        <CreatePost\n                            getChannelView={this.getChannelView}\n                        />\n                    }\n                    {channelIsArchived &&\n                        <div className='channel-archived__message'>\n                            <FormattedMarkdownMessage\n                                id='archivedChannelMessage'\n                                defaultMessage='You are viewing an **archived channel**. New messages cannot be posted.'\n                            />\n                            <button\n                                className='btn btn-primary channel-archived__close-btn'\n                                onClick={this.onClickCloseChannel}\n                            >\n                                <FormattedMessage\n                                    id='center_panel.archived.closeChannel'\n                                    defaultMessage='Close Channel'\n                                />\n                            </button>\n                        </div>\n                    }\n                </div>\n            );\n        }\n\n        const DeferredPostView = this.deferredPostView;\n\n        return (\n            <div\n                ref='channelView'\n                id='app-content'\n                className='app__content'\n            >\n                <FileUploadOverlay overlayType='center'/>\n                <ChannelHeader\n                    channelId={this.props.channelId}\n                />\n                <DeferredPostView\n                    channelId={this.props.channelId}\n                />\n                {createPost}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {createSelector} from 'reselect';\nimport {getInt} from 'mattermost-redux/selectors/entities/preferences';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {withRouter} from 'react-router-dom';\n\nimport {getDirectTeammate} from 'utils/utils.jsx';\nimport {TutorialSteps, Preferences} from 'utils/constants.jsx';\n\nimport {goToLastViewedChannel} from 'actions/views/channel';\n\nimport ChannelView from './channel_view.jsx';\n\n// Temporary selector until getDirectTeammate is converted to be redux-friendly\nconst getDeactivatedChannel = createSelector(\n    (state) => state.entities.users.profiles,\n    (state, channelId) => channelId,\n    (users, channelId) => {\n        const teammate = getDirectTeammate(channelId);\n        return Boolean(teammate && teammate.delete_at);\n    }\n);\n\nfunction mapStateToProps(state) {\n    const channel = state.entities.channels.channels[state.entities.channels.currentChannelId];\n\n    const config = getConfig(state);\n    const enableTutorial = config.EnableTutorial === 'true';\n    const tutorialStep = getInt(state, Preferences.TUTORIAL_STEP, getCurrentUserId(state), TutorialSteps.FINISHED);\n    const viewArchivedChannels = config.ExperimentalViewArchivedChannels === 'true';\n\n    return {\n        channelId: channel ? channel.id : '',\n        deactivatedChannel: channel ? getDeactivatedChannel(state, channel.id) : false,\n        showTutorial: enableTutorial && tutorialStep <= TutorialSteps.INTRO_SCREENS,\n        channelIsArchived: channel ? channel.delete_at !== 0 : false,\n        viewArchivedChannels,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            goToLastViewedChannel,\n        }, dispatch),\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ChannelView));\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ChannelView from 'components/channel_view/index';\n\nexport default class ChannelIdentifierRouter extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Object from react-router\n         */\n        match: PropTypes.shape({\n            params: PropTypes.shape({\n                identifier: PropTypes.string.isRequired,\n                team: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n\n        actions: PropTypes.shape({\n            onChannelByIdentifierEnter: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.props.actions.onChannelByIdentifierEnter(props);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.match.params.team !== nextProps.match.params.team ||\n            this.props.match.params.identifier !== nextProps.match.params.identifier) {\n            this.props.actions.onChannelByIdentifierEnter(nextProps);\n        }\n    }\n\n    render() {\n        return <ChannelView/>;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {withRouter} from 'react-router-dom';\n\nimport {onChannelByIdentifierEnter} from './actions';\n\nimport ChannelIdentifierRouter from './channel_identifier_router.jsx';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            onChannelByIdentifierEnter,\n        }, dispatch),\n    };\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(ChannelIdentifierRouter));\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Route, Switch, Redirect} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport PermalinkView from 'components/permalink_view';\nimport Navbar from 'components/navbar';\nimport ChannelIdentifierRouter from 'components/channel_layout/channel_identifier_router';\n\nexport default class CenterChannel extends React.PureComponent {\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        lastChannelPath: PropTypes.string.isRequired,\n        lhsOpen: PropTypes.bool.isRequired,\n        rhsOpen: PropTypes.bool.isRequired,\n        rhsMenuOpen: PropTypes.bool.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            returnTo: '',\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.location.pathname !== nextProps.location.pathname && nextProps.location.pathname.includes('/pl/')) {\n            this.setState({returnTo: this.props.location.pathname});\n        }\n    }\n\n    render() {\n        const {lastChannelPath} = this.props;\n        const url = this.props.match.url;\n        return (\n            <div\n                key='inner-wrap'\n                className={classNames('inner-wrap', 'channel__wrap', {\n                    'move--right': this.props.lhsOpen,\n                    'move--left': this.props.rhsOpen,\n                    'move--left-small': this.props.rhsMenuOpen,\n                })}\n            >\n                <div className='row header'>\n                    <div id='navbar'>\n                        <Navbar/>\n                    </div>\n                </div>\n                <div className='row main'>\n                    <Switch>\n                        <Route\n                            path={`${url}/pl/:postid`}\n                            render={(props) => (\n                                <PermalinkView\n                                    {...props}\n                                    returnTo={this.state.returnTo}\n                                />\n                            )}\n                        />\n                        <Route\n                            path={'/:team/:path(channels|messages)/:identifier'}\n                            component={ChannelIdentifierRouter}\n                        />\n                        <Redirect to={lastChannelPath}/>\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getIsRhsOpen, getIsRhsMenuOpen} from 'selectors/rhs';\nimport {getIsLhsOpen} from 'selectors/lhs';\nimport {getLastViewedChannelNameByTeamName} from 'selectors/local_storage';\n\nimport CenterChannel from './center_channel';\n\nconst mapStateToProps = (state, ownProps) => ({\n    lastChannelPath: `${ownProps.match.url}/channels/${getLastViewedChannelNameByTeamName(state, ownProps.match.params.team)}`,\n    lhsOpen: getIsLhsOpen(state),\n    rhsOpen: getIsRhsOpen(state),\n    rhsMenuOpen: getIsRhsMenuOpen(state),\n});\n\nexport default connect(mapStateToProps)(CenterChannel);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Route} from 'react-router-dom';\n\nimport Pluggable from 'plugins/pluggable';\nimport AnnouncementBar from 'components/announcement_bar';\nimport SystemNotice from 'components/system_notice';\nimport EditPostModal from 'components/edit_post_modal';\nimport GetPostLinkModal from 'components/get_post_link_modal';\nimport GetTeamInviteLinkModal from 'components/get_team_invite_link_modal';\nimport GetPublicLinkModal from 'components/get_public_link_modal';\nimport InviteMemberModal from 'components/invite_member_modal';\nimport LeavePrivateChannelModal from 'components/leave_private_channel_modal';\nimport RemovedFromChannelModal from 'components/removed_from_channel_modal';\nimport ResetStatusModal from 'components/reset_status_modal';\nimport ShortcutsModal from 'components/shortcuts_modal.jsx';\nimport SidebarRight from 'components/sidebar_right';\nimport SidebarRightMenu from 'components/sidebar_right_menu';\nimport TeamSettingsModal from 'components/team_settings_modal.jsx';\nimport ImportThemeModal from 'components/user_settings/import_theme_modal.jsx';\nimport ModalController from 'components/modal_controller';\nimport TeamSidebar from 'components/team_sidebar';\nimport Sidebar from 'components/sidebar';\nimport * as Utils from 'utils/utils';\nimport CenterChannel from 'components/channel_layout/center_channel';\n\nexport default class ChannelController extends React.Component {\n    static propTypes = {\n        pathName: PropTypes.string.isRequired,\n        teamType: PropTypes.string.isRequired,\n    };\n\n    shouldComponentUpdate(nextProps) {\n        return this.props.teamType !== nextProps.teamType || this.props.pathName !== nextProps.pathName;\n    }\n\n    render() {\n        return (\n            <div className='channel-view'>\n                <AnnouncementBar/>\n                <SystemNotice/>\n\n                <div className='container-fluid'>\n                    <SidebarRight/>\n                    <SidebarRightMenu teamType={this.props.teamType}/>\n                    <Route component={TeamSidebar}/>\n                    <Route component={Sidebar}/>\n                    <Route component={CenterChannel}/>\n                    <Pluggable pluggableName='Root'/>\n                    <GetPostLinkModal/>\n                    <GetPublicLinkModal/>\n                    <GetTeamInviteLinkModal/>\n                    <InviteMemberModal/>\n                    <ImportThemeModal/>\n                    <TeamSettingsModal/>\n                    <EditPostModal/>\n                    <RemovedFromChannelModal/>\n                    <ResetStatusModal/>\n                    <LeavePrivateChannelModal/>\n                    <ShortcutsModal isMac={Utils.isMac()}/>\n                    <ModalController/>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport iNoBounce from 'inobounce';\n\nimport {startPeriodicStatusUpdates, stopPeriodicStatusUpdates} from 'actions/status_actions.jsx';\nimport {startPeriodicSync, stopPeriodicSync, reconnect} from 'actions/websocket_actions.jsx';\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport {loadProfilesForSidebar} from 'actions/user_actions.jsx';\nimport {makeAsyncComponent} from 'components/async_load';\nimport loadBackstageController from 'bundle-loader?lazy!components/backstage';\nimport ChannelController from 'components/channel_layout/channel_controller';\n\nconst BackstageController = makeAsyncComponent(loadBackstageController);\n\nlet wakeUpInterval;\nlet lastTime = (new Date()).getTime();\nconst WAKEUP_CHECK_INTERVAL = 30000; // 30 seconds\nconst WAKEUP_THRESHOLD = 60000; // 60 seconds\nconst UNREAD_CHECK_TIME_MILLISECONDS = 10000;\nconst TEAMS_PER_PAGE = 200;\n\nexport default class NeedsTeam extends React.Component {\n    static propTypes = {\n        params: PropTypes.object,\n        currentUser: PropTypes.object,\n        currentChannelId: PropTypes.string,\n        currentTeamId: PropTypes.string,\n        teamsList: PropTypes.array,\n        actions: PropTypes.shape({\n            fetchMyChannelsAndMembers: PropTypes.func.isRequired,\n            getMyTeamUnreads: PropTypes.func.isRequired,\n            viewChannel: PropTypes.func.isRequired,\n            markChannelAsRead: PropTypes.func.isRequired,\n            getTeams: PropTypes.func.isRequired,\n            joinTeam: PropTypes.func.isRequired,\n            selectTeam: PropTypes.func.isRequired,\n            setPreviousTeamId: PropTypes.func.isRequired,\n            loadStatusesForChannelAndSidebar: PropTypes.func.isRequired,\n        }).isRequired,\n        theme: PropTypes.object.isRequired,\n        mfaRequired: PropTypes.bool.isRequired,\n\n        /*\n         * Object from react-router\n         */\n        match: PropTypes.shape({\n            params: PropTypes.shape({\n                team: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        history: PropTypes.object.isRequired,\n    };\n\n    constructor(params) {\n        super(params);\n        this.blurTime = new Date().getTime();\n\n        if (this.props.mfaRequired) {\n            this.props.history.push('/mfa/setup');\n            return;\n        }\n\n        clearInterval(wakeUpInterval);\n\n        wakeUpInterval = setInterval(() => {\n            const currentTime = (new Date()).getTime();\n            if (currentTime > (lastTime + WAKEUP_THRESHOLD)) { // ignore small delays\n                console.log('computer woke up - fetching latest'); //eslint-disable-line no-console\n                reconnect(false);\n            }\n            lastTime = currentTime;\n        }, WAKEUP_CHECK_INTERVAL);\n\n        const team = this.updateCurrentTeam(this.props);\n\n        this.state = {\n            team,\n            finishedFetchingChannels: false,\n        };\n\n        if (!team) {\n            this.joinTeam(this.props);\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.match.params.team !== nextProps.match.params.team) {\n            const team = this.updateCurrentTeam(nextProps);\n            this.setState({\n                team,\n            });\n            if (!team) {\n                this.joinTeam(nextProps);\n            }\n        }\n    }\n\n    componentDidMount() {\n        startPeriodicStatusUpdates();\n        startPeriodicSync();\n\n        // Set up tracking for whether the window is active\n        window.isActive = true;\n        Utils.applyTheme(this.props.theme);\n\n        if (UserAgent.isIosSafari()) {\n            // Use iNoBounce to prevent scrolling past the boundaries of the page\n            iNoBounce.enable();\n        }\n\n        window.addEventListener('focus', this.handleFocus);\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('keydown', this.onShortcutKeyDown);\n    }\n\n    componentDidUpdate(prevProps) {\n        const {theme} = this.props;\n        if (!Utils.areObjectsEqual(prevProps.theme, theme)) {\n            Utils.applyTheme(theme);\n        }\n    }\n\n    componentWillUnmount() {\n        window.isActive = false;\n        stopPeriodicStatusUpdates();\n        stopPeriodicSync();\n        if (UserAgent.isIosSafari()) {\n            iNoBounce.disable();\n        }\n\n        clearInterval(wakeUpInterval);\n        window.removeEventListener('focus', this.handleFocus);\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('keydown', this.onShortcutKeyDown);\n    }\n\n    handleBlur = () => {\n        window.isActive = false;\n        this.blurTime = new Date().getTime();\n        if (this.props.currentUser) {\n            this.props.actions.viewChannel('');\n        }\n    }\n\n    handleFocus = () => {\n        this.props.actions.markChannelAsRead(this.props.currentChannelId);\n        window.isActive = true;\n\n        if (new Date().getTime() - this.blurTime > UNREAD_CHECK_TIME_MILLISECONDS) {\n            this.props.actions.fetchMyChannelsAndMembers(this.props.currentTeamId).then(loadProfilesForSidebar);\n        }\n    }\n\n    joinTeam = async (props) => {\n        const openTeams = await this.props.actions.getTeams(0, TEAMS_PER_PAGE);\n        const team = openTeams.data.find((teamObj) => teamObj.name === props.match.params.team);\n        if (team) {\n            const {error} = await props.actions.joinTeam(team.invite_id, team.id);\n            if (error) {\n                props.history.push('/error?type=team_not_found');\n            } else {\n                this.setState({team});\n                this.initTeam(team);\n            }\n        } else {\n            props.history.push('/error?type=team_not_found');\n        }\n    }\n\n    initTeam = (team) => {\n        // If current team is set, then this is not first load\n        // The first load action pulls team unreads\n        this.props.actions.getMyTeamUnreads();\n        this.props.actions.selectTeam(team);\n        this.props.actions.setPreviousTeamId(team.id);\n        GlobalActions.emitCloseRightHandSide();\n\n        this.props.actions.fetchMyChannelsAndMembers(team.id).then(\n            () => {\n                this.setState({\n                    finishedFetchingChannels: true,\n                });\n            }\n        );\n\n        this.props.actions.loadStatusesForChannelAndSidebar();\n        loadProfilesForSidebar();\n\n        return team;\n    }\n\n    updateCurrentTeam = (props) => {\n        // First check to make sure you're in the current team\n        // for the current url.\n        const team = props.teamsList ? props.teamsList.find((teamObj) => teamObj.name === props.match.params.team) : null;\n        if (team) {\n            this.initTeam(team);\n            return team;\n        }\n        return null;\n    }\n\n    onShortcutKeyDown = (e) => {\n        if (e.shiftKey && Utils.cmdOrCtrlPressed(e) && Utils.isKeyPressed(e, Constants.KeyCodes.L)) {\n            const sidebar = document.getElementById('sidebar-right');\n            if (sidebar) {\n                if (sidebar.className.match('sidebar--right sidebar--right--expanded move--left')) {\n                    const replyTextbox = document.getElementById('reply_textbox');\n                    if (replyTextbox) {\n                        replyTextbox.focus();\n                    }\n                } else {\n                    const postTextbox = document.getElementById('post_textbox');\n                    if (postTextbox) {\n                        postTextbox.focus();\n                    }\n                }\n            }\n        }\n    }\n\n    render() {\n        if (this.state.team === null || this.state.finishedFetchingChannels === false) {\n            return <div/>;\n        }\n        const teamType = this.state.team ? this.state.team.type : '';\n\n        return (\n            <Switch>\n                <Route\n                    path={'/:team/integrations'}\n                    component={BackstageController}\n                />\n                <Route\n                    path={'/:team/emoji'}\n                    component={BackstageController}\n                />\n                <Route\n                    render={(renderProps) => (\n                        <ChannelController\n                            pathName={renderProps.location.pathname}\n                            teamType={teamType}\n                        />\n                    )}\n                />\n            </Switch>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {withRouter} from 'react-router-dom';\n\nimport {fetchMyChannelsAndMembers, markChannelAsRead, viewChannel} from 'mattermost-redux/actions/channels';\nimport {getMyTeamUnreads, getTeams, joinTeam, selectTeam} from 'mattermost-redux/actions/teams';\nimport {getTheme} from 'mattermost-redux/selectors/entities/preferences';\nimport {getLicense, getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\nimport {getCurrentTeamId, getMyTeams} from 'mattermost-redux/selectors/entities/teams';\nimport {getCurrentChannelId} from 'mattermost-redux/selectors/entities/channels';\n\nimport {loadStatusesForChannelAndSidebar} from 'actions/status_actions';\nimport {setPreviousTeamId} from 'actions/local_storage';\nimport {checkIfMFARequired} from 'utils/route';\n\nimport NeedsTeam from './needs_team.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const license = getLicense(state);\n    const config = getConfig(state);\n\n    return {\n        theme: getTheme(state),\n        mfaRequired: checkIfMFARequired(license, config, ownProps.match.url),\n        currentUser: getCurrentUser(state),\n        currentTeamId: getCurrentTeamId(state),\n        teamsList: getMyTeams(state),\n        currentChannelId: getCurrentChannelId(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            fetchMyChannelsAndMembers,\n            getMyTeamUnreads,\n            viewChannel,\n            markChannelAsRead,\n            getTeams,\n            joinTeam,\n            setPreviousTeamId,\n            selectTeam,\n            loadStatusesForChannelAndSidebar,\n        }, dispatch),\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NeedsTeam));\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {IntlProvider as BaseIntlProvider} from 'react-intl';\n\nimport {Client4} from 'mattermost-redux/client';\nimport {setLocalizeFunction} from 'mattermost-redux/utils/i18n_utils';\n\nimport * as I18n from 'i18n/i18n';\n\nimport {localizeMessage} from 'utils/utils';\n\nexport default class IntlProvider extends React.PureComponent {\n    static propTypes = {\n        children: PropTypes.element.isRequired,\n        locale: PropTypes.string.isRequired,\n        translations: PropTypes.object,\n        actions: PropTypes.shape({\n            loadTranslations: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    componentDidMount() {\n        // Initialize browser's i18n data\n        I18n.doAddLocaleData();\n\n        // Pass localization function back to mattermost-redux\n        setLocalizeFunction(localizeMessage);\n\n        this.handleLocaleChange(this.props.locale);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.locale !== this.props.locale) {\n            this.handleLocaleChange(this.props.locale);\n        }\n    }\n\n    handleLocaleChange = (locale) => {\n        Client4.setAcceptLanguage(locale);\n\n        this.loadTranslationsIfNecessary(locale);\n    }\n\n    loadTranslationsIfNecessary = (locale) => {\n        if (this.props.translations) {\n            // Already loaded\n            return;\n        }\n\n        const localeInfo = I18n.getLanguageInfo(locale);\n\n        if (locale === 'en' || !localeInfo) {\n            // English is loaded by default and invalid locales fall back to English, so we should never hit this\n            return;\n        }\n\n        this.props.actions.loadTranslations(locale, localeInfo.url);\n    }\n\n    render() {\n        if (!this.props.translations) {\n            return null;\n        }\n\n        return (\n            <BaseIntlProvider\n                key={this.props.locale}\n                locale={this.props.locale}\n                messages={this.props.translations}\n            >\n                {this.props.children}\n            </BaseIntlProvider>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {loadTranslations} from 'actions/views/root';\n\nimport {getCurrentLocale, getTranslations} from 'selectors/i18n';\n\nimport IntlProvider from './intl_provider';\n\nfunction mapStateToProps(state) {\n    const locale = getCurrentLocale(state);\n\n    return {\n        locale,\n        translations: getTranslations(state, locale),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadTranslations,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IntlProvider);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {shouldShowTermsOfService} from 'mattermost-redux/selectors/entities/users';\n\nimport {loadMeAndConfig} from 'actions/views/root';\n\nimport Root from './root.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const showTermsOfService = shouldShowTermsOfService(state);\n\n    return {\n        diagnosticsEnabled: config.DiagnosticsEnabled === 'true',\n        noAccounts: config.NoAccounts === 'true',\n        diagnosticId: config.DiagnosticId,\n        showTermsOfService,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadMeAndConfig,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Root);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Client4} from 'mattermost-redux/client';\nimport {Posts} from 'mattermost-redux/constants';\nimport {getTeammateNameDisplaySetting} from 'mattermost-redux/selectors/entities/preferences';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {\n    blendColors,\n    changeOpacity,\n} from 'mattermost-redux/utils/theme_utils';\nimport {displayUsername} from 'mattermost-redux/utils/user_utils';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {searchForTerm} from 'actions/post_actions';\nimport UserStore from 'stores/user_store.jsx';\nimport ChannelStore from 'stores/channel_store.jsx';\nimport PreferenceStore from 'stores/preference_store.jsx';\nimport TeamStore from 'stores/team_store.jsx';\nimport Constants, {FileTypes, UserStatuses} from 'utils/constants.jsx';\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport bing from 'images/bing.mp3';\nimport {t} from 'utils/i18n';\nimport store from 'stores/redux_store.jsx';\nimport {showNotification} from 'utils/notifications.jsx';\nimport {getCurrentLocale, getTranslations} from 'selectors/i18n';\n\nexport function isMac() {\n    return navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n}\n\nexport function createSafeId(prop) {\n    if (prop === null) {\n        return null;\n    }\n\n    var str = '';\n\n    if (prop.props && prop.props.defaultMessage) {\n        str = prop.props.defaultMessage;\n    } else {\n        str = prop.toString();\n    }\n\n    return str.replace(new RegExp(' ', 'g'), '_');\n}\n\nexport function cmdOrCtrlPressed(e, allowAlt = false) {\n    if (allowAlt) {\n        return (isMac() && e.metaKey) || (!isMac() && e.ctrlKey);\n    }\n    return (isMac() && e.metaKey) || (!isMac() && e.ctrlKey && !e.altKey);\n}\n\nexport function isKeyPressed(event, key) {\n    // There are two types of keyboards\n    // 1. English with different layouts(Ex: Dvorak)\n    // 2. Different language keyboards(Ex: Russian)\n\n    if (event.keyCode === Constants.KeyCodes.COMPOSING[1]) {\n        return false;\n    }\n\n    // checks for event.key for older browsers and also for the case of different English layout keyboards.\n    if (typeof event.key !== 'undefined' && event.key !== 'Unidentified' && event.key !== 'Dead') {\n        const isPressedByCode = event.key === key[0] || event.key === key[0].toUpperCase();\n        if (isPressedByCode) {\n            return true;\n        }\n    }\n\n    // used for different language keyboards to detect the position of keys\n    return event.keyCode === key[1];\n}\n\nexport function isInRole(roles, inRole) {\n    if (roles) {\n        var parts = roles.split(' ');\n        for (var i = 0; i < parts.length; i++) {\n            if (parts[i] === inRole) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function isChannelAdmin(isLicensed, roles) {\n    if (!isLicensed) {\n        return false;\n    }\n\n    if (isInRole(roles, 'channel_admin')) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isAdmin(roles) {\n    if (isInRole(roles, 'team_admin')) {\n        return true;\n    }\n\n    if (isInRole(roles, 'system_admin')) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isSystemAdmin(roles) {\n    if (isInRole(roles, 'system_admin')) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function notifyMe(title, body, channel, teamId, silent) {\n    showNotification({title,\n        body,\n        requireInteraction: false,\n        silent,\n        onClick: () => {\n            window.focus();\n            if (channel && (channel.type === Constants.DM_CHANNEL || channel.type === Constants.GM_CHANNEL)) {\n                browserHistory.push(TeamStore.getCurrentTeamRelativeUrl() + '/channels/' + channel.name);\n            } else if (channel) {\n                browserHistory.push(TeamStore.getTeamRelativeUrl(teamId) + '/channels/' + channel.name);\n            } else if (teamId) {\n                browserHistory.push(TeamStore.getTeamRelativeUrl(teamId) + `/channels/${Constants.DEFAULT_CHANNEL}`);\n            } else {\n                browserHistory.push(TeamStore.getCurrentTeamRelativeUrl() + `/channels/${Constants.DEFAULT_CHANNEL}`);\n            }\n        },\n    }).catch(() => {\n        // Ignore the failure to display the notification.\n    });\n}\n\nvar canDing = true;\n\nexport function ding() {\n    if (hasSoundOptions() && canDing) {\n        var audio = new Audio(bing);\n        audio.play();\n        canDing = false;\n        setTimeout(() => {\n            canDing = true;\n        }, 3000);\n    }\n}\n\nexport function hasSoundOptions() {\n    return (!(UserAgent.isFirefox()) && !(UserAgent.isEdge()));\n}\n\nexport function getDateForUnixTicks(ticks) {\n    return new Date(ticks);\n}\n\nexport function displayDate(ticks) {\n    var d = new Date(ticks);\n    var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    return monthNames[d.getMonth()] + ' ' + d.getDate() + ', ' + d.getFullYear();\n}\n\nexport function displayTime(ticks, utc) {\n    const d = new Date(ticks);\n    let hours;\n    let minutes;\n    let ampm = '';\n    let timezone = '';\n\n    if (utc) {\n        hours = d.getUTCHours();\n        minutes = d.getUTCMinutes();\n        timezone = ' UTC';\n    } else {\n        hours = d.getHours();\n        minutes = d.getMinutes();\n    }\n\n    if (minutes <= 9) {\n        minutes = '0' + minutes;\n    }\n\n    const useMilitaryTime = PreferenceStore.getBool(Constants.Preferences.CATEGORY_DISPLAY_SETTINGS, 'use_military_time');\n    if (!useMilitaryTime) {\n        ampm = ' AM';\n        if (hours >= 12) {\n            ampm = ' PM';\n        }\n\n        hours %= 12;\n        if (!hours) {\n            hours = '12';\n        }\n    }\n\n    return hours + ':' + minutes + ampm + timezone;\n}\n\n// returns Unix timestamp in milliseconds\nexport function getTimestamp() {\n    return Date.now();\n}\n\n// Replaces all occurrences of a pattern\nexport function loopReplacePattern(text, pattern, replacement) {\n    let result = text;\n\n    let match = pattern.exec(result);\n    while (match) {\n        result = result.replace(pattern, replacement);\n        match = pattern.exec(result);\n    }\n\n    return result;\n}\n\n// extracts the first link from the text\nexport function extractFirstLink(text) {\n    const pattern = /(^|[\\s\\n]|<br\\/?>)((?:https?|ftp):\\/\\/[-A-Z0-9+\\u0026\\u2019@#/%?=()~_|!:,.;]*[-A-Z0-9+\\u0026@#/%=~()_|])/i;\n    let inText = text;\n\n    // strip out code blocks\n    inText = inText.replace(/`[^`]*`/g, '');\n\n    // strip out inline markdown images\n    inText = inText.replace(/!\\[[^\\]]*]\\([^)]*\\)/g, '');\n\n    // remove markdown *, ~~ and _ characters\n    inText = loopReplacePattern(inText, /(\\*|~~)(.*?)\\1/, '$2');\n    inText = loopReplacePattern(inText, /([\\s\\n]|^)_(.*?)_([\\s\\n]|$)/, '$1$2$3');\n\n    const match = pattern.exec(inText);\n    if (match) {\n        return match[0].trim();\n    }\n\n    return '';\n}\n\n// Taken from http://stackoverflow.com/questions/1068834/object-comparison-in-javascript and modified slightly\nexport function areObjectsEqual(x, y) {\n    let p;\n    const leftChain = [];\n    const rightChain = [];\n\n    // Remember that NaN === NaN returns false\n    // and isNaN(undefined) returns true\n    if (isNaN(x) && isNaN(y) && typeof x === 'number' && typeof y === 'number') {\n        return true;\n    }\n\n    // Compare primitives and functions.\n    // Check if both arguments link to the same object.\n    // Especially useful on step when comparing prototypes\n    if (x === y) {\n        return true;\n    }\n\n    // Works in case when functions are created in constructor.\n    // Comparing dates is a common scenario. Another built-ins?\n    // We can even handle functions passed across iframes\n    if ((typeof x === 'function' && typeof y === 'function') ||\n        (x instanceof Date && y instanceof Date) ||\n        (x instanceof RegExp && y instanceof RegExp) ||\n        (x instanceof String && y instanceof String) ||\n        (x instanceof Number && y instanceof Number)) {\n        return x.toString() === y.toString();\n    }\n\n    if (x instanceof Map && y instanceof Map) {\n        return areMapsEqual(x, y);\n    }\n\n    // At last checking prototypes as good a we can\n    if (!(x instanceof Object && y instanceof Object)) {\n        return false;\n    }\n\n    if (x.isPrototypeOf(y) || y.isPrototypeOf(x)) {\n        return false;\n    }\n\n    if (x.constructor !== y.constructor) {\n        return false;\n    }\n\n    if (x.prototype !== y.prototype) {\n        return false;\n    }\n\n    // Check for infinitive linking loops\n    if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1) {\n        return false;\n    }\n\n    // Quick checking of one object being a subset of another.\n    for (p in y) {\n        if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n            return false;\n        } else if (typeof y[p] !== typeof x[p]) {\n            return false;\n        }\n    }\n\n    for (p in x) { //eslint-disable-line guard-for-in\n        if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n            return false;\n        } else if (typeof y[p] !== typeof x[p]) {\n            return false;\n        }\n\n        switch (typeof (x[p])) {\n        case 'object':\n        case 'function':\n\n            leftChain.push(x);\n            rightChain.push(y);\n\n            if (!areObjectsEqual(x[p], y[p])) {\n                return false;\n            }\n\n            leftChain.pop();\n            rightChain.pop();\n            break;\n\n        default:\n            if (x[p] !== y[p]) {\n                return false;\n            }\n            break;\n        }\n    }\n\n    return true;\n}\n\nexport function areMapsEqual(a, b) {\n    if (a.size !== b.size) {\n        return false;\n    }\n\n    for (const [key, value] of a) {\n        if (!b.has(key)) {\n            return false;\n        }\n\n        if (!areObjectsEqual(value, b.get(key))) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function replaceHtmlEntities(text) {\n    var tagsToReplace = {\n        '&amp;': '&',\n        '&lt;': '<',\n        '&gt;': '>',\n    };\n    var newtext = text;\n    for (var tag in tagsToReplace) {\n        if (Reflect.apply({}.hasOwnProperty, this, [tagsToReplace, tag])) {\n            var regex = new RegExp(tag, 'g');\n            newtext = newtext.replace(regex, tagsToReplace[tag]);\n        }\n    }\n    return newtext;\n}\n\nexport function insertHtmlEntities(text) {\n    var tagsToReplace = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n    };\n    var newtext = text;\n    for (var tag in tagsToReplace) {\n        if (Reflect.apply({}.hasOwnProperty, this, [tagsToReplace, tag])) {\n            var regex = new RegExp(tag, 'g');\n            newtext = newtext.replace(regex, tagsToReplace[tag]);\n        }\n    }\n    return newtext;\n}\n\nexport function isGIFImage(extin) {\n    return extin.toLowerCase() === Constants.IMAGE_TYPE_GIF;\n}\n\nconst removeQuerystringOrHash = (extin) => {\n    return extin.split(/[?#]/)[0];\n};\n\nexport const getFileType = (extin) => {\n    const ext = removeQuerystringOrHash(extin.toLowerCase());\n\n    if (Constants.IMAGE_TYPES.indexOf(ext) > -1) {\n        return FileTypes.IMAGE;\n    }\n\n    if (Constants.AUDIO_TYPES.indexOf(ext) > -1) {\n        return FileTypes.AUDIO;\n    }\n\n    if (Constants.VIDEO_TYPES.indexOf(ext) > -1) {\n        return FileTypes.VIDEO;\n    }\n\n    if (Constants.SPREADSHEET_TYPES.indexOf(ext) > -1) {\n        return FileTypes.SPREADSHEET;\n    }\n\n    if (Constants.CODE_TYPES.indexOf(ext) > -1) {\n        return FileTypes.CODE;\n    }\n\n    if (Constants.WORD_TYPES.indexOf(ext) > -1) {\n        return FileTypes.WORD;\n    }\n\n    if (Constants.PRESENTATION_TYPES.indexOf(ext) > -1) {\n        return FileTypes.PRESENTATION;\n    }\n\n    if (Constants.PDF_TYPES.indexOf(ext) > -1) {\n        return FileTypes.PDF;\n    }\n\n    if (Constants.PATCH_TYPES.indexOf(ext) > -1) {\n        return FileTypes.PATCH;\n    }\n\n    if (Constants.SVG_TYPES.indexOf(ext) > -1) {\n        return FileTypes.SVG;\n    }\n\n    return FileTypes.OTHER;\n};\n\nexport function getFileIconPath(fileInfo) {\n    const fileType = getFileType(fileInfo.extension);\n\n    var icon;\n    if (fileType in Constants.ICON_FROM_TYPE) {\n        icon = Constants.ICON_FROM_TYPE[fileType];\n    } else {\n        icon = Constants.ICON_FROM_TYPE.other;\n    }\n\n    return icon;\n}\n\nexport function getIconClassName(fileTypeIn) {\n    var fileType = fileTypeIn.toLowerCase();\n\n    if (fileType in Constants.ICON_NAME_FROM_TYPE) {\n        return Constants.ICON_NAME_FROM_TYPE[fileType];\n    }\n\n    return 'generic';\n}\n\nexport function toTitleCase(str) {\n    function doTitleCase(txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    }\n    return str.replace(/\\w\\S*/g, doTitleCase);\n}\n\nexport function isHexColor(value) {\n    return value && (/^#[0-9a-f]{3}([0-9a-f]{3})?$/i).test(value);\n}\n\nexport function applyTheme(theme) {\n    if (theme.sidebarBg) {\n        changeCss('.app__body .sidebar--left .sidebar__switcher, .sidebar--left, .sidebar--left .sidebar__divider .sidebar__divider__text, .app__body .modal .settings-modal .settings-table .settings-links, .app__body .sidebar--menu', 'background:' + theme.sidebarBg);\n        changeCss('body.app__body', 'scrollbar-face-color:' + theme.sidebarBg);\n        changeCss('@media(max-width: 768px){.app__body .modal .settings-modal:not(.settings-modal--tabless):not(.display--content) .modal-content', 'background:' + theme.sidebarBg);\n    }\n\n    if (theme.sidebarText) {\n        changeCss('.app__body .ps-container > .ps-scrollbar-y-rail > .ps-scrollbar-y', 'background:' + theme.sidebarText);\n        changeCss('.app__body .ps-container:hover .ps-scrollbar-y-rail:hover, .app__body .sidebar__switcher button:hover', 'background:' + changeOpacity(theme.sidebarText, 0.15));\n        changeCss('.app__body .sidebar--left .nav-pills__container li > h4, .app__body .sidebar--left .nav-pills__container li .sidebar-item, .app__body .sidebar--left .nav-pills__container li > .nav-more, .app__body .sidebar--right, .app__body .modal .settings-modal .nav-pills>li button', 'color:' + changeOpacity(theme.sidebarText, 0.6));\n        changeCss('@media(max-width: 768px){.app__body .modal .settings-modal .settings-table .nav>li>a, .app__body .sidebar--menu', 'color:' + changeOpacity(theme.sidebarText, 0.8));\n        changeCss('.app__body .sidebar--left .add-channel-btn', 'color:' + changeOpacity(theme.sidebarText, 0.8));\n        changeCss('.sidebar--left .add-channel-btn:hover, .sidebar--left .add-channel-btn:focus', 'color:' + theme.sidebarText);\n        changeCss('.sidebar--left .status .offline--icon, .app__body .sidebar--menu svg, .app__body .sidebar-item .icon', 'fill:' + theme.sidebarText);\n        changeCss('.sidebar--left .status.status--group', 'background:' + changeOpacity(theme.sidebarText, 0.3));\n        changeCss('@media(max-width: 768px){.app__body .modal .settings-modal .settings-table .nav>li>button, .app__body .sidebar--menu .divider', 'border-color:' + changeOpacity(theme.sidebarText, 0.2));\n        changeCss('@media(max-width: 768px){.app__body .modal .settings-modal .settings-table .nav>li>button, .app__body .modal .settings-modal .settings-table .nav>li.active>button', 'color:' + theme.sidebarText);\n        changeCss('.app__body .sidebar--left .sidebar__switcher', 'border-color:' + changeOpacity(theme.sidebarText, 0.2));\n        changeCss('.app__body .team-sidebar .team-btn .badge', 'border-color:' + changeOpacity(theme.sidebarText, 0.5));\n        changeCss('@media(max-width: 768px){.sidebar--left .add-channel-btn:hover, .sidebar--left .add-channel-btn:focus', 'color:' + changeOpacity(theme.sidebarText, 0.6));\n        changeCss('@media(max-width: 768px){.app__body .search__icon svg', 'stroke:' + theme.sidebarText);\n        changeCss('.app__body .sidebar--left .sidebar__switcher span', 'color:' + theme.sidebarText);\n        changeCss('.app__body .sidebar--left .sidebar__switcher button svg', 'fill:' + theme.sidebarText);\n        changeCss('.channel-header .channel-header_plugin-dropdown a, .app__body .sidebar__switcher button', 'background:' + changeOpacity(theme.sidebarText, 0.08));\n    }\n\n    if (theme.sidebarUnreadText) {\n        changeCss('.sidebar--left .nav-pills__container li .sidebar-item.unread-title', 'color:' + theme.sidebarUnreadText);\n    }\n\n    if (theme.sidebarTextHoverBg) {\n        changeCss('.sidebar--left .nav-pills__container li .sidebar-item:hover, .sidebar--left .nav-pills__container li > .nav-more:hover, .app__body .modal .settings-modal .nav-pills>li:hover button', 'background:' + theme.sidebarTextHoverBg);\n    }\n\n    if (theme.sidebarTextActiveBorder) {\n        changeCss('.sidebar--left .nav li.active .sidebar-item:before, .app__body .modal .settings-modal .nav-pills>li.active button:before', 'background:' + theme.sidebarTextActiveBorder);\n        changeCss('.sidebar--left .sidebar__divider:before', 'background:' + changeOpacity(theme.sidebarTextActiveBorder, 0.5));\n        changeCss('.sidebar--left .sidebar__divider', 'color:' + theme.sidebarTextActiveBorder);\n        changeCss('.multi-teams .team-sidebar .team-wrapper .team-container.active:before', 'background:' + theme.sidebarTextActiveBorder);\n        changeCss('.multi-teams .team-sidebar .team-wrapper .team-container.unread:before', 'background:' + theme.sidebarTextActiveBorder);\n    }\n\n    if (theme.sidebarTextActiveColor) {\n        changeCss('.sidebar--left .nav-pills__container li.active .sidebar-item, .sidebar--left .nav-pills__container li.active .sidebar-item:hover, .sidebar--left .nav-pills__container li.active .sidebar-item:focus, .app__body .modal .settings-modal .nav-pills>li.active button, .app__body .modal .settings-modal .nav-pills>li.active button:hover, .app__body .modal .settings-modal .nav-pills>li.active button:active', 'color:' + theme.sidebarTextActiveColor);\n        changeCss('.sidebar--left .nav li.active .sidebar-item, .sidebar--left .nav li.active .sidebar-item:hover, .sidebar--left .nav li.active .sidebar-item:focus', 'background:' + changeOpacity(theme.sidebarTextActiveColor, 0.1));\n        changeCss('@media(max-width: 768px){.app__body .modal .settings-modal .nav-pills > li.active button', 'color:' + changeOpacity(theme.sidebarText, 0.8));\n    }\n\n    if (theme.sidebarHeaderBg) {\n        changeCss('.app__body #status-dropdown .status-wrapper .status, .app__body #status-dropdown .status-wrapper .status-edit, .sidebar--left .team__header, .app__body .sidebar--menu .team__header, .app__body .post-list__timestamp > div', 'background:' + theme.sidebarHeaderBg);\n        changeCss('.app__body .modal .modal-header', 'background:' + theme.sidebarHeaderBg);\n        changeCss('.app__body .multi-teams .team-sidebar, .app__body #navbar .navbar-default', 'background:' + theme.sidebarHeaderBg);\n        changeCss('@media(max-width: 768px){.app__body .search-bar__container', 'background:' + theme.sidebarHeaderBg);\n        changeCss('.app__body .attachment .attachment__container', 'border-left-color:' + theme.sidebarHeaderBg);\n    }\n\n    if (theme.sidebarHeaderTextColor) {\n        changeCss('.app__body #status-dropdown .status-wrapper .status, .app__body #status-dropdown .status-wrapper .status-edit, .multi-teams .team-sidebar .team-wrapper .team-container .team-btn, .sidebar--left .team__header .header__info, .app__body .sidebar--menu .team__header .header__info, .app__body .post-list__timestamp > div', 'color:' + theme.sidebarHeaderTextColor);\n        changeCss('.app__body .icon--sidebarHeaderTextColor svg, .app__body .sidebar-header-dropdown__icon svg', 'fill:' + theme.sidebarHeaderTextColor);\n        changeCss('.sidebar--left .team__header .user__name, .app__body .sidebar--menu .team__header .user__name', 'color:' + changeOpacity(theme.sidebarHeaderTextColor, 0.8));\n        changeCss('.sidebar--left .team__header:hover .user__name, .app__body .sidebar--menu .team__header:hover .user__name', 'color:' + theme.sidebarHeaderTextColor);\n        changeCss('.app__body .modal .modal-header .modal-title, .app__body .modal .modal-header .modal-title .name, .app__body .modal .modal-header button.close', 'color:' + theme.sidebarHeaderTextColor);\n        changeCss('.app__body #navbar .navbar-default .navbar-brand', 'color:' + theme.sidebarHeaderTextColor);\n        changeCss('.app__body #navbar .navbar-default .navbar-toggle .icon-bar', 'background:' + theme.sidebarHeaderTextColor);\n        changeCss('.app__body .post-list__timestamp > div, .app__body .multi-teams .team-sidebar .team-wrapper .team-container a:hover .team-btn__content, .app__body .multi-teams .team-sidebar .team-wrapper .team-container.active .team-btn__content', 'border-color:' + changeOpacity(theme.sidebarHeaderTextColor, 0.5));\n        changeCss('.app__body .team-btn', 'border-color:' + changeOpacity(theme.sidebarHeaderTextColor, 0.3));\n        changeCss('@media(max-width: 768px){.app__body .search-bar__container', 'color:' + theme.sidebarHeaderTextColor);\n        changeCss('.app__body .navbar-right__icon', 'background:' + changeOpacity(theme.sidebarHeaderTextColor, 0.2));\n        changeCss('.app__body .navbar-right__icon:hover, .app__body .navbar-right__icon:focus', 'background:' + changeOpacity(theme.sidebarHeaderTextColor, 0.3));\n        changeCss('.app__body .navbar-right__icon svg', 'fill:' + theme.sidebarHeaderTextColor);\n        changeCss('.app__body .navbar-right__icon svg', 'stroke:' + theme.sidebarHeaderTextColor);\n        changeCss('.team-sidebar .fa', 'color:' + theme.sidebarHeaderTextColor);\n    }\n\n    if (theme.onlineIndicator) {\n        changeCss('.app__body .status.status--online', 'color:' + theme.onlineIndicator);\n        changeCss('.app__body .status .online--icon', 'fill:' + theme.onlineIndicator);\n    }\n\n    if (theme.awayIndicator) {\n        changeCss('.app__body .status.status--away', 'color:' + theme.awayIndicator);\n        changeCss('.app__body .status .away--icon', 'fill:' + theme.awayIndicator);\n    }\n\n    let dndIndicator;\n    if (theme.dndIndicator) {\n        dndIndicator = theme.dndIndicator;\n    } else {\n        switch (theme.type) {\n        case 'Organization':\n            dndIndicator = Constants.THEMES.organization.dndIndicator;\n            break;\n        case 'Mattermost Dark':\n            dndIndicator = Constants.THEMES.mattermostDark.dndIndicator;\n            break;\n        case 'Windows Dark':\n            dndIndicator = Constants.THEMES.windows10.dndIndicator;\n            break;\n        default:\n            dndIndicator = Constants.THEMES.default.dndIndicator;\n            break;\n        }\n    }\n    changeCss('.app__body .status.status--dnd', 'color:' + dndIndicator);\n    changeCss('.app__body .status .dnd--icon', 'fill:' + dndIndicator);\n\n    // Including 'mentionBj' for backwards compatability (old typo)\n    const mentionBg = theme.mentionBg || theme.mentionBj;\n    if (mentionBg) {\n        changeCss('.sidebar--left .nav-pills__unread-indicator', 'background:' + mentionBg);\n        changeCss('.app__body .sidebar--left .badge, .app__body .list-group-item.active > .badge, .nav-pills > .active > a > .badge', 'background:' + mentionBg);\n        changeCss('.multi-teams .team-sidebar .badge, .app__body .list-group-item.active > .badge, .nav-pills > .active > a > .badge', 'background:' + mentionBg);\n    }\n\n    if (theme.mentionColor) {\n        changeCss('.sidebar--left .nav-pills__unread-indicator svg', 'fill:' + theme.mentionColor);\n        changeCss('.app__body .sidebar--left .nav-pills__unread-indicator', 'color:' + theme.mentionColor);\n        changeCss('.app__body .sidebar--left .badge, .app__body .list-group-item.active > .badge, .nav-pills > .active > a > .badge', 'color:' + theme.mentionColor);\n        changeCss('.app__body .multi-teams .team-sidebar .badge, .app__body .list-group-item.active > .badge, .nav-pills > .active > a > .badge', 'color:' + theme.mentionColor);\n    }\n\n    if (theme.centerChannelBg) {\n        changeCss('@media(max-width: 640px){.app__body .post .dropdown .dropdown-menu button', 'background:' + theme.centerChannelBg);\n        changeCss('@media(min-width: 768px){.app__body .post:hover .post__header .col__reply, .app__body .post.post--hovered .post__header .col__reply', 'background:' + theme.centerChannelBg);\n        changeCss('@media(max-width: 320px){.tutorial-steps__container', 'background:' + theme.centerChannelBg);\n        changeCss('.app__body .bg--white, .app__body .system-notice, .app__body .channel-header__info .channel-header__description:before, .app__body .app__content, .app__body .markdown__table, .app__body .markdown__table tbody tr, .app__body .suggestion-list__content, .app__body .modal .modal-content, .app__body .modal .modal-footer, .app__body .post.post--compact .post-image__column, .app__body .suggestion-list__divider > span, .app__body .status-wrapper .status, .app__body .alert.alert-transparent, .app__body .post-image__column', 'background:' + theme.centerChannelBg);\n        changeCss('#post-list .post-list-holder-by-time, .app__body .post .dropdown-menu a', 'background:' + theme.centerChannelBg);\n        changeCss('#post-create, .app__body .emoji-picker__preview', 'background:' + theme.centerChannelBg);\n        changeCss('.app__body .date-separator .separator__text, .app__body .new-separator .separator__text', 'background:' + theme.centerChannelBg);\n        changeCss('.app__body .post-image__details, .app__body .search-help-popover .search-autocomplete__divider span', 'background:' + theme.centerChannelBg);\n        changeCss('.app__body .sidebar--right, .app__body .dropdown-menu, .app__body .popover, .app__body .tip-overlay', 'background:' + theme.centerChannelBg);\n        changeCss('.app__body .popover.bottom>.arrow:after', 'border-bottom-color:' + theme.centerChannelBg);\n        changeCss('.app__body .popover.right>.arrow:after, .app__body .tip-overlay.tip-overlay--sidebar .arrow, .app__body .tip-overlay.tip-overlay--header .arrow', 'border-right-color:' + theme.centerChannelBg);\n        changeCss('.app__body .popover.left>.arrow:after', 'border-left-color:' + theme.centerChannelBg);\n        changeCss('.app__body .popover.top>.arrow:after, .app__body .tip-overlay.tip-overlay--chat .arrow', 'border-top-color:' + theme.centerChannelBg);\n        changeCss('@media(min-width: 768px){.app__body .form-control', 'background:' + theme.centerChannelBg);\n        changeCss('@media(min-width: 768px){.app__body .sidebar--right.sidebar--right--expanded .sidebar-right-container', 'background:' + theme.centerChannelBg);\n        changeCss('.app__body .attachment__content, .app__body .attachment-actions button', 'background:' + theme.centerChannelBg);\n        changeCss('body.app__body', 'scrollbar-face-color:' + theme.centerChannelBg);\n        changeCss('body.app__body', 'scrollbar-track-color:' + theme.centerChannelBg);\n        changeCss('.app__body .shortcut-key, .app__body .post-list__new-messages-below', 'color:' + theme.centerChannelBg);\n        changeCss('.app__body .emoji-picker, .app__body .emoji-picker__search', 'background:' + theme.centerChannelBg);\n        changeCss('.app__body .nav-tabs, .app__body .nav-tabs > li.active > a', 'background:' + theme.centerChannelBg);\n        changeCss('.app__body .post .file-view--single', `background:${theme.centerChannelBg}`);\n\n        // Fade out effect for collapsed posts (not hovered, not from current user)\n        changeCss(\n            '.app__body .post-list__table .post:not(.current--user) .post-collapse__gradient, ' +\n            '.app__body .sidebar-right__body .post:not(.current--user) .post-collapse__gradient, ' +\n            '.app__body .post-list__table .post.post--compact .post-collapse__gradient, ' +\n            '.app__body .sidebar-right__body .post.post--compact .post-collapse__gradient',\n            `background:linear-gradient(${changeOpacity(theme.centerChannelBg, 0)}, ${theme.centerChannelBg})`,\n        );\n        changeCss(\n            '.app__body .post-list__table .post-attachment-collapse__gradient, ' +\n            '.app__body .sidebar-right__body .post-attachment-collapse__gradient',\n            `background:linear-gradient(${changeOpacity(theme.centerChannelBg, 0)}, ${theme.centerChannelBg})`,\n        );\n\n        changeCss(\n            '.app__body .post-list__table .post:not(.current--user) .post-collapse__show-more, ' +\n            '.app__body .sidebar-right__body .post:not(.current--user) .post-collapse__show-more, ' +\n            '.app__body .post-list__table .post.post--compact .post-collapse__show-more, ' +\n            '.app__body .sidebar-right__body .post.post--compact .post-collapse__show-more',\n            `background-color:${theme.centerChannelBg}`,\n        );\n        changeCss(\n            '.app__body .post-list__table .post-attachment-collapse__show-more, ' +\n            '.app__body .sidebar-right__body .post-attachment-collapse__show-more',\n            `background-color:${theme.centerChannelBg}`,\n        );\n\n        changeCss('.app__body .post-collapse__show-more-button:hover', `color:${theme.centerChannelBg}`);\n        changeCss('.app__body .post-collapse__show-more-button', `background:${theme.centerChannelBg}`);\n    }\n\n    if (theme.centerChannelColor) {\n        changeCss('.app__body .svg-text-color', 'fill:' + theme.centerChannelColor);\n        changeCss('.app__body .mentions__name .status.status--group, .app__body .multi-select__note', 'background:' + changeOpacity(theme.centerChannelColor, 0.12));\n        changeCss('.app__body .form-control, .app__body .system-notice, .app__body .file-view--single .file__image .image-loaded, .app__body .post .dropdown .dropdown-menu button, .app__body .member-list__popover .more-modal__body, .app__body .alert.alert-transparent, .app__body .channel-header .channel-header__icon, .app__body .search-bar__container .search__form, .app__body .table > thead > tr > th, .app__body .table > tbody > tr > td', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.12));\n        changeCss('.app__body .post-list__arrows, .app__body .post .flag-icon__container', 'fill:' + changeOpacity(theme.centerChannelColor, 0.3));\n        changeCss('@media(min-width: 768px){.app__body .search__icon svg', 'stroke:' + changeOpacity(theme.centerChannelColor, 0.4));\n        changeCss('.app__body .post-image__details .post-image__download svg', 'stroke:' + changeOpacity(theme.centerChannelColor, 0.4));\n        changeCss('.app__body .post-image__details .post-image__download svg', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.35));\n        changeCss('.app__body .channel-header__icon svg', 'fill:' + changeOpacity(theme.centerChannelColor, 0.4));\n        changeCss('.app__body .channel-header__icon .icon--stroke svg', 'stroke:' + changeOpacity(theme.centerChannelColor, 0.4));\n        changeCss('.app__body .channel-header__icon .icon--stroke.icon__search svg', 'stroke:' + changeOpacity(theme.centerChannelColor, 0.55));\n        changeCss('.app__body .modal .status .offline--icon, .app__body .channel-header__links .icon, .app__body .sidebar--right .sidebar--right__subheader .usage__icon, .app__body .more-modal__header svg, .app__body .icon--body', 'fill:' + theme.centerChannelColor);\n        changeCss('@media(min-width: 768px){.app__body .post:hover .post__header .col__reply, .app__body .post.post--hovered .post__header .col__reply', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.2));\n        changeCss('.post .attachment .attachment__image.attachment__image--opengraph, .app__body .DayPicker .DayPicker-Caption, .app__body .modal .settings-modal .team-img-preview div, .app__body .modal .settings-modal .team-img__container div, .app__body .system-notice__footer, .app__body .system-notice__footer .btn:last-child, .app__body .modal .shortcuts-modal .subsection, .app__body .sidebar--right .sidebar--right__header, .app__body .channel-header, .app__body .nav-tabs > li > a:hover, .app__body .nav-tabs, .app__body .nav-tabs > li.active > a, .app__body .nav-tabs, .app__body .nav-tabs > li.active > a:focus, .app__body .nav-tabs, .app__body .nav-tabs > li.active > a:hover, .app__body .post .dropdown-menu a, .sidebar--left, .app__body .suggestion-list__content .command, .app__body .channel-archived__message', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.2));\n        changeCss('.app__body .post.post--system .post__body, .app__body .modal .channel-switch-modal .modal-header .close', 'color:' + changeOpacity(theme.centerChannelColor, 0.6));\n        changeCss('.app__body .nav-tabs, .app__body .nav-tabs > li.active > a, pp__body .input-group-addon, .app__body .app__content, .app__body .post-create__container .post-create-body .btn-file, .app__body .post-create__container .post-create-footer .msg-typing, .app__body .suggestion-list__content .command, .app__body .modal .modal-content, .app__body .dropdown-menu, .app__body .popover, .app__body .mentions__name, .app__body .tip-overlay, .app__body .form-control[disabled], .app__body .form-control[readonly], .app__body fieldset[disabled] .form-control', 'color:' + theme.centerChannelColor);\n        changeCss('.app__body .post .post__link', 'color:' + changeOpacity(theme.centerChannelColor, 0.65));\n        changeCss('.app__body #archive-link-home, .video-div .video-thumbnail__error', 'background:' + changeOpacity(theme.centerChannelColor, 0.15));\n        changeCss('.app__body #post-create', 'color:' + theme.centerChannelColor);\n        changeCss('.app__body .mentions--top, .app__body .suggestion-list__content', 'box-shadow:' + changeOpacity(theme.centerChannelColor, 0.2) + ' 1px -3px 12px');\n        changeCss('.app__body .mentions--top, .app__body .suggestion-list__content', '-webkit-box-shadow:' + changeOpacity(theme.centerChannelColor, 0.2) + ' 1px -3px 12px');\n        changeCss('.app__body .mentions--top, .app__body .suggestion-list__content', '-moz-box-shadow:' + changeOpacity(theme.centerChannelColor, 0.2) + ' 1px -3px 12px');\n        changeCss('.app__body .dropdown-menu, .app__body .popover ', 'box-shadow: 0 17px 50px 0 ' + changeOpacity(theme.centerChannelColor, 0.1) + ', 0 12px 15px 0 ' + changeOpacity(theme.centerChannelColor, 0.1));\n        changeCss('.app__body .dropdown-menu, .app__body .popover ', '-moz-box-shadow: 0 17px 50px 0 ' + changeOpacity(theme.centerChannelColor, 0.1) + ', 0 12px 15px 0 ' + changeOpacity(theme.centerChannelColor, 0.1));\n        changeCss('.app__body .dropdown-menu, .app__body .popover ', '-webkit-box-shadow: 0 17px 50px 0 ' + changeOpacity(theme.centerChannelColor, 0.1) + ', 0 12px 15px 0 ' + changeOpacity(theme.centerChannelColor, 0.1));\n        changeCss('.app__body .shadow--2', 'box-shadow: 0 20px 30px 0' + changeOpacity(theme.centerChannelColor, 0.1) + ', 0 14px 20px 0 ' + changeOpacity(theme.centerChannelColor, 0.1));\n        changeCss('.app__body .shadow--2', '-moz-box-shadow: 0  20px 30px 0 ' + changeOpacity(theme.centerChannelColor, 0.1) + ', 0 14px 20px 0 ' + changeOpacity(theme.centerChannelColor, 0.1));\n        changeCss('.app__body .shadow--2', '-webkit-box-shadow: 0  20px 30px 0 ' + changeOpacity(theme.centerChannelColor, 0.1) + ', 0 14px 20px 0 ' + changeOpacity(theme.centerChannelColor, 0.1));\n        changeCss('.app__body .shortcut-key, .app__body .post__body hr, .app__body .loading-screen .loading__content .round, .app__body .tutorial__circles .circle', 'background:' + theme.centerChannelColor);\n        changeCss('.app__body .channel-header .heading', 'color:' + theme.centerChannelColor);\n        changeCss('.app__body .col__reply > button:hover, .app__body .col__reply > a:hover, .app__body .col__reply > div:hover, .app__body .markdown__table tbody tr:nth-child(2n)', 'background:' + changeOpacity(theme.centerChannelColor, 0.07));\n        changeCss('.app__body .channel-header__info .header-dropdown__icon', 'color:' + changeOpacity(theme.centerChannelColor, 0.8));\n        changeCss('.app__body .post-create__container .post-create-body .send-button.disabled i, .app__body .channel-header #member_popover', 'color:' + changeOpacity(theme.centerChannelColor, 0.4));\n        changeCss('.app__body .channel-header .pinned-posts-button svg', 'fill:' + changeOpacity(theme.centerChannelColor, 0.6));\n        changeCss('.app__body .channel-header .channel-header_plugin-dropdown svg', 'fill:' + changeOpacity(theme.centerChannelColor, 0.6));\n        changeCss('.app__body .custom-textarea, .app__body .custom-textarea:focus, .app__body .file-preview, .app__body .post-image__details, .app__body .sidebar--right .sidebar-right__body, .app__body .markdown__table th, .app__body .markdown__table td, .app__body .suggestion-list__content, .app__body .modal .modal-content, .app__body .modal .settings-modal .settings-table .settings-content .divider-light, .app__body .webhooks__container, .app__body .dropdown-menu, .app__body .modal .modal-header', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.2));\n        changeCss('.app__body .popover.bottom>.arrow', 'border-bottom-color:' + changeOpacity(theme.centerChannelColor, 0.25));\n        changeCss('.app__body .btn.btn-transparent, .app__body .search-help-popover .search-autocomplete__divider span, .app__body .suggestion-list__divider > span', 'color:' + changeOpacity(theme.centerChannelColor, 0.7));\n        changeCss('.app__body .popover.right>.arrow', 'border-right-color:' + changeOpacity(theme.centerChannelColor, 0.25));\n        changeCss('.app__body .popover.left>.arrow', 'border-left-color:' + changeOpacity(theme.centerChannelColor, 0.25));\n        changeCss('.app__body .popover.top>.arrow', 'border-top-color:' + changeOpacity(theme.centerChannelColor, 0.25));\n        changeCss('.app__body .suggestion-list__content .command, .app__body .popover .popover-title', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.2));\n        changeCss('.app__body .suggestion-list__content .command, .app__body .popover .popover__row', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.2));\n        changeCss('.app__body .suggestion-list__divider:before, .app__body .dropdown-menu .divider, .app__body .search-help-popover .search-autocomplete__divider:before', 'background:' + theme.centerChannelColor);\n        changeCss('body.app__body, .app__body .custom-textarea', 'color:' + theme.centerChannelColor);\n        changeCss('.app__body .post-image__column', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.1));\n        changeCss('.app__body .post-image__details', 'color:' + theme.centerChannelColor);\n        changeCss('.app__body .post-image__column a, .app__body .post-image__column a:hover, .app__body .post-image__column a:focus', 'color:' + theme.centerChannelColor);\n        changeCss('@media(min-width: 768px){.app__body .search-bar__container .search__form .search-bar, .app__body .form-control', 'color:' + theme.centerChannelColor);\n        changeCss('.app__body .input-group-addon, .app__body .post-create__container .post-body__actions > span, .app__body .post-create__container .post-body__actions > a', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.1));\n        changeCss('@media(min-width: 768px){.app__body .post-list__table .post-list__content .dropdown-menu a:hover, .dropdown-menu > li > button:hover', 'background:' + changeOpacity(theme.centerChannelColor, 0.1));\n        changeCss('.app__body .dropdown-menu div > a:focus, .app__body .dropdown-menu div > a:hover, .dropdown-menu li > a:focus, .app__body .dropdown-menu li > a:hover', 'background:' + changeOpacity(theme.centerChannelColor, 0.1));\n        changeCss('.app__body .attachment .attachment__content, .app__body .attachment-actions button', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.3));\n        changeCss('.app__body .attachment-actions button:focus, .app__body .attachment-actions button:hover', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.5));\n        changeCss('.app__body .attachment-actions button:focus, .app__body .attachment-actions button:hover', 'background:' + changeOpacity(theme.centerChannelColor, 0.03));\n        changeCss('.app__body .input-group-addon, .app__body .channel-intro .channel-intro__content, .app__body .webhooks__container', 'background:' + changeOpacity(theme.centerChannelColor, 0.05));\n        changeCss('.app__body .date-separator .separator__text', 'color:' + theme.centerChannelColor);\n        changeCss('.app__body .date-separator .separator__hr, .app__body .modal-footer, .app__body .modal .custom-textarea', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.2));\n        changeCss('.app__body .search-item-container, .app__body .post-right__container .post.post--root', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.1));\n        changeCss('.app__body .modal .custom-textarea:focus', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.3));\n        changeCss('.app__body .channel-intro, .app__body .modal .settings-modal .settings-table .settings-content .divider-dark, .app__body hr, .app__body .modal .settings-modal .settings-table .settings-links, .app__body .modal .settings-modal .settings-table .settings-content .appearance-section .theme-elements__header, .app__body .user-settings .authorized-app:not(:last-child)', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.2));\n        changeCss('.app__body .post.current--user .post__body, .app__body .post.post--comment.other--root.current--user .post-comment, .app__body pre, .app__body .post-right__container .post.post--root', 'background:' + changeOpacity(theme.centerChannelColor, 0.05));\n        changeCss('.app__body .post.post--comment.other--root.current--user .post-comment, .app__body .more-modal__list .more-modal__row, .app__body .member-div:first-child, .app__body .member-div, .app__body .access-history__table .access__report, .app__body .activity-log__table', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.1));\n        changeCss('@media(max-width: 1800px){.app__body .inner-wrap.move--left .post.post--comment.same--root', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.07));\n        changeCss('.app__body .post.post--hovered', 'background:' + changeOpacity(theme.centerChannelColor, 0.08));\n        changeCss('.app__body .attachment__body__wrap.btn-close', 'background:' + changeOpacity(theme.centerChannelColor, 0.08));\n        changeCss('.app__body .attachment__body__wrap.btn-close', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.2));\n        changeCss('@media(min-width: 768px){.app__body .post:hover, .app__body .more-modal__list .more-modal__row:hover, .app__body .modal .settings-modal .settings-table .settings-content .section-min:hover', 'background:' + changeOpacity(theme.centerChannelColor, 0.08));\n        changeCss('@media(min-width: 768px){.app__body .post.current--user:hover .post__body ', 'background: none;');\n        changeCss('.app__body .more-modal__row.more-modal__row--selected, .app__body .date-separator.hovered--before:after, .app__body .date-separator.hovered--after:before, .app__body .new-separator.hovered--after:before, .app__body .new-separator.hovered--before:after', 'background:' + changeOpacity(theme.centerChannelColor, 0.07));\n        changeCss('@media(min-width: 768px){.app__body .suggestion-list__content .command:hover, .app__body .mentions__name:hover, .app__body .dropdown-menu>li>a:focus, .app__body .dropdown-menu>li>a:hover', 'background:' + changeOpacity(theme.centerChannelColor, 0.15));\n        changeCss('.app__body .suggestion--selected, .app__body .emoticon-suggestion:hover, .app__body .bot-indicator', 'background:' + changeOpacity(theme.centerChannelColor, 0.15));\n        changeCss('code, .app__body .form-control[disabled], .app__body .form-control[readonly], .app__body fieldset[disabled] .form-control', 'background:' + changeOpacity(theme.centerChannelColor, 0.1));\n        changeCss('.app__body .sidebar--right', 'color:' + theme.centerChannelColor);\n        changeCss('.app__body .search-help-popover .search-autocomplete__item:hover, .app__body .modal .settings-modal .settings-table .settings-content .appearance-section .theme-elements__body', 'background:' + changeOpacity(theme.centerChannelColor, 0.05));\n        changeCss('.app__body .search-help-popover .search-autocomplete__item.selected', 'background:' + changeOpacity(theme.centerChannelColor, 0.15));\n        if (!UserAgent.isFirefox() && !UserAgent.isInternetExplorer() && !UserAgent.isEdge()) {\n            changeCss('body.app__body ::-webkit-scrollbar-thumb', 'background:' + changeOpacity(theme.centerChannelColor, 0.4));\n        }\n        changeCss('body', 'scrollbar-arrow-color:' + theme.centerChannelColor);\n        changeCss('.app__body .post-create__container .post-create-body .btn-file svg, .app__body .post.post--compact .post-image__column .post-image__details svg, .app__body .modal .about-modal .about-modal__logo svg, .app__body .post .post__img svg, .app__body .post-body__actions svg, .app__body .edit-post__actions .icon svg', 'fill:' + theme.centerChannelColor);\n        changeCss('.app__body .scrollbar--horizontal, .app__body .scrollbar--vertical', 'background:' + changeOpacity(theme.centerChannelColor, 0.5));\n        changeCss('.app__body .post-list__new-messages-below', 'background:' + changeColor(theme.centerChannelColor, 0.5));\n        changeCss('.app__body .post.post--comment .post__body', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.2));\n        changeCss('@media(min-width: 768px){.app__body .post.post--compact.same--root.post--comment .post__content', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.2));\n        changeCss('.app__body .post.post--comment.current--user .post__body', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.2));\n        changeCss('.app__body .channel-header__info .status .offline--icon', 'fill:' + theme.centerChannelColor);\n        changeCss('.app__body .navbar .status .offline--icon', 'fill:' + theme.centerChannelColor);\n        changeCss('.app__body .form-control:focus, .app__body .form-control:hover, .app__body .post-reaction:not(.post-reaction--current-user)', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.25));\n        changeCss('.app__body .post-reaction:not(.post-reaction--current-user)', 'color:' + changeOpacity(theme.centerChannelColor, 0.7));\n        changeCss('.app__body .emoji-picker', 'color:' + theme.centerChannelColor);\n        changeCss('.app__body .emoji-picker', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.2));\n        changeCss('.app__body .emoji-picker__search-icon', 'color:' + changeOpacity(theme.centerChannelColor, 0.4));\n        changeCss('.app__body .emoji-picker__preview, .app__body .emoji-picker__items, .app__body .emoji-picker__search-container', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.2));\n        changeCss('.emoji-picker__category .fa:hover', 'color:' + changeOpacity(theme.centerChannelColor, 0.8));\n        changeCss('.app__body .emoji-picker__category, .app__body .emoji-picker__category:focus, .app__body .emoji-picker__category:hover', 'color:' + changeOpacity(theme.centerChannelColor, 0.3));\n        changeCss('.app__body .emoji-picker__category--selected, .app__body .emoji-picker__category--selected:focus, .app__body .emoji-picker__category--selected:hover', 'color:' + theme.centerChannelColor);\n        changeCss('.app__body .emoji-picker__item-wrapper:hover', 'background-color:' + changeOpacity(theme.centerChannelColor, 0.8));\n        changeCss('.app__body .emoji-picker-items__container .emoji-picker__item.selected', 'background-color:' + changeOpacity(theme.centerChannelColor, 0.8));\n        changeCss('.app__body .icon__postcontent_picker:hover', 'color:' + changeOpacity(theme.centerChannelColor, 0.8));\n        changeCss('.app__body .popover', 'border-color:' + changeOpacity(theme.centerChannelColor, 0.07));\n        changeCss('.app__body .emoji-picker .nav-tabs li a', 'fill:' + theme.centerChannelColor);\n        changeCss('.app__body .post .post-collapse__show-more-button', `border-color:${changeOpacity(theme.centerChannelColor, 0.1)}`);\n        changeCss('.app__body .post .post-collapse__show-more-line', `background-color:${changeOpacity(theme.centerChannelColor, 0.1)}`);\n\n        if (theme.centerChannelBg) {\n            const ownPostBg = blendColors(theme.centerChannelBg, theme.centerChannelColor, 0.05);\n            const hoveredPostBg = blendColors(theme.centerChannelBg, theme.centerChannelColor, 0.08);\n            const hoveredPostBgLight = blendColors(theme.centerChannelBg, theme.centerChannelColor, 0.05);\n\n            // Fade out effect for collapsed posts made by the current user\n            changeCss(\n                '.app__body .post-list__table .post.current--user:not(.post--compact):not(:hover):not(.post--hovered):not(.post--highlight) .post-collapse__gradient, ' +\n                '.app__body .sidebar-right__body .post.current--user:not(.post--compact):not(:hover):not(.post--hovered):not(.post--highlight) .post-collapse__gradient, ' +\n                '.app__body #thread--root .post-collapse__gradient',\n                `background:linear-gradient(${changeOpacity(ownPostBg, 0)}, ${ownPostBg})`,\n            );\n            changeCss(\n                '@media(max-width: 768px){.app__body .post-list__table .post.current--user:hover .post-collapse__gradient',\n                `background:linear-gradient(${changeOpacity(ownPostBg, 0)}, ${ownPostBg}) !important`,\n            );\n            changeCss(\n                '.app__body .post-list__table .post.current--user:not(.post--compact):not(:hover):not(.post--hovered):not(.post--highlight) .post-collapse__show-more, ' +\n                '.app__body .sidebar-right__body .post.current--user:not(.post--compact):not(:hover):not(.post--hovered):not(.post--highlight) .post-collapse__show-more, ' +\n                '.app__body #thread--root .post-collapse__show-more',\n                `background:${ownPostBg}`,\n            );\n\n            // Fade out effect for collapsed posts that are being hovered over\n            changeCss(\n                '@media(min-width: 768px){.app__body .post-list__table .post:hover .post-collapse__gradient, ' +\n                '.app__body .sidebar-right__body .post:hover .post-collapse__gradient',\n                `background:linear-gradient(${changeOpacity(hoveredPostBg, 0)}, ${hoveredPostBg})`,\n            );\n            changeCss(\n                '@media(min-width: 768px){.app__body .post-list__table .post:hover .post-collapse__show-more, ' +\n                '.app__body .sidebar-right__body .post:hover .post-collapse__show-more',\n                `background:${hoveredPostBg}`,\n            );\n            changeCss(\n                '@media(max-width: 768px){.app__body .post-list__table .post.current--user:hover .post-collapse__show-more',\n                `background:${hoveredPostBgLight}`,\n            );\n            changeCss(\n                '.app__body .post-list__table .post.post--hovered .post-collapse__gradient, ' +\n                '.app__body .sidebar-right__body .post.post--hovered .post-collapse__gradient',\n                `background:linear-gradient(${changeOpacity(hoveredPostBg, 0)}, ${hoveredPostBg})`,\n            );\n            changeCss(\n                '.app__body .post-list__table .post.post--hovered .post-collapse__show-more, ' +\n                '.app__body .sidebar-right__body .post.post--hovered .post-collapse__show-more',\n                `background:${hoveredPostBg}`,\n            );\n\n            // Apply a background behind the file attachments to cover any overflowing text in a collapsed post\n            changeCss(\n                '.app__body .post.current--user:not(.post--compact) .post-image__columns, ' +\n                '.app__body .post.current--user:not(.post--compact) .file-view--single, ' +\n                '.app__body .post--root.post--thread .post-image__columns, ' +\n                '.app__body .post--root.post--thread .file-view--single',\n                `background:${ownPostBg}`\n            );\n\n            changeCss(\n                '@media(min-width: 768px){.app__body .post-list__table .post:hover .post-image__columns, ' +\n                '.app__body .post-list__table .post:hover .file-view--single, ' +\n                '.app__body .post-right-comments-container .post:hover .post-image__columns, ' +\n                '.app__body .post-right-comments-container .post:hover .file-view--single, ' +\n                '.app__body .search-items-container .post:hover .post-image__columns, ' +\n                '.app__body .search-items-container .post:hover .file-view--single',\n                `background:${hoveredPostBg}`\n            );\n            changeCss(\n                '.app__body .post-list__table .post.post--hovered .post-image__columns, ' +\n                '.app__body .post-list__table .post.post--hovered .file-view--single, ' +\n                '.app__body .post-right-comments-container .post.post--hovered .post-image__columns, ' +\n                '.app__body .post-right-comments-container .post.post--hovered .file-view--single, ' +\n                '.app__body .search-items-container .post.post--hovered .post-image__columns, ' +\n                '.app__body .search-items-container .post.post--hovered .file-view--single',\n                `background:${hoveredPostBg}`\n            );\n\n            // Fade out effect for permalinked posts\n            if (theme.mentionHighlightBg) {\n                const highlightBg = blendColors(theme.centerChannelBg, theme.mentionHighlightBg, 0.5);\n                const ownPostHighlightBg = blendColors(highlightBg, theme.centerChannelColor, 0.05);\n\n                // For permalinked posts made by another user\n                changeCss(\n                    '.app__body .post-list__table .post:not(.current--user).post--highlight .post-collapse__gradient, ' +\n                    '.app__body .post-list__table .post.post--compact.post--highlight .post-collapse__gradient',\n                    `background:linear-gradient(${changeOpacity(highlightBg, 0)}, ${highlightBg})`,\n                );\n                changeCss(\n                    '.app__body .post-list__table .post:not(.current--user).post--highlight .post-collapse__show-more, ' +\n                    '.app__body .post-list__table .post.post--compact.post--highlight .post-collapse__show-more, ' +\n                    '.app__body .post-list__table .post:not(.current--user).post--highlight .post-image__columns, ' +\n                    '.app__body .post-list__table .post.post--compact.post--highlight .post-image__columns, ' +\n                    '.app__body .post-list__table .post:not(.current--user).post--highlight .file-view--single, ' +\n                    '.app__body .post-list__table .post.post--compact.post--highlight .file-view--single',\n                    `background:${highlightBg}`,\n                );\n\n                // For permalinked posts made by the current user\n                changeCss(\n                    '.app__body .post-list__table .post.current--user.post--highlight:not(.post--compact) .post-collapse__gradient',\n                    `background:linear-gradient(${changeOpacity(ownPostHighlightBg, 0)}, ${ownPostHighlightBg})`,\n                );\n                changeCss(\n                    '.app__body .post-list__table .post.current--user.post--highlight:not(.post--compact) .post-collapse__show-more, ' +\n                    '.app__body .post-list__table .post.current--user.post--highlight:not(.post--compact) .post-image__columns, ' +\n                    '.app__body .post-list__table .post.current--user.post--highlight:not(.post--compact) .file-view--single',\n                    `background:${ownPostHighlightBg}`,\n                );\n\n                // For hovered posts\n                changeCss(\n                    '.app__body .post-list__table .post.current--user.post--highlight:hover .post-collapse__gradient, ' +\n                    '.app__body .post-list__table .post.current--user.post--highlight.post--hovered .post-collapse__gradient',\n                    `background:linear-gradient(${changeOpacity(highlightBg, 0)}, ${highlightBg})`,\n                );\n                changeCss(\n                    '.app__body .post-list__table .post.current--user.post--highlight:hover .post-collapse__show-more, ' +\n                    '.app__body .post-list__table .post.current--user.post--highlight.post--hovered .post-collapse__show-more, ' +\n                    '.app__body .post-list__table .post.current--user.post--highlight:hover .post-image__columns, ' +\n                    '.app__body .post-list__table .post.current--user.post--highlight.post--hovered .post-image__columns, ' +\n                    '.app__body .post-list__table .post.current--user.post--highlight:hover .file-view--single, ' +\n                    '.app__body .post-list__table .post.current--user.post--highlight.post--hovered .file-view--single',\n                    `background:${highlightBg}`,\n                );\n            }\n        }\n    }\n\n    if (theme.newMessageSeparator) {\n        changeCss('.app__body .new-separator .separator__text', 'color:' + theme.newMessageSeparator);\n        changeCss('.app__body .new-separator .separator__hr', 'border-color:' + changeOpacity(theme.newMessageSeparator, 0.5));\n    }\n\n    if (theme.linkColor) {\n        changeCss('.app__body .DayPicker-Day--today, .app__body .channel-header .channel-header__icon.active, .app__body .channel-header .channel-header__icon:hover, .app__body .post-add-reaction:hover .post-reaction, .app__body .channel-header .channel-header__favorites.inactive:hover, .app__body .channel-header__links > a.active, .app__body a, .app__body a:focus, .app__body a:hover, .app__body .channel-header__links > .color--link.active, .app__body .color--link, .app__body a:focus, .app__body .color--link:hover, .app__body .btn, .app__body .btn:focus, .app__body .btn:hover', 'color:' + theme.linkColor);\n        changeCss('.app__body .attachment .attachment__container', 'border-left-color:' + changeOpacity(theme.linkColor, 0.5));\n        changeCss('.app__body .channel-header .channel-header_plugin-dropdown a:hover, .app__body .member-list__popover .more-modal__list .more-modal__row:hover', 'background:' + changeOpacity(theme.linkColor, 0.08));\n        changeCss('.app__body .channel-header__links .icon:hover, .app__body .channel-header__links > a.active .icon, .app__body .post .flag-icon__container.visible, .app__body .post .reacticon__container, .app__body .post .comment-icon__container, .app__body .post .post__reply', 'fill:' + theme.linkColor);\n        changeCss('@media(min-width: 768px){.app__body .search__form.focused .search__icon svg, .app__body .search__form:hover .search__icon svg', 'stroke:' + theme.linkColor);\n        changeCss('.app__body .channel-header__links .icon:hover, .app__body .post .flag-icon__container.visible, .app__body .post .comment-icon__container, .app__body .post .post__reply', 'fill:' + theme.linkColor);\n        changeCss('.app__body .channel-header .channel-header__icon:hover #member_popover, .app__body .channel-header .channel-header__icon.active #member_popover', 'color:' + theme.linkColor);\n        changeCss('.app__body .channel-header .pinned-posts-button:hover svg', 'fill:' + changeOpacity(theme.linkColor, 0.6));\n        changeCss('.app__body .member-list__popover .more-modal__actions svg, .app__body .channel-header .channel-header__icon:hover svg, .app__body .channel-header .channel-header__icon.active svg', 'fill:' + theme.linkColor);\n        changeCss('.app__body .channel-header .channel-header__icon:hover .icon--stroke svg', 'stroke:' + theme.linkColor);\n        changeCss('.app__body .post-reaction.post-reaction--current-user', 'background:' + changeOpacity(theme.linkColor, 0.1));\n        changeCss('.app__body .post-add-reaction:hover .post-reaction, .app__body .post-reaction.post-reaction--current-user', 'border-color:' + changeOpacity(theme.linkColor, 0.4));\n        changeCss('.app__body .channel-header .channel-header_plugin-dropdown a:hover, .app__body .member-list__popover .more-modal__list .more-modal__row:hover, .app__body .channel-header .channel-header__icon:hover, .app__body .channel-header .channel-header__icon.active, .app__body .search-bar__container .search__form.focused, .app__body .search-bar__container .search__form:hover', 'border-color:' + theme.linkColor);\n        changeCss('.app__body .channel-header .channel-header_plugin-dropdown a:hover svg', 'fill:' + theme.linkColor);\n        changeCss('.app__body .post-reaction.post-reaction--current-user', 'color:' + theme.linkColor);\n        changeCss('.app__body .channel-header .dropdown-toggle:hover .heading, .app__body .channel-header .dropdown-toggle:hover .header-dropdown__icon, .app__body .channel-header__title .open .heading, .app__body .channel-header__info .channel-header__title .open .header-dropdown__icon, .app__body .channel-header__title .open .heading, .app__body .channel-header__info .channel-header__title .open .heading', 'color:' + theme.linkColor);\n        changeCss('.emoji-picker__container .icon--emoji.active svg', 'fill:' + theme.linkColor);\n        changeCss('.app__body .channel-header .channel-header_plugin-dropdown a:hover .fa, .sidebar--right--expanded .sidebar--right__expand', 'color:' + theme.linkColor);\n        changeCss('.app__body .post .post-collapse__show-more', `color:${theme.linkColor}`);\n        changeCss('.app__body .post .post-attachment-collapse__show-more', `color:${theme.linkColor}`);\n        changeCss('.app__body .post .post-collapse__show-more-button:hover', `background-color:${theme.linkColor}`);\n    }\n\n    if (theme.buttonBg) {\n        changeCss('.app__body .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover, .app__body .modal .settings-modal .team-img__remove:hover, .app__body .btn.btn-transparent:hover, .app__body .btn.btn-transparent:active, .app__body .post-image__details .post-image__download svg:hover, .app__body .file-view--single .file__download:hover, .app__body .new-messages__button div, .app__body .btn.btn-primary, .app__body .tutorial__circles .circle.active, .app__body .post__pinned-badge', 'background:' + theme.buttonBg);\n        changeCss('.app__body .system-notice__logo svg', 'fill:' + theme.buttonBg);\n        changeCss('.app__body .post-image__details .post-image__download svg:hover', 'border-color:' + theme.buttonBg);\n        changeCss('.app__body .btn.btn-primary:hover, .app__body .btn.btn-primary:active, .app__body .btn.btn-primary:focus', 'background:' + changeColor(theme.buttonBg, -0.15));\n        changeCss('.app__body .emoji-picker .nav-tabs li.active a, .app__body .emoji-picker .nav-tabs li a:hover', 'fill:' + theme.buttonBg);\n        changeCss('.app__body .emoji-picker .nav-tabs > li.active > a', 'border-bottom-color:' + theme.buttonBg + '!important;');\n    }\n\n    if (theme.buttonColor) {\n        changeCss('.app__body .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover, .app__body .modal .settings-modal .team-img__remove:hover, .app__body .btn.btn-transparent:hover, .app__body .btn.btn-transparent:active, .app__body .new-messages__button div, .app__body .btn.btn-primary, .app__body .post__pinned-badge', 'color:' + theme.buttonColor);\n        changeCss('.app__body .new-messages__button svg', 'fill:' + theme.buttonColor);\n        changeCss('.app__body .post-image__details .post-image__download svg:hover, .app__body .file-view--single .file__download svg', 'stroke:' + theme.buttonColor);\n    }\n\n    if (theme.errorTextColor) {\n        changeCss('.app__body .modal .settings-modal .settings-table .settings-content .has-error, .app__body .modal .form-horizontal .input__help.error, .app__body .color--error, .app__body .has-error .help-block, .app__body .has-error .control-label, .app__body .has-error .radio, .app__body .has-error .checkbox, .app__body .has-error .radio-inline, .app__body .has-error .checkbox-inline, .app__body .has-error.radio label, .app__body .has-error.checkbox label, .app__body .has-error.radio-inline label, .app__body .has-error.checkbox-inline label', 'color:' + theme.errorTextColor);\n    }\n\n    if (theme.mentionHighlightBg) {\n        changeCss('.app__body .mention--highlight, .app__body .search-highlight', 'background:' + theme.mentionHighlightBg);\n        changeCss('.app__body .post.post--comment .post__body.mention-comment', 'border-color:' + theme.mentionHighlightBg);\n        changeCss('.app__body .post.post--highlight', 'background:' + changeOpacity(theme.mentionHighlightBg, 0.5));\n    }\n\n    if (theme.mentionHighlightLink) {\n        changeCss('.app__body .mention--highlight .mention-link, .app__body .mention--highlight, .app__body .search-highlight', 'color:' + theme.mentionHighlightLink);\n    }\n\n    if (!theme.codeTheme) {\n        theme.codeTheme = Constants.DEFAULT_CODE_THEME;\n    }\n    updateCodeTheme(theme.codeTheme);\n}\n\nexport function resetTheme() {\n    applyTheme(Constants.THEMES.default);\n}\n\nexport function changeCss(className, classValue) {\n    let styleEl = document.querySelector('style[data-class=\"' + className + '\"]');\n    if (!styleEl) {\n        styleEl = document.createElement('style');\n        styleEl.setAttribute('data-class', className);\n\n        // Append style element to head\n        document.head.appendChild(styleEl);\n    }\n\n    // Grab style sheet\n    const styleSheet = styleEl.sheet;\n    const rules = styleSheet.cssRules || styleSheet.rules;\n    const style = classValue.substr(0, classValue.indexOf(':'));\n    const value = classValue.substr(classValue.indexOf(':') + 1).replace(/!important[;]/g, '');\n    const priority = (classValue.match(/!important/) ? 'important' : null);\n\n    for (let i = 0; i < rules.length; i++) {\n        if (rules[i].selectorText === className) {\n            rules[i].style.setProperty(style, value, priority);\n            return;\n        }\n    }\n\n    let mediaQuery = '';\n    if (className.indexOf('@media') >= 0) {\n        mediaQuery = '}';\n    }\n    try {\n        styleSheet.insertRule(className + '{' + classValue + '}' + mediaQuery, styleSheet.cssRules.length);\n    } catch (e) {\n        console.error(e); // eslint-disable-line no-console\n    }\n}\n\nexport function updateCodeTheme(userTheme) {\n    let cssPath = '';\n    Constants.THEME_ELEMENTS.forEach((element) => {\n        if (element.id === 'codeTheme') {\n            element.themes.forEach((theme) => {\n                if (userTheme === theme.id) {\n                    cssPath = theme.cssURL;\n                }\n            });\n        }\n    });\n    const $link = $('link.code_theme');\n    if (cssPath !== $link.attr('href')) {\n        changeCss('code.hljs', 'visibility: hidden');\n        var xmlHTTP = new XMLHttpRequest();\n        xmlHTTP.open('GET', cssPath, true);\n        xmlHTTP.onload = function onLoad() {\n            $link.attr('href', cssPath);\n            if (UserAgent.isFirefox()) {\n                $link.one('load', () => {\n                    changeCss('code.hljs', 'visibility: visible');\n                });\n            } else {\n                changeCss('code.hljs', 'visibility: visible');\n            }\n        };\n        xmlHTTP.send();\n    }\n}\n\nexport function placeCaretAtEnd(el) {\n    el.focus();\n    el.selectionStart = el.value.length;\n    el.selectionEnd = el.value.length;\n}\n\nexport function getCaretPosition(el) {\n    if (el.selectionStart) {\n        return el.selectionStart;\n    } else if (document.selection) {\n        el.focus();\n\n        var r = document.selection.createRange();\n        if (r == null) {\n            return 0;\n        }\n\n        var re = el.createTextRange();\n        var rc = re.duplicate();\n        re.moveToBookmark(r.getBookmark());\n        rc.setEndPoint('EndToStart', re);\n\n        return rc.text.length;\n    }\n    return 0;\n}\n\nexport function setSelectionRange(input, selectionStart, selectionEnd) {\n    if (input.setSelectionRange) {\n        input.focus();\n        input.setSelectionRange(selectionStart, selectionEnd);\n    } else if (input.createTextRange) {\n        var range = input.createTextRange();\n        range.collapse(true);\n        range.moveEnd('character', selectionEnd);\n        range.moveStart('character', selectionStart);\n        range.select();\n    }\n}\n\nexport function setCaretPosition(input, pos) {\n    setSelectionRange(input, pos, pos);\n}\n\nexport function isValidUsername(name) {\n    var error = '';\n    if (!name) {\n        error = 'This field is required';\n    } else if (name.length < Constants.MIN_USERNAME_LENGTH || name.length > Constants.MAX_USERNAME_LENGTH) {\n        error = 'Must be between ' + Constants.MIN_USERNAME_LENGTH + ' and ' + Constants.MAX_USERNAME_LENGTH + ' characters';\n    } else if (!(/^[a-z0-9.\\-_]+$/).test(name)) {\n        error = \"Must contain only letters, numbers, and the symbols '.', '-', and '_'.\";\n    } else if (!(/[a-z]/).test(name.charAt(0))) { //eslint-disable-line no-negated-condition\n        error = 'First character must be a letter.';\n    } else {\n        for (var i = 0; i < Constants.RESERVED_USERNAMES.length; i++) {\n            if (name === Constants.RESERVED_USERNAMES[i]) {\n                error = 'Cannot use a reserved word as a username.';\n                break;\n            }\n        }\n    }\n\n    return error;\n}\n\nexport function isMobile() {\n    return window.innerWidth <= Constants.MOBILE_SCREEN_WIDTH;\n}\n\nexport function getDirectTeammate(channelId) {\n    let teammate = {};\n\n    const channel = ChannelStore.get(channelId);\n    if (!channel) {\n        return teammate;\n    }\n\n    const userIds = channel.name.split('__');\n    const curUserId = UserStore.getCurrentId();\n\n    if (userIds.length !== 2 || userIds.indexOf(curUserId) === -1) {\n        return teammate;\n    }\n\n    if (userIds[0] === userIds[1]) {\n        return UserStore.getProfile(userIds[0]);\n    }\n\n    for (var idx in userIds) {\n        if (userIds[idx] !== curUserId) {\n            teammate = UserStore.getProfile(userIds[idx]);\n            break;\n        }\n    }\n\n    return teammate;\n}\n\nexport function loadImage(url, onLoad, onProgress) {\n    const request = new XMLHttpRequest();\n\n    request.open('GET', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = onLoad;\n    request.onprogress = (e) => {\n        if (onProgress) {\n            const completedPercentage = Math.round((e.loaded / e.total) * 100);\n\n            onProgress(completedPercentage);\n        }\n    };\n\n    request.send();\n}\n\nexport function changeColor(colourIn, amt) {\n    var hex = colourIn;\n    var lum = amt;\n\n    // validate hex string\n    hex = String(hex).replace(/[^0-9a-f]/gi, '');\n    if (hex.length < 6) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    lum = lum || 0;\n\n    // convert to decimal and change luminosity\n    var rgb = '#';\n    var c;\n    var i;\n    for (i = 0; i < 3; i++) {\n        c = parseInt(hex.substr(i * 2, 2), 16);\n        c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\n        rgb += ('00' + c).substr(c.length);\n    }\n\n    return rgb;\n}\n\nexport function getFullName(user) {\n    if (user.first_name && user.last_name) {\n        return user.first_name + ' ' + user.last_name;\n    } else if (user.first_name) {\n        return user.first_name;\n    } else if (user.last_name) {\n        return user.last_name;\n    }\n\n    return '';\n}\n\nexport function getDisplayName(user) {\n    if (user.nickname && user.nickname.trim().length > 0) {\n        return user.nickname;\n    }\n    var fullName = getFullName(user);\n\n    if (fullName) {\n        return fullName;\n    }\n\n    return user.username;\n}\n\n/**\n * Gets the display name of the user with the specified id, respecting the TeammateNameDisplay configuration setting\n */\nexport function getDisplayNameByUserId(userId) {\n    return getDisplayNameByUser(UserStore.getProfile(userId));\n}\n\n/**\n * Gets the display name of the specified user, respecting the TeammateNameDisplay configuration setting\n */\nexport function getDisplayNameByUser(user) {\n    const state = store.getState();\n    const teammateNameDisplay = getTeammateNameDisplaySetting(state);\n    if (user) {\n        return displayUsername(user, teammateNameDisplay);\n    }\n\n    return '';\n}\n\nconst UserStatusesWeight = {\n    online: 0,\n    away: 1,\n    dnd: 2,\n    offline: 3,\n    ooo: 3,\n};\n\n/**\n * Sort users by status then by display name, respecting the TeammateNameDisplay configuration setting\n */\nexport function sortUsersByStatusAndDisplayName(users, statusesByUserId) {\n    function compareUsers(a, b) {\n        const aStatus = statusesByUserId[a.id] || UserStatuses.OFFLINE;\n        const bStatus = statusesByUserId[b.id] || UserStatuses.OFFLINE;\n\n        if (UserStatusesWeight[aStatus] !== UserStatusesWeight[bStatus]) {\n            return UserStatusesWeight[aStatus] - UserStatusesWeight[bStatus];\n        }\n\n        const aName = getDisplayNameByUser(a);\n        const bName = getDisplayNameByUser(b);\n\n        return aName.localeCompare(bName);\n    }\n\n    return users.sort(compareUsers);\n}\n\n/**\n * Gets the entire name, including username, full name, and nickname, of the user with the specified id\n */\nexport function displayEntireName(userId) {\n    return displayEntireNameForUser(UserStore.getProfile(userId));\n}\n\n/**\n * Gets the entire name, including username, full name, and nickname, of the specified user\n */\nexport function displayEntireNameForUser(user) {\n    if (!user) {\n        return '';\n    }\n\n    let displayName = '@' + user.username;\n    const fullName = getFullName(user);\n\n    if (fullName && user.nickname) {\n        displayName = (\n            <span>\n                {'@' + user.username}\n                {' - '}\n                <span className='light'>{fullName + ' (' + user.nickname + ')'}</span>\n            </span>\n        );\n    } else if (fullName) {\n        displayName = (\n            <span>\n                {'@' + user.username}\n                {' - '}\n                <span className='light'>{fullName}</span>\n            </span>\n        );\n    } else if (user.nickname) {\n        displayName = (\n            <span>\n                {'@' + user.username}\n                {' - '}\n                <span className='light'>{'(' + user.nickname + ')'}</span>\n            </span>\n        );\n    }\n\n    return displayName;\n}\n\nexport function imageURLForUser(userIdOrObject) {\n    if (typeof userIdOrObject == 'string') {\n        const profile = UserStore.getProfile(userIdOrObject);\n        if (profile) {\n            return imageURLForUser(profile);\n        }\n        return Constants.TRANSPARENT_PIXEL;\n    }\n    return Client4.getUsersRoute() + '/' + userIdOrObject.id + '/image?_=' + (userIdOrObject.last_picture_update || 0);\n}\n\n// in contrast to Client4.getTeamIconUrl, for ui logic this function returns null if last_team_icon_update is unset\nexport function imageURLForTeam(teamIdOrObject) {\n    if (typeof teamIdOrObject == 'string') {\n        const team = TeamStore.get(teamIdOrObject);\n        if (team) {\n            return imageURLForTeam(team);\n        }\n        return null;\n    }\n\n    return teamIdOrObject.last_team_icon_update ? Client4.getTeamIconUrl(teamIdOrObject.id, teamIdOrObject.last_team_icon_update) : null;\n}\n\n// Converts a file size in bytes into a human-readable string of the form '123MB'.\nexport function fileSizeToString(bytes) {\n    // it's unlikely that we'll have files bigger than this\n    if (bytes > 1024 * 1024 * 1024 * 1024) {\n        return Math.floor(bytes / (1024 * 1024 * 1024 * 1024)) + 'TB';\n    } else if (bytes > 1024 * 1024 * 1024) {\n        return Math.floor(bytes / (1024 * 1024 * 1024)) + 'GB';\n    } else if (bytes > 1024 * 1024) {\n        return Math.floor(bytes / (1024 * 1024)) + 'MB';\n    } else if (bytes > 1024) {\n        return Math.floor(bytes / 1024) + 'KB';\n    }\n\n    return bytes + 'B';\n}\n\n// Generates a RFC-4122 version 4 compliant globally unique identifier.\nexport function generateId() {\n    // implementation taken from http://stackoverflow.com/a/2117523\n    var id = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\n\n    id = id.replace(/[xy]/g, (c) => {\n        var r = Math.floor(Math.random() * 16);\n\n        var v;\n        if (c === 'x') {\n            v = r;\n        } else {\n            v = (r & 0x3) | 0x8;\n        }\n\n        return v.toString(16);\n    });\n\n    return id;\n}\n\nexport function getDirectChannelName(id, otherId) {\n    let handle;\n\n    if (otherId > id) {\n        handle = id + '__' + otherId;\n    } else {\n        handle = otherId + '__' + id;\n    }\n\n    return handle;\n}\n\n// Used to get the id of the other user from a DM channel\nexport function getUserIdFromChannelName(channel) {\n    return getUserIdFromChannelId(channel.name);\n}\n\n// Used to get the id of the other user from a DM channel id (id1_id2)\nexport function getUserIdFromChannelId(channelId, currentUserId = getCurrentUserId(store.getState())) {\n    var ids = channelId.split('__');\n    var otherUserId = '';\n    if (ids[0] === currentUserId) {\n        otherUserId = ids[1];\n    } else {\n        otherUserId = ids[0];\n    }\n\n    return otherUserId;\n}\n\nexport function importSlack(file, success, error) {\n    Client4.importTeam(TeamStore.getCurrent().id, file, 'slack').then(success).catch(error);\n}\n\nexport function windowWidth() {\n    return $(window).width();\n}\n\nexport function windowHeight() {\n    return $(window).height();\n}\n\nexport function isFeatureEnabled(feature) {\n    return PreferenceStore.getBool(Constants.Preferences.CATEGORY_ADVANCED_SETTINGS, Constants.FeatureTogglePrefix + feature.label);\n}\n\nexport function fillArray(value, length) {\n    const arr = [];\n\n    for (let i = 0; i < length; i++) {\n        arr.push(value);\n    }\n\n    return arr;\n}\n\n// Checks if a data transfer contains files not text, folders, etc..\n// Slightly modified from http://stackoverflow.com/questions/6848043/how-do-i-detect-a-file-is-being-dragged-rather-than-a-draggable-element-on-my-pa\nexport function isFileTransfer(files) {\n    if (UserAgent.isInternetExplorer() || UserAgent.isEdge()) {\n        return files.types != null && files.types.contains('Files');\n    }\n\n    return files.types != null && (files.types.indexOf ? files.types.indexOf('Files') !== -1 : files.types.contains('application/x-moz-file'));\n}\n\nexport function clearFileInput(elm) {\n    // clear file input for all modern browsers\n    try {\n        elm.value = '';\n        if (elm.value) {\n            elm.type = 'text';\n            elm.type = 'file';\n        }\n    } catch (e) {\n        // Do nothing\n    }\n}\n\nexport function isPostEphemeral(post) {\n    return post.type === Constants.PostTypes.EPHEMERAL || post.state === Posts.POST_DELETED;\n}\n\nexport function getRootId(post) {\n    return post.root_id === '' ? post.id : post.root_id;\n}\n\nexport function localizeMessage(id, defaultMessage) {\n    const state = store.getState();\n\n    const locale = getCurrentLocale(state);\n    const translations = getTranslations(state, locale);\n\n    if (!translations || !(id in translations)) {\n        return defaultMessage || id;\n    }\n\n    return translations[id];\n}\n\nexport function mod(a, b) {\n    return ((a % b) + b) % b;\n}\n\nexport const REACTION_PATTERN = /^(\\+|-):([^:\\s]+):\\s*$/;\n\nexport function getPasswordConfig(config) {\n    return {\n        minimumLength: parseInt(config.PasswordMinimumLength, 10),\n        requireLowercase: config.PasswordRequireLowercase === 'true',\n        requireUppercase: config.PasswordRequireUppercase === 'true',\n        requireNumber: config.PasswordRequireNumber === 'true',\n        requireSymbol: config.PasswordRequireSymbol === 'true',\n    };\n}\n\nexport function isValidPassword(password, passwordConfig) {\n    let errorId = t('user.settings.security.passwordError');\n    let valid = true;\n    const minimumLength = passwordConfig.minimumLength || Constants.MIN_PASSWORD_LENGTH;\n\n    if (password.length < minimumLength || password.length > Constants.MAX_PASSWORD_LENGTH) {\n        valid = false;\n    }\n\n    if (passwordConfig.requireLowercase) {\n        if (!password.match(/[a-z]/)) {\n            valid = false;\n        }\n\n        errorId += 'Lowercase';\n    }\n\n    if (passwordConfig.requireUppercase) {\n        if (!password.match(/[A-Z]/)) {\n            valid = false;\n        }\n\n        errorId += 'Uppercase';\n    }\n\n    if (passwordConfig.requireNumber) {\n        if (!password.match(/[0-9]/)) {\n            valid = false;\n        }\n\n        errorId += 'Number';\n    }\n\n    if (passwordConfig.requireSymbol) {\n        if (!password.match(/[ !\"\\\\#$%&'()*+,-./:;<=>?@[\\]^_`|~]/)) {\n            valid = false;\n        }\n\n        errorId += 'Symbol';\n    }\n\n    let error;\n    if (!valid) {\n        error = (\n            <FormattedMessage\n                id={errorId}\n                default='Your password must contain between {min} and {max} characters.'\n                values={{\n                    min: minimumLength,\n                    max: Constants.MAX_PASSWORD_LENGTH,\n                }}\n            />\n        );\n    }\n\n    return {valid, error};\n}\n\nexport function handleFormattedTextClick(e) {\n    const hashtagAttribute = e.target.getAttributeNode('data-hashtag');\n    const linkAttribute = e.target.getAttributeNode('data-link');\n    const channelMentionAttribute = e.target.getAttributeNode('data-channel-mention');\n\n    if (hashtagAttribute) {\n        e.preventDefault();\n\n        searchForTerm(hashtagAttribute.value);\n    } else if (linkAttribute) {\n        const MIDDLE_MOUSE_BUTTON = 1;\n\n        if (!(e.button === MIDDLE_MOUSE_BUTTON || e.altKey || e.ctrlKey || e.metaKey || e.shiftKey)) {\n            e.preventDefault();\n\n            browserHistory.push(linkAttribute.value);\n        }\n    } else if (channelMentionAttribute) {\n        e.preventDefault();\n        browserHistory.push('/' + TeamStore.getCurrent().name + '/channels/' + channelMentionAttribute.value);\n    }\n}\n\nexport function isEmptyObject(object) {\n    if (!object) {\n        return true;\n    }\n\n    if (Object.keys(object).length === 0) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function removePrefixFromLocalStorage(prefix) {\n    const keys = [];\n    for (let i = 0; i < localStorage.length; i++) {\n        if (localStorage.key(i).startsWith(prefix)) {\n            keys.push(localStorage.key(i));\n        }\n    }\n\n    for (let i = 0; i < keys.length; i++) {\n        localStorage.removeItem(keys[i]);\n    }\n}\n\nexport function getEmailInterval(enableEmailBatching, isEmailEnabled) {\n    const {\n        INTERVAL_NEVER,\n        INTERVAL_IMMEDIATE,\n        INTERVAL_FIFTEEN_MINUTES,\n        INTERVAL_HOUR,\n        CATEGORY_NOTIFICATIONS,\n        EMAIL_INTERVAL,\n    } = Constants.Preferences;\n\n    if (!isEmailEnabled) {\n        return INTERVAL_NEVER;\n    }\n\n    const validValuesWithEmailBatching = [INTERVAL_IMMEDIATE, INTERVAL_FIFTEEN_MINUTES, INTERVAL_HOUR];\n    const validValuesWithoutEmailBatching = [INTERVAL_IMMEDIATE];\n\n    let emailInterval;\n\n    if (enableEmailBatching) {\n        // when email batching is enabled, the default interval is 15 minutes\n        emailInterval = PreferenceStore.getInt(CATEGORY_NOTIFICATIONS, EMAIL_INTERVAL, INTERVAL_FIFTEEN_MINUTES);\n\n        if (validValuesWithEmailBatching.indexOf(emailInterval) === -1) {\n            emailInterval = INTERVAL_FIFTEEN_MINUTES;\n        }\n    } else {\n        // otherwise, the default interval is immediately\n        emailInterval = PreferenceStore.getInt(CATEGORY_NOTIFICATIONS, EMAIL_INTERVAL, INTERVAL_IMMEDIATE);\n\n        if (validValuesWithoutEmailBatching.indexOf(emailInterval) === -1) {\n            emailInterval = INTERVAL_IMMEDIATE;\n        }\n    }\n\n    return emailInterval;\n}\n\nexport function copyToClipboard(data) {\n    // creates a tiny temporary text area to copy text out of\n    // see https://stackoverflow.com/a/30810322/591374 for details\n    var textArea = document.createElement('textarea');\n    textArea.style.position = 'fixed';\n    textArea.style.top = 0;\n    textArea.style.left = 0;\n    textArea.style.width = '2em';\n    textArea.style.height = '2em';\n    textArea.style.padding = 0;\n    textArea.style.border = 'none';\n    textArea.style.outline = 'none';\n    textArea.style.boxShadow = 'none';\n    textArea.style.background = 'transparent';\n    textArea.value = data;\n    document.body.appendChild(textArea);\n    textArea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textArea);\n}\n\nexport function moveCursorToEnd(e) {\n    const val = e.target.value;\n    if (val.length) {\n        e.target.value = '';\n        e.target.value = val;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport debounce from 'lodash/debounce';\n\nimport {\n    getChannel,\n    createDirectChannel,\n    getChannelByNameAndTeamName,\n    getChannelStats,\n    getMyChannelMember,\n    joinChannel,\n    markChannelAsRead,\n    selectChannel,\n} from 'mattermost-redux/actions/channels';\nimport {getPostThread} from 'mattermost-redux/actions/posts';\nimport {logout} from 'mattermost-redux/actions/users';\nimport {Client4} from 'mattermost-redux/client';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentTeamId, getTeam, getMyTeams} from 'mattermost-redux/selectors/entities/teams';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getCurrentChannelStats, getCurrentChannelId, getChannelByName} from 'mattermost-redux/selectors/entities/channels';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {loadChannelsForCurrentUser} from 'actions/channel_actions.jsx';\nimport {handleNewPost} from 'actions/post_actions.jsx';\nimport {stopPeriodicStatusUpdates} from 'actions/status_actions.jsx';\nimport {loadNewDMIfNeeded, loadNewGMIfNeeded, loadProfilesForSidebar} from 'actions/user_actions.jsx';\nimport {closeRightHandSide, closeMenu as closeRhsMenu, updateRhsState} from 'actions/views/rhs';\nimport {close as closeLhs} from 'actions/views/lhs';\nimport * as WebsocketActions from 'actions/websocket_actions.jsx';\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport {getCurrentLocale} from 'selectors/i18n';\nimport {getIsRhsOpen, getRhsState} from 'selectors/rhs';\nimport BrowserStore from 'stores/browser_store.jsx';\nimport ErrorStore from 'stores/error_store.jsx';\nimport store from 'stores/redux_store.jsx';\nimport LocalStorageStore from 'stores/local_storage_store';\nimport WebSocketClient from 'client/web_websocket_client.jsx';\n\nimport {ActionTypes, Constants, ErrorPageTypes, PostTypes, RHSStates} from 'utils/constants.jsx';\nimport EventTypes from 'utils/event_types.jsx';\nimport {filterAndSortTeamsByDisplayName} from 'utils/team_utils.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport {equalServerVersions} from 'utils/server_version';\n\nconst dispatch = store.dispatch;\nconst getState = store.getState;\n\nexport function emitChannelClickEvent(channel) {\n    async function userVisitedFakeChannel(chan, success, fail) {\n        const state = getState();\n        const currentUserId = getCurrentUserId(state);\n        const otherUserId = Utils.getUserIdFromChannelName(chan);\n        const {data: receivedChannel} = await createDirectChannel(currentUserId, otherUserId)(dispatch, getState);\n        if (receivedChannel) {\n            success(receivedChannel);\n        } else {\n            fail();\n        }\n    }\n    function switchToChannel(chan) {\n        const state = getState();\n        const getMyChannelMemberPromise = dispatch(getMyChannelMember(chan.id));\n        const oldChannelId = getCurrentChannelId(state);\n        const userId = getCurrentUserId(state);\n        const teamId = chan.team_id || getCurrentTeamId(state);\n        const isRHSOpened = getIsRhsOpen(state);\n        const isPinnedPostsShowing = getRhsState(state) === RHSStates.PIN;\n\n        getMyChannelMemberPromise.then(() => {\n            dispatch(getChannelStats(chan.id));\n\n            // Mark previous and next channel as read\n            dispatch(markChannelAsRead(chan.id, oldChannelId));\n            reloadIfServerVersionChanged();\n        });\n\n        if (chan.delete_at === 0) {\n            const penultimate = LocalStorageStore.getPreviousChannelName(userId, teamId);\n            LocalStorageStore.setPenultimateChannelName(userId, teamId, penultimate);\n            LocalStorageStore.setPreviousChannelName(userId, teamId, chan.name);\n        }\n\n        // When switching to a different channel if the pinned posts is showing\n        // Update the RHS state to reflect the pinned post of the selected channel\n        if (isRHSOpened && isPinnedPostsShowing) {\n            dispatch(updateRhsState(RHSStates.PIN, chan.id));\n        }\n\n        loadProfilesForSidebar();\n\n        AppDispatcher.handleViewAction({\n            type: ActionTypes.CLICK_CHANNEL,\n            id: chan.id,\n            team_id: teamId,\n        });\n    }\n\n    if (channel.fake) {\n        userVisitedFakeChannel(\n            channel,\n            (data) => {\n                switchToChannel(data);\n            },\n            () => {\n                browserHistory.push('/' + this.state.currentTeam.name);\n            }\n        );\n    } else {\n        switchToChannel(channel);\n    }\n}\n\nexport async function doFocusPost(channelId, postId, data) {\n    AppDispatcher.handleServerAction({\n        type: ActionTypes.RECEIVED_FOCUSED_POST,\n        postId,\n        channelId,\n        post_list: data,\n    });\n\n    dispatch({\n        type: ActionTypes.RECEIVED_FOCUSED_POST,\n        data: postId,\n    });\n\n    const member = getState().entities.channels.myMembers[channelId];\n    if (member == null) {\n        await dispatch(joinChannel(getCurrentUserId(getState()), null, channelId));\n    }\n\n    loadChannelsForCurrentUser();\n    getChannelStats(channelId)(dispatch, getState);\n}\n\nexport function emitCloseRightHandSide() {\n    dispatch(closeRightHandSide());\n}\n\nexport async function emitPostFocusEvent(postId, returnTo = '') {\n    loadChannelsForCurrentUser();\n    const {data} = await dispatch(getPostThread(postId));\n\n    if (!data) {\n        browserHistory.replace(`/error?type=${ErrorPageTypes.PERMALINK_NOT_FOUND}&returnTo=${returnTo}`);\n        return;\n    }\n\n    const channelId = data.posts[data.order[0]].channel_id;\n    let channel = getState().entities.channels.channels[channelId];\n    const teamId = getCurrentTeamId(getState());\n\n    if (!channel) {\n        const {data: channelData} = await dispatch(getChannel(channelId));\n        if (!channelData) {\n            browserHistory.replace(`/error?type=${ErrorPageTypes.PERMALINK_NOT_FOUND}&returnTo=${returnTo}`);\n            return;\n        }\n        channel = channelData;\n    }\n\n    if (channel.team_id && channel.team_id !== teamId) {\n        browserHistory.replace(`/error?type=${ErrorPageTypes.PERMALINK_NOT_FOUND}&returnTo=${returnTo}`);\n        return;\n    }\n\n    if (channel && channel.type === Constants.DM_CHANNEL) {\n        loadNewDMIfNeeded(channel.id);\n    } else if (channel && channel.type === Constants.GM_CHANNEL) {\n        loadNewGMIfNeeded(channel.id);\n    }\n\n    await doFocusPost(channelId, postId, data);\n}\n\nexport function emitUserPostedEvent(post) {\n    AppDispatcher.handleServerAction({\n        type: ActionTypes.CREATE_POST,\n        post,\n    });\n}\n\nexport function emitUserCommentedEvent(post) {\n    AppDispatcher.handleServerAction({\n        type: ActionTypes.CREATE_COMMENT,\n        post,\n    });\n}\n\nexport function toggleShortcutsModal() {\n    AppDispatcher.handleViewAction({\n        type: ActionTypes.TOGGLE_SHORTCUTS_MODAL,\n        value: true,\n    });\n}\n\nexport function showChannelPurposeUpdateModal(channel) {\n    AppDispatcher.handleViewAction({\n        type: ActionTypes.TOGGLE_CHANNEL_PURPOSE_UPDATE_MODAL,\n        value: true,\n        channel,\n    });\n}\n\nexport function showChannelNameUpdateModal(channel) {\n    AppDispatcher.handleViewAction({\n        type: ActionTypes.TOGGLE_CHANNEL_NAME_UPDATE_MODAL,\n        value: true,\n        channel,\n    });\n}\n\nexport function showGetPostLinkModal(post) {\n    AppDispatcher.handleViewAction({\n        type: ActionTypes.TOGGLE_GET_POST_LINK_MODAL,\n        value: true,\n        post,\n    });\n}\n\nexport function showGetPublicLinkModal(fileId) {\n    AppDispatcher.handleViewAction({\n        type: ActionTypes.TOGGLE_GET_PUBLIC_LINK_MODAL,\n        value: true,\n        fileId,\n    });\n}\n\nexport function showGetTeamInviteLinkModal() {\n    AppDispatcher.handleViewAction({\n        type: Constants.ActionTypes.TOGGLE_GET_TEAM_INVITE_LINK_MODAL,\n        value: true,\n    });\n}\n\nexport function showInviteMemberModal() {\n    AppDispatcher.handleViewAction({\n        type: ActionTypes.TOGGLE_INVITE_MEMBER_MODAL,\n        value: true,\n    });\n}\n\nexport function showLeavePrivateChannelModal(channel) {\n    AppDispatcher.handleViewAction({\n        type: ActionTypes.TOGGLE_LEAVE_PRIVATE_CHANNEL_MODAL,\n        value: channel,\n    });\n}\n\nexport function emitSuggestionPretextChanged(suggestionId, pretext) {\n    AppDispatcher.handleViewAction({\n        type: ActionTypes.SUGGESTION_PRETEXT_CHANGED,\n        id: suggestionId,\n        pretext,\n    });\n}\n\nexport function emitSelectNextSuggestion(suggestionId) {\n    AppDispatcher.handleViewAction({\n        type: ActionTypes.SUGGESTION_SELECT_NEXT,\n        id: suggestionId,\n    });\n}\n\nexport function emitSelectPreviousSuggestion(suggestionId) {\n    AppDispatcher.handleViewAction({\n        type: ActionTypes.SUGGESTION_SELECT_PREVIOUS,\n        id: suggestionId,\n    });\n}\n\nexport function emitCompleteWordSuggestion(suggestionId, term = '') {\n    AppDispatcher.handleViewAction({\n        type: Constants.ActionTypes.SUGGESTION_COMPLETE_WORD,\n        id: suggestionId,\n        term,\n    });\n}\n\nexport function emitClearSuggestions(suggestionId) {\n    AppDispatcher.handleViewAction({\n        type: Constants.ActionTypes.SUGGESTION_CLEAR_SUGGESTIONS,\n        id: suggestionId,\n    });\n}\n\nexport function emitPreferenceChangedEvent(preference) {\n    AppDispatcher.handleServerAction({\n        type: Constants.ActionTypes.RECEIVED_PREFERENCE,\n        preference,\n    });\n\n    if (addedNewDmUser(preference)) {\n        loadProfilesForSidebar();\n    }\n}\n\nexport function emitPreferencesChangedEvent(preferences) {\n    AppDispatcher.handleServerAction({\n        type: Constants.ActionTypes.RECEIVED_PREFERENCES,\n        preferences,\n    });\n\n    if (preferences.findIndex(addedNewDmUser) !== -1) {\n        loadProfilesForSidebar();\n    }\n}\n\nfunction addedNewDmUser(preference) {\n    return preference.category === Constants.Preferences.CATEGORY_DIRECT_CHANNEL_SHOW && preference.value === 'true';\n}\n\nexport function emitPreferencesDeletedEvent(preferences) {\n    AppDispatcher.handleServerAction({\n        type: Constants.ActionTypes.DELETED_PREFERENCES,\n        preferences,\n    });\n}\n\nexport function sendEphemeralPost(message, channelId, parentId) {\n    const timestamp = Utils.getTimestamp();\n    const post = {\n        id: Utils.generateId(),\n        user_id: '0',\n        channel_id: channelId || getCurrentChannelId(getState()),\n        message,\n        type: PostTypes.EPHEMERAL,\n        create_at: timestamp,\n        update_at: timestamp,\n        root_id: parentId,\n        parent_id: parentId,\n        props: {},\n    };\n\n    dispatch(handleNewPost(post));\n}\n\nexport function sendAddToChannelEphemeralPost(user, addedUsername, addedUserId, channelId, postRootId = '', timestamp) {\n    const post = {\n        id: Utils.generateId(),\n        user_id: user.id,\n        channel_id: channelId || getCurrentChannelId(getState()),\n        message: '',\n        type: PostTypes.EPHEMERAL_ADD_TO_CHANNEL,\n        create_at: timestamp,\n        update_at: timestamp,\n        root_id: postRootId,\n        parent_id: postRootId,\n        props: {\n            username: user.username,\n            addedUsername,\n            addedUserId,\n        },\n    };\n\n    dispatch(handleNewPost(post));\n}\n\nlet lastTimeTypingSent = 0;\nexport function emitLocalUserTypingEvent(channelId, parentPostId) {\n    const userTyping = async (actionDispatch, actionGetState) => {\n        const state = actionGetState();\n        const config = getConfig(state);\n        const t = Date.now();\n        const stats = getCurrentChannelStats(state);\n        const membersInChannel = stats ? stats.member_count : 0;\n\n        if (((t - lastTimeTypingSent) > config.TimeBetweenUserTypingUpdatesMilliseconds) &&\n            (membersInChannel < config.MaxNotificationsPerChannel) && (config.EnableUserTypingMessages === 'true')) {\n            WebSocketClient.userTyping(channelId, parentPostId);\n            lastTimeTypingSent = t;\n        }\n\n        return {data: true};\n    };\n\n    return dispatch(userTyping);\n}\n\nexport function emitRemoteUserTypingEvent(channelId, userId, postParentId) {\n    AppDispatcher.handleViewAction({\n        type: Constants.ActionTypes.USER_TYPING,\n        channelId,\n        userId,\n        postParentId,\n    });\n}\n\nexport function emitUserLoggedOutEvent(redirectTo = '/', shouldSignalLogout = true, userAction = true) {\n    // If the logout was intentional, discard knowledge about having previously been logged in.\n    // This bit is otherwise used to detect session expirations on the login page.\n    if (userAction) {\n        LocalStorageStore.setWasLoggedIn(false);\n    }\n\n    dispatch(logout()).then(() => {\n        if (shouldSignalLogout) {\n            BrowserStore.signalLogout();\n        }\n\n        BrowserStore.clear();\n        ErrorStore.clearLastError();\n        stopPeriodicStatusUpdates();\n        WebsocketActions.close();\n        document.cookie = 'MMUSERID=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n        browserHistory.push(redirectTo);\n    }).catch(() => {\n        browserHistory.push(redirectTo);\n    });\n}\n\nexport function toggleSideBarRightMenuAction() {\n    dispatch(closeRightHandSide());\n    dispatch(closeLhs());\n    dispatch(closeRhsMenu());\n}\n\nexport function emitBrowserFocus(focus) {\n    dispatch({\n        type: ActionTypes.BROWSER_CHANGE_FOCUS,\n        focus,\n    });\n}\n\nexport async function redirectUserToDefaultTeam() {\n    const state = getState();\n    const userId = getCurrentUserId(state);\n    const locale = getCurrentLocale(state);\n    const teamId = LocalStorageStore.getPreviousTeamId(userId);\n\n    let team = getTeam(state, teamId);\n\n    if (!team) {\n        let myTeams = getMyTeams(state);\n\n        if (myTeams.length > 0) {\n            myTeams = filterAndSortTeamsByDisplayName(myTeams, locale);\n            if (myTeams && myTeams[0]) {\n                team = myTeams[0];\n            }\n        }\n    }\n\n    if (userId && team) {\n        let channelName = LocalStorageStore.getPreviousChannelName(userId, teamId);\n        const channel = getChannelByName(state, channelName);\n        if (channel && channel.team_id === team.id) {\n            dispatch(selectChannel(channel.id));\n            channelName = channel.name;\n        } else {\n            const {data} = await dispatch(getChannelByNameAndTeamName(team.name, channelName));\n            if (data) {\n                dispatch(selectChannel(data.id));\n            }\n        }\n\n        browserHistory.push(`/${team.name}/channels/${channelName}`);\n    } else {\n        browserHistory.push('/select_team');\n    }\n}\n\nexport const postListScrollChange = debounce(() => {\n    AppDispatcher.handleViewAction({\n        type: EventTypes.POST_LIST_SCROLL_CHANGE,\n        value: false,\n    });\n});\n\nexport function postListScrollChangeToBottom() {\n    AppDispatcher.handleViewAction({\n        type: EventTypes.POST_LIST_SCROLL_CHANGE,\n        value: true,\n    });\n}\n\nexport function emitPopoverMentionKeyClick(isRHS, mentionKey) {\n    AppDispatcher.handleViewAction({\n        type: ActionTypes.POPOVER_MENTION_KEY_CLICK,\n        isRHS,\n        mentionKey,\n    });\n}\n\nlet serverVersion = '';\n\nexport function reloadIfServerVersionChanged() {\n    const newServerVersion = Client4.getServerVersion();\n\n    if (serverVersion && !equalServerVersions(serverVersion, newServerVersion)) {\n        console.log(`Detected version update from ${serverVersion} to ${newServerVersion}; refreshing the page`); //eslint-disable-line no-console\n        window.location.reload(true);\n    }\n\n    serverVersion = newServerVersion;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\n/**\n * Compare server versions, ignoring the configuration hash and licensed status.\n *\n * For example, the following two server versions are considered equal:\n *     4.7.1.dev.3034fbc5fd566195d1b53e03890e35ff.true\n *     4.7.1.dev.d131dd02c5e6eec4693d9a0698aff95c.false\n *\n * but the following two are not\n *     4.7.0.dev.3034fbc5fd566195d1b53e03890e35ff.true\n *     4.7.1.dev.d131dd02c5e6eec4693d9a0698aff95c.true\n */\nexport function equalServerVersions(a, b) {\n    if (a === b) {\n        return true;\n    }\n\n    const ignoredComponents = 2;\n    const aIgnoringComponents = (a || '').split('.').slice(0, -ignoredComponents).join('.');\n    const bIgnoringComponents = (b || '').split('.').slice(0, -ignoredComponents).join('.');\n    if (aIgnoringComponents === bIgnoringComponents) {\n        return true;\n    }\n\n    return false;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {injectIntl, intlShape} from 'react-intl';\nimport PropTypes from 'prop-types';\nimport marked from 'marked';\n\nconst TARGET_BLANK_URL_PREFIX = '!';\n\nclass CustomRenderer extends marked.Renderer {\n    link(href, title, text) {\n        if (href[0] === TARGET_BLANK_URL_PREFIX) {\n            return `<a href=\"${href.substring(1, href.length)}\" target=\"_blank\">${text}</a>`;\n        }\n        return `<a href=\"${href}\">${text}</a>`;\n    }\n\n    paragraph(text) {\n        return text;\n    }\n}\n\n/*\n* Translations component with the same API as react-intl's <FormattedMessage> component except the message string\n* accepts markdown. It supports the following non-block-level markdown:\n* - *italic*\n* - **bold**\n* - `inline code`\n* - ~~strikethrough~~\n* - [link](http://example.com/)\n* - [link in new tab](!http://example.com/)\n* - line\\nbreaks\n*\n* Note: Line breaks (\\n) in a defaultMessage parameter string must be surrounded by curly brackets {} in JSX. Example:\n* <FormattedMarkdownMessage id='my.example' defaultMessage={'first line\\nsecond line'} />\n*/\nclass FormattedMarkdownMessage extends React.PureComponent {\n    static get propTypes() {\n        return {\n            intl: intlShape.isRequired,\n            id: PropTypes.string.isRequired,\n            defaultMessage: PropTypes.string.isRequired,\n            values: PropTypes.object,\n        };\n    }\n\n    render() {\n        const origMsg = this.props.intl.formatMessage({\n            id: this.props.id,\n            defaultMessage: this.props.defaultMessage,\n        }, this.props.values);\n\n        const markedUpMessage = marked(origMsg, {\n            breaks: true,\n            sanitize: true,\n            renderer: new CustomRenderer(),\n        });\n\n        return (<span dangerouslySetInnerHTML={{__html: markedUpMessage}}/>);\n    }\n}\n\nexport default injectIntl(FormattedMarkdownMessage);","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {getChannelAndMyMember} from 'mattermost-redux/actions/channels';\nimport {deletePreferences as deletePreferencesRedux, savePreferences as savePreferencesRedux} from 'mattermost-redux/actions/preferences';\nimport {getMyTeamMembers, getMyTeamUnreads, getTeamMembersByIds} from 'mattermost-redux/actions/teams';\nimport * as UserActions from 'mattermost-redux/actions/users';\nimport {Client4} from 'mattermost-redux/client';\nimport {Preferences as PreferencesRedux} from 'mattermost-redux/constants';\nimport {\n    getChannel,\n    getCurrentChannelId,\n    getMyChannels,\n    getMyChannelMember,\n    getChannelMembersInChannels,\n} from 'mattermost-redux/selectors/entities/channels';\nimport {getBool, makeGetCategory} from 'mattermost-redux/selectors/entities/preferences';\nimport {getCurrentTeamId, getTeamMember} from 'mattermost-redux/selectors/entities/teams';\nimport * as Selectors from 'mattermost-redux/selectors/entities/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {getChannelMembersForUserIds} from 'actions/channel_actions.jsx';\nimport {loadStatusesForProfilesList, loadStatusesForProfilesMap} from 'actions/status_actions.jsx';\nimport store from 'stores/redux_store.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport {Constants, Preferences} from 'utils/constants.jsx';\n\nconst dispatch = store.dispatch;\nconst getState = store.getState;\n\nexport async function switchFromLdapToEmail(email, password, token, ldapPassword, success, error) {\n    const {data, error: err} = await UserActions.switchLdapToEmail(ldapPassword, email, password, token)(dispatch, getState);\n\n    if (data) {\n        if (success) {\n            success(data);\n        }\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function loadProfilesAndTeamMembers(page, perPage, teamId = getCurrentTeamId(getState()), success) {\n    const {data} = await UserActions.getProfilesInTeam(teamId, page, perPage)(dispatch, getState);\n    loadTeamMembersForProfilesList(data, teamId, success);\n    dispatch(loadStatusesForProfilesList(data));\n}\n\nexport async function loadProfilesAndTeamMembersAndChannelMembers(page, perPage, teamId = getCurrentTeamId(getState()), channelId = getCurrentChannelId(getState()), success, error) {\n    const {data} = await UserActions.getProfilesInChannel(channelId, page, perPage)(dispatch, getState);\n\n    loadTeamMembersForProfilesList(\n        data,\n        teamId,\n        () => {\n            loadChannelMembersForProfilesList(data, channelId, success, error);\n            dispatch(loadStatusesForProfilesList(data));\n        }\n    );\n}\n\nexport function loadTeamMembersForProfilesList(profiles, teamId = getCurrentTeamId(getState()), success, error) {\n    const state = getState();\n    const membersToLoad = {};\n    for (let i = 0; i < profiles.length; i++) {\n        const pid = profiles[i].id;\n\n        if (!getTeamMember(state, teamId, pid)) {\n            membersToLoad[pid] = true;\n        }\n    }\n\n    const list = Object.keys(membersToLoad);\n    if (list.length === 0) {\n        if (success) {\n            success({});\n        }\n        return;\n    }\n\n    loadTeamMembersForProfiles(list, teamId, success, error);\n}\n\nexport async function loadProfilesWithoutTeam(page, perPage, success) {\n    const {data} = await UserActions.getProfilesWithoutTeam(page, perPage)(dispatch, getState);\n    dispatch(loadStatusesForProfilesMap(data));\n\n    if (success) {\n        success(data);\n    }\n}\n\nasync function loadTeamMembersForProfiles(userIds, teamId, success, error) {\n    const {data, error: err} = await getTeamMembersByIds(teamId, userIds)(dispatch, getState);\n\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport function loadChannelMembersForProfilesMap(profiles, channelId = getCurrentChannelId(getState()), success, error) {\n    const membersToLoad = {};\n    for (const pid in profiles) {\n        if (!profiles.hasOwnProperty(pid)) {\n            continue;\n        }\n\n        const members = getChannelMembersInChannels(getState())[channelId];\n        if (!members || !members[pid]) {\n            membersToLoad[pid] = true;\n        }\n    }\n\n    const list = Object.keys(membersToLoad);\n    if (list.length === 0) {\n        if (success) {\n            success({});\n        }\n        return;\n    }\n\n    getChannelMembersForUserIds(channelId, list, success, error);\n}\n\nexport function loadTeamMembersAndChannelMembersForProfilesList(profiles, teamId = getCurrentTeamId(getState()), channelId = getCurrentChannelId(getState()), success, error) {\n    loadTeamMembersForProfilesList(profiles, teamId, () => {\n        loadChannelMembersForProfilesList(profiles, channelId, success, error);\n    }, error);\n}\n\nexport function loadChannelMembersForProfilesList(profiles, channelId = getCurrentChannelId(getState()), success, error) {\n    const membersToLoad = {};\n    for (let i = 0; i < profiles.length; i++) {\n        const pid = profiles[i].id;\n\n        const members = getChannelMembersInChannels(getState())[channelId];\n        if (!members || !members[pid]) {\n            membersToLoad[pid] = true;\n        }\n    }\n\n    const list = Object.keys(membersToLoad);\n    if (list.length === 0) {\n        if (success) {\n            success({});\n        }\n        return;\n    }\n\n    getChannelMembersForUserIds(channelId, list, success, error);\n}\n\nexport async function loadNewDMIfNeeded(channelId) {\n    function checkPreference(channel) {\n        const userId = Utils.getUserIdFromChannelName(channel);\n\n        if (!userId) {\n            return;\n        }\n\n        const pref = getBool(getState(), Preferences.CATEGORY_DIRECT_CHANNEL_SHOW, userId, false);\n        if (pref === false) {\n            const now = Utils.getTimestamp();\n            const currentUserId = Selectors.getCurrentUserId(getState());\n            savePreferencesRedux(currentUserId, [\n                {user_id: currentUserId, category: Preferences.CATEGORY_DIRECT_CHANNEL_SHOW, name: userId, value: 'true'},\n                {user_id: currentUserId, category: Preferences.CATEGORY_CHANNEL_OPEN_TIME, name: channelId, value: now.toString()},\n            ])(dispatch, getState);\n            loadProfilesForDM();\n        }\n    }\n\n    const channel = getChannel(getState(), channelId);\n    if (channel) {\n        checkPreference(channel);\n    } else {\n        const {data} = await getChannelAndMyMember(channelId)(dispatch, getState);\n        if (data) {\n            checkPreference(data.channel);\n        }\n    }\n}\n\nexport async function loadNewGMIfNeeded(channelId) {\n    function checkPreference() {\n        const pref = getBool(getState(), Preferences.CATEGORY_GROUP_CHANNEL_SHOW, channelId, false);\n        if (pref === false) {\n            const currentUserId = Selectors.getCurrentUserId(getState());\n            savePreferencesRedux(currentUserId, [{user_id: currentUserId, category: Preferences.CATEGORY_GROUP_CHANNEL_SHOW, name: channelId, value: 'true'}])(dispatch, getState);\n            loadProfilesForGM();\n        }\n    }\n\n    const channel = getChannel(getState(), channelId);\n    if (!channel) {\n        await getChannelAndMyMember(channelId)(dispatch, getState);\n    }\n    checkPreference();\n}\n\nexport function loadProfilesForSidebar() {\n    loadProfilesForDM();\n    loadProfilesForGM();\n}\n\nexport async function loadProfilesForGM() {\n    const state = getState();\n    const channels = getMyChannels(state);\n    const newPreferences = [];\n    const userIdsInChannels = Selectors.getUserIdsInChannels(state);\n    const currentUserId = Selectors.getCurrentUserId(state);\n\n    for (let i = 0; i < channels.length; i++) {\n        const channel = channels[i];\n        if (channel.type !== Constants.GM_CHANNEL) {\n            continue;\n        }\n\n        const userIds = userIdsInChannels[channel.id] || [];\n        if (userIds.length >= Constants.MIN_USERS_IN_GM) {\n            continue;\n        }\n\n        const isVisible = getBool(state, Preferences.CATEGORY_GROUP_CHANNEL_SHOW, channel.id);\n\n        if (!isVisible) {\n            const member = getMyChannelMember(state, channel.id);\n            if (!member || (member.mention_count === 0 && member.msg_count >= channel.total_msg_count)) {\n                continue;\n            }\n\n            newPreferences.push({\n                user_id: currentUserId,\n                category: Preferences.CATEGORY_GROUP_CHANNEL_SHOW,\n                name: channel.id,\n                value: 'true',\n            });\n        }\n\n        await dispatch(UserActions.getProfilesInChannel(channel.id, 0, Constants.MAX_USERS_IN_GM)); //eslint-disable-line no-await-in-loop\n    }\n\n    if (newPreferences.length > 0) {\n        savePreferencesRedux(currentUserId, newPreferences)(dispatch, getState);\n    }\n}\n\nexport async function loadProfilesForDM() {\n    const state = getState();\n    const channels = getMyChannels(state);\n    const newPreferences = [];\n    const profilesToLoad = [];\n    const profileIds = [];\n    const currentUserId = Selectors.getCurrentUserId(state);\n\n    for (let i = 0; i < channels.length; i++) {\n        const channel = channels[i];\n        if (channel.type !== Constants.DM_CHANNEL) {\n            continue;\n        }\n\n        const teammateId = channel.name.replace(currentUserId, '').replace('__', '');\n        const isVisible = getBool(state, Preferences.CATEGORY_DIRECT_CHANNEL_SHOW, teammateId);\n\n        if (!isVisible) {\n            const member = getMyChannelMember(state, channel.id);\n            if (!member || member.mention_count === 0) {\n                continue;\n            }\n\n            newPreferences.push({\n                user_id: currentUserId,\n                category: Preferences.CATEGORY_DIRECT_CHANNEL_SHOW,\n                name: teammateId,\n                value: 'true',\n            });\n        }\n\n        if (!Selectors.getUser(state, teammateId)) {\n            profilesToLoad.push(teammateId);\n        }\n        profileIds.push(teammateId);\n    }\n\n    if (newPreferences.length > 0) {\n        savePreferencesRedux(currentUserId, newPreferences)(dispatch, getState);\n    }\n\n    if (profilesToLoad.length > 0) {\n        await UserActions.getProfilesByIds(profilesToLoad)(dispatch, getState);\n    }\n}\n\nexport async function saveTheme(teamId, theme, cb) {\n    const currentUserId = Selectors.getCurrentUserId(getState());\n    const preference = [{\n        user_id: currentUserId,\n        category: Preferences.CATEGORY_THEME,\n        name: teamId,\n        value: JSON.stringify(theme),\n    }];\n\n    await savePreferencesRedux(currentUserId, preference)(dispatch, getState);\n    onThemeSaved(teamId, cb);\n}\n\nfunction onThemeSaved(teamId, onSuccess) {\n    const getCategory = makeGetCategory();\n    const themePreferences = getCategory(getState(), Preferences.CATEGORY_THEME);\n\n    if (teamId !== '' && themePreferences.size > 1) {\n        // no extra handling to be done to delete team-specific themes\n        onSuccess();\n        return;\n    }\n\n    const currentUserId = Selectors.getCurrentUserId(getState());\n    const toDelete = [];\n\n    for (const themePreference of themePreferences) {\n        if (themePreference.name === '' || themePreference.name === teamId) {\n            continue;\n        }\n\n        toDelete.push({\n            user_id: currentUserId,\n            category: Preferences.CATEGORY_THEME,\n            name,\n        });\n    }\n\n    if (toDelete.length > 0) {\n        // we're saving a new global theme so delete any team-specific ones\n        deletePreferencesRedux(currentUserId, toDelete)(dispatch, getState);\n    }\n\n    onSuccess();\n}\n\nexport async function searchUsers(term, teamId = getCurrentTeamId(getState()), options = {}, success) {\n    const {data} = await UserActions.searchProfiles(term, {team_id: teamId, ...options})(dispatch, getState);\n    dispatch(loadStatusesForProfilesList(data));\n\n    if (success) {\n        success(data);\n    }\n}\n\nexport async function autocompleteUsersInChannel(username, channelId, success) {\n    const channel = getChannel(getState(), channelId);\n    const teamId = channel ? channel.team_id : getCurrentTeamId(getState());\n    const {data} = await UserActions.autocompleteUsers(username, teamId, channelId)(dispatch, getState);\n    if (success) {\n        success(data);\n    }\n}\n\nexport async function autocompleteUsersInTeam(username, success) {\n    const {data} = await UserActions.autocompleteUsers(username, getCurrentTeamId(getState()))(dispatch, getState);\n    if (success) {\n        success(data);\n    }\n}\n\nexport async function autocompleteUsers(username, success) {\n    const {data} = await UserActions.autocompleteUsers(username)(dispatch, getState);\n    if (success) {\n        success(data);\n    }\n}\n\nexport async function updateUser(user, success, error) {\n    const {data, error: err} = await UserActions.updateMe(user)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function generateMfaSecret(success, error) {\n    const {data, error: err} = await UserActions.generateMfaSecret(Selectors.getCurrentUserId(getState()))(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function updateUserNotifyProps(props, success, error) {\n    const {data, error: err} = await UserActions.updateMe({notify_props: props})(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function updateUserRoles(userId, newRoles, success, error) {\n    const {data, error: err} = await UserActions.updateUserRoles(userId, newRoles)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function activateMfa(code, success, error) {\n    const {data, error: err} = await UserActions.updateUserMfa(Selectors.getCurrentUserId(getState()), true, code)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function deactivateMfa(success, error) {\n    const {data, error: err} = await UserActions.updateUserMfa(Selectors.getCurrentUserId(getState()), false)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function checkMfa(loginId, success, error) {\n    const config = getConfig(getState());\n\n    if (config.EnableMultifactorAuthentication !== 'true') {\n        success(false);\n        return;\n    }\n\n    const {data, error: err} = await UserActions.checkMfa(loginId)(dispatch, getState);\n    if (data != null && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function updateActive(userId, active, success, error) {\n    const {data, error: err} = await UserActions.updateUserActive(userId, active)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function updatePassword(userId, currentPassword, newPassword, success, error) {\n    const {data, error: err} = await UserActions.updateUserPassword(userId, currentPassword, newPassword)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport function revokeAllSessions(userId, success, error) {\n    UserActions.revokeAllSessionsForUser(userId)(dispatch, getState).then(\n        (data) => {\n            if (data && success) {\n                success(data);\n            } else if (data == null && error) {\n                const serverError = getState().requests.users.updateUser.error;\n                error({id: serverError.server_error_id, ...serverError});\n            }\n        }\n    );\n}\n\nexport async function verifyEmail(token, success, error) {\n    const {data, error: err} = await UserActions.verifyUserEmail(token)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function resetPassword(token, password, success, error) {\n    const {data, error: err} = await UserActions.resetUserPassword(token, password)(dispatch, getState);\n    if (data) {\n        browserHistory.push('/login?extra=' + Constants.PASSWORD_CHANGE);\n        if (success) {\n            success(data);\n        }\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function resendVerification(email, success, error) {\n    const {data, error: err} = await UserActions.sendVerificationEmail(email)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function loginById(userId, password, mfaToken, success, error) {\n    const {data: ok, error: err} = await UserActions.loginById(userId, password, mfaToken)(dispatch, getState);\n    if (ok && success) {\n        success();\n    } else if (err && error) {\n        if (err.server_error_id === 'api.context.mfa_required.app_error') {\n            if (success) {\n                success();\n            }\n            return;\n        }\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function createUserWithInvite(user, token, inviteId, success, error) {\n    const {data: resp, error: err} = await UserActions.createUser(user, token, inviteId)(dispatch, getState);\n    if (resp && success) {\n        success(resp);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function webLogin(loginId, password, token, success, error) {\n    const {data: ok, error: err} = await UserActions.login(loginId, password, token)(dispatch, getState);\n    if (ok && success) {\n        success();\n    } else if (err && error) {\n        if (err.server_error_id === 'api.context.mfa_required.app_error') {\n            if (success) {\n                success();\n            }\n            return;\n        }\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function updateTermsOfServiceStatus(termsOfServiceId, accepted, success, error) {\n    const {data, error: err} = await UserActions.updateTermsOfServiceStatus(termsOfServiceId, accepted)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function getTermsOfService(success, error) {\n    const {data, error: err} = await UserActions.getTermsOfService()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function webLoginByLdap(loginId, password, token, success, error) {\n    const {data: ok, error: err} = await UserActions.login(loginId, password, token, true)(dispatch, getState);\n    if (ok && success) {\n        success();\n    } else if (err && error) {\n        if (err.server_error_id === 'api.context.mfa_required.app_error') {\n            if (success) {\n                success();\n            }\n            return;\n        }\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport function getAuthorizedApps(success, error) {\n    Client4.getAuthorizedOAuthApps(getState().entities.users.currentUserId).then(\n        (authorizedApps) => {\n            if (success) {\n                success(authorizedApps);\n            }\n        }\n    ).catch(\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function deauthorizeOAuthApp(appId, success, error) {\n    Client4.deauthorizeOAuthApp(appId).then(\n        () => {\n            if (success) {\n                success();\n            }\n        }\n    ).catch(\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport async function uploadProfileImage(userPicture, success, error) {\n    const {data, error: err} = await UserActions.uploadProfileImage(Selectors.getCurrentUserId(getState()), userPicture)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function loadProfiles(page, perPage, success) {\n    const {data} = await UserActions.getProfiles(page, perPage)(dispatch, getState);\n    if (success) {\n        success(data);\n    }\n}\n\nexport function getMissingProfiles(ids) {\n    const state = getState();\n    const missingIds = ids.filter((id) => !Selectors.getUser(state, id));\n\n    if (missingIds.length === 0) {\n        return;\n    }\n\n    UserActions.getProfilesByIds(missingIds)(dispatch, getState);\n}\n\nexport async function loadMyTeamMembers() {\n    await getMyTeamMembers()(dispatch, getState);\n    getMyTeamUnreads()(dispatch, getState);\n}\n\nexport async function savePreferences(prefs, callback) {\n    const currentUserId = Selectors.getCurrentUserId(getState());\n    await savePreferencesRedux(currentUserId, prefs)(dispatch, getState);\n    callback();\n}\n\nexport async function savePreference(category, name, value) {\n    const currentUserId = Selectors.getCurrentUserId(getState());\n    return savePreferencesRedux(currentUserId, [{user_id: currentUserId, category, name, value}])(dispatch, getState);\n}\n\nexport function deletePreferences(prefs) {\n    const currentUserId = Selectors.getCurrentUserId(getState());\n    return deletePreferencesRedux(currentUserId, prefs)(dispatch, getState);\n}\n\nexport function autoResetStatus() {\n    return async (doDispatch, doGetState) => {\n        const {currentUserId} = getState().entities.users;\n        const {data: userStatus} = await UserActions.getStatus(currentUserId)(doDispatch, doGetState);\n\n        if (!userStatus.manual) {\n            return userStatus;\n        }\n\n        const autoReset = getBool(getState(), PreferencesRedux.CATEGORY_AUTO_RESET_MANUAL_STATUS, currentUserId, false);\n\n        if (autoReset) {\n            UserActions.setStatus({user_id: currentUserId, status: 'online'})(doDispatch, doGetState);\n            return userStatus;\n        }\n\n        return userStatus;\n    };\n}\n\nexport async function sendPasswordResetEmail(email, success, error) {\n    const {data, error: err} = await UserActions.sendPasswordResetEmail(email)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class LoadingScreen extends React.Component {\n    static propTypes = {\n        position: PropTypes.oneOf(['absolute', 'fixed', 'relative', 'static', 'inherit']),\n        style: PropTypes.object,\n        message: PropTypes.node,\n    }\n\n    static defaultProps = {\n        position: 'relative',\n        style: {},\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        let message = (\n            <FormattedMessage\n                id='loading_screen.loading'\n                defaultMessage='Loading'\n            />\n        );\n\n        if (this.props.message) {\n            message = this.props.message;\n        }\n\n        return (\n            <div\n                className='loading-screen'\n                style={{position: this.props.position, ...this.props.style}}\n            >\n                <div className='loading__content'>\n                    <h3>\n                        {message}\n                    </h3>\n                    <div className='round round-1'/>\n                    <div className='round round-2'/>\n                    <div className='round round-3'/>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nvar latinMap = {\n    Á: 'A', // LATIN CAPITAL LETTER A WITH ACUTE\n    Ă: 'A', // LATIN CAPITAL LETTER A WITH BREVE\n    Ắ: 'A', // LATIN CAPITAL LETTER A WITH BREVE AND ACUTE\n    Ặ: 'A', // LATIN CAPITAL LETTER A WITH BREVE AND DOT BELOW\n    Ằ: 'A', // LATIN CAPITAL LETTER A WITH BREVE AND GRAVE\n    Ẳ: 'A', // LATIN CAPITAL LETTER A WITH BREVE AND HOOK ABOVE\n    Ẵ: 'A', // LATIN CAPITAL LETTER A WITH BREVE AND TILDE\n    Ǎ: 'A', // LATIN CAPITAL LETTER A WITH CARON\n    Â: 'A', // LATIN CAPITAL LETTER A WITH CIRCUMFLEX\n    Ấ: 'A', // LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND ACUTE\n    Ậ: 'A', // LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND DOT BELOW\n    Ầ: 'A', // LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND GRAVE\n    Ẩ: 'A', // LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE\n    Ẫ: 'A', // LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND TILDE\n    Ä: 'A', // LATIN CAPITAL LETTER A WITH DIAERESIS\n    Ǟ: 'A', // LATIN CAPITAL LETTER A WITH DIAERESIS AND MACRON\n    Ȧ: 'A', // LATIN CAPITAL LETTER A WITH DOT ABOVE\n    Ǡ: 'A', // LATIN CAPITAL LETTER A WITH DOT ABOVE AND MACRON\n    Ạ: 'A', // LATIN CAPITAL LETTER A WITH DOT BELOW\n    Ȁ: 'A', // LATIN CAPITAL LETTER A WITH DOUBLE GRAVE\n    À: 'A', // LATIN CAPITAL LETTER A WITH GRAVE\n    Ả: 'A', // LATIN CAPITAL LETTER A WITH HOOK ABOVE\n    Ȃ: 'A', // LATIN CAPITAL LETTER A WITH INVERTED BREVE\n    Ā: 'A', // LATIN CAPITAL LETTER A WITH MACRON\n    Ą: 'A', // LATIN CAPITAL LETTER A WITH OGONEK\n    Å: 'A', // LATIN CAPITAL LETTER A WITH RING ABOVE\n    Ǻ: 'A', // LATIN CAPITAL LETTER A WITH RING ABOVE AND ACUTE\n    Ḁ: 'A', // LATIN CAPITAL LETTER A WITH RING BELOW\n    Ⱥ: 'A', // LATIN CAPITAL LETTER A WITH STROKE\n    Ã: 'A', // LATIN CAPITAL LETTER A WITH TILDE\n    Ꜳ: 'AA', // LATIN CAPITAL LETTER AA\n    Æ: 'AE', // LATIN CAPITAL LETTER AE\n    Ǽ: 'AE', // LATIN CAPITAL LETTER AE WITH ACUTE\n    Ǣ: 'AE', // LATIN CAPITAL LETTER AE WITH MACRON\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER AFRICAN D' (Ɖ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER ALPHA' (Ɑ)\n    Ꜵ: 'AO', // LATIN CAPITAL LETTER AO\n    Ꜷ: 'AU', // LATIN CAPITAL LETTER AU\n    Ꜹ: 'AV', // LATIN CAPITAL LETTER AV\n    Ꜻ: 'AV', // LATIN CAPITAL LETTER AV WITH HORIZONTAL BAR\n    Ꜽ: 'AY', // LATIN CAPITAL LETTER AY\n    Ḃ: 'B', // LATIN CAPITAL LETTER B WITH DOT ABOVE\n    Ḅ: 'B', // LATIN CAPITAL LETTER B WITH DOT BELOW\n    Ɓ: 'B', // LATIN CAPITAL LETTER B WITH HOOK\n    Ḇ: 'B', // LATIN CAPITAL LETTER B WITH LINE BELOW\n    Ƀ: 'B', // LATIN CAPITAL LETTER B WITH STROKE\n    Ƃ: 'B', // LATIN CAPITAL LETTER B WITH TOPBAR\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER BROKEN L' (Ꝇ)\n    Ć: 'C', // LATIN CAPITAL LETTER C WITH ACUTE\n    Č: 'C', // LATIN CAPITAL LETTER C WITH CARON\n    Ç: 'C', // LATIN CAPITAL LETTER C WITH CEDILLA\n    Ḉ: 'C', // LATIN CAPITAL LETTER C WITH CEDILLA AND ACUTE\n    Ĉ: 'C', // LATIN CAPITAL LETTER C WITH CIRCUMFLEX\n    Ċ: 'C', // LATIN CAPITAL LETTER C WITH DOT ABOVE\n    Ƈ: 'C', // LATIN CAPITAL LETTER C WITH HOOK\n    Ȼ: 'C', // LATIN CAPITAL LETTER C WITH STROKE\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER CON' (Ꝯ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER CUATRILLO' (Ꜭ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER CUATRILLO WITH COMMA' (Ꜯ)\n    Ď: 'D', // LATIN CAPITAL LETTER D WITH CARON\n    Ḑ: 'D', // LATIN CAPITAL LETTER D WITH CEDILLA\n    Ḓ: 'D', // LATIN CAPITAL LETTER D WITH CIRCUMFLEX BELOW\n    Ḋ: 'D', // LATIN CAPITAL LETTER D WITH DOT ABOVE\n    Ḍ: 'D', // LATIN CAPITAL LETTER D WITH DOT BELOW\n    Ɗ: 'D', // LATIN CAPITAL LETTER D WITH HOOK\n    Ḏ: 'D', // LATIN CAPITAL LETTER D WITH LINE BELOW\n    ǲ: 'D', // LATIN CAPITAL LETTER D WITH SMALL LETTER Z\n    ǅ: 'D', // LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON\n    Đ: 'D', // LATIN CAPITAL LETTER D WITH STROKE\n    Ƌ: 'D', // LATIN CAPITAL LETTER D WITH TOPBAR\n    Ǳ: 'DZ', // LATIN CAPITAL LETTER DZ\n    Ǆ: 'DZ', // LATIN CAPITAL LETTER DZ WITH CARON\n    É: 'E', // LATIN CAPITAL LETTER E WITH ACUTE\n    Ĕ: 'E', // LATIN CAPITAL LETTER E WITH BREVE\n    Ě: 'E', // LATIN CAPITAL LETTER E WITH CARON\n    Ȩ: 'E', // LATIN CAPITAL LETTER E WITH CEDILLA\n    Ḝ: 'E', // LATIN CAPITAL LETTER E WITH CEDILLA AND BREVE\n    Ê: 'E', // LATIN CAPITAL LETTER E WITH CIRCUMFLEX\n    Ế: 'E', // LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND ACUTE\n    Ệ: 'E', // LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND DOT BELOW\n    Ề: 'E', // LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND GRAVE\n    Ể: 'E', // LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE\n    Ễ: 'E', // LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND TILDE\n    Ḙ: 'E', // LATIN CAPITAL LETTER E WITH CIRCUMFLEX BELOW\n    Ë: 'E', // LATIN CAPITAL LETTER E WITH DIAERESIS\n    Ė: 'E', // LATIN CAPITAL LETTER E WITH DOT ABOVE\n    Ẹ: 'E', // LATIN CAPITAL LETTER E WITH DOT BELOW\n    Ȅ: 'E', // LATIN CAPITAL LETTER E WITH DOUBLE GRAVE\n    È: 'E', // LATIN CAPITAL LETTER E WITH GRAVE\n    Ẻ: 'E', // LATIN CAPITAL LETTER E WITH HOOK ABOVE\n    Ȇ: 'E', // LATIN CAPITAL LETTER E WITH INVERTED BREVE\n    Ē: 'E', // LATIN CAPITAL LETTER E WITH MACRON\n    Ḗ: 'E', // LATIN CAPITAL LETTER E WITH MACRON AND ACUTE\n    Ḕ: 'E', // LATIN CAPITAL LETTER E WITH MACRON AND GRAVE\n    Ę: 'E', // LATIN CAPITAL LETTER E WITH OGONEK\n    Ɇ: 'E', // LATIN CAPITAL LETTER E WITH STROKE\n    Ẽ: 'E', // LATIN CAPITAL LETTER E WITH TILDE\n    Ḛ: 'E', // LATIN CAPITAL LETTER E WITH TILDE BELOW\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER EGYPTOLOGICAL AIN' (Ꜥ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER EGYPTOLOGICAL ALEF' (Ꜣ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER ENG' (Ŋ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER ESH' (Ʃ)\n    Ꝫ: 'ET', // LATIN CAPITAL LETTER ET\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER ETH' (Ð)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER EZH' (Ʒ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER EZH REVERSED' (Ƹ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER EZH WITH CARON' (Ǯ)\n    Ḟ: 'F', // LATIN CAPITAL LETTER F WITH DOT ABOVE\n    Ƒ: 'F', // LATIN CAPITAL LETTER F WITH HOOK\n    Ǵ: 'G', // LATIN CAPITAL LETTER G WITH ACUTE\n    Ğ: 'G', // LATIN CAPITAL LETTER G WITH BREVE\n    Ǧ: 'G', // LATIN CAPITAL LETTER G WITH CARON\n    Ģ: 'G', // LATIN CAPITAL LETTER G WITH CEDILLA\n    Ĝ: 'G', // LATIN CAPITAL LETTER G WITH CIRCUMFLEX\n    Ġ: 'G', // LATIN CAPITAL LETTER G WITH DOT ABOVE\n    Ɠ: 'G', // LATIN CAPITAL LETTER G WITH HOOK\n    Ḡ: 'G', // LATIN CAPITAL LETTER G WITH MACRON\n    Ǥ: 'G', // LATIN CAPITAL LETTER G WITH STROKE\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER GAMMA' (Ɣ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER GLOTTAL STOP' (Ɂ)\n    Ḫ: 'H', // LATIN CAPITAL LETTER H WITH BREVE BELOW\n    Ȟ: 'H', // LATIN CAPITAL LETTER H WITH CARON\n    Ḩ: 'H', // LATIN CAPITAL LETTER H WITH CEDILLA\n    Ĥ: 'H', // LATIN CAPITAL LETTER H WITH CIRCUMFLEX\n    Ⱨ: 'H', // LATIN CAPITAL LETTER H WITH DESCENDER\n    Ḧ: 'H', // LATIN CAPITAL LETTER H WITH DIAERESIS\n    Ḣ: 'H', // LATIN CAPITAL LETTER H WITH DOT ABOVE\n    Ḥ: 'H', // LATIN CAPITAL LETTER H WITH DOT BELOW\n    Ħ: 'H', // LATIN CAPITAL LETTER H WITH STROKE\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER HALF H' (Ⱶ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER HENG' (Ꜧ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER HWAIR' (Ƕ)\n    Í: 'I', // LATIN CAPITAL LETTER I WITH ACUTE\n    Ĭ: 'I', // LATIN CAPITAL LETTER I WITH BREVE\n    Ǐ: 'I', // LATIN CAPITAL LETTER I WITH CARON\n    Î: 'I', // LATIN CAPITAL LETTER I WITH CIRCUMFLEX\n    Ï: 'I', // LATIN CAPITAL LETTER I WITH DIAERESIS\n    Ḯ: 'I', // LATIN CAPITAL LETTER I WITH DIAERESIS AND ACUTE\n    İ: 'I', // LATIN CAPITAL LETTER I WITH DOT ABOVE\n    Ị: 'I', // LATIN CAPITAL LETTER I WITH DOT BELOW\n    Ȉ: 'I', // LATIN CAPITAL LETTER I WITH DOUBLE GRAVE\n    Ì: 'I', // LATIN CAPITAL LETTER I WITH GRAVE\n    Ỉ: 'I', // LATIN CAPITAL LETTER I WITH HOOK ABOVE\n    Ȋ: 'I', // LATIN CAPITAL LETTER I WITH INVERTED BREVE\n    Ī: 'I', // LATIN CAPITAL LETTER I WITH MACRON\n    Į: 'I', // LATIN CAPITAL LETTER I WITH OGONEK\n    Ɨ: 'I', // LATIN CAPITAL LETTER I WITH STROKE\n    Ĩ: 'I', // LATIN CAPITAL LETTER I WITH TILDE\n    Ḭ: 'I', // LATIN CAPITAL LETTER I WITH TILDE BELOW\n    Ꝺ: 'D', // LATIN CAPITAL LETTER INSULAR D\n    Ꝼ: 'F', // LATIN CAPITAL LETTER INSULAR F\n    Ᵹ: 'G', // LATIN CAPITAL LETTER INSULAR G\n    Ꞃ: 'R', // LATIN CAPITAL LETTER INSULAR R\n    Ꞅ: 'S', // LATIN CAPITAL LETTER INSULAR S\n    Ꞇ: 'T', // LATIN CAPITAL LETTER INSULAR T\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER IOTA' (Ɩ)\n    Ꝭ: 'IS', // LATIN CAPITAL LETTER IS\n    Ĵ: 'J', // LATIN CAPITAL LETTER J WITH CIRCUMFLEX\n    Ɉ: 'J', // LATIN CAPITAL LETTER J WITH STROKE\n    Ḱ: 'K', // LATIN CAPITAL LETTER K WITH ACUTE\n    Ǩ: 'K', // LATIN CAPITAL LETTER K WITH CARON\n    Ķ: 'K', // LATIN CAPITAL LETTER K WITH CEDILLA\n    Ⱪ: 'K', // LATIN CAPITAL LETTER K WITH DESCENDER\n    Ꝃ: 'K', // LATIN CAPITAL LETTER K WITH DIAGONAL STROKE\n    Ḳ: 'K', // LATIN CAPITAL LETTER K WITH DOT BELOW\n    Ƙ: 'K', // LATIN CAPITAL LETTER K WITH HOOK\n    Ḵ: 'K', // LATIN CAPITAL LETTER K WITH LINE BELOW\n    Ꝁ: 'K', // LATIN CAPITAL LETTER K WITH STROKE\n    Ꝅ: 'K', // LATIN CAPITAL LETTER K WITH STROKE AND DIAGONAL STROKE\n    Ĺ: 'L', // LATIN CAPITAL LETTER L WITH ACUTE\n    Ƚ: 'L', // LATIN CAPITAL LETTER L WITH BAR\n    Ľ: 'L', // LATIN CAPITAL LETTER L WITH CARON\n    Ļ: 'L', // LATIN CAPITAL LETTER L WITH CEDILLA\n    Ḽ: 'L', // LATIN CAPITAL LETTER L WITH CIRCUMFLEX BELOW\n    Ḷ: 'L', // LATIN CAPITAL LETTER L WITH DOT BELOW\n    Ḹ: 'L', // LATIN CAPITAL LETTER L WITH DOT BELOW AND MACRON\n    Ⱡ: 'L', // LATIN CAPITAL LETTER L WITH DOUBLE BAR\n    Ꝉ: 'L', // LATIN CAPITAL LETTER L WITH HIGH STROKE\n    Ḻ: 'L', // LATIN CAPITAL LETTER L WITH LINE BELOW\n    Ŀ: 'L', // LATIN CAPITAL LETTER L WITH MIDDLE DOT\n    Ɫ: 'L', // LATIN CAPITAL LETTER L WITH MIDDLE TILDE\n    ǈ: 'L', // LATIN CAPITAL LETTER L WITH SMALL LETTER J\n    Ł: 'L', // LATIN CAPITAL LETTER L WITH STROKE\n    Ǉ: 'LJ', // LATIN CAPITAL LETTER LJ\n    Ḿ: 'M', // LATIN CAPITAL LETTER M WITH ACUTE\n    Ṁ: 'M', // LATIN CAPITAL LETTER M WITH DOT ABOVE\n    Ṃ: 'M', // LATIN CAPITAL LETTER M WITH DOT BELOW\n    Ɱ: 'M', // LATIN CAPITAL LETTER M WITH HOOK\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER MIDDLE-WELSH LL' (Ỻ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER MIDDLE-WELSH V' (Ỽ)\n    Ń: 'N', // LATIN CAPITAL LETTER N WITH ACUTE\n    Ň: 'N', // LATIN CAPITAL LETTER N WITH CARON\n    Ņ: 'N', // LATIN CAPITAL LETTER N WITH CEDILLA\n    Ṋ: 'N', // LATIN CAPITAL LETTER N WITH CIRCUMFLEX BELOW\n    Ṅ: 'N', // LATIN CAPITAL LETTER N WITH DOT ABOVE\n    Ṇ: 'N', // LATIN CAPITAL LETTER N WITH DOT BELOW\n    Ǹ: 'N', // LATIN CAPITAL LETTER N WITH GRAVE\n    Ɲ: 'N', // LATIN CAPITAL LETTER N WITH LEFT HOOK\n    Ṉ: 'N', // LATIN CAPITAL LETTER N WITH LINE BELOW\n    Ƞ: 'N', // LATIN CAPITAL LETTER N WITH LONG RIGHT LEG\n    ǋ: 'N', // LATIN CAPITAL LETTER N WITH SMALL LETTER J\n    Ñ: 'N', // LATIN CAPITAL LETTER N WITH TILDE\n    Ǌ: 'NJ', // LATIN CAPITAL LETTER NJ\n    Ó: 'O', // LATIN CAPITAL LETTER O WITH ACUTE\n    Ŏ: 'O', // LATIN CAPITAL LETTER O WITH BREVE\n    Ǒ: 'O', // LATIN CAPITAL LETTER O WITH CARON\n    Ô: 'O', // LATIN CAPITAL LETTER O WITH CIRCUMFLEX\n    Ố: 'O', // LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND ACUTE\n    Ộ: 'O', // LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND DOT BELOW\n    Ồ: 'O', // LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND GRAVE\n    Ổ: 'O', // LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE\n    Ỗ: 'O', // LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND TILDE\n    Ö: 'O', // LATIN CAPITAL LETTER O WITH DIAERESIS\n    Ȫ: 'O', // LATIN CAPITAL LETTER O WITH DIAERESIS AND MACRON\n    Ȯ: 'O', // LATIN CAPITAL LETTER O WITH DOT ABOVE\n    Ȱ: 'O', // LATIN CAPITAL LETTER O WITH DOT ABOVE AND MACRON\n    Ọ: 'O', // LATIN CAPITAL LETTER O WITH DOT BELOW\n    Ő: 'O', // LATIN CAPITAL LETTER O WITH DOUBLE ACUTE\n    Ȍ: 'O', // LATIN CAPITAL LETTER O WITH DOUBLE GRAVE\n    Ò: 'O', // LATIN CAPITAL LETTER O WITH GRAVE\n    Ỏ: 'O', // LATIN CAPITAL LETTER O WITH HOOK ABOVE\n    Ơ: 'O', // LATIN CAPITAL LETTER O WITH HORN\n    Ớ: 'O', // LATIN CAPITAL LETTER O WITH HORN AND ACUTE\n    Ợ: 'O', // LATIN CAPITAL LETTER O WITH HORN AND DOT BELOW\n    Ờ: 'O', // LATIN CAPITAL LETTER O WITH HORN AND GRAVE\n    Ở: 'O', // LATIN CAPITAL LETTER O WITH HORN AND HOOK ABOVE\n    Ỡ: 'O', // LATIN CAPITAL LETTER O WITH HORN AND TILDE\n    Ȏ: 'O', // LATIN CAPITAL LETTER O WITH INVERTED BREVE\n    Ꝋ: 'O', // LATIN CAPITAL LETTER O WITH LONG STROKE OVERLAY\n    Ꝍ: 'O', // LATIN CAPITAL LETTER O WITH LOOP\n    Ō: 'O', // LATIN CAPITAL LETTER O WITH MACRON\n    Ṓ: 'O', // LATIN CAPITAL LETTER O WITH MACRON AND ACUTE\n    Ṑ: 'O', // LATIN CAPITAL LETTER O WITH MACRON AND GRAVE\n    Ɵ: 'O', // LATIN CAPITAL LETTER O WITH MIDDLE TILDE\n    Ǫ: 'O', // LATIN CAPITAL LETTER O WITH OGONEK\n    Ǭ: 'O', // LATIN CAPITAL LETTER O WITH OGONEK AND MACRON\n    Ø: 'O', // LATIN CAPITAL LETTER O WITH STROKE\n    Ǿ: 'O', // LATIN CAPITAL LETTER O WITH STROKE AND ACUTE\n    Õ: 'O', // LATIN CAPITAL LETTER O WITH TILDE\n    Ṍ: 'O', // LATIN CAPITAL LETTER O WITH TILDE AND ACUTE\n    Ṏ: 'O', // LATIN CAPITAL LETTER O WITH TILDE AND DIAERESIS\n    Ȭ: 'O', // LATIN CAPITAL LETTER O WITH TILDE AND MACRON\n    Ƣ: 'OI', // LATIN CAPITAL LETTER OI\n    Ꝏ: 'OO', // LATIN CAPITAL LETTER OO\n    Ɛ: 'E', // LATIN CAPITAL LETTER OPEN E\n    Ɔ: 'O', // LATIN CAPITAL LETTER OPEN O\n    Ȣ: 'OU', // LATIN CAPITAL LETTER OU\n    Ṕ: 'P', // LATIN CAPITAL LETTER P WITH ACUTE\n    Ṗ: 'P', // LATIN CAPITAL LETTER P WITH DOT ABOVE\n    Ꝓ: 'P', // LATIN CAPITAL LETTER P WITH FLOURISH\n    Ƥ: 'P', // LATIN CAPITAL LETTER P WITH HOOK\n    Ꝕ: 'P', // LATIN CAPITAL LETTER P WITH SQUIRREL TAIL\n    Ᵽ: 'P', // LATIN CAPITAL LETTER P WITH STROKE\n    Ꝑ: 'P', // LATIN CAPITAL LETTER P WITH STROKE THROUGH DESCENDER\n    Ꝙ: 'Q', // LATIN CAPITAL LETTER Q WITH DIAGONAL STROKE\n    Ꝗ: 'Q', // LATIN CAPITAL LETTER Q WITH STROKE THROUGH DESCENDER\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER R ROTUNDA' (Ꝛ)\n    Ŕ: 'R', // LATIN CAPITAL LETTER R WITH ACUTE\n    Ř: 'R', // LATIN CAPITAL LETTER R WITH CARON\n    Ŗ: 'R', // LATIN CAPITAL LETTER R WITH CEDILLA\n    Ṙ: 'R', // LATIN CAPITAL LETTER R WITH DOT ABOVE\n    Ṛ: 'R', // LATIN CAPITAL LETTER R WITH DOT BELOW\n    Ṝ: 'R', // LATIN CAPITAL LETTER R WITH DOT BELOW AND MACRON\n    Ȑ: 'R', // LATIN CAPITAL LETTER R WITH DOUBLE GRAVE\n    Ȓ: 'R', // LATIN CAPITAL LETTER R WITH INVERTED BREVE\n    Ṟ: 'R', // LATIN CAPITAL LETTER R WITH LINE BELOW\n    Ɍ: 'R', // LATIN CAPITAL LETTER R WITH STROKE\n    Ɽ: 'R', // LATIN CAPITAL LETTER R WITH TAIL\n    Ꜿ: 'C', // LATIN CAPITAL LETTER REVERSED C WITH DOT\n    Ǝ: 'E', // LATIN CAPITAL LETTER REVERSED E\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER RUM ROTUNDA' (Ꝝ)\n    Ś: 'S', // LATIN CAPITAL LETTER S WITH ACUTE\n    Ṥ: 'S', // LATIN CAPITAL LETTER S WITH ACUTE AND DOT ABOVE\n    Š: 'S', // LATIN CAPITAL LETTER S WITH CARON\n    Ṧ: 'S', // LATIN CAPITAL LETTER S WITH CARON AND DOT ABOVE\n    Ş: 'S', // LATIN CAPITAL LETTER S WITH CEDILLA\n    Ŝ: 'S', // LATIN CAPITAL LETTER S WITH CIRCUMFLEX\n    Ș: 'S', // LATIN CAPITAL LETTER S WITH COMMA BELOW\n    Ṡ: 'S', // LATIN CAPITAL LETTER S WITH DOT ABOVE\n    Ṣ: 'S', // LATIN CAPITAL LETTER S WITH DOT BELOW\n    Ṩ: 'S', // LATIN CAPITAL LETTER S WITH DOT BELOW AND DOT ABOVE\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER SALTILLO' (Ꞌ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER SCHWA' (Ə)\n    ẞ: 'SS', // LATIN CAPITAL LETTER SHARP S\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER SMALL Q WITH HOOK TAIL' (Ɋ)\n    Ť: 'T', // LATIN CAPITAL LETTER T WITH CARON\n    Ţ: 'T', // LATIN CAPITAL LETTER T WITH CEDILLA\n    Ṱ: 'T', // LATIN CAPITAL LETTER T WITH CIRCUMFLEX BELOW\n    Ț: 'T', // LATIN CAPITAL LETTER T WITH COMMA BELOW\n    Ⱦ: 'T', // LATIN CAPITAL LETTER T WITH DIAGONAL STROKE\n    Ṫ: 'T', // LATIN CAPITAL LETTER T WITH DOT ABOVE\n    Ṭ: 'T', // LATIN CAPITAL LETTER T WITH DOT BELOW\n    Ƭ: 'T', // LATIN CAPITAL LETTER T WITH HOOK\n    Ṯ: 'T', // LATIN CAPITAL LETTER T WITH LINE BELOW\n    Ʈ: 'T', // LATIN CAPITAL LETTER T WITH RETROFLEX HOOK\n    Ŧ: 'T', // LATIN CAPITAL LETTER T WITH STROKE\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER THORN' (Þ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER THORN WITH STROKE' (Ꝥ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER THORN WITH STROKE THROUGH DESCENDER' (Ꝧ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER TONE FIVE' (Ƽ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER TONE SIX' (Ƅ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER TONE TWO' (Ƨ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER TRESILLO' (Ꜫ)\n    Ɐ: 'A', // LATIN CAPITAL LETTER TURNED A\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER TURNED INSULAR G' (Ꝿ)\n    Ꞁ: 'L', // LATIN CAPITAL LETTER TURNED L\n    Ɯ: 'M', // LATIN CAPITAL LETTER TURNED M\n    Ʌ: 'V', // LATIN CAPITAL LETTER TURNED V\n    Ꜩ: 'TZ', // LATIN CAPITAL LETTER TZ\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER U BAR' (Ʉ)\n    Ú: 'U', // LATIN CAPITAL LETTER U WITH ACUTE\n    Ŭ: 'U', // LATIN CAPITAL LETTER U WITH BREVE\n    Ǔ: 'U', // LATIN CAPITAL LETTER U WITH CARON\n    Û: 'U', // LATIN CAPITAL LETTER U WITH CIRCUMFLEX\n    Ṷ: 'U', // LATIN CAPITAL LETTER U WITH CIRCUMFLEX BELOW\n    Ü: 'U', // LATIN CAPITAL LETTER U WITH DIAERESIS\n    Ǘ: 'U', // LATIN CAPITAL LETTER U WITH DIAERESIS AND ACUTE\n    Ǚ: 'U', // LATIN CAPITAL LETTER U WITH DIAERESIS AND CARON\n    Ǜ: 'U', // LATIN CAPITAL LETTER U WITH DIAERESIS AND GRAVE\n    Ǖ: 'U', // LATIN CAPITAL LETTER U WITH DIAERESIS AND MACRON\n    Ṳ: 'U', // LATIN CAPITAL LETTER U WITH DIAERESIS BELOW\n    Ụ: 'U', // LATIN CAPITAL LETTER U WITH DOT BELOW\n    Ű: 'U', // LATIN CAPITAL LETTER U WITH DOUBLE ACUTE\n    Ȕ: 'U', // LATIN CAPITAL LETTER U WITH DOUBLE GRAVE\n    Ù: 'U', // LATIN CAPITAL LETTER U WITH GRAVE\n    Ủ: 'U', // LATIN CAPITAL LETTER U WITH HOOK ABOVE\n    Ư: 'U', // LATIN CAPITAL LETTER U WITH HORN\n    Ứ: 'U', // LATIN CAPITAL LETTER U WITH HORN AND ACUTE\n    Ự: 'U', // LATIN CAPITAL LETTER U WITH HORN AND DOT BELOW\n    Ừ: 'U', // LATIN CAPITAL LETTER U WITH HORN AND GRAVE\n    Ử: 'U', // LATIN CAPITAL LETTER U WITH HORN AND HOOK ABOVE\n    Ữ: 'U', // LATIN CAPITAL LETTER U WITH HORN AND TILDE\n    Ȗ: 'U', // LATIN CAPITAL LETTER U WITH INVERTED BREVE\n    Ū: 'U', // LATIN CAPITAL LETTER U WITH MACRON\n    Ṻ: 'U', // LATIN CAPITAL LETTER U WITH MACRON AND DIAERESIS\n    Ų: 'U', // LATIN CAPITAL LETTER U WITH OGONEK\n    Ů: 'U', // LATIN CAPITAL LETTER U WITH RING ABOVE\n    Ũ: 'U', // LATIN CAPITAL LETTER U WITH TILDE\n    Ṹ: 'U', // LATIN CAPITAL LETTER U WITH TILDE AND ACUTE\n    Ṵ: 'U', // LATIN CAPITAL LETTER U WITH TILDE BELOW\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER UPSILON' (Ʊ)\n    Ꝟ: 'V', // LATIN CAPITAL LETTER V WITH DIAGONAL STROKE\n    Ṿ: 'V', // LATIN CAPITAL LETTER V WITH DOT BELOW\n    Ʋ: 'V', // LATIN CAPITAL LETTER V WITH HOOK\n    Ṽ: 'V', // LATIN CAPITAL LETTER V WITH TILDE\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER VEND' (Ꝩ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER VISIGOTHIC Z' (Ꝣ)\n    Ꝡ: 'VY', // LATIN CAPITAL LETTER VY\n    Ẃ: 'W', // LATIN CAPITAL LETTER W WITH ACUTE\n    Ŵ: 'W', // LATIN CAPITAL LETTER W WITH CIRCUMFLEX\n    Ẅ: 'W', // LATIN CAPITAL LETTER W WITH DIAERESIS\n    Ẇ: 'W', // LATIN CAPITAL LETTER W WITH DOT ABOVE\n    Ẉ: 'W', // LATIN CAPITAL LETTER W WITH DOT BELOW\n    Ẁ: 'W', // LATIN CAPITAL LETTER W WITH GRAVE\n    Ⱳ: 'W', // LATIN CAPITAL LETTER W WITH HOOK\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER WYNN' (Ƿ)\n    Ẍ: 'X', // LATIN CAPITAL LETTER X WITH DIAERESIS\n    Ẋ: 'X', // LATIN CAPITAL LETTER X WITH DOT ABOVE\n    Ý: 'Y', // LATIN CAPITAL LETTER Y WITH ACUTE\n    Ŷ: 'Y', // LATIN CAPITAL LETTER Y WITH CIRCUMFLEX\n    Ÿ: 'Y', // LATIN CAPITAL LETTER Y WITH DIAERESIS\n    Ẏ: 'Y', // LATIN CAPITAL LETTER Y WITH DOT ABOVE\n    Ỵ: 'Y', // LATIN CAPITAL LETTER Y WITH DOT BELOW\n    Ỳ: 'Y', // LATIN CAPITAL LETTER Y WITH GRAVE\n    Ƴ: 'Y', // LATIN CAPITAL LETTER Y WITH HOOK\n    Ỷ: 'Y', // LATIN CAPITAL LETTER Y WITH HOOK ABOVE\n    Ỿ: 'Y', // LATIN CAPITAL LETTER Y WITH LOOP\n    Ȳ: 'Y', // LATIN CAPITAL LETTER Y WITH MACRON\n    Ɏ: 'Y', // LATIN CAPITAL LETTER Y WITH STROKE\n    Ỹ: 'Y', // LATIN CAPITAL LETTER Y WITH TILDE\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CAPITAL LETTER YOGH' (Ȝ)\n    Ź: 'Z', // LATIN CAPITAL LETTER Z WITH ACUTE\n    Ž: 'Z', // LATIN CAPITAL LETTER Z WITH CARON\n    Ẑ: 'Z', // LATIN CAPITAL LETTER Z WITH CIRCUMFLEX\n    Ⱬ: 'Z', // LATIN CAPITAL LETTER Z WITH DESCENDER\n    Ż: 'Z', // LATIN CAPITAL LETTER Z WITH DOT ABOVE\n    Ẓ: 'Z', // LATIN CAPITAL LETTER Z WITH DOT BELOW\n    Ȥ: 'Z', // LATIN CAPITAL LETTER Z WITH HOOK\n    Ẕ: 'Z', // LATIN CAPITAL LETTER Z WITH LINE BELOW\n    Ƶ: 'Z', // LATIN CAPITAL LETTER Z WITH STROKE\n    Ĳ: 'IJ', // LATIN CAPITAL LIGATURE IJ\n    Œ: 'OE', // LATIN CAPITAL LIGATURE OE\n    // CANNOT FIND APPROXIMATION FOR 'LATIN CROSS' (✝)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN EPIGRAPHIC LETTER ARCHAIC M' (ꟿ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN EPIGRAPHIC LETTER I LONGA' (ꟾ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN EPIGRAPHIC LETTER INVERTED M' (ꟽ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN EPIGRAPHIC LETTER REVERSED F' (ꟻ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN EPIGRAPHIC LETTER REVERSED P' (ꟼ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER AIN' (ᴥ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER ALVEOLAR CLICK' (ǂ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER BIDENTAL PERCUSSIVE' (ʭ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER BILABIAL CLICK' (ʘ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER BILABIAL PERCUSSIVE' (ʬ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER DENTAL CLICK' (ǀ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER GLOTTAL STOP' (ʔ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER GLOTTAL STOP WITH STROKE' (ʡ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER INVERTED GLOTTAL STOP' (ʖ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER INVERTED GLOTTAL STOP WITH STROKE' (ƾ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER LATERAL CLICK' (ǁ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER PHARYNGEAL VOICED FRICATIVE' (ʕ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER RETROFLEX CLICK' (ǃ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER REVERSED ESH LOOP' (ƪ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER REVERSED GLOTTAL STOP WITH STROKE' (ʢ)\n    ᴀ: 'A', // LATIN LETTER SMALL CAPITAL A\n    ᴁ: 'AE', // LATIN LETTER SMALL CAPITAL AE\n    ʙ: 'B', // LATIN LETTER SMALL CAPITAL B\n    ᴃ: 'B', // LATIN LETTER SMALL CAPITAL BARRED B\n    ᴄ: 'C', // LATIN LETTER SMALL CAPITAL C\n    ᴅ: 'D', // LATIN LETTER SMALL CAPITAL D\n    ᴇ: 'E', // LATIN LETTER SMALL CAPITAL E\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER SMALL CAPITAL ETH' (ᴆ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER SMALL CAPITAL EZH' (ᴣ)\n    ꜰ: 'F', // LATIN LETTER SMALL CAPITAL F\n    ɢ: 'G', // LATIN LETTER SMALL CAPITAL G\n    ʛ: 'G', // LATIN LETTER SMALL CAPITAL G WITH HOOK\n    ʜ: 'H', // LATIN LETTER SMALL CAPITAL H\n    ɪ: 'I', // LATIN LETTER SMALL CAPITAL I\n    ʁ: 'R', // LATIN LETTER SMALL CAPITAL INVERTED R\n    ᴊ: 'J', // LATIN LETTER SMALL CAPITAL J\n    ᴋ: 'K', // LATIN LETTER SMALL CAPITAL K\n    ʟ: 'L', // LATIN LETTER SMALL CAPITAL L\n    ᴌ: 'L', // LATIN LETTER SMALL CAPITAL L WITH STROKE\n    ᴍ: 'M', // LATIN LETTER SMALL CAPITAL M\n    ɴ: 'N', // LATIN LETTER SMALL CAPITAL N\n    ᴏ: 'O', // LATIN LETTER SMALL CAPITAL O\n    ɶ: 'OE', // LATIN LETTER SMALL CAPITAL OE\n    ᴐ: 'O', // LATIN LETTER SMALL CAPITAL OPEN O\n    ᴕ: 'OU', // LATIN LETTER SMALL CAPITAL OU\n    ᴘ: 'P', // LATIN LETTER SMALL CAPITAL P\n    ʀ: 'R', // LATIN LETTER SMALL CAPITAL R\n    ᴎ: 'N', // LATIN LETTER SMALL CAPITAL REVERSED N\n    ᴙ: 'R', // LATIN LETTER SMALL CAPITAL REVERSED R\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER SMALL CAPITAL RUM' (ꝶ)\n    ꜱ: 'S', // LATIN LETTER SMALL CAPITAL S\n    ᴛ: 'T', // LATIN LETTER SMALL CAPITAL T\n    ⱻ: 'E', // LATIN LETTER SMALL CAPITAL TURNED E\n    ᴚ: 'R', // LATIN LETTER SMALL CAPITAL TURNED R\n    ᴜ: 'U', // LATIN LETTER SMALL CAPITAL U\n    ᴠ: 'V', // LATIN LETTER SMALL CAPITAL V\n    ᴡ: 'W', // LATIN LETTER SMALL CAPITAL W\n    ʏ: 'Y', // LATIN LETTER SMALL CAPITAL Y\n    ᴢ: 'Z', // LATIN LETTER SMALL CAPITAL Z\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER STRETCHED C' (ʗ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER TWO WITH STROKE' (ƻ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER VOICED LARYNGEAL SPIRANT' (ᴤ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER WYNN' (ƿ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN LETTER YR' (Ʀ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL CAPITAL LETTER I WITH STROKE' (ᵻ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL CAPITAL LETTER U WITH STROKE' (ᵾ)\n    á: 'a', // LATIN SMALL LETTER A WITH ACUTE\n    ă: 'a', // LATIN SMALL LETTER A WITH BREVE\n    ắ: 'a', // LATIN SMALL LETTER A WITH BREVE AND ACUTE\n    ặ: 'a', // LATIN SMALL LETTER A WITH BREVE AND DOT BELOW\n    ằ: 'a', // LATIN SMALL LETTER A WITH BREVE AND GRAVE\n    ẳ: 'a', // LATIN SMALL LETTER A WITH BREVE AND HOOK ABOVE\n    ẵ: 'a', // LATIN SMALL LETTER A WITH BREVE AND TILDE\n    ǎ: 'a', // LATIN SMALL LETTER A WITH CARON\n    â: 'a', // LATIN SMALL LETTER A WITH CIRCUMFLEX\n    ấ: 'a', // LATIN SMALL LETTER A WITH CIRCUMFLEX AND ACUTE\n    ậ: 'a', // LATIN SMALL LETTER A WITH CIRCUMFLEX AND DOT BELOW\n    ầ: 'a', // LATIN SMALL LETTER A WITH CIRCUMFLEX AND GRAVE\n    ẩ: 'a', // LATIN SMALL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE\n    ẫ: 'a', // LATIN SMALL LETTER A WITH CIRCUMFLEX AND TILDE\n    ä: 'a', // LATIN SMALL LETTER A WITH DIAERESIS\n    ǟ: 'a', // LATIN SMALL LETTER A WITH DIAERESIS AND MACRON\n    ȧ: 'a', // LATIN SMALL LETTER A WITH DOT ABOVE\n    ǡ: 'a', // LATIN SMALL LETTER A WITH DOT ABOVE AND MACRON\n    ạ: 'a', // LATIN SMALL LETTER A WITH DOT BELOW\n    ȁ: 'a', // LATIN SMALL LETTER A WITH DOUBLE GRAVE\n    à: 'a', // LATIN SMALL LETTER A WITH GRAVE\n    ả: 'a', // LATIN SMALL LETTER A WITH HOOK ABOVE\n    ȃ: 'a', // LATIN SMALL LETTER A WITH INVERTED BREVE\n    ā: 'a', // LATIN SMALL LETTER A WITH MACRON\n    ą: 'a', // LATIN SMALL LETTER A WITH OGONEK\n    ᶏ: 'a', // LATIN SMALL LETTER A WITH RETROFLEX HOOK\n    ẚ: 'a', // LATIN SMALL LETTER A WITH RIGHT HALF RING\n    å: 'a', // LATIN SMALL LETTER A WITH RING ABOVE\n    ǻ: 'a', // LATIN SMALL LETTER A WITH RING ABOVE AND ACUTE\n    ḁ: 'a', // LATIN SMALL LETTER A WITH RING BELOW\n    ⱥ: 'a', // LATIN SMALL LETTER A WITH STROKE\n    ã: 'a', // LATIN SMALL LETTER A WITH TILDE\n    ꜳ: 'aa', // LATIN SMALL LETTER AA\n    æ: 'ae', // LATIN SMALL LETTER AE\n    ǽ: 'ae', // LATIN SMALL LETTER AE WITH ACUTE\n    ǣ: 'ae', // LATIN SMALL LETTER AE WITH MACRON\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER ALPHA' (ɑ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER ALPHA WITH RETROFLEX HOOK' (ᶐ)\n    ꜵ: 'ao', // LATIN SMALL LETTER AO\n    ꜷ: 'au', // LATIN SMALL LETTER AU\n    ꜹ: 'av', // LATIN SMALL LETTER AV\n    ꜻ: 'av', // LATIN SMALL LETTER AV WITH HORIZONTAL BAR\n    ꜽ: 'ay', // LATIN SMALL LETTER AY\n    ḃ: 'b', // LATIN SMALL LETTER B WITH DOT ABOVE\n    ḅ: 'b', // LATIN SMALL LETTER B WITH DOT BELOW\n    ɓ: 'b', // LATIN SMALL LETTER B WITH HOOK\n    ḇ: 'b', // LATIN SMALL LETTER B WITH LINE BELOW\n    ᵬ: 'b', // LATIN SMALL LETTER B WITH MIDDLE TILDE\n    ᶀ: 'b', // LATIN SMALL LETTER B WITH PALATAL HOOK\n    ƀ: 'b', // LATIN SMALL LETTER B WITH STROKE\n    ƃ: 'b', // LATIN SMALL LETTER B WITH TOPBAR\n    ɵ: 'o', // LATIN SMALL LETTER BARRED O\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER BOTTOM HALF O' (ᴗ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER BROKEN L' (ꝇ)\n    ć: 'c', // LATIN SMALL LETTER C WITH ACUTE\n    č: 'c', // LATIN SMALL LETTER C WITH CARON\n    ç: 'c', // LATIN SMALL LETTER C WITH CEDILLA\n    ḉ: 'c', // LATIN SMALL LETTER C WITH CEDILLA AND ACUTE\n    ĉ: 'c', // LATIN SMALL LETTER C WITH CIRCUMFLEX\n    ɕ: 'c', // LATIN SMALL LETTER C WITH CURL\n    ċ: 'c', // LATIN SMALL LETTER C WITH DOT ABOVE\n    ƈ: 'c', // LATIN SMALL LETTER C WITH HOOK\n    ȼ: 'c', // LATIN SMALL LETTER C WITH STROKE\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER CLOSED OMEGA' (ɷ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER CLOSED OPEN E' (ʚ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER CLOSED REVERSED OPEN E' (ɞ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER CON' (ꝯ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER CUATRILLO' (ꜭ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER CUATRILLO WITH COMMA' (ꜯ)\n    ď: 'd', // LATIN SMALL LETTER D WITH CARON\n    ḑ: 'd', // LATIN SMALL LETTER D WITH CEDILLA\n    ḓ: 'd', // LATIN SMALL LETTER D WITH CIRCUMFLEX BELOW\n    ȡ: 'd', // LATIN SMALL LETTER D WITH CURL\n    ḋ: 'd', // LATIN SMALL LETTER D WITH DOT ABOVE\n    ḍ: 'd', // LATIN SMALL LETTER D WITH DOT BELOW\n    ɗ: 'd', // LATIN SMALL LETTER D WITH HOOK\n    ᶑ: 'd', // LATIN SMALL LETTER D WITH HOOK AND TAIL\n    ḏ: 'd', // LATIN SMALL LETTER D WITH LINE BELOW\n    ᵭ: 'd', // LATIN SMALL LETTER D WITH MIDDLE TILDE\n    ᶁ: 'd', // LATIN SMALL LETTER D WITH PALATAL HOOK\n    đ: 'd', // LATIN SMALL LETTER D WITH STROKE\n    ɖ: 'd', // LATIN SMALL LETTER D WITH TAIL\n    ƌ: 'd', // LATIN SMALL LETTER D WITH TOPBAR\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER DB DIGRAPH' (ȸ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER DELTA' (ẟ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER DEZH DIGRAPH' (ʤ)\n    ı: 'i', // LATIN SMALL LETTER DOTLESS I\n    ȷ: 'j', // LATIN SMALL LETTER DOTLESS J\n    ɟ: 'j', // LATIN SMALL LETTER DOTLESS J WITH STROKE\n    ʄ: 'j', // LATIN SMALL LETTER DOTLESS J WITH STROKE AND HOOK\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER DUM' (ꝱ)\n    ǳ: 'dz', // LATIN SMALL LETTER DZ\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER DZ DIGRAPH' (ʣ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER DZ DIGRAPH WITH CURL' (ʥ)\n    ǆ: 'dz', // LATIN SMALL LETTER DZ WITH CARON\n    é: 'e', // LATIN SMALL LETTER E WITH ACUTE\n    ĕ: 'e', // LATIN SMALL LETTER E WITH BREVE\n    ě: 'e', // LATIN SMALL LETTER E WITH CARON\n    ȩ: 'e', // LATIN SMALL LETTER E WITH CEDILLA\n    ḝ: 'e', // LATIN SMALL LETTER E WITH CEDILLA AND BREVE\n    ê: 'e', // LATIN SMALL LETTER E WITH CIRCUMFLEX\n    ế: 'e', // LATIN SMALL LETTER E WITH CIRCUMFLEX AND ACUTE\n    ệ: 'e', // LATIN SMALL LETTER E WITH CIRCUMFLEX AND DOT BELOW\n    ề: 'e', // LATIN SMALL LETTER E WITH CIRCUMFLEX AND GRAVE\n    ể: 'e', // LATIN SMALL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE\n    ễ: 'e', // LATIN SMALL LETTER E WITH CIRCUMFLEX AND TILDE\n    ḙ: 'e', // LATIN SMALL LETTER E WITH CIRCUMFLEX BELOW\n    ë: 'e', // LATIN SMALL LETTER E WITH DIAERESIS\n    ė: 'e', // LATIN SMALL LETTER E WITH DOT ABOVE\n    ẹ: 'e', // LATIN SMALL LETTER E WITH DOT BELOW\n    ȅ: 'e', // LATIN SMALL LETTER E WITH DOUBLE GRAVE\n    è: 'e', // LATIN SMALL LETTER E WITH GRAVE\n    ẻ: 'e', // LATIN SMALL LETTER E WITH HOOK ABOVE\n    ȇ: 'e', // LATIN SMALL LETTER E WITH INVERTED BREVE\n    ē: 'e', // LATIN SMALL LETTER E WITH MACRON\n    ḗ: 'e', // LATIN SMALL LETTER E WITH MACRON AND ACUTE\n    ḕ: 'e', // LATIN SMALL LETTER E WITH MACRON AND GRAVE\n    ⱸ: 'e', // LATIN SMALL LETTER E WITH NOTCH\n    ę: 'e', // LATIN SMALL LETTER E WITH OGONEK\n    ᶒ: 'e', // LATIN SMALL LETTER E WITH RETROFLEX HOOK\n    ɇ: 'e', // LATIN SMALL LETTER E WITH STROKE\n    ẽ: 'e', // LATIN SMALL LETTER E WITH TILDE\n    ḛ: 'e', // LATIN SMALL LETTER E WITH TILDE BELOW\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER EGYPTOLOGICAL AIN' (ꜥ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER EGYPTOLOGICAL ALEF' (ꜣ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER ENG' (ŋ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER ESH' (ʃ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER ESH WITH CURL' (ʆ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER ESH WITH PALATAL HOOK' (ᶋ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER ESH WITH RETROFLEX HOOK' (ᶘ)\n    ꝫ: 'et', // LATIN SMALL LETTER ET\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER ETH' (ð)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER EZH' (ʒ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER EZH REVERSED' (ƹ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER EZH WITH CARON' (ǯ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER EZH WITH CURL' (ʓ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER EZH WITH RETROFLEX HOOK' (ᶚ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER EZH WITH TAIL' (ƺ)\n    ḟ: 'f', // LATIN SMALL LETTER F WITH DOT ABOVE\n    ƒ: 'f', // LATIN SMALL LETTER F WITH HOOK\n    ᵮ: 'f', // LATIN SMALL LETTER F WITH MIDDLE TILDE\n    ᶂ: 'f', // LATIN SMALL LETTER F WITH PALATAL HOOK\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER FENG DIGRAPH' (ʩ)\n    ǵ: 'g', // LATIN SMALL LETTER G WITH ACUTE\n    ğ: 'g', // LATIN SMALL LETTER G WITH BREVE\n    ǧ: 'g', // LATIN SMALL LETTER G WITH CARON\n    ģ: 'g', // LATIN SMALL LETTER G WITH CEDILLA\n    ĝ: 'g', // LATIN SMALL LETTER G WITH CIRCUMFLEX\n    ġ: 'g', // LATIN SMALL LETTER G WITH DOT ABOVE\n    ɠ: 'g', // LATIN SMALL LETTER G WITH HOOK\n    ḡ: 'g', // LATIN SMALL LETTER G WITH MACRON\n    ᶃ: 'g', // LATIN SMALL LETTER G WITH PALATAL HOOK\n    ǥ: 'g', // LATIN SMALL LETTER G WITH STROKE\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER GAMMA' (ɣ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER GLOTTAL STOP' (ɂ)\n    ḫ: 'h', // LATIN SMALL LETTER H WITH BREVE BELOW\n    ȟ: 'h', // LATIN SMALL LETTER H WITH CARON\n    ḩ: 'h', // LATIN SMALL LETTER H WITH CEDILLA\n    ĥ: 'h', // LATIN SMALL LETTER H WITH CIRCUMFLEX\n    ⱨ: 'h', // LATIN SMALL LETTER H WITH DESCENDER\n    ḧ: 'h', // LATIN SMALL LETTER H WITH DIAERESIS\n    ḣ: 'h', // LATIN SMALL LETTER H WITH DOT ABOVE\n    ḥ: 'h', // LATIN SMALL LETTER H WITH DOT BELOW\n    ɦ: 'h', // LATIN SMALL LETTER H WITH HOOK\n    ẖ: 'h', // LATIN SMALL LETTER H WITH LINE BELOW\n    ħ: 'h', // LATIN SMALL LETTER H WITH STROKE\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER HALF H' (ⱶ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER HENG' (ꜧ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER HENG WITH HOOK' (ɧ)\n    ƕ: 'hv', // LATIN SMALL LETTER HV\n    í: 'i', // LATIN SMALL LETTER I WITH ACUTE\n    ĭ: 'i', // LATIN SMALL LETTER I WITH BREVE\n    ǐ: 'i', // LATIN SMALL LETTER I WITH CARON\n    î: 'i', // LATIN SMALL LETTER I WITH CIRCUMFLEX\n    ï: 'i', // LATIN SMALL LETTER I WITH DIAERESIS\n    ḯ: 'i', // LATIN SMALL LETTER I WITH DIAERESIS AND ACUTE\n    ị: 'i', // LATIN SMALL LETTER I WITH DOT BELOW\n    ȉ: 'i', // LATIN SMALL LETTER I WITH DOUBLE GRAVE\n    ì: 'i', // LATIN SMALL LETTER I WITH GRAVE\n    ỉ: 'i', // LATIN SMALL LETTER I WITH HOOK ABOVE\n    ȋ: 'i', // LATIN SMALL LETTER I WITH INVERTED BREVE\n    ī: 'i', // LATIN SMALL LETTER I WITH MACRON\n    į: 'i', // LATIN SMALL LETTER I WITH OGONEK\n    ᶖ: 'i', // LATIN SMALL LETTER I WITH RETROFLEX HOOK\n    ɨ: 'i', // LATIN SMALL LETTER I WITH STROKE\n    ĩ: 'i', // LATIN SMALL LETTER I WITH TILDE\n    ḭ: 'i', // LATIN SMALL LETTER I WITH TILDE BELOW\n    ꝺ: 'd', // LATIN SMALL LETTER INSULAR D\n    ꝼ: 'f', // LATIN SMALL LETTER INSULAR F\n    ᵹ: 'g', // LATIN SMALL LETTER INSULAR G\n    ꞃ: 'r', // LATIN SMALL LETTER INSULAR R\n    ꞅ: 's', // LATIN SMALL LETTER INSULAR S\n    ꞇ: 't', // LATIN SMALL LETTER INSULAR T\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER IOTA' (ɩ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER IOTA WITH STROKE' (ᵼ)\n    ꝭ: 'is', // LATIN SMALL LETTER IS\n    ǰ: 'j', // LATIN SMALL LETTER J WITH CARON\n    ĵ: 'j', // LATIN SMALL LETTER J WITH CIRCUMFLEX\n    ʝ: 'j', // LATIN SMALL LETTER J WITH CROSSED-TAIL\n    ɉ: 'j', // LATIN SMALL LETTER J WITH STROKE\n    ḱ: 'k', // LATIN SMALL LETTER K WITH ACUTE\n    ǩ: 'k', // LATIN SMALL LETTER K WITH CARON\n    ķ: 'k', // LATIN SMALL LETTER K WITH CEDILLA\n    ⱪ: 'k', // LATIN SMALL LETTER K WITH DESCENDER\n    ꝃ: 'k', // LATIN SMALL LETTER K WITH DIAGONAL STROKE\n    ḳ: 'k', // LATIN SMALL LETTER K WITH DOT BELOW\n    ƙ: 'k', // LATIN SMALL LETTER K WITH HOOK\n    ḵ: 'k', // LATIN SMALL LETTER K WITH LINE BELOW\n    ᶄ: 'k', // LATIN SMALL LETTER K WITH PALATAL HOOK\n    ꝁ: 'k', // LATIN SMALL LETTER K WITH STROKE\n    ꝅ: 'k', // LATIN SMALL LETTER K WITH STROKE AND DIAGONAL STROKE\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER KRA' (ĸ)\n    ĺ: 'l', // LATIN SMALL LETTER L WITH ACUTE\n    ƚ: 'l', // LATIN SMALL LETTER L WITH BAR\n    ɬ: 'l', // LATIN SMALL LETTER L WITH BELT\n    ľ: 'l', // LATIN SMALL LETTER L WITH CARON\n    ļ: 'l', // LATIN SMALL LETTER L WITH CEDILLA\n    ḽ: 'l', // LATIN SMALL LETTER L WITH CIRCUMFLEX BELOW\n    ȴ: 'l', // LATIN SMALL LETTER L WITH CURL\n    ḷ: 'l', // LATIN SMALL LETTER L WITH DOT BELOW\n    ḹ: 'l', // LATIN SMALL LETTER L WITH DOT BELOW AND MACRON\n    ⱡ: 'l', // LATIN SMALL LETTER L WITH DOUBLE BAR\n    ꝉ: 'l', // LATIN SMALL LETTER L WITH HIGH STROKE\n    ḻ: 'l', // LATIN SMALL LETTER L WITH LINE BELOW\n    ŀ: 'l', // LATIN SMALL LETTER L WITH MIDDLE DOT\n    ɫ: 'l', // LATIN SMALL LETTER L WITH MIDDLE TILDE\n    ᶅ: 'l', // LATIN SMALL LETTER L WITH PALATAL HOOK\n    ɭ: 'l', // LATIN SMALL LETTER L WITH RETROFLEX HOOK\n    ł: 'l', // LATIN SMALL LETTER L WITH STROKE\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER LAMBDA WITH STROKE' (ƛ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER LEZH' (ɮ)\n    ǉ: 'lj', // LATIN SMALL LETTER LJ\n    ſ: 's', // LATIN SMALL LETTER LONG S\n    ẜ: 's', // LATIN SMALL LETTER LONG S WITH DIAGONAL STROKE\n    ẛ: 's', // LATIN SMALL LETTER LONG S WITH DOT ABOVE\n    ẝ: 's', // LATIN SMALL LETTER LONG S WITH HIGH STROKE\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER LS DIGRAPH' (ʪ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER LUM' (ꝲ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER LZ DIGRAPH' (ʫ)\n    ḿ: 'm', // LATIN SMALL LETTER M WITH ACUTE\n    ṁ: 'm', // LATIN SMALL LETTER M WITH DOT ABOVE\n    ṃ: 'm', // LATIN SMALL LETTER M WITH DOT BELOW\n    ɱ: 'm', // LATIN SMALL LETTER M WITH HOOK\n    ᵯ: 'm', // LATIN SMALL LETTER M WITH MIDDLE TILDE\n    ᶆ: 'm', // LATIN SMALL LETTER M WITH PALATAL HOOK\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER MIDDLE-WELSH LL' (ỻ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER MIDDLE-WELSH V' (ỽ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER MUM' (ꝳ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER N PRECEDED BY APOSTROPHE' (ŉ)\n    ń: 'n', // LATIN SMALL LETTER N WITH ACUTE\n    ň: 'n', // LATIN SMALL LETTER N WITH CARON\n    ņ: 'n', // LATIN SMALL LETTER N WITH CEDILLA\n    ṋ: 'n', // LATIN SMALL LETTER N WITH CIRCUMFLEX BELOW\n    ȵ: 'n', // LATIN SMALL LETTER N WITH CURL\n    ṅ: 'n', // LATIN SMALL LETTER N WITH DOT ABOVE\n    ṇ: 'n', // LATIN SMALL LETTER N WITH DOT BELOW\n    ǹ: 'n', // LATIN SMALL LETTER N WITH GRAVE\n    ɲ: 'n', // LATIN SMALL LETTER N WITH LEFT HOOK\n    ṉ: 'n', // LATIN SMALL LETTER N WITH LINE BELOW\n    ƞ: 'n', // LATIN SMALL LETTER N WITH LONG RIGHT LEG\n    ᵰ: 'n', // LATIN SMALL LETTER N WITH MIDDLE TILDE\n    ᶇ: 'n', // LATIN SMALL LETTER N WITH PALATAL HOOK\n    ɳ: 'n', // LATIN SMALL LETTER N WITH RETROFLEX HOOK\n    ñ: 'n', // LATIN SMALL LETTER N WITH TILDE\n    ǌ: 'nj', // LATIN SMALL LETTER NJ\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER NUM' (ꝴ)\n    ó: 'o', // LATIN SMALL LETTER O WITH ACUTE\n    ŏ: 'o', // LATIN SMALL LETTER O WITH BREVE\n    ǒ: 'o', // LATIN SMALL LETTER O WITH CARON\n    ô: 'o', // LATIN SMALL LETTER O WITH CIRCUMFLEX\n    ố: 'o', // LATIN SMALL LETTER O WITH CIRCUMFLEX AND ACUTE\n    ộ: 'o', // LATIN SMALL LETTER O WITH CIRCUMFLEX AND DOT BELOW\n    ồ: 'o', // LATIN SMALL LETTER O WITH CIRCUMFLEX AND GRAVE\n    ổ: 'o', // LATIN SMALL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE\n    ỗ: 'o', // LATIN SMALL LETTER O WITH CIRCUMFLEX AND TILDE\n    ö: 'o', // LATIN SMALL LETTER O WITH DIAERESIS\n    ȫ: 'o', // LATIN SMALL LETTER O WITH DIAERESIS AND MACRON\n    ȯ: 'o', // LATIN SMALL LETTER O WITH DOT ABOVE\n    ȱ: 'o', // LATIN SMALL LETTER O WITH DOT ABOVE AND MACRON\n    ọ: 'o', // LATIN SMALL LETTER O WITH DOT BELOW\n    ő: 'o', // LATIN SMALL LETTER O WITH DOUBLE ACUTE\n    ȍ: 'o', // LATIN SMALL LETTER O WITH DOUBLE GRAVE\n    ò: 'o', // LATIN SMALL LETTER O WITH GRAVE\n    ỏ: 'o', // LATIN SMALL LETTER O WITH HOOK ABOVE\n    ơ: 'o', // LATIN SMALL LETTER O WITH HORN\n    ớ: 'o', // LATIN SMALL LETTER O WITH HORN AND ACUTE\n    ợ: 'o', // LATIN SMALL LETTER O WITH HORN AND DOT BELOW\n    ờ: 'o', // LATIN SMALL LETTER O WITH HORN AND GRAVE\n    ở: 'o', // LATIN SMALL LETTER O WITH HORN AND HOOK ABOVE\n    ỡ: 'o', // LATIN SMALL LETTER O WITH HORN AND TILDE\n    ȏ: 'o', // LATIN SMALL LETTER O WITH INVERTED BREVE\n    ꝋ: 'o', // LATIN SMALL LETTER O WITH LONG STROKE OVERLAY\n    ꝍ: 'o', // LATIN SMALL LETTER O WITH LOOP\n    ⱺ: 'o', // LATIN SMALL LETTER O WITH LOW RING INSIDE\n    ō: 'o', // LATIN SMALL LETTER O WITH MACRON\n    ṓ: 'o', // LATIN SMALL LETTER O WITH MACRON AND ACUTE\n    ṑ: 'o', // LATIN SMALL LETTER O WITH MACRON AND GRAVE\n    ǫ: 'o', // LATIN SMALL LETTER O WITH OGONEK\n    ǭ: 'o', // LATIN SMALL LETTER O WITH OGONEK AND MACRON\n    ø: 'o', // LATIN SMALL LETTER O WITH STROKE\n    ǿ: 'o', // LATIN SMALL LETTER O WITH STROKE AND ACUTE\n    õ: 'o', // LATIN SMALL LETTER O WITH TILDE\n    ṍ: 'o', // LATIN SMALL LETTER O WITH TILDE AND ACUTE\n    ṏ: 'o', // LATIN SMALL LETTER O WITH TILDE AND DIAERESIS\n    ȭ: 'o', // LATIN SMALL LETTER O WITH TILDE AND MACRON\n    ƣ: 'oi', // LATIN SMALL LETTER OI\n    ꝏ: 'oo', // LATIN SMALL LETTER OO\n    ɛ: 'e', // LATIN SMALL LETTER OPEN E\n    ᶓ: 'e', // LATIN SMALL LETTER OPEN E WITH RETROFLEX HOOK\n    ɔ: 'o', // LATIN SMALL LETTER OPEN O\n    ᶗ: 'o', // LATIN SMALL LETTER OPEN O WITH RETROFLEX HOOK\n    ȣ: 'ou', // LATIN SMALL LETTER OU\n    ṕ: 'p', // LATIN SMALL LETTER P WITH ACUTE\n    ṗ: 'p', // LATIN SMALL LETTER P WITH DOT ABOVE\n    ꝓ: 'p', // LATIN SMALL LETTER P WITH FLOURISH\n    ƥ: 'p', // LATIN SMALL LETTER P WITH HOOK\n    ᵱ: 'p', // LATIN SMALL LETTER P WITH MIDDLE TILDE\n    ᶈ: 'p', // LATIN SMALL LETTER P WITH PALATAL HOOK\n    ꝕ: 'p', // LATIN SMALL LETTER P WITH SQUIRREL TAIL\n    ᵽ: 'p', // LATIN SMALL LETTER P WITH STROKE\n    ꝑ: 'p', // LATIN SMALL LETTER P WITH STROKE THROUGH DESCENDER\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER PHI' (ɸ)\n    ꝙ: 'q', // LATIN SMALL LETTER Q WITH DIAGONAL STROKE\n    ʠ: 'q', // LATIN SMALL LETTER Q WITH HOOK\n    ɋ: 'q', // LATIN SMALL LETTER Q WITH HOOK TAIL\n    ꝗ: 'q', // LATIN SMALL LETTER Q WITH STROKE THROUGH DESCENDER\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER QP DIGRAPH' (ȹ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER R ROTUNDA' (ꝛ)\n    ŕ: 'r', // LATIN SMALL LETTER R WITH ACUTE\n    ř: 'r', // LATIN SMALL LETTER R WITH CARON\n    ŗ: 'r', // LATIN SMALL LETTER R WITH CEDILLA\n    ṙ: 'r', // LATIN SMALL LETTER R WITH DOT ABOVE\n    ṛ: 'r', // LATIN SMALL LETTER R WITH DOT BELOW\n    ṝ: 'r', // LATIN SMALL LETTER R WITH DOT BELOW AND MACRON\n    ȑ: 'r', // LATIN SMALL LETTER R WITH DOUBLE GRAVE\n    ɾ: 'r', // LATIN SMALL LETTER R WITH FISHHOOK\n    ᵳ: 'r', // LATIN SMALL LETTER R WITH FISHHOOK AND MIDDLE TILDE\n    ȓ: 'r', // LATIN SMALL LETTER R WITH INVERTED BREVE\n    ṟ: 'r', // LATIN SMALL LETTER R WITH LINE BELOW\n    ɼ: 'r', // LATIN SMALL LETTER R WITH LONG LEG\n    ᵲ: 'r', // LATIN SMALL LETTER R WITH MIDDLE TILDE\n    ᶉ: 'r', // LATIN SMALL LETTER R WITH PALATAL HOOK\n    ɍ: 'r', // LATIN SMALL LETTER R WITH STROKE\n    ɽ: 'r', // LATIN SMALL LETTER R WITH TAIL\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER RAMS HORN' (ɤ)\n    ↄ: 'c', // LATIN SMALL LETTER REVERSED C\n    ꜿ: 'c', // LATIN SMALL LETTER REVERSED C WITH DOT\n    ɘ: 'e', // LATIN SMALL LETTER REVERSED E\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER REVERSED OPEN E' (ɜ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER REVERSED OPEN E WITH HOOK' (ɝ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER REVERSED OPEN E WITH RETROFLEX HOOK' (ᶔ)\n    ɿ: 'r', // LATIN SMALL LETTER REVERSED R WITH FISHHOOK\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER RUM' (ꝵ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER RUM ROTUNDA' (ꝝ)\n    ś: 's', // LATIN SMALL LETTER S WITH ACUTE\n    ṥ: 's', // LATIN SMALL LETTER S WITH ACUTE AND DOT ABOVE\n    š: 's', // LATIN SMALL LETTER S WITH CARON\n    ṧ: 's', // LATIN SMALL LETTER S WITH CARON AND DOT ABOVE\n    ş: 's', // LATIN SMALL LETTER S WITH CEDILLA\n    ŝ: 's', // LATIN SMALL LETTER S WITH CIRCUMFLEX\n    ș: 's', // LATIN SMALL LETTER S WITH COMMA BELOW\n    ṡ: 's', // LATIN SMALL LETTER S WITH DOT ABOVE\n    ṣ: 's', // LATIN SMALL LETTER S WITH DOT BELOW\n    ṩ: 's', // LATIN SMALL LETTER S WITH DOT BELOW AND DOT ABOVE\n    ʂ: 's', // LATIN SMALL LETTER S WITH HOOK\n    ᵴ: 's', // LATIN SMALL LETTER S WITH MIDDLE TILDE\n    ᶊ: 's', // LATIN SMALL LETTER S WITH PALATAL HOOK\n    ȿ: 's', // LATIN SMALL LETTER S WITH SWASH TAIL\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER SALTILLO' (ꞌ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER SCHWA' (ə)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER SCHWA WITH HOOK' (ɚ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER SCHWA WITH RETROFLEX HOOK' (ᶕ)\n    ɡ: 'g', // LATIN SMALL LETTER SCRIPT G\n    ß: 'ss', // LATIN SMALL LETTER SHARP S\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER SIDEWAYS DIAERESIZED U' (ᴞ)\n    ᴑ: 'o', // LATIN SMALL LETTER SIDEWAYS O\n    ᴓ: 'o', // LATIN SMALL LETTER SIDEWAYS O WITH STROKE\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER SIDEWAYS OPEN O' (ᴒ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER SIDEWAYS TURNED M' (ᴟ)\n    ᴝ: 'u', // LATIN SMALL LETTER SIDEWAYS U\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER SQUAT REVERSED ESH' (ʅ)\n    ť: 't', // LATIN SMALL LETTER T WITH CARON\n    ţ: 't', // LATIN SMALL LETTER T WITH CEDILLA\n    ṱ: 't', // LATIN SMALL LETTER T WITH CIRCUMFLEX BELOW\n    ț: 't', // LATIN SMALL LETTER T WITH COMMA BELOW\n    ȶ: 't', // LATIN SMALL LETTER T WITH CURL\n    ẗ: 't', // LATIN SMALL LETTER T WITH DIAERESIS\n    ⱦ: 't', // LATIN SMALL LETTER T WITH DIAGONAL STROKE\n    ṫ: 't', // LATIN SMALL LETTER T WITH DOT ABOVE\n    ṭ: 't', // LATIN SMALL LETTER T WITH DOT BELOW\n    ƭ: 't', // LATIN SMALL LETTER T WITH HOOK\n    ṯ: 't', // LATIN SMALL LETTER T WITH LINE BELOW\n    ᵵ: 't', // LATIN SMALL LETTER T WITH MIDDLE TILDE\n    ƫ: 't', // LATIN SMALL LETTER T WITH PALATAL HOOK\n    ʈ: 't', // LATIN SMALL LETTER T WITH RETROFLEX HOOK\n    ŧ: 't', // LATIN SMALL LETTER T WITH STROKE\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER TAILLESS PHI' (ⱷ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER TC DIGRAPH WITH CURL' (ʨ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER TESH DIGRAPH' (ʧ)\n    ᵺ: 'th', // LATIN SMALL LETTER TH WITH STRIKETHROUGH\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER THORN' (þ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER THORN WITH STROKE' (ꝥ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER THORN WITH STROKE THROUGH DESCENDER' (ꝧ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER TONE FIVE' (ƽ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER TONE SIX' (ƅ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER TONE TWO' (ƨ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER TOP HALF O' (ᴖ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER TRESILLO' (ꜫ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER TS DIGRAPH' (ʦ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER TUM' (ꝷ)\n    ɐ: 'a', // LATIN SMALL LETTER TURNED A\n    ᴂ: 'ae', // LATIN SMALL LETTER TURNED AE\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER TURNED ALPHA' (ɒ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER TURNED DELTA' (ƍ)\n    ǝ: 'e', // LATIN SMALL LETTER TURNED E\n    ᵷ: 'g', // LATIN SMALL LETTER TURNED G\n    ɥ: 'h', // LATIN SMALL LETTER TURNED H\n    ʮ: 'h', // LATIN SMALL LETTER TURNED H WITH FISHHOOK\n    ʯ: 'h', // LATIN SMALL LETTER TURNED H WITH FISHHOOK AND TAIL\n    ᴉ: 'i', // LATIN SMALL LETTER TURNED I\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER TURNED INSULAR G' (ꝿ)\n    ʞ: 'k', // LATIN SMALL LETTER TURNED K\n    ꞁ: 'l', // LATIN SMALL LETTER TURNED L\n    ɯ: 'm', // LATIN SMALL LETTER TURNED M\n    ɰ: 'm', // LATIN SMALL LETTER TURNED M WITH LONG LEG\n    ᴔ: 'oe', // LATIN SMALL LETTER TURNED OE\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER TURNED OPEN E' (ᴈ)\n    ɹ: 'r', // LATIN SMALL LETTER TURNED R\n    ɻ: 'r', // LATIN SMALL LETTER TURNED R WITH HOOK\n    ɺ: 'r', // LATIN SMALL LETTER TURNED R WITH LONG LEG\n    ⱹ: 'r', // LATIN SMALL LETTER TURNED R WITH TAIL\n    ʇ: 't', // LATIN SMALL LETTER TURNED T\n    ʌ: 'v', // LATIN SMALL LETTER TURNED V\n    ʍ: 'w', // LATIN SMALL LETTER TURNED W\n    ʎ: 'y', // LATIN SMALL LETTER TURNED Y\n    ꜩ: 'tz', // LATIN SMALL LETTER TZ\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER U BAR' (ʉ)\n    ú: 'u', // LATIN SMALL LETTER U WITH ACUTE\n    ŭ: 'u', // LATIN SMALL LETTER U WITH BREVE\n    ǔ: 'u', // LATIN SMALL LETTER U WITH CARON\n    û: 'u', // LATIN SMALL LETTER U WITH CIRCUMFLEX\n    ṷ: 'u', // LATIN SMALL LETTER U WITH CIRCUMFLEX BELOW\n    ü: 'u', // LATIN SMALL LETTER U WITH DIAERESIS\n    ǘ: 'u', // LATIN SMALL LETTER U WITH DIAERESIS AND ACUTE\n    ǚ: 'u', // LATIN SMALL LETTER U WITH DIAERESIS AND CARON\n    ǜ: 'u', // LATIN SMALL LETTER U WITH DIAERESIS AND GRAVE\n    ǖ: 'u', // LATIN SMALL LETTER U WITH DIAERESIS AND MACRON\n    ṳ: 'u', // LATIN SMALL LETTER U WITH DIAERESIS BELOW\n    ụ: 'u', // LATIN SMALL LETTER U WITH DOT BELOW\n    ű: 'u', // LATIN SMALL LETTER U WITH DOUBLE ACUTE\n    ȕ: 'u', // LATIN SMALL LETTER U WITH DOUBLE GRAVE\n    ù: 'u', // LATIN SMALL LETTER U WITH GRAVE\n    ủ: 'u', // LATIN SMALL LETTER U WITH HOOK ABOVE\n    ư: 'u', // LATIN SMALL LETTER U WITH HORN\n    ứ: 'u', // LATIN SMALL LETTER U WITH HORN AND ACUTE\n    ự: 'u', // LATIN SMALL LETTER U WITH HORN AND DOT BELOW\n    ừ: 'u', // LATIN SMALL LETTER U WITH HORN AND GRAVE\n    ử: 'u', // LATIN SMALL LETTER U WITH HORN AND HOOK ABOVE\n    ữ: 'u', // LATIN SMALL LETTER U WITH HORN AND TILDE\n    ȗ: 'u', // LATIN SMALL LETTER U WITH INVERTED BREVE\n    ū: 'u', // LATIN SMALL LETTER U WITH MACRON\n    ṻ: 'u', // LATIN SMALL LETTER U WITH MACRON AND DIAERESIS\n    ų: 'u', // LATIN SMALL LETTER U WITH OGONEK\n    ᶙ: 'u', // LATIN SMALL LETTER U WITH RETROFLEX HOOK\n    ů: 'u', // LATIN SMALL LETTER U WITH RING ABOVE\n    ũ: 'u', // LATIN SMALL LETTER U WITH TILDE\n    ṹ: 'u', // LATIN SMALL LETTER U WITH TILDE AND ACUTE\n    ṵ: 'u', // LATIN SMALL LETTER U WITH TILDE BELOW\n    ᵫ: 'ue', // LATIN SMALL LETTER UE\n    ꝸ: 'um', // LATIN SMALL LETTER UM\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER UPSILON' (ʊ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER UPSILON WITH STROKE' (ᵿ)\n    ⱴ: 'v', // LATIN SMALL LETTER V WITH CURL\n    ꝟ: 'v', // LATIN SMALL LETTER V WITH DIAGONAL STROKE\n    ṿ: 'v', // LATIN SMALL LETTER V WITH DOT BELOW\n    ʋ: 'v', // LATIN SMALL LETTER V WITH HOOK\n    ᶌ: 'v', // LATIN SMALL LETTER V WITH PALATAL HOOK\n    ⱱ: 'v', // LATIN SMALL LETTER V WITH RIGHT HOOK\n    ṽ: 'v', // LATIN SMALL LETTER V WITH TILDE\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER VEND' (ꝩ)\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER VISIGOTHIC Z' (ꝣ)\n    ꝡ: 'vy', // LATIN SMALL LETTER VY\n    ẃ: 'w', // LATIN SMALL LETTER W WITH ACUTE\n    ŵ: 'w', // LATIN SMALL LETTER W WITH CIRCUMFLEX\n    ẅ: 'w', // LATIN SMALL LETTER W WITH DIAERESIS\n    ẇ: 'w', // LATIN SMALL LETTER W WITH DOT ABOVE\n    ẉ: 'w', // LATIN SMALL LETTER W WITH DOT BELOW\n    ẁ: 'w', // LATIN SMALL LETTER W WITH GRAVE\n    ⱳ: 'w', // LATIN SMALL LETTER W WITH HOOK\n    ẘ: 'w', // LATIN SMALL LETTER W WITH RING ABOVE\n    ẍ: 'x', // LATIN SMALL LETTER X WITH DIAERESIS\n    ẋ: 'x', // LATIN SMALL LETTER X WITH DOT ABOVE\n    ᶍ: 'x', // LATIN SMALL LETTER X WITH PALATAL HOOK\n    ý: 'y', // LATIN SMALL LETTER Y WITH ACUTE\n    ŷ: 'y', // LATIN SMALL LETTER Y WITH CIRCUMFLEX\n    ÿ: 'y', // LATIN SMALL LETTER Y WITH DIAERESIS\n    ẏ: 'y', // LATIN SMALL LETTER Y WITH DOT ABOVE\n    ỵ: 'y', // LATIN SMALL LETTER Y WITH DOT BELOW\n    ỳ: 'y', // LATIN SMALL LETTER Y WITH GRAVE\n    ƴ: 'y', // LATIN SMALL LETTER Y WITH HOOK\n    ỷ: 'y', // LATIN SMALL LETTER Y WITH HOOK ABOVE\n    ỿ: 'y', // LATIN SMALL LETTER Y WITH LOOP\n    ȳ: 'y', // LATIN SMALL LETTER Y WITH MACRON\n    ẙ: 'y', // LATIN SMALL LETTER Y WITH RING ABOVE\n    ɏ: 'y', // LATIN SMALL LETTER Y WITH STROKE\n    ỹ: 'y', // LATIN SMALL LETTER Y WITH TILDE\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LETTER YOGH' (ȝ)\n    ź: 'z', // LATIN SMALL LETTER Z WITH ACUTE\n    ž: 'z', // LATIN SMALL LETTER Z WITH CARON\n    ẑ: 'z', // LATIN SMALL LETTER Z WITH CIRCUMFLEX\n    ʑ: 'z', // LATIN SMALL LETTER Z WITH CURL\n    ⱬ: 'z', // LATIN SMALL LETTER Z WITH DESCENDER\n    ż: 'z', // LATIN SMALL LETTER Z WITH DOT ABOVE\n    ẓ: 'z', // LATIN SMALL LETTER Z WITH DOT BELOW\n    ȥ: 'z', // LATIN SMALL LETTER Z WITH HOOK\n    ẕ: 'z', // LATIN SMALL LETTER Z WITH LINE BELOW\n    ᵶ: 'z', // LATIN SMALL LETTER Z WITH MIDDLE TILDE\n    ᶎ: 'z', // LATIN SMALL LETTER Z WITH PALATAL HOOK\n    ʐ: 'z', // LATIN SMALL LETTER Z WITH RETROFLEX HOOK\n    ƶ: 'z', // LATIN SMALL LETTER Z WITH STROKE\n    ɀ: 'z', // LATIN SMALL LETTER Z WITH SWASH TAIL\n    ﬀ: 'ff', // LATIN SMALL LIGATURE FF\n    ﬃ: 'ffi', // LATIN SMALL LIGATURE FFI\n    ﬄ: 'ffl', // LATIN SMALL LIGATURE FFL\n    ﬁ: 'fi', // LATIN SMALL LIGATURE FI\n    ﬂ: 'fl', // LATIN SMALL LIGATURE FL\n    ĳ: 'ij', // LATIN SMALL LIGATURE IJ\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SMALL LIGATURE LONG S T' (ﬅ)\n    œ: 'oe', // LATIN SMALL LIGATURE OE\n    ﬆ: 'st', // LATIN SMALL LIGATURE ST\n    ₐ: 'a', // LATIN SUBSCRIPT SMALL LETTER A\n    ₑ: 'e', // LATIN SUBSCRIPT SMALL LETTER E\n    ᵢ: 'i', // LATIN SUBSCRIPT SMALL LETTER I\n    ⱼ: 'j', // LATIN SUBSCRIPT SMALL LETTER J\n    ₒ: 'o', // LATIN SUBSCRIPT SMALL LETTER O\n    ᵣ: 'r', // LATIN SUBSCRIPT SMALL LETTER R\n    // CANNOT FIND APPROXIMATION FOR 'LATIN SUBSCRIPT SMALL LETTER SCHWA' (ₔ)\n    ᵤ: 'u', // LATIN SUBSCRIPT SMALL LETTER U\n    ᵥ: 'v', // LATIN SUBSCRIPT SMALL LETTER V\n    ₓ: 'x', // LATIN SUBSCRIPT SMALL LETTER X\n};\n\nexport function map(x) {\n    return latinMap[x] || x;\n}\n\nexport function latinise(input) {\n    return input.replace(/[^A-Za-z0-9]/g, map);\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {latinise} from 'utils/latinise.jsx';\n\nexport function cleanUpUrlable(input) {\n    var cleaned = latinise(input);\n    cleaned = cleaned.trim().replace(/-/g, ' ').replace(/[^\\w\\s]/gi, '').toLowerCase().replace(/\\s/g, '-');\n    cleaned = cleaned.replace(/-{2,}/, '-');\n    cleaned = cleaned.replace(/^-+/, '');\n    cleaned = cleaned.replace(/-+$/, '');\n    return cleaned;\n}\n\nexport function getShortenedURL(url = '', getLength = 27) {\n    if (url.length > 35) {\n        const subLength = getLength - 14;\n        return url.substring(0, 10) + '...' + url.substring(url.length - subLength, url.length) + '/';\n    }\n    return url + '/';\n}\n\nexport function getSiteURLFromWindowObject(obj) {\n    let siteURL = '';\n    if (obj.location.origin) {\n        siteURL = obj.location.origin;\n    } else {\n        siteURL = obj.location.protocol + '//' + obj.location.hostname + (obj.location.port ? ':' + obj.location.port : '');\n    }\n\n    if (siteURL[siteURL.length - 1] === '/') {\n        siteURL = siteURL.substring(0, siteURL.length - 1);\n    }\n\n    if (obj.basename) {\n        siteURL += obj.basename;\n    }\n\n    if (siteURL[siteURL.length - 1] === '/') {\n        siteURL = siteURL.substring(0, siteURL.length - 1);\n    }\n\n    return siteURL;\n}\n\nexport function getSiteURL() {\n    return getSiteURLFromWindowObject(window);\n}\n\nexport function getRelativeChannelURL(teamName, channelName) {\n    return `/${teamName}/channels/${channelName}`;\n}\n\nexport function isUrlSafe(url) {\n    let unescaped;\n\n    try {\n        unescaped = decodeURIComponent(url);\n    } catch (e) {\n        unescaped = unescape(url);\n    }\n\n    unescaped = unescaped.replace(/[^\\w:]/g, '').toLowerCase();\n\n    return !unescaped.startsWith('javascript:') && // eslint-disable-line no-script-url\n        !unescaped.startsWith('vbscript:') &&\n        !unescaped.startsWith('data:');\n}\n\nexport function useSafeUrl(url, defaultUrl = '') {\n    if (isUrlSafe(url)) {\n        return url;\n    }\n\n    return defaultUrl;\n}\n\nexport function getScheme(url) {\n    const match = (/([a-z0-9+.-]+):/i).exec(url);\n\n    return match && match[1];\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport * as Flux from 'flux';\n\nimport Constants from 'utils/constants.jsx';\n\nconst PayloadSources = Constants.PayloadSources;\n\nconst AppDispatcher = Object.assign(new Flux.Dispatcher(), {\n    handleServerAction: function performServerAction(action) {\n        if (!action.type) {\n            console.warn('handleServerAction called with undefined action type'); // eslint-disable-line no-console\n        }\n\n        var payload = {\n            source: PayloadSources.SERVER_ACTION,\n            action,\n        };\n        this.dispatch(payload);\n    },\n\n    handleViewAction: function performViewAction(action) {\n        if (!action.type) {\n            console.warn('handleViewAction called with undefined action type'); // eslint-disable-line no-console\n        }\n\n        var payload = {\n            source: PayloadSources.VIEW_ACTION,\n            action,\n        };\n        this.dispatch(payload);\n    },\n});\n\nexport default AppDispatcher;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\n\nimport store from 'stores/redux_store.jsx';\n\nconst SUPPORTS_CLEAR_MARKS = isSupported([performance.clearMarks]);\nconst SUPPORTS_MARK = isSupported([performance.mark]);\nconst SUPPORTS_MEASURE_METHODS = isSupported([\n    performance.measure,\n    performance.getEntries,\n    performance.getEntriesByName,\n    performance.clearMeasures,\n]);\n\nexport function trackEvent(category, event, props) {\n    if (global.window && global.window.analytics) {\n        const properties = Object.assign({category, type: event, user_actual_id: getCurrentUserId(store.getState())}, props);\n        const options = {\n            context: {\n                ip: '0.0.0.0',\n            },\n            page: {\n                path: '',\n                referrer: '',\n                search: '',\n                title: '',\n                url: '',\n            },\n            anonymousId: '00000000000000000000000000',\n        };\n        global.window.analytics.track('event', properties, options);\n    }\n}\n\n/**\n * Takes an array of string names of performance markers and invokes\n * performance.clearMarkers on each.\n * @param   {array} names of markers to clear\n *\n */\nexport function clearMarks(names) {\n    if (!isDevMode() || !SUPPORTS_CLEAR_MARKS) {\n        return;\n    }\n    names.forEach((name) => performance.clearMarks(name));\n}\n\nexport function mark(name) {\n    if (!isDevMode() || !SUPPORTS_MARK) {\n        return;\n    }\n    performance.mark(name);\n}\n\n/**\n * Takes the names of two markers and invokes performance.measure on\n * them. The measured duration (ms) and the string name of the measure is\n * are returned.\n *\n * @param   {string} name1 the first marker\n * @param   {string} name2 the second marker\n *\n * @returns {[number, string]} Either the measured duration (ms) and the string name\n * of the measure are returned or -1 and and empty string is returned if\n * in dev. mode or one of the marker can't be found.\n *\n */\nexport function measure(name1, name2) {\n    if (!isDevMode() || !SUPPORTS_MEASURE_METHODS) {\n        return [-1, ''];\n    }\n\n    // Check for existence of entry name to avoid DOMException\n    const performanceEntries = performance.getEntries();\n    if (![name1, name2].every((name) => performanceEntries.find((item) => item.name === name))) {\n        return [-1, ''];\n    }\n\n    const displayPrefix = '🐐 Mattermost: ';\n    const measurementName = `${displayPrefix}${name1} - ${name2}`;\n    performance.measure(measurementName, name1, name2);\n    const lastDuration = mostRecentDurationByEntryName(measurementName);\n\n    // Clean up the measures we created\n    performance.clearMeasures(measurementName);\n    return [lastDuration, measurementName];\n}\n\nexport function trackLoadTime() {\n    if (!isSupported([performance.timing.loadEventEnd, performance.timing.navigationStart])) {\n        return;\n    }\n\n    // Must be wrapped in setTimeout because loadEventEnd property is 0\n    // until onload is complete, also time added because analytics\n    // code isn't loaded until a subsequent window event has fired.\n    const tenSeconds = 10000;\n    setTimeout(() => {\n        const {loadEventEnd, navigationStart} = window.performance.timing;\n        const pageLoadTime = loadEventEnd - navigationStart;\n        trackEvent('performance', 'page_load', {duration: pageLoadTime});\n    }, tenSeconds);\n}\n\nfunction mostRecentDurationByEntryName(entryName) {\n    const entriesWithName = performance.getEntriesByName(entryName);\n    return entriesWithName.map((item) => item.duration)[entriesWithName.length - 1];\n}\n\nfunction isSupported(checks) {\n    for (let i = 0, len = checks.length; i < len; i++) {\n        const item = checks[i];\n        if (typeof item === 'undefined') {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction isDevMode() {\n    const config = getConfig(store.getState());\n\n    return config.EnableDeveloper === 'true';\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport * as AdminActions from 'mattermost-redux/actions/admin';\nimport * as UserActions from 'mattermost-redux/actions/users';\nimport {Client4} from 'mattermost-redux/client';\n\nimport {emitUserLoggedOutEvent} from 'actions/global_actions.jsx';\nimport {getOnNavigationConfirmed} from 'selectors/views/admin';\nimport store from 'stores/redux_store.jsx';\nimport {ActionTypes} from 'utils/constants.jsx';\n\nconst dispatch = store.dispatch;\nconst getState = store.getState;\n\nexport async function saveConfig(config, success, error) {\n    const {data, error: err} = await AdminActions.updateConfig(config)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function reloadConfig(success, error) {\n    const {data, error: err} = await dispatch(AdminActions.reloadConfig());\n    if (data && success) {\n        dispatch(AdminActions.getConfig());\n        dispatch(AdminActions.getEnvironmentConfig());\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function adminResetMfa(userId, success, error) {\n    const {data, error: err} = await UserActions.updateUserMfa(userId, false)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function getClusterStatus(success, error) {\n    const {data, error: err} = await AdminActions.getClusterStatus()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function ldapTest(success, error) {\n    const {data, error: err} = await AdminActions.testLdap()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function invalidateAllCaches(success, error) {\n    const {data, error: err} = await AdminActions.invalidateCaches()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function recycleDatabaseConnection(success, error) {\n    const {data, error: err} = await AdminActions.recycleDatabase()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function adminResetPassword(userId, currentPassword, password, success, error) {\n    const {data, error: err} = await UserActions.updateUserPassword(userId, currentPassword, password)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function adminResetEmail(user, success, error) {\n    const {data, error: err} = await UserActions.patchUser(user)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function samlCertificateStatus(success, error) {\n    const {data, error: err} = await AdminActions.getSamlCertificateStatus()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport function getOAuthAppInfo(clientId, success, error) {\n    Client4.getOAuthAppInfo(clientId).then(\n        (data) => {\n            if (success) {\n                success(data);\n            }\n        }\n    ).catch(\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function allowOAuth2(params, success, error) {\n    const responseType = params.get('response_type');\n    const clientId = params.get('client_id');\n    const redirectUri = params.get('redirect_uri');\n    const state = params.get('state');\n    const scope = params.get('scope');\n\n    Client4.authorizeOAuthApp(responseType, clientId, redirectUri, state, scope).then(\n        (data) => {\n            if (success) {\n                success(data);\n            }\n        }\n    ).catch(\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport async function emailToLdap(loginId, password, token, ldapId, ldapPassword, success, error) {\n    const {data, error: err} = await UserActions.switchEmailToLdap(loginId, password, ldapId, ldapPassword, token)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function emailToOAuth(loginId, password, token, newType, success, error) {\n    const {data, error: err} = await UserActions.switchEmailToOAuth(newType, loginId, password, token)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function oauthToEmail(currentService, email, password, success, error) {\n    const {data, error: err} = await UserActions.switchOAuthToEmail(currentService, email, password)(dispatch, getState);\n    if (data) {\n        if (data.follow_link) {\n            emitUserLoggedOutEvent(data.follow_link);\n        }\n        if (success) {\n            success(data);\n        }\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function uploadBrandImage(brandImage, success, error) {\n    const {data, error: err} = await AdminActions.uploadBrandImage(brandImage)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function uploadLicenseFile(file, success, error) {\n    const {data, error: err} = await AdminActions.uploadLicense(file)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function removeLicenseFile(success, error) {\n    const {data, error: err} = await AdminActions.removeLicense()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function uploadPublicSamlCertificate(file, success, error) {\n    const {data, error: err} = await AdminActions.uploadPublicSamlCertificate(file)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function uploadPrivateSamlCertificate(file, success, error) {\n    const {data, error: err} = await AdminActions.uploadPrivateSamlCertificate(file)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function uploadIdpSamlCertificate(file, success, error) {\n    const {data, error: err} = await AdminActions.uploadIdpSamlCertificate(file)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function removePublicSamlCertificate(success, error) {\n    const {data, error: err} = await AdminActions.removePublicSamlCertificate()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function removePrivateSamlCertificate(success, error) {\n    const {data, error: err} = await AdminActions.removePrivateSamlCertificate()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function removeIdpSamlCertificate(success, error) {\n    const {data, error: err} = await AdminActions.removeIdpSamlCertificate()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function getStandardAnalytics(teamId) {\n    await AdminActions.getStandardAnalytics(teamId)(dispatch, getState);\n}\n\nexport async function getAdvancedAnalytics(teamId) {\n    await AdminActions.getAdvancedAnalytics(teamId)(dispatch, getState);\n}\n\nexport async function getPostsPerDayAnalytics(teamId) {\n    await AdminActions.getPostsPerDayAnalytics(teamId)(dispatch, getState);\n}\n\nexport async function getUsersPerDayAnalytics(teamId) {\n    await AdminActions.getUsersPerDayAnalytics(teamId)(dispatch, getState);\n}\n\nexport async function elasticsearchTest(config, success, error) {\n    const {data, error: err} = await AdminActions.testElasticsearch(config)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function testS3Connection(success, error) {\n    const {data, error: err} = await AdminActions.testS3Connection()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function elasticsearchPurgeIndexes(success, error) {\n    const {data, error: err} = await AdminActions.purgeElasticsearchIndexes()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport function setNavigationBlocked(blocked) {\n    return {\n        type: ActionTypes.SET_NAVIGATION_BLOCKED,\n        blocked,\n    };\n}\n\nexport function deferNavigation(onNavigationConfirmed) {\n    return {\n        type: ActionTypes.DEFER_NAVIGATION,\n        onNavigationConfirmed,\n    };\n}\n\nexport function cancelNavigation() {\n    return {\n        type: ActionTypes.CANCEL_NAVIGATION,\n    };\n}\n\nexport function confirmNavigation() {\n    // have to rename these because of lint no-shadow\n    return (thunkDispatch, thunkGetState) => {\n        const callback = getOnNavigationConfirmed(thunkGetState());\n\n        if (callback) {\n            callback();\n        }\n\n        thunkDispatch({\n            type: ActionTypes.CONFIRM_NAVIGATION,\n        });\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {getProfilesByIds} from 'mattermost-redux/actions/users';\nimport {getChannel, getCurrentChannel, getMyChannelMember} from 'mattermost-redux/selectors/entities/channels';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getTeammateNameDisplaySetting} from 'mattermost-redux/selectors/entities/preferences';\nimport {getCurrentUserId, getCurrentUser, getStatusForUserId, getUser} from 'mattermost-redux/selectors/entities/users';\nimport {isChannelMuted} from 'mattermost-redux/utils/channel_utils';\nimport {isSystemMessage} from 'mattermost-redux/utils/post_utils';\nimport {displayUsername} from 'mattermost-redux/utils/user_utils';\n\nimport Constants, {NotificationLevels, UserStatuses} from 'utils/constants.jsx';\nimport {isMacApp, isMobileApp, isWindowsApp} from 'utils/user_agent.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport {stripMarkdown} from 'utils/markdown';\n\nconst NOTIFY_TEXT_MAX_LENGTH = 50;\n\nexport function sendDesktopNotification(post, msgProps) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const currentUserId = getCurrentUserId(state);\n\n        if ((currentUserId === post.user_id && post.props.from_webhook !== 'true')) {\n            return;\n        }\n\n        if (isSystemMessage(post)) {\n            return;\n        }\n\n        let userFromPost = getUser(state, post.user_id);\n        if (!userFromPost) {\n            const missingProfileResponse = await dispatch(getProfilesByIds([post.user_id]));\n            if (missingProfileResponse.data && missingProfileResponse.data.length) {\n                userFromPost = missingProfileResponse.data[0];\n            }\n        }\n\n        let mentions = [];\n        if (msgProps.mentions) {\n            mentions = JSON.parse(msgProps.mentions);\n        }\n        const teamId = msgProps.team_id;\n\n        let channel = getChannel(state, post.channel_id);\n        const user = getCurrentUser(state);\n        const userStatus = getStatusForUserId(state, user.id);\n        const member = getMyChannelMember(state, post.channel_id);\n\n        if (isChannelMuted(member) || userStatus === UserStatuses.DND || userStatus === UserStatuses.OUT_OF_OFFICE) {\n            return;\n        }\n\n        let notifyLevel = member && member.notify_props ? member.notify_props.desktop : NotificationLevels.DEFAULT;\n        if (notifyLevel === NotificationLevels.DEFAULT) {\n            notifyLevel = user && user.notify_props ? user.notify_props.desktop : NotificationLevels.ALL;\n        }\n\n        if (notifyLevel === NotificationLevels.NONE) {\n            return;\n        } else if (notifyLevel === NotificationLevels.MENTION && mentions.indexOf(user.id) === -1 && msgProps.channel_type !== Constants.DM_CHANNEL) {\n            return;\n        }\n\n        const config = getConfig(state);\n        let username = '';\n        if (post.props.override_username && config.EnablePostUsernameOverride === 'true') {\n            username = post.props.override_username;\n        } else if (userFromPost) {\n            username = displayUsername(userFromPost, getTeammateNameDisplaySetting(state), false);\n        } else {\n            username = Utils.localizeMessage('channel_loader.someone', 'Someone');\n        }\n\n        let title = Utils.localizeMessage('channel_loader.posted', 'Posted');\n        if (!channel) {\n            title = msgProps.channel_display_name;\n            channel = {\n                name: msgProps.channel_name,\n                type: msgProps.channel_type,\n            };\n        } else if (channel.type === Constants.DM_CHANNEL) {\n            title = Utils.localizeMessage('notification.dm', 'Direct Message');\n        } else {\n            title = channel.display_name;\n        }\n\n        if (title === '') {\n            if (msgProps.channel_type === Constants.DM_CHANNEL) {\n                title = Utils.localizeMessage('notification.dm', 'Direct Message');\n            } else {\n                title = msgProps.channel_display_name;\n            }\n        }\n\n        let notifyText = post.message;\n\n        const msgPropsPost = JSON.parse(msgProps.post);\n        const attachments = msgPropsPost && msgPropsPost.props && msgPropsPost.props.attachments ? msgPropsPost.props.attachments : [];\n        let image = false;\n        attachments.forEach((attachment) => {\n            if (notifyText.length === 0) {\n                notifyText = attachment.fallback ||\n                    attachment.pretext ||\n                    attachment.text;\n            }\n            image |= attachment.image_url.length > 0;\n        });\n\n        let strippedMarkdownNotifyText = stripMarkdown(notifyText);\n        if (strippedMarkdownNotifyText.length > NOTIFY_TEXT_MAX_LENGTH) {\n            strippedMarkdownNotifyText = strippedMarkdownNotifyText.substring(0, NOTIFY_TEXT_MAX_LENGTH - 1) + '...';\n        }\n\n        let body = `@${username}`;\n        if (strippedMarkdownNotifyText.length === 0) {\n            if (msgProps.image) {\n                body += Utils.localizeMessage('channel_loader.uploadedImage', ' uploaded an image');\n            } else if (msgProps.otherFile) {\n                body += Utils.localizeMessage('channel_loader.uploadedFile', ' uploaded a file');\n            } else if (image) {\n                body += Utils.localizeMessage('channel_loader.postedImage', ' posted an image');\n            } else {\n                body += Utils.localizeMessage('channel_loader.something', ' did something new');\n            }\n        } else {\n            body += `: ${strippedMarkdownNotifyText}`;\n        }\n\n        //Play a sound if explicitly set in settings\n        const sound = !user.notify_props || user.notify_props.desktop_sound === 'true';\n\n        // Notify if you're not looking in the right channel or when\n        // the window itself is not active\n        const activeChannel = getCurrentChannel(state);\n        const channelId = channel ? channel.id : null;\n        const notify = (activeChannel && activeChannel.id !== channelId) || !state.views.browser.focused;\n\n        if (notify) {\n            Utils.notifyMe(title, body, channel, teamId, !sound);\n\n            //Don't add extra sounds on native desktop clients\n            if (sound && !isWindowsApp() && !isMacApp() && !isMobileApp()) {\n                Utils.ding();\n            }\n        }\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {PostTypes} from 'mattermost-redux/action_types';\nimport {\n    markChannelAsRead,\n    markChannelAsUnread,\n    markChannelAsViewed,\n} from 'mattermost-redux/actions/channels';\nimport * as PostActions from 'mattermost-redux/actions/posts';\nimport * as PostSelectors from 'mattermost-redux/selectors/entities/posts';\nimport {getCurrentChannelId} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {\n    isFromWebhook,\n    isSystemMessage,\n    shouldIgnorePost,\n} from 'mattermost-redux/utils/post_utils';\n\nimport {sendDesktopNotification} from 'actions/notification_actions.jsx';\n\nimport {ActionTypes} from 'utils/constants';\n\nexport function completePostReceive(post, websocketMessageProps) {\n    return async (dispatch, getState) => {\n        const state = getState();\n\n        const rootPost = PostSelectors.getPost(state, post.root_id);\n        if (post.root_id && !rootPost) {\n            const {data: posts} = await dispatch(PostActions.getPostThread(post.root_id));\n            if (posts) {\n                dispatch(lastPostActions(post, websocketMessageProps));\n            }\n\n            return;\n        }\n\n        dispatch(lastPostActions(post, websocketMessageProps));\n    };\n}\n\nexport function lastPostActions(post, websocketMessageProps) {\n    return (dispatch, getState) => {\n        const currentChannelId = getCurrentChannelId(getState());\n\n        if (post.channel_id === currentChannelId) {\n            dispatch({\n                type: ActionTypes.INCREASE_POST_VISIBILITY,\n                data: post.channel_id,\n                amount: 1,\n            });\n        }\n\n        // Need manual dispatch to remove pending post\n        dispatch({\n            type: PostTypes.RECEIVED_POSTS,\n            data: {\n                order: [],\n                posts: {\n                    [post.id]: post,\n                },\n            },\n            channelId: post.channel_id,\n        });\n\n        // Still needed to update unreads\n\n        dispatch(setChannelReadAndView(post, websocketMessageProps));\n\n        dispatch(sendDesktopNotification(post, websocketMessageProps));\n    };\n}\n\nexport function setChannelReadAndView(post, websocketMessageProps) {\n    return (dispatch, getState) => {\n        const state = getState();\n        if (shouldIgnorePost(post)) {\n            return;\n        }\n\n        let markAsRead = false;\n        let markAsReadOnServer = false;\n        if (\n            post.user_id === getCurrentUserId(state) &&\n            !isSystemMessage(post) &&\n            !isFromWebhook(post)\n        ) {\n            markAsRead = true;\n            markAsReadOnServer = false;\n        } else if (\n            post.channel_id === getCurrentChannelId(state) &&\n            window.isActive\n        ) {\n            markAsRead = true;\n            markAsReadOnServer = true;\n        }\n\n        if (markAsRead) {\n            dispatch(markChannelAsRead(post.channel_id, null, markAsReadOnServer));\n            dispatch(markChannelAsViewed(post.channel_id));\n        } else {\n            dispatch(markChannelAsUnread(websocketMessageProps.team_id, post.channel_id, websocketMessageProps.mentions));\n        }\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {batchActions} from 'redux-batched-actions';\n\nimport {PostTypes, SearchTypes} from 'mattermost-redux/action_types';\nimport {getMyChannelMember} from 'mattermost-redux/actions/channels';\nimport {getMyChannelMember as getMyChannelMemberSelector} from 'mattermost-redux/selectors/entities/channels';\nimport * as PostActions from 'mattermost-redux/actions/posts';\nimport * as PostSelectors from 'mattermost-redux/selectors/entities/posts';\nimport {comparePosts} from 'mattermost-redux/utils/post_utils';\n\nimport {addRecentEmoji} from 'actions/emoji_actions';\nimport * as StorageActions from 'actions/storage';\nimport {loadNewDMIfNeeded, loadNewGMIfNeeded} from 'actions/user_actions.jsx';\nimport * as RhsActions from 'actions/views/rhs';\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport store from 'stores/redux_store.jsx';\nimport {isEmbedVisible} from 'selectors/posts';\nimport {getSelectedPostId, getRhsState} from 'selectors/rhs';\nimport {\n    ActionTypes,\n    Constants,\n    RHSStates,\n    StoragePrefixes,\n} from 'utils/constants';\nimport {EMOJI_PATTERN} from 'utils/emoticons.jsx';\nimport * as UserAgent from 'utils/user_agent';\n\nimport {completePostReceive} from './post_utils';\n\nconst dispatch = store.dispatch;\nconst getState = store.getState;\n\nexport function handleNewPost(post, msg) {\n    return async (doDispatch, doGetState) => {\n        let websocketMessageProps = {};\n        if (msg) {\n            websocketMessageProps = msg.data;\n        }\n\n        const myChannelMember = getMyChannelMemberSelector(doGetState(), post.channel_id);\n        if (myChannelMember && Object.keys(myChannelMember).length === 0 && myChannelMember.constructor === 'Object') {\n            await doDispatch(getMyChannelMember(post.channel_id));\n        }\n\n        doDispatch(completePostReceive(post, websocketMessageProps));\n\n        if (msg && msg.data) {\n            if (msg.data.channel_type === Constants.DM_CHANNEL) {\n                loadNewDMIfNeeded(post.channel_id);\n            } else if (msg.data.channel_type === Constants.GM_CHANNEL) {\n                loadNewGMIfNeeded(post.channel_id);\n            }\n        }\n    };\n}\n\nconst getPostsForIds = PostSelectors.makeGetPostsForIds();\n\nexport function flagPost(postId) {\n    return async (doDispatch, doGetState) => {\n        await doDispatch(PostActions.flagPost(postId));\n        const state = doGetState();\n        const rhsState = getRhsState(state);\n\n        if (rhsState === RHSStates.FLAG) {\n            const results = state.entities.search.results;\n            const index = results.indexOf(postId);\n            if (index === -1) {\n                const flaggedPost = PostSelectors.getPost(state, postId);\n                const posts = getPostsForIds(state, results).reduce((acc, post) => {\n                    acc[post.id] = post;\n                    return acc;\n                }, {});\n                posts[flaggedPost.id] = flaggedPost;\n\n                const newResults = [...results, postId];\n                newResults.sort((a, b) => comparePosts(posts[a], posts[b]));\n\n                doDispatch({\n                    type: SearchTypes.RECEIVED_SEARCH_POSTS,\n                    data: {posts, order: newResults},\n                });\n            }\n        }\n\n        return {data: true};\n    };\n}\n\nexport function unflagPost(postId) {\n    return async (doDispatch, doGetState) => {\n        await doDispatch(PostActions.unflagPost(postId));\n        const state = doGetState();\n        const rhsState = getRhsState(state);\n\n        if (rhsState === RHSStates.FLAG) {\n            let results = state.entities.search.results;\n            const index = results.indexOf(postId);\n            if (index > -1) {\n                results = [...results];\n                results.splice(index, 1);\n\n                const posts = getPostsForIds(state, results);\n\n                doDispatch({\n                    type: SearchTypes.RECEIVED_SEARCH_POSTS,\n                    data: {posts, order: results},\n                });\n            }\n        }\n\n        return {data: true};\n    };\n}\n\nexport async function createPost(post, files, success) {\n    // parse message and emit emoji event\n    const emojis = post.message.match(EMOJI_PATTERN);\n    if (emojis) {\n        for (const emoji of emojis) {\n            const trimmed = emoji.substring(1, emoji.length - 1);\n            emitEmojiPosted(trimmed);\n        }\n    }\n\n    if (UserAgent.isIosClassic()) {\n        await PostActions.createPostImmediately(post, files)(dispatch, getState);\n    } else {\n        await PostActions.createPost(post, files)(dispatch, getState);\n    }\n\n    if (post.root_id) {\n        dispatch(storeCommentDraft(post.root_id, null));\n    } else {\n        dispatch(storeDraft(post.channel_id, null));\n    }\n\n    if (success) {\n        success();\n    }\n}\n\nexport function storeDraft(channelId, draft) {\n    return (doDispatch) => {\n        doDispatch(StorageActions.setGlobalItem('draft_' + channelId, draft));\n    };\n}\n\nexport function storeCommentDraft(rootPostId, draft) {\n    return (doDispatch) => {\n        doDispatch(StorageActions.setGlobalItem('comment_draft_' + rootPostId, draft));\n    };\n}\n\nexport async function updatePost(post, success) {\n    const {data, error: err} = await PostActions.editPost(post)(dispatch, getState);\n    if (data && success) {\n        success();\n    } else if (err) {\n        AppDispatcher.handleServerAction({\n            type: ActionTypes.RECEIVED_ERROR,\n            err: {id: err.server_error_id, ...err},\n            method: 'editPost',\n        });\n    }\n}\n\nexport function emitEmojiPosted(emoji) {\n    dispatch(addRecentEmoji(emoji));\n}\n\nconst POST_INCREASE_AMOUNT = Constants.POST_CHUNK_SIZE / 2;\n\n// Returns true if there are more posts to load\nexport function increasePostVisibility(channelId, focusedPostId) {\n    return async (doDispatch, doGetState) => {\n        if (doGetState().views.channel.loadingPosts[channelId]) {\n            return true;\n        }\n\n        const currentPostVisibility = doGetState().views.channel.postVisibility[channelId];\n\n        if (currentPostVisibility >= Constants.MAX_POST_VISIBILITY) {\n            return true;\n        }\n\n        doDispatch(batchActions([\n            {\n                type: ActionTypes.LOADING_POSTS,\n                data: true,\n                channelId,\n            },\n            {\n                type: ActionTypes.INCREASE_POST_VISIBILITY,\n                data: channelId,\n                amount: POST_INCREASE_AMOUNT,\n            },\n        ]));\n\n        const page = Math.floor(currentPostVisibility / POST_INCREASE_AMOUNT);\n\n        let result;\n        if (focusedPostId) {\n            result = await PostActions.getPostsBefore(channelId, focusedPostId, page, POST_INCREASE_AMOUNT)(dispatch, getState);\n        } else {\n            result = await PostActions.getPosts(channelId, page, POST_INCREASE_AMOUNT)(doDispatch, doGetState);\n        }\n        const posts = result.data;\n\n        doDispatch({\n            type: ActionTypes.LOADING_POSTS,\n            data: false,\n            channelId,\n        });\n\n        return posts ? posts.order.length >= POST_INCREASE_AMOUNT : false;\n    };\n}\n\nexport function searchForTerm(term) {\n    dispatch(RhsActions.updateSearchTerms(term));\n    dispatch(RhsActions.showSearchResults());\n}\n\nexport function pinPost(postId) {\n    return async (doDispatch, doGetState) => {\n        await PostActions.pinPost(postId)(doDispatch, doGetState);\n\n        AppDispatcher.handleServerAction({\n            type: ActionTypes.RECEIVED_POST_PINNED,\n            postId,\n        });\n    };\n}\n\nexport function unpinPost(postId) {\n    return async (doDispatch, doGetState) => {\n        await PostActions.unpinPost(postId)(doDispatch, doGetState);\n\n        AppDispatcher.handleServerAction({\n            type: ActionTypes.RECEIVED_POST_UNPINNED,\n            postId,\n        });\n    };\n}\n\nexport function doPostAction(postId, actionId) {\n    PostActions.doPostAction(postId, actionId)(dispatch, getState);\n}\n\nexport function setEditingPost(postId = '', commentCount = 0, refocusId = '', title = '', isRHS = false) {\n    return async (doDispatch, doGetState) => {\n        const state = doGetState();\n        const post = PostSelectors.getPost(state, postId);\n\n        if (!post || post.pending_post_id === postId) {\n            return {data: false};\n        }\n\n        let canEditNow = true;\n\n        // Only show the modal if we can edit the post now, but allow it to be hidden at any time\n        if (postId && state.entities.general.license.IsLicensed === 'true') {\n            const config = state.entities.general.config;\n\n            if (config.AllowEditPost === Constants.ALLOW_EDIT_POST_NEVER) {\n                canEditNow = false;\n            } else if (config.AllowEditPost === Constants.ALLOW_EDIT_POST_TIME_LIMIT) {\n                if ((post.create_at + (config.PostEditTimeLimit * 1000)) < Date.now()) {\n                    canEditNow = false;\n                }\n            }\n        }\n\n        if (canEditNow) {\n            doDispatch({\n                type: ActionTypes.SHOW_EDIT_POST_MODAL,\n                data: {postId, commentCount, refocusId, title, isRHS},\n            }, doGetState);\n        }\n\n        return {data: canEditNow};\n    };\n}\n\nexport function hideEditPostModal() {\n    return {\n        type: ActionTypes.HIDE_EDIT_POST_MODAL,\n    };\n}\n\nexport function deleteAndRemovePost(post) {\n    return async (doDispatch, doGetState) => {\n        const {currentUserId} = doGetState().entities.users;\n\n        let hardDelete = false;\n        if (post.user_id === currentUserId) {\n            hardDelete = true;\n        }\n\n        const {error} = await doDispatch(PostActions.deletePost(post, hardDelete));\n        if (error) {\n            return {error};\n        }\n\n        if (post.id === getSelectedPostId(doGetState())) {\n            dispatch({\n                type: ActionTypes.SELECT_POST,\n                postId: '',\n                channelId: '',\n            });\n        }\n\n        doDispatch({\n            type: PostTypes.REMOVE_POST,\n            data: post,\n        });\n\n        // Needed for search store\n        AppDispatcher.handleViewAction({\n            type: Constants.ActionTypes.REMOVE_POST,\n            post,\n        });\n\n        return {data: true};\n    };\n}\n\nexport function toggleEmbedVisibility(postId) {\n    return (doDispatch, doGetState) => {\n        const visible = isEmbedVisible(doGetState(), postId);\n\n        doDispatch(StorageActions.setGlobalItem(StoragePrefixes.EMBED_VISIBLE + postId, !visible));\n    };\n}\n\nexport function resetEmbedVisibility() {\n    return StorageActions.actionOnGlobalItemsWithPrefix(StoragePrefixes.EMBED_VISIBLE, () => null);\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport marked from 'marked';\n\n/** A Markdown renderer that converts a post into plain text that we can search for mentions */\nexport default class MentionableRenderer extends marked.Renderer {\n    code() {\n        // Code blocks can't contain mentions\n        return '\\n';\n    }\n\n    blockquote(text) {\n        return text + '\\n';\n    }\n\n    heading(text) {\n        return text + '\\n';\n    }\n\n    hr() {\n        return '\\n';\n    }\n\n    list(body) {\n        return body + '\\n';\n    }\n\n    listitem(text) {\n        return text + '\\n';\n    }\n\n    paragraph(text) {\n        return text + '\\n';\n    }\n\n    table(header, body) {\n        return header + '\\n' + body;\n    }\n\n    tablerow(content) {\n        return content;\n    }\n\n    tablecell(content) {\n        return content + '\\n';\n    }\n\n    strong(text) {\n        return ' ' + text + ' ';\n    }\n\n    em(text) {\n        return ' ' + text + ' ';\n    }\n\n    codespan() {\n        // Code spans can't contain mentions\n        return ' ';\n    }\n\n    br() {\n        return '\\n';\n    }\n\n    del(text) {\n        return ' ' + text + ' ';\n    }\n\n    link(href, title, text) {\n        return ' ' + text + ' ';\n    }\n\n    image(href, title, text) {\n        return ' ' + text + ' ';\n    }\n\n    text(text) {\n        return text;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {Client4} from 'mattermost-redux/client';\nimport {getLicense, getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {haveIChannelPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {getChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport UserStore from 'stores/user_store.jsx';\nimport store from 'stores/redux_store.jsx';\n\nimport Constants from 'utils/constants.jsx';\nimport {formatWithRenderer} from 'utils/markdown';\nimport MentionableRenderer from 'utils/markdown/mentionable_renderer';\nimport * as Utils from 'utils/utils.jsx';\nimport {isMobile} from 'utils/user_agent.jsx';\n\nexport function isSystemMessage(post) {\n    return Boolean(post.type && (post.type.lastIndexOf(Constants.SYSTEM_MESSAGE_PREFIX) === 0));\n}\n\nexport function fromAutoResponder(post) {\n    return Boolean(post.type && (post.type === Constants.AUTO_RESPONDER));\n}\n\nexport function isFromWebhook(post) {\n    return post.props && post.props.from_webhook === 'true';\n}\n\nexport function isPostOwner(post) {\n    return UserStore.getCurrentId() === post.user_id;\n}\n\nexport function isComment(post) {\n    if ('root_id' in post) {\n        return post.root_id !== '' && post.root_id != null;\n    }\n    return false;\n}\n\nexport function isEdited(post) {\n    return post.edit_at > 0;\n}\n\nexport function getImageSrc(src, hasImageProxy) {\n    if (hasImageProxy) {\n        return Client4.getBaseRoute() + '/image?url=' + encodeURIComponent(src);\n    }\n    return src;\n}\n\nexport function canDeletePost(post) {\n    if (post.type === Constants.PostTypes.FAKE_PARENT_DELETED) {\n        return false;\n    }\n    const channel = getChannel(store.getState(), post.channel_id);\n\n    if (channel && channel.delete_at !== 0) {\n        return false;\n    }\n\n    if (isPostOwner(post)) {\n        return haveIChannelPermission(store.getState(), {channel: post.channel_id, team: channel && channel.team_id, permission: Permissions.DELETE_POST});\n    }\n    return haveIChannelPermission(store.getState(), {channel: post.channel_id, team: channel && channel.team_id, permission: Permissions.DELETE_OTHERS_POSTS});\n}\n\nexport function canEditPost(post, editDisableAction) {\n    if (isSystemMessage(post)) {\n        return false;\n    }\n\n    let canEdit = false;\n    const license = getLicense(store.getState());\n    const config = getConfig(store.getState());\n    const channel = getChannel(store.getState(), post.channel_id);\n\n    if (channel && channel.delete_at !== 0) {\n        return false;\n    }\n\n    const isOwner = isPostOwner(post);\n    canEdit = haveIChannelPermission(store.getState(), {channel: post.channel_id, team: channel && channel.team_id, permission: Permissions.EDIT_POST});\n    if (!isOwner) {\n        canEdit = canEdit && haveIChannelPermission(store.getState(), {channel: post.channel_id, team: channel && channel.team_id, permission: Permissions.EDIT_OTHERS_POSTS});\n    }\n\n    if (canEdit && license.IsLicensed === 'true') {\n        if (config.PostEditTimeLimit !== '-1' && config.PostEditTimeLimit !== -1) {\n            const timeLeft = (post.create_at + (config.PostEditTimeLimit * 1000)) - Utils.getTimestamp();\n            if (timeLeft > 0) {\n                editDisableAction.fireAfter(timeLeft + 1000);\n            } else {\n                canEdit = false;\n            }\n        }\n    }\n\n    return canEdit;\n}\n\nexport function shouldShowDotMenu(post) {\n    if (Utils.isMobile()) {\n        return true;\n    }\n\n    if (!isSystemMessage(post)) {\n        return true;\n    }\n\n    if (canDeletePost(post)) {\n        return true;\n    }\n\n    if (canEditPost(post)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function containsAtChannel(text) {\n    // Don't warn for slash commands\n    if (!text || text.startsWith('/')) {\n        return false;\n    }\n\n    const mentionableText = formatWithRenderer(text, new MentionableRenderer());\n\n    return (/\\B@(all|channel)\\b/i).test(mentionableText);\n}\n\nexport function shouldFocusMainTextbox(e, activeElement) {\n    if (!e) {\n        return false;\n    }\n\n    // Do not focus if we're currently focused on a textarea or input\n    const keepFocusTags = ['TEXTAREA', 'INPUT'];\n    if (!activeElement || keepFocusTags.includes(activeElement.tagName)) {\n        return false;\n    }\n\n    // Focus if it is an attempted paste\n    if (Utils.cmdOrCtrlPressed(e) && Utils.isKeyPressed(e, Constants.KeyCodes.V)) {\n        return true;\n    }\n\n    // Do not focus if a modifier key is pressed\n    if (e.ctrlKey || e.metaKey || e.altKey) {\n        return false;\n    }\n\n    // Do not focus if the key is undefined or null\n    if (e.key == null) {\n        return false;\n    }\n\n    // Do not focus for non-character or non-number keys\n    if (e.key.length !== 1 || !e.key.match(/./)) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction canAutomaticallyCloseBackticks(message) {\n    const splitMessage = message.split('\\n').filter((line) => line.trim() !== '');\n    const lastPart = splitMessage[splitMessage.length - 1];\n\n    if (splitMessage.length > 1 && !lastPart.includes('```')) {\n        return {\n            allowSending: true,\n            message: message.endsWith('\\n') ? message.concat('```') : message.concat('\\n```'),\n            withClosedCodeBlock: true,\n        };\n    }\n\n    return {allowSending: true};\n}\n\nfunction sendOnCtrlEnter(message, ctrlOrMetaKeyPressed, isSendMessageOnCtrlEnter) {\n    const match = message.match(Constants.TRIPLE_BACK_TICKS);\n    if (isSendMessageOnCtrlEnter && ctrlOrMetaKeyPressed && (!match || match.length % 2 === 0)) {\n        return {allowSending: true};\n    } else if (!isSendMessageOnCtrlEnter && (!match || match.length % 2 === 0)) {\n        return {allowSending: true};\n    } else if (ctrlOrMetaKeyPressed && match && match.length % 2 !== 0) {\n        return canAutomaticallyCloseBackticks(message);\n    }\n\n    return {allowSending: false};\n}\n\nexport function postMessageOnKeyPress(event, message, sendMessageOnCtrlEnter, sendCodeBlockOnCtrlEnter) {\n    if (\n        !event ||\n        isMobile() ||\n        !Utils.isKeyPressed(event, Constants.KeyCodes.ENTER) ||\n        event.shiftKey ||\n        event.altKey\n    ) {\n        return {allowSending: false};\n    }\n\n    if (\n        message.trim() === '' ||\n        !(sendMessageOnCtrlEnter || sendCodeBlockOnCtrlEnter)\n    ) {\n        return {allowSending: true};\n    }\n\n    const ctrlOrMetaKeyPressed = event.ctrlKey || event.metaKey;\n\n    if (sendMessageOnCtrlEnter) {\n        return sendOnCtrlEnter(message, ctrlOrMetaKeyPressed, true);\n    } else if (sendCodeBlockOnCtrlEnter) {\n        return sendOnCtrlEnter(message, ctrlOrMetaKeyPressed, false);\n    }\n\n    return {allowSending: false};\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {createSelector} from 'reselect';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\n\nimport {makeGetGlobalItem} from 'selectors/storage';\nimport {PostTypes} from 'utils/constants.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport function getSelectedPostId(state) {\n    return state.views.rhs.selectedPostId;\n}\n\nexport function getSelectedChannelId(state) {\n    return state.views.rhs.selectedChannelId;\n}\n\nfunction getRealSelectedPost(state) {\n    return state.entities.posts.posts[getSelectedPostId(state)];\n}\n\nexport const getSelectedPost = createSelector(\n    getSelectedPostId,\n    getRealSelectedPost,\n    getSelectedChannelId,\n    getCurrentUserId,\n    (selectedPostId, selectedPost, selectedPostChannelId, currentUserId) => {\n        if (selectedPost) {\n            return selectedPost;\n        }\n\n        // If there is no root post found, assume it has been deleted by data retention policy, and create a fake one.\n        return {\n            id: selectedPostId,\n            exists: false,\n            type: PostTypes.FAKE_PARENT_DELETED,\n            message: localizeMessage('rhs_thread.rootPostDeletedMessage.body', 'Part of this thread has been deleted due to a data retention policy. You can no longer reply to this thread.'),\n            channel_id: selectedPostChannelId,\n            user_id: currentUserId,\n        };\n    }\n);\n\nexport function getRhsState(state) {\n    return state.views.rhs.rhsState;\n}\n\nexport function getPreviousRhsState(state) {\n    return state.views.rhs.previousRhsState;\n}\n\nexport function getSearchTerms(state) {\n    return state.views.rhs.searchTerms;\n}\n\nexport function getSearchResultsTerms(state) {\n    return state.views.rhs.searchResultsTerms;\n}\n\nexport function getIsSearchingTerm(state) {\n    return state.entities.search.isSearchingTerm;\n}\n\nexport function getIsSearchingFlaggedPost(state) {\n    return state.views.rhs.isSearchingFlaggedPost;\n}\n\nexport function getIsSearchingPinnedPost(state) {\n    return state.views.rhs.isSearchingPinnedPost;\n}\n\nexport function getIsSearchGettingMore(state) {\n    return state.entities.search.isSearchGettingMore;\n}\n\nexport function getPostDraft(state, prefixId, suffixId) {\n    const defaultDraft = {message: '', fileInfos: [], uploadsInProgress: []};\n    const draft = makeGetGlobalItem(prefixId + suffixId, defaultDraft)(state);\n\n    if (\n        typeof draft.message !== 'undefined' &&\n        typeof draft.uploadsInProgress !== 'undefined' &&\n        typeof draft.fileInfos !== 'undefined'\n    ) {\n        return draft;\n    }\n\n    return defaultDraft;\n}\n\nexport function getIsRhsOpen(state) {\n    return state.views.rhs.isSidebarOpen;\n}\n\nexport function getIsRhsMenuOpen(state) {\n    return state.views.rhs.isMenuOpen;\n}\n\nexport function getIsRhsExpanded(state) {\n    return state.views.rhs.isSidebarExpanded;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class ConfirmModal extends React.Component {\n    static propTypes = {\n\n        /*\n         * Set to show modal\n         */\n        show: PropTypes.bool.isRequired,\n\n        /*\n         * Title to use for the modal\n         */\n        title: PropTypes.node,\n\n        /*\n         * Message to display in the body of the modal\n         */\n        message: PropTypes.node,\n\n        /*\n         * The CSS class to apply to the confirm button\n         */\n        confirmButtonClass: PropTypes.string,\n\n        /*\n         * The CSS class to apply to the modal\n         */\n        modalClass: PropTypes.string,\n\n        /*\n         * Text/jsx element on the confirm button\n         */\n        confirmButtonText: PropTypes.node,\n\n        /*\n         * Text/jsx element on the cancel button\n         */\n        cancelButtonText: PropTypes.node,\n\n        /*\n         * Set to show checkbox\n         */\n        showCheckbox: PropTypes.bool,\n\n        /*\n         * Text/jsx element to display with the checkbox\n         */\n        checkboxText: PropTypes.node,\n\n        /*\n         * Function called when the confirm button or ENTER is pressed. Passes `true` if the checkbox is checked\n         */\n        onConfirm: PropTypes.func.isRequired,\n\n        /*\n         * Function called when the cancel button is pressed or the modal is hidden. Passes `true` if the checkbox is checked\n         */\n        onCancel: PropTypes.func.isRequired,\n\n        /**\n         * Function called when modal is dismissed\n         */\n        onExited: PropTypes.func,\n\n        /*\n         * Set to hide the cancel button\n         */\n        hideCancel: PropTypes.bool,\n    }\n\n    static defaultProps = {\n        title: '',\n        message: '',\n        confirmButtonClass: 'btn btn-primary',\n        confirmButtonText: '',\n        modalClass: '',\n    }\n\n    componentDidMount() {\n        if (this.props.show) {\n            document.addEventListener('keydown', this.handleKeypress);\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeypress);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.show && !nextProps.show) {\n            document.removeEventListener('keydown', this.handleKeypress);\n        } else if (!this.props.show && nextProps.show) {\n            document.addEventListener('keydown', this.handleKeypress);\n        }\n    }\n\n    handleKeypress = (e) => {\n        if (e.key === 'Enter' && this.props.show) {\n            this.handleConfirm();\n        }\n    }\n\n    handleConfirm = () => {\n        const checked = this.refs.checkbox ? this.refs.checkbox.checked : false;\n        this.props.onConfirm(checked);\n    }\n\n    handleCancel = () => {\n        const checked = this.refs.checkbox ? this.refs.checkbox.checked : false;\n        this.props.onCancel(checked);\n    }\n\n    render() {\n        let checkbox;\n        if (this.props.showCheckbox) {\n            checkbox = (\n                <div className='checkbox text-right margin-bottom--none'>\n                    <label>\n                        <input\n                            ref='checkbox'\n                            type='checkbox'\n                        />\n                        {this.props.checkboxText}\n                    </label>\n                </div>\n            );\n        }\n\n        let cancelText;\n        if (this.props.cancelButtonText) {\n            cancelText = this.props.cancelButtonText;\n        } else {\n            cancelText = (\n                <FormattedMessage\n                    id='confirm_modal.cancel'\n                    defaultMessage='Cancel'\n                />\n            );\n        }\n\n        let cancelButton;\n        if (!this.props.hideCancel) {\n            cancelButton = (\n                <button\n                    type='button'\n                    className='btn btn-default'\n                    onClick={this.handleCancel}\n                >\n                    {cancelText}\n                </button>\n            );\n        }\n\n        return (\n            <Modal\n                className={'modal-confirm ' + this.props.modalClass}\n                show={this.props.show}\n                onHide={this.props.onCancel}\n                onExited={this.props.onExited}\n            >\n                <Modal.Header closeButton={false}>\n                    <Modal.Title>{this.props.title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {this.props.message}\n                    {checkbox}\n                </Modal.Body>\n                <Modal.Footer>\n                    {cancelButton}\n                    <button\n                        autoFocus={true}\n                        type='button'\n                        className={this.props.confirmButtonClass}\n                        onClick={this.handleConfirm}\n                    >\n                        {this.props.confirmButtonText}\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport SaveButton from 'components/save_button.jsx';\nimport Constants from 'utils/constants.jsx';\nimport {isKeyPressed} from 'utils/utils.jsx';\n\nexport default class SettingItemMax extends React.PureComponent {\n    static defaultProps = {\n        infoPosition: 'bottom',\n        saving: false,\n        section: '',\n        containerStyle: '',\n    };\n\n    static propTypes = {\n\n        /**\n         * Array of inputs selection\n         */\n        inputs: PropTypes.array,\n\n        /**\n         * Styles for main component\n         */\n        containerStyle: PropTypes.string,\n\n        /**\n         * Client error\n         */\n        clientError: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.object,\n        ]),\n\n        /**\n         * Server error\n         */\n        serverError: PropTypes.string,\n\n        /**\n         * Settings extra information\n         */\n        extraInfo: PropTypes.element,\n\n        /**\n         * Info position\n         */\n        infoPosition: PropTypes.string,\n\n        /**\n         * Settings or tab section\n         */\n        section: PropTypes.string,\n\n        /**\n         * Function to update section\n         */\n        updateSection: PropTypes.func,\n\n        /**\n         * setting to submit\n         */\n        setting: PropTypes.string,\n\n        /**\n         * Function to submit setting\n         */\n        submit: PropTypes.func,\n\n        /**\n         * Extra information on submit\n         */\n        submitExtra: PropTypes.node,\n\n        /**\n         * Indicates whether setting is on saving\n         */\n        saving: PropTypes.bool,\n\n        /**\n         * Settings title\n         */\n        title: PropTypes.node,\n\n        /**\n         * Settings width\n         */\n        width: PropTypes.string,\n\n        /**\n         * Text of cancel button\n         */\n        cancelButtonText: PropTypes.node,\n\n        /**\n         * Avoid submitting when using SHIFT + ENTER\n         */\n        shiftEnter: PropTypes.bool,\n\n        /**\n         * Text of save button\n         */\n        saveButtonText: PropTypes.string,\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.onKeyDown);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown);\n    }\n\n    onKeyDown = (e) => {\n        if (this.props.shiftEnter && e.keyCode === Constants.KeyCodes.ENTER && e.shiftKey) {\n            return;\n        }\n        if (isKeyPressed(e, Constants.KeyCodes.ENTER) && this.props.submit) {\n            this.handleSubmit(e);\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.props.setting) {\n            this.props.submit(this.props.setting);\n        } else {\n            this.props.submit();\n        }\n    }\n\n    handleUpdateSection = (e) => {\n        this.props.updateSection(this.props.section);\n        e.preventDefault();\n    }\n\n    render() {\n        let clientError = null;\n        if (this.props.clientError) {\n            clientError = (\n                <div className='form-group'>\n                    <label\n                        id='clientError'\n                        className='col-sm-12 has-error'\n                    >\n                        {this.props.clientError}\n                    </label>\n                </div>\n            );\n        }\n\n        let serverError = null;\n        if (this.props.serverError) {\n            serverError = (\n                <div className='form-group'>\n                    <label\n                        id='serverError'\n                        className='col-sm-12 has-error'\n                    >\n                        {this.props.serverError}\n                    </label>\n                </div>\n            );\n        }\n\n        let extraInfo = null;\n        let hintClass = 'setting-list__hint';\n        if (this.props.infoPosition === 'top') {\n            hintClass = 'padding-bottom x2';\n        }\n\n        if (this.props.extraInfo) {\n            extraInfo = (<div className={hintClass}>{this.props.extraInfo}</div>);\n        }\n\n        let submit = '';\n        if (this.props.submit) {\n            submit = (\n                <SaveButton\n                    defaultMessage={this.props.saveButtonText}\n                    saving={this.props.saving}\n                    disabled={this.props.saving}\n                    onClick={this.handleSubmit}\n                />\n            );\n        }\n\n        const inputs = this.props.inputs;\n        let widthClass;\n        if (this.props.width === 'full') {\n            widthClass = 'col-sm-12';\n        } else if (this.props.width === 'medium') {\n            widthClass = 'col-sm-10 col-sm-offset-2';\n        } else {\n            widthClass = 'col-sm-9 col-sm-offset-3';\n        }\n\n        let title;\n        if (this.props.title) {\n            title = <li className='col-sm-12 section-title'>{this.props.title}</li>;\n        }\n\n        let listContent = (\n            <li className='setting-list-item'>\n                {inputs}\n                {extraInfo}\n            </li>\n        );\n\n        if (this.props.infoPosition === 'top') {\n            listContent = (\n                <li>\n                    {extraInfo}\n                    {inputs}\n                </li>\n            );\n        }\n\n        let cancelButtonText;\n        if (this.props.cancelButtonText) {\n            cancelButtonText = this.props.cancelButtonText;\n        } else {\n            cancelButtonText = (\n                <FormattedMessage\n                    id='setting_item_max.cancel'\n                    defaultMessage='Cancel'\n                />\n            );\n        }\n\n        return (\n            <ul\n                className={`section-max form-horizontal ${this.props.containerStyle}`}\n            >\n                {title}\n                <li className={widthClass}>\n                    <ul className='setting-list'>\n                        {listContent}\n                        <li className='setting-list-item'>\n                            <hr/>\n                            {this.props.submitExtra}\n                            {serverError}\n                            {clientError}\n                            {submit}\n                            <button\n                                id={'cancelSetting'}\n                                className='btn btn-sm cursor--pointer style--none'\n                                onClick={this.handleUpdateSection}\n                            >\n                                {cancelButtonText}\n                            </button>\n                        </li>\n                    </ul>\n                </li>\n            </ul>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class FormError extends React.Component {\n    static get propTypes() {\n        // accepts either a single error or an array of errors\n        return {\n            type: PropTypes.node,\n            error: PropTypes.node,\n            margin: PropTypes.bool,\n            errors: PropTypes.arrayOf(PropTypes.node),\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            error: null,\n            errors: [],\n        };\n    }\n\n    render() {\n        if (!this.props.error && this.props.errors.length === 0) {\n            return null;\n        }\n\n        // look for the first truthy error to display\n        let message = this.props.error;\n\n        if (!message) {\n            for (const error of this.props.errors) {\n                if (error) {\n                    message = error;\n                }\n            }\n        }\n\n        if (!message) {\n            return null;\n        }\n\n        if (this.props.type === 'modal') {\n            return (\n                <div className='form-group'>\n                    <label className='col-sm-12 has-error'>\n                        {message}\n                    </label>\n                </div>\n            );\n        }\n\n        if (this.props.type === 'backstage') {\n            return (\n                <div className='pull-left has-error'>\n                    <label className='control-label'>\n                        {message}\n                    </label>\n                </div>\n            );\n        }\n\n        if (this.props.margin) {\n            return (\n                <div className='form-group has-error'>\n                    <label className='control-label'>\n                        {message}\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div className='col-sm-12 has-error'>\n                <label className='control-label'>\n                    <i className='fa fa-exclamation-circle'/> {message}\n                </label>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport twemoji from 'twemoji';\nimport XRegExp from 'xregexp';\nimport {getEmojiImageUrl} from 'mattermost-redux/utils/emoji_utils';\n\nimport {formatWithRenderer} from 'utils/markdown';\nimport RemoveMarkdown from 'utils/markdown/remove_markdown';\nimport {getEmojiMap} from 'selectors/emojis';\nimport store from 'stores/redux_store.jsx';\n\nimport Constants from './constants.jsx';\nimport * as Emoticons from './emoticons.jsx';\nimport * as Markdown from './markdown';\n\nconst removeMarkdown = new RemoveMarkdown();\nconst punctuation = XRegExp.cache('[^\\\\pL\\\\d]');\n\nconst AT_MENTION_PATTERN = /\\B@([a-z0-9.\\-_]*)/gi;\nconst htmlEmojiPattern = /^<p>(?:<img class=\"emoticon\"[^>]*>|<span data-emoticon[^>]*>[^<]*<\\/span>\\s*)+<\\/p>$/;\n\n// pattern to detect the existence of a Chinese, Japanese, or Korean character in a string\n// http://stackoverflow.com/questions/15033196/using-javascript-to-check-whether-a-string-contains-japanese-characters-includi\nconst cjkPattern = /[\\u3000-\\u303f\\u3040-\\u309f\\u30a0-\\u30ff\\uff00-\\uff9f\\u4e00-\\u9faf\\u3400-\\u4dbf\\uac00-\\ud7a3]/;\n\n// Performs formatting of user posts including highlighting mentions and search terms and converting urls, hashtags,\n// @mentions and ~channels to links by taking a user's message and returning a string of formatted html. Also takes\n// a number of options as part of the second parameter:\n// - searchTerm - If specified, this word is highlighted in the resulting html. Defaults to nothing.\n// - searchMatches - If specified, an array of words that will be highlighted. Defaults to nothing. If both\n//     this and searchTerm are specified, this takes precedence.\n// - mentionHighlight - Specifies whether or not to highlight mentions of the current user. Defaults to true.\n// - mentionKeys - A list of mention keys for the current user to highlight.\n// - singleline - Specifies whether or not to remove newlines. Defaults to false.\n// - emoticons - Enables emoticon parsing with a data-emoticon attribute. Defaults to true.\n// - markdown - Enables markdown parsing. Defaults to true.\n// - siteURL - The origin of this Mattermost instance. If provided, links to channels and posts will be replaced with internal\n//     links that can be handled by a special click handler.\n// - atMentions - Whether or not to render at mentions into spans with a data-mention attribute. Defaults to false.\n// - channelNamesMap - An object mapping channel display names to channels. If provided, ~channel mentions will be replaced with\n//     links to the relevant channel.\n// - team - The current team.\n// - proxyImages - If specified, images are proxied. Defaults to false.\n// - autolinkedUrlSchemes - An array of url schemes that will be allowed for autolinking. Defaults to autolinking with any url scheme.\nexport function formatText(text, inputOptions) {\n    if (!text || typeof text !== 'string') {\n        return '';\n    }\n\n    let output = text;\n\n    const options = Object.assign({}, inputOptions);\n\n    if (options.searchMatches) {\n        options.searchPatterns = options.searchMatches.map(convertSearchTermToRegex);\n    } else {\n        options.searchPatterns = parseSearchTerms(options.searchTerm).map(convertSearchTermToRegex);\n    }\n\n    if (options.removeMarkdown) {\n        output = formatWithRenderer(output, removeMarkdown);\n        output = sanitizeHtml(output);\n        output = doFormatText(output, options);\n    } else if (!('markdown' in options) || options.markdown) {\n        // the markdown renderer will call doFormatText as necessary\n        output = Markdown.format(output, options);\n    } else {\n        output = sanitizeHtml(output);\n        output = doFormatText(output, options);\n    }\n\n    // replace newlines with spaces if necessary\n    if (options.singleline) {\n        output = replaceNewlines(output);\n    }\n\n    if (htmlEmojiPattern.test(output.trim())) {\n        output = '<span class=\"all-emoji\">' + output + '</span>';\n    }\n\n    return output;\n}\n\n// Performs most of the actual formatting work for formatText. Not intended to be called normally.\nexport function doFormatText(text, options) {\n    let output = text;\n\n    const tokens = new Map();\n\n    // replace important words and phrases with tokens\n    if (options.atMentions) {\n        output = autolinkAtMentions(output, tokens);\n    }\n\n    if (options.channelNamesMap) {\n        output = autolinkChannelMentions(output, tokens, options.channelNamesMap, options.team);\n    }\n\n    output = autolinkEmails(output, tokens);\n    output = autolinkHashtags(output, tokens);\n\n    if (!('emoticons' in options) || options.emoticon) {\n        output = Emoticons.handleEmoticons(output, tokens);\n    }\n\n    if (options.searchPatterns) {\n        output = highlightSearchTerms(output, tokens, options.searchPatterns);\n    }\n\n    if (!('mentionHighlight' in options) || options.mentionHighlight) {\n        output = highlightCurrentMentions(output, tokens, options.mentionKeys);\n    }\n\n    if (!('emoticons' in options) || options.emoticon) {\n        const emojiMap = getEmojiMap(store.getState());\n        output = twemoji.parse(output, {\n            className: 'emoticon',\n            callback: (icon) => {\n                if (!emojiMap.hasUnicode(icon)) {\n                    // just leave the unicode characters and hope the browser can handle it\n                    return null;\n                }\n\n                return getEmojiImageUrl(emojiMap.getUnicode(icon));\n            },\n        });\n    }\n\n    // reinsert tokens with formatted versions of the important words and phrases\n    output = replaceTokens(output, tokens);\n\n    return output;\n}\n\nexport function sanitizeHtml(text) {\n    let output = text;\n\n    // normal string.replace only does a single occurrance so use a regex instead\n    output = output.replace(/&/g, '&amp;');\n    output = output.replace(/</g, '&lt;');\n    output = output.replace(/>/g, '&gt;');\n    output = output.replace(/'/g, '&apos;');\n    output = output.replace(/\"/g, '&quot;');\n\n    return output;\n}\n\n// Copied from our fork of commonmark.js\nvar emailAlphaNumericChars = '\\\\p{L}\\\\p{Nd}';\nvar emailSpecialCharacters = '!#$%&\\'*+\\\\-\\\\/=?^_`{|}~';\nvar emailRestrictedSpecialCharacters = '\\\\s(),:;<>@\\\\[\\\\]';\nvar emailValidCharacters = emailAlphaNumericChars + emailSpecialCharacters;\nvar emailValidRestrictedCharacters = emailValidCharacters + emailRestrictedSpecialCharacters;\nvar emailStartPattern = '(?:[' + emailValidCharacters + '](?:[' + emailValidCharacters + ']|\\\\.(?!\\\\.|@))*|\\\\\"[' + emailValidRestrictedCharacters + '.]+\\\\\")@';\nvar reEmail = XRegExp.cache('(^|[^\\\\pL\\\\d])(' + emailStartPattern + '[\\\\pL\\\\d.\\\\-]+[.]\\\\pL{2,4}(?=$|[^\\\\p{L}]))', 'g');\n\n// Convert emails into tokens\nfunction autolinkEmails(text, tokens) {\n    function replaceEmailWithToken(fullMatch, prefix, email) {\n        const index = tokens.size;\n        const alias = `$MM_EMAIL${index}$`;\n\n        tokens.set(alias, {\n            value: `<a class=\"theme\" href=\"mailto:${email}\">${email}</a>`,\n            originalText: email,\n        });\n\n        return prefix + alias;\n    }\n\n    let output = text;\n    output = XRegExp.replace(text, reEmail, replaceEmailWithToken);\n\n    return output;\n}\n\nexport function autolinkAtMentions(text, tokens) {\n    function replaceAtMentionWithToken(fullMatch, username) {\n        const index = tokens.size;\n        const alias = `$MM_ATMENTION${index}$`;\n\n        tokens.set(alias, {\n            value: `<span data-mention=\"${username}\">@${username}</span>`,\n            originalText: fullMatch,\n        });\n\n        return alias;\n    }\n\n    let output = text;\n\n    let match = output.match(AT_MENTION_PATTERN);\n    while (match && match.length > 0) {\n        output = output.replace(AT_MENTION_PATTERN, replaceAtMentionWithToken);\n        match = output.match(AT_MENTION_PATTERN);\n    }\n\n    return output;\n}\n\nfunction autolinkChannelMentions(text, tokens, channelNamesMap, team) {\n    function channelMentionExists(c) {\n        return Boolean(channelNamesMap[c]);\n    }\n    function addToken(channelName, mention, displayName) {\n        const index = tokens.size;\n        const alias = `$MM_CHANNELMENTION${index}$`;\n        let href = '#';\n        if (team) {\n            href = (window.basename || '') + '/' + team.name + '/channels/' + channelName;\n        }\n\n        tokens.set(alias, {\n            value: `<a class=\"mention-link\" href=\"${href}\" data-channel-mention=\"${channelName}\">~${displayName}</a>`,\n            originalText: mention,\n        });\n        return alias;\n    }\n\n    function replaceChannelMentionWithToken(fullMatch, spacer, mention, channelName) {\n        let channelNameLower = channelName.toLowerCase();\n\n        if (channelMentionExists(channelNameLower)) {\n            // Exact match\n            const alias = addToken(channelNameLower, mention, escapeHtml(channelNamesMap[channelNameLower].display_name));\n            return spacer + alias;\n        }\n\n        // Not an exact match, attempt to truncate any punctuation to see if we can find a channel\n        const originalChannelName = channelNameLower;\n\n        for (let c = channelNameLower.length; c > 0; c--) {\n            if (punctuation.test(channelNameLower[c - 1])) {\n                channelNameLower = channelNameLower.substring(0, c - 1);\n\n                if (channelMentionExists(channelNameLower)) {\n                    const suffix = originalChannelName.substr(c - 1);\n                    const alias = addToken(channelNameLower, '~' + channelNameLower,\n                        escapeHtml(channelNamesMap[channelNameLower].display_name));\n                    return spacer + alias + suffix;\n                }\n            } else {\n                // If the last character is not punctuation, no point in going any further\n                break;\n            }\n        }\n\n        return fullMatch;\n    }\n\n    let output = text;\n    output = output.replace(/(^|\\s)(~([a-z0-9.\\-_]*))/gi, replaceChannelMentionWithToken);\n\n    return output;\n}\n\nexport function escapeRegex(text) {\n    return text.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nconst htmlEntities = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#039;',\n};\n\nexport function escapeHtml(text) {\n    return text.replace(/[&<>\"']/g, (match) => htmlEntities[match]);\n}\n\nexport function convertEntityToCharacter(text) {\n    return text.\n        replace(/&lt;/g, '<').\n        replace(/&gt;/g, '>').\n        replace(/&#39;/g, '\\'').\n        replace(/&quot;/g, '\"').\n        replace(/&amp;/g, '&');\n}\n\nfunction highlightCurrentMentions(text, tokens, mentionKeys = []) {\n    let output = text;\n\n    // look for any existing tokens which are self mentions and should be highlighted\n    var newTokens = new Map();\n    for (const [alias, token] of tokens) {\n        const tokenTextLower = token.originalText.toLowerCase();\n\n        if (mentionKeys.findIndex((key) => key.key.toLowerCase() === tokenTextLower) !== -1) {\n            const index = tokens.size + newTokens.size;\n            const newAlias = `$MM_SELFMENTION${index}$`;\n\n            newTokens.set(newAlias, {\n                value: `<span class=\"mention--highlight\">${alias}</span>`,\n                originalText: token.originalText,\n            });\n            output = output.replace(alias, newAlias);\n        }\n    }\n\n    // the new tokens are stashed in a separate map since we can't add objects to a map during iteration\n    for (const newToken of newTokens) {\n        tokens.set(newToken[0], newToken[1]);\n    }\n\n    // look for self mentions in the text\n    function replaceCurrentMentionWithToken(fullMatch, prefix, mention, suffix = '') {\n        const index = tokens.size;\n        const alias = `$MM_SELFMENTION${index}$`;\n\n        tokens.set(alias, {\n            value: `<span class=\"mention--highlight\">${mention}</span>`,\n            originalText: mention,\n        });\n\n        return prefix + alias + suffix;\n    }\n\n    for (const mention of mentionKeys) {\n        if (!mention || !mention.key) {\n            continue;\n        }\n\n        let flags = 'g';\n        if (!mention.caseSensitive) {\n            flags += 'i';\n        }\n\n        const pattern = new RegExp(`(^|\\\\W)(${escapeRegex(mention.key)})(\\\\b|_+\\\\b)`, flags);\n\n        output = output.replace(pattern, replaceCurrentMentionWithToken);\n    }\n\n    return output;\n}\n\nfunction autolinkHashtags(text, tokens) {\n    let output = text;\n\n    var newTokens = new Map();\n    for (const [alias, token] of tokens) {\n        if (token.originalText.lastIndexOf('#', 0) === 0) {\n            const index = tokens.size + newTokens.size;\n            const newAlias = `$MM_HASHTAG${index}$`;\n\n            newTokens.set(newAlias, {\n                value: `<a class='mention-link' href='#' data-hashtag='${token.originalText}'>${token.originalText}</a>`,\n                originalText: token.originalText,\n                hashtag: token.originalText.substring(1),\n            });\n\n            output = output.replace(alias, newAlias);\n        }\n    }\n\n    // the new tokens are stashed in a separate map since we can't add objects to a map during iteration\n    for (const newToken of newTokens) {\n        tokens.set(newToken[0], newToken[1]);\n    }\n\n    // look for hashtags in the text\n    function replaceHashtagWithToken(fullMatch, prefix, originalText) {\n        const index = tokens.size;\n        const alias = `$MM_HASHTAG${index}$`;\n\n        if (text.length < Constants.MIN_HASHTAG_LINK_LENGTH + 1) {\n            // too short to be a hashtag\n            return fullMatch;\n        }\n\n        tokens.set(alias, {\n            value: `<a class='mention-link' href='#' data-hashtag='${originalText}'>${originalText}</a>`,\n            originalText,\n            hashtag: originalText.substring(1),\n        });\n\n        return prefix + alias;\n    }\n\n    return output.replace(XRegExp.cache('(^|\\\\W)(#\\\\pL[\\\\pL\\\\d\\\\-_.]*[\\\\pL\\\\d])', 'g'), replaceHashtagWithToken);\n}\n\nconst puncStart = XRegExp.cache('^[^\\\\pL\\\\d\\\\s#]+');\nconst puncEnd = XRegExp.cache('[^\\\\pL\\\\d\\\\s]+$');\n\nfunction parseSearchTerms(searchTerm) {\n    let terms = [];\n\n    let termString = searchTerm;\n\n    while (termString) {\n        let captured;\n\n        // check for a quoted string\n        captured = (/^\"([^\"]*)\"/).exec(termString);\n        if (captured) {\n            termString = termString.substring(captured[0].length);\n\n            if (captured[1].length > 0) {\n                terms.push(captured[1]);\n            }\n            continue;\n        }\n\n        // check for a search flag (and don't add it to terms)\n        captured = (/^(?:in|from|channel): ?\\S+/).exec(termString);\n        if (captured) {\n            termString = termString.substring(captured[0].length);\n            continue;\n        }\n\n        // capture at mentions differently from the server so we can highlight them with the preceeding at sign\n        captured = (/^@[a-z0-9.-_]+\\b/).exec(termString);\n        if (captured) {\n            termString = termString.substring(captured[0].length);\n\n            terms.push(captured[0]);\n            continue;\n        }\n\n        // capture any plain text up until the next quote or search flag\n        captured = (/^.+?(?=\\bin:|\\bfrom:|\\bchannel:|\"|$)/).exec(termString);\n        if (captured) {\n            termString = termString.substring(captured[0].length);\n\n            // break the text up into words based on how the server splits them in SqlPostStore.SearchPosts and then discard empty terms\n            terms.push(...captured[0].split(/[ <>+()~@]/).filter((term) => Boolean(term)));\n            continue;\n        }\n\n        // we should never reach this point since at least one of the regexes should match something in the remaining text\n        throw new Error('Infinite loop in search term parsing: \"' + termString + '\"');\n    }\n\n    // remove punctuation from each term\n    terms = terms.map((term) => {\n        term.replace(puncStart, '');\n        if (term.charAt(term.length - 1) !== '*') {\n            term.replace(puncEnd, '');\n        }\n        return term;\n    });\n\n    return terms;\n}\n\nfunction convertSearchTermToRegex(term) {\n    let pattern;\n\n    if (cjkPattern.test(term)) {\n        // term contains Chinese, Japanese, or Korean characters so don't mark word boundaries\n        pattern = '()(' + escapeRegex(term.replace(/\\*/g, '')) + ')';\n    } else if ((/[^\\s][*]$/).test(term)) {\n        pattern = '\\\\b()(' + escapeRegex(term.substring(0, term.length - 1)) + ')';\n    } else if (term.startsWith('@') || term.startsWith('#')) {\n        // needs special handling of the first boundary because a word boundary doesn't work before a symbol\n        pattern = '(\\\\W|^)(' + escapeRegex(term) + ')\\\\b';\n    } else {\n        pattern = '\\\\b()(' + escapeRegex(term) + ')\\\\b';\n    }\n\n    return {\n        pattern: new RegExp(pattern, 'gi'),\n        term,\n    };\n}\n\nexport function highlightSearchTerms(text, tokens, searchPatterns) {\n    if (!searchPatterns || searchPatterns.length === 0) {\n        return text;\n    }\n\n    let output = text;\n\n    function replaceSearchTermWithToken(match, prefix, word) {\n        const index = tokens.size;\n        const alias = `$MM_SEARCHTERM${index}$`;\n\n        tokens.set(alias, {\n            value: `<span class=\"search-highlight\">${word}</span>`,\n            originalText: word,\n        });\n\n        return prefix + alias;\n    }\n\n    for (const pattern of searchPatterns) {\n        // highlight existing tokens matching search terms\n        var newTokens = new Map();\n        for (const [alias, token] of tokens) {\n            if (pattern.pattern.test(token.originalText)) {\n                // If it's a Hashtag, skip it unless the search term is an exact match.\n                let originalText = token.originalText;\n                if (originalText.startsWith('#')) {\n                    originalText = originalText.substr(1);\n                }\n                let term = pattern.term;\n                if (term.startsWith('#')) {\n                    term = term.substr(1);\n                }\n\n                if (alias.startsWith('$MM_HASHTAG') && alias.endsWith('$') && originalText !== term) {\n                    continue;\n                }\n\n                const index = tokens.size + newTokens.size;\n                const newAlias = `$MM_SEARCHTERM${index}$`;\n\n                newTokens.set(newAlias, {\n                    value: `<span class=\"search-highlight\">${alias}</span>`,\n                    originalText: token.originalText,\n                });\n\n                output = output.replace(alias, newAlias);\n            }\n\n            // The pattern regexes are global, so calling pattern.pattern.test() above alters their\n            // state. Reset lastIndex to 0 between calls to test() to ensure it returns the\n            // same result every time it is called with the same value of token.originalText.\n            pattern.pattern.lastIndex = 0;\n        }\n\n        // the new tokens are stashed in a separate map since we can't add objects to a map during iteration\n        for (const newToken of newTokens) {\n            tokens.set(newToken[0], newToken[1]);\n        }\n\n        output = output.replace(pattern.pattern, replaceSearchTermWithToken);\n    }\n\n    return output;\n}\n\nexport function replaceTokens(text, tokens) {\n    let output = text;\n\n    // iterate backwards through the map so that we do replacement in the opposite order that we added tokens\n    const aliases = [...tokens.keys()];\n    for (let i = aliases.length - 1; i >= 0; i--) {\n        const alias = aliases[i];\n        const token = tokens.get(alias);\n        output = output.replace(alias, token.value);\n    }\n\n    return output;\n}\n\nfunction replaceNewlines(text) {\n    return text.replace(/\\n/g, ' ');\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport EventEmitter from 'events';\n\nimport {UserTypes} from 'mattermost-redux/action_types';\nimport * as Selectors from 'mattermost-redux/selectors/entities/users';\n\nimport ChannelStore from 'stores/channel_store.jsx';\nimport store from 'stores/redux_store.jsx';\nimport TeamStore from 'stores/team_store.jsx';\nimport Constants from 'utils/constants.jsx';\n\nconst UserStatuses = Constants.UserStatuses;\n\nconst CHANGE_EVENT_NOT_IN_CHANNEL = 'change_not_in_channel';\nconst CHANGE_EVENT_IN_CHANNEL = 'change_in_channel';\nconst CHANGE_EVENT_NOT_IN_TEAM = 'change_not_in_team';\nconst CHANGE_EVENT_IN_TEAM = 'change_in_team';\nconst CHANGE_EVENT_WITHOUT_TEAM = 'change_without_team';\nconst CHANGE_EVENT = 'change';\nconst CHANGE_EVENT_SESSIONS = 'change_sessions';\nconst CHANGE_EVENT_AUDITS = 'change_audits';\nconst CHANGE_EVENT_STATUSES = 'change_statuses';\n\nclass UserStoreClass extends EventEmitter {\n    constructor() {\n        super();\n\n        this.entities = {};\n\n        store.subscribe(() => {\n            const newEntities = store.getState().entities.users;\n            const entities = this.entities;\n            this.entities = newEntities;\n\n            if (newEntities.profiles !== entities.profiles) {\n                this.emitChange();\n            }\n\n            if (newEntities.profilesInChannel !== entities.profilesInChannel) {\n                this.emitInChannelChange();\n            }\n\n            if (newEntities.profilesNotInChannel !== entities.profilesNotInChannel) {\n                this.emitNotInChannelChange();\n            }\n\n            if (newEntities.profilesInTeam !== entities.profilesInTeam) {\n                this.emitInTeamChange();\n            }\n\n            if (newEntities.profilesNotInTeam !== entities.profilesNotInTeam) {\n                this.emitNotInTeamChange();\n            }\n\n            if (newEntities.profilesWithoutTeam !== entities.profilesWithoutTeam) {\n                this.emitWithoutTeamChange();\n            }\n\n            if (newEntities.statuses !== entities.statuses) {\n                this.emitStatusesChange();\n            }\n\n            if (newEntities.myAudits !== entities.myAudits) {\n                this.emitAuditsChange();\n            }\n\n            if (newEntities.mySessions !== entities.mySessions) {\n                this.emitSessionsChange();\n            }\n        });\n    }\n\n    emitChange(userId) {\n        this.emit(CHANGE_EVENT, userId);\n    }\n\n    addChangeListener(callback) {\n        this.on(CHANGE_EVENT, callback);\n    }\n\n    removeChangeListener(callback) {\n        this.removeListener(CHANGE_EVENT, callback);\n    }\n\n    emitInTeamChange() {\n        this.emit(CHANGE_EVENT_IN_TEAM);\n    }\n\n    addInTeamChangeListener(callback) {\n        this.on(CHANGE_EVENT_IN_TEAM, callback);\n    }\n\n    removeInTeamChangeListener(callback) {\n        this.removeListener(CHANGE_EVENT_IN_TEAM, callback);\n    }\n\n    emitNotInTeamChange() {\n        this.emit(CHANGE_EVENT_NOT_IN_TEAM);\n    }\n\n    addNotInTeamChangeListener(callback) {\n        this.on(CHANGE_EVENT_NOT_IN_TEAM, callback);\n    }\n\n    removeNotInTeamChangeListener(callback) {\n        this.removeListener(CHANGE_EVENT_NOT_IN_TEAM, callback);\n    }\n\n    emitInChannelChange() {\n        this.emit(CHANGE_EVENT_IN_CHANNEL);\n    }\n\n    addInChannelChangeListener(callback) {\n        this.on(CHANGE_EVENT_IN_CHANNEL, callback);\n    }\n\n    removeInChannelChangeListener(callback) {\n        this.removeListener(CHANGE_EVENT_IN_CHANNEL, callback);\n    }\n\n    emitNotInChannelChange() {\n        this.emit(CHANGE_EVENT_NOT_IN_CHANNEL);\n    }\n\n    addNotInChannelChangeListener(callback) {\n        this.on(CHANGE_EVENT_NOT_IN_CHANNEL, callback);\n    }\n\n    removeNotInChannelChangeListener(callback) {\n        this.removeListener(CHANGE_EVENT_NOT_IN_CHANNEL, callback);\n    }\n\n    emitWithoutTeamChange() {\n        this.emit(CHANGE_EVENT_WITHOUT_TEAM);\n    }\n\n    addWithoutTeamChangeListener(callback) {\n        this.on(CHANGE_EVENT_WITHOUT_TEAM, callback);\n    }\n\n    removeWithoutTeamChangeListener(callback) {\n        this.removeListener(CHANGE_EVENT_WITHOUT_TEAM, callback);\n    }\n\n    emitSessionsChange() {\n        this.emit(CHANGE_EVENT_SESSIONS);\n    }\n\n    addSessionsChangeListener(callback) {\n        this.on(CHANGE_EVENT_SESSIONS, callback);\n    }\n\n    removeSessionsChangeListener(callback) {\n        this.removeListener(CHANGE_EVENT_SESSIONS, callback);\n    }\n\n    emitAuditsChange() {\n        this.emit(CHANGE_EVENT_AUDITS);\n    }\n\n    addAuditsChangeListener(callback) {\n        this.on(CHANGE_EVENT_AUDITS, callback);\n    }\n\n    removeAuditsChangeListener(callback) {\n        this.removeListener(CHANGE_EVENT_AUDITS, callback);\n    }\n\n    emitStatusesChange() {\n        this.emit(CHANGE_EVENT_STATUSES);\n    }\n\n    addStatusesChangeListener(callback) {\n        this.on(CHANGE_EVENT_STATUSES, callback);\n    }\n\n    removeStatusesChangeListener(callback) {\n        this.removeListener(CHANGE_EVENT_STATUSES, callback);\n    }\n\n    // General\n\n    getCurrentUser() {\n        return Selectors.getCurrentUser(store.getState());\n    }\n\n    getCurrentId() {\n        return Selectors.getCurrentUserId(store.getState());\n    }\n\n    // System-Wide Profiles\n\n    getProfiles() {\n        return Selectors.getUsers(store.getState());\n    }\n\n    getProfile(userId) {\n        return Selectors.getUser(store.getState(), userId);\n    }\n\n    getProfileListForIds(userIds, skipCurrent = false, skipInactive = false) {\n        const profiles = [];\n        const currentId = this.getCurrentId();\n\n        for (let i = 0; i < userIds.length; i++) {\n            const profile = this.getProfile(userIds[i]);\n\n            if (!profile) {\n                continue;\n            }\n\n            if (skipCurrent && profile.id === currentId) {\n                continue;\n            }\n\n            if (skipInactive && profile.delete_at > 0) {\n                continue;\n            }\n\n            profiles.push(profile);\n        }\n\n        return profiles;\n    }\n\n    hasProfile(userId) {\n        return this.getProfiles().hasOwnProperty(userId);\n    }\n\n    getProfileByUsername(username) {\n        return this.getProfilesUsernameMap()[username];\n    }\n\n    getProfilesUsernameMap() {\n        return Selectors.getUsersByUsername(store.getState());\n    }\n\n    getProfileByEmail(email) {\n        return Selectors.getUsersByEmail(store.getState())[email];\n    }\n\n    getActiveOnlyProfiles(skipCurrent) {\n        const active = {};\n        const profiles = this.getProfiles();\n        const currentId = this.getCurrentId();\n\n        for (var key in profiles) {\n            if (!(profiles[key].id === currentId && skipCurrent) && profiles[key].delete_at === 0) {\n                active[key] = profiles[key];\n            }\n        }\n\n        return active;\n    }\n\n    getActiveOnlyProfileList() {\n        const profileMap = this.getActiveOnlyProfiles();\n        const profiles = [];\n\n        for (const id in profileMap) {\n            if (profileMap.hasOwnProperty(id)) {\n                profiles.push(profileMap[id]);\n            }\n        }\n\n        profiles.sort((a, b) => {\n            if (a.username < b.username) {\n                return -1;\n            }\n            if (a.username > b.username) {\n                return 1;\n            }\n            return 0;\n        });\n\n        return profiles;\n    }\n\n    getProfileList(skipCurrent = false, allowInactive = false) {\n        const profiles = [];\n        const currentId = this.getCurrentId();\n        const profileMap = this.getProfiles();\n\n        for (const id in profileMap) {\n            if (profileMap.hasOwnProperty(id)) {\n                var profile = profileMap[id];\n\n                if (skipCurrent && id === currentId) {\n                    continue;\n                }\n\n                if (allowInactive || profile.delete_at === 0) {\n                    profiles.push(profile);\n                }\n            }\n        }\n\n        profiles.sort((a, b) => {\n            if (a.username < b.username) {\n                return -1;\n            }\n            if (a.username > b.username) {\n                return 1;\n            }\n            return 0;\n        });\n\n        return profiles;\n    }\n\n    saveProfile(profile) {\n        store.dispatch({\n            type: UserTypes.RECEIVED_PROFILE,\n            data: profile,\n        });\n    }\n\n    // Team-Wide Profiles\n\n    getProfileListInTeam(teamId = TeamStore.getCurrentId(), skipCurrent = false, skipInactive = false) {\n        const userIds = Array.from(Selectors.getUserIdsInTeams(store.getState())[teamId] || []);\n\n        return this.getProfileListForIds(userIds, skipCurrent, skipInactive);\n    }\n\n    removeProfileFromTeam(teamId, userId) {\n        store.dispatch({\n            type: UserTypes.RECEIVED_PROFILE_NOT_IN_TEAM,\n            data: {id: teamId, user_id: userId},\n        });\n    }\n\n    // Not In Team Profiles\n\n    getProfileListNotInTeam(teamId = TeamStore.getCurrentId(), skipCurrent = false, skipInactive = false) {\n        const userIds = Array.from(Selectors.getUserIdsNotInTeams(store.getState())[teamId] || []);\n        const profiles = [];\n        const currentId = this.getCurrentId();\n\n        for (let i = 0; i < userIds.length; i++) {\n            const profile = this.getProfile(userIds[i]);\n\n            if (!profile) {\n                continue;\n            }\n\n            if (skipCurrent && profile.id === currentId) {\n                continue;\n            }\n\n            if (skipInactive && profile.delete_at > 0) {\n                continue;\n            }\n\n            profiles.push(profile);\n        }\n\n        return profiles;\n    }\n\n    removeProfileNotInTeam(teamId, userId) {\n        store.dispatch({\n            type: UserTypes.RECEIVED_PROFILE_IN_TEAM,\n            data: {id: teamId, user_id: userId},\n        });\n    }\n\n    // Channel-Wide Profiles\n\n    saveProfileInChannel(channelId = ChannelStore.getCurrentId(), profile) {\n        store.dispatch({\n            type: UserTypes.RECEIVED_PROFILE_IN_CHANNEL,\n            data: {id: channelId, user_id: profile.id},\n        });\n    }\n\n    saveUserIdInChannel(channelId = ChannelStore.getCurrentId(), userId) {\n        store.dispatch({\n            type: UserTypes.RECEIVED_PROFILE_IN_CHANNEL,\n            data: {id: channelId, user_id: userId},\n        });\n    }\n\n    removeProfileInChannel(channelId, userId) {\n        store.dispatch({\n            type: UserTypes.RECEIVED_PROFILE_NOT_IN_CHANNEL,\n            data: {id: channelId, user_id: userId},\n        });\n    }\n\n    getProfileListInChannel(channelId = ChannelStore.getCurrentId(), skipCurrent = false, skipInactive = false) {\n        const userIds = Array.from(Selectors.getUserIdsInChannels(store.getState())[channelId] || []);\n\n        return this.getProfileListForIds(userIds, skipCurrent, skipInactive);\n    }\n\n    saveProfileNotInChannel(channelId = ChannelStore.getCurrentId(), profile) {\n        store.dispatch({\n            type: UserTypes.RECEIVED_PROFILE_NOT_IN_CHANNEL,\n            data: {id: channelId, user_id: profile.id},\n        });\n    }\n\n    removeProfileNotInChannel(channelId, userId) {\n        store.dispatch({\n            type: UserTypes.RECEIVED_PROFILE_IN_CHANNEL,\n            data: {id: channelId, user_id: userId},\n        });\n    }\n\n    getProfileListNotInChannel(channelId = ChannelStore.getCurrentId(), skipInactive = false) {\n        const userIds = Array.from(Selectors.getUserIdsNotInChannels(store.getState())[channelId] || []);\n\n        return this.getProfileListForIds(userIds, false, skipInactive);\n    }\n\n    // Profiles without any teams\n\n    getProfileListWithoutTeam(skipCurrent = false, skipInactive = false) {\n        const userIds = Array.from(Selectors.getUserIdsWithoutTeam(store.getState()) || []);\n\n        return this.getProfileListForIds(userIds, skipCurrent, skipInactive);\n    }\n\n    // Other\n\n    getSessions() {\n        return store.getState().entities.users.mySessions;\n    }\n\n    getAudits() {\n        return store.getState().entities.users.myAudits;\n    }\n\n    setStatus(userId, status) {\n        const data = [{user_id: userId, status}];\n        store.dispatch({\n            type: UserTypes.RECEIVED_STATUSES,\n            data,\n        });\n    }\n\n    getStatuses() {\n        return store.getState().entities.users.statuses;\n    }\n\n    getStatus(id) {\n        return this.getStatuses()[id] || UserStatuses.OFFLINE;\n    }\n\n    getNoAccounts() {\n        return global.window.mm_config.NoAccounts === 'true';\n    }\n\n    setNoAccounts(noAccounts) {\n        this.noAccounts = noAccounts;\n    }\n}\n\nvar UserStore = new UserStoreClass();\nUserStore.setMaxListeners(600);\n\nexport {UserStore as default};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentUserLocale} from 'mattermost-redux/selectors/entities/i18n';\n\nimport * as I18n from 'i18n/i18n';\n\n// This is a placeholder for if we ever implement browser-locale detection\nexport function getCurrentLocale(state) {\n    return getCurrentUserLocale(state, getConfig(state).DefaultClientLocale);\n}\n\nexport function getTranslations(state, locale) {\n    const localeInfo = I18n.getLanguageInfo(locale);\n\n    let translations;\n    if (localeInfo) {\n        translations = state.views.i18n.translations[locale];\n    } else {\n        // Default to English if an unsupported locale is specified\n        translations = state.views.i18n.translations.en;\n    }\n\n    return translations;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {isMobile, localizeMessage} from 'utils/utils.jsx';\n\nexport default class SettingItemMin extends React.PureComponent {\n    static defaultProps = {\n        section: '',\n        focused: false,\n    };\n\n    static propTypes = {\n\n        /**\n         * Settings title\n         */\n        title: PropTypes.node,\n\n        /**\n         * Option to disable opening the setting\n         */\n        disableOpen: PropTypes.bool,\n\n        /**\n         * Indicates whether the focus should be on the \"Edit\" button\n         */\n        focused: PropTypes.bool,\n\n        /**\n         * Settings or tab section\n         */\n        section: PropTypes.string,\n\n        /**\n         * Function to update section\n         */\n        updateSection: PropTypes.func,\n\n        /**\n         * Settings description\n         */\n        describe: PropTypes.node,\n    };\n\n    componentDidMount() {\n        if (this.props.focused && this.edit) {\n            this.edit.focus();\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (nextProps.focused && this.edit) {\n            this.edit.focus();\n        }\n    }\n\n    getEdit = (node) => {\n        this.edit = node;\n    }\n\n    handleUpdateSection = (e) => {\n        e.preventDefault();\n        this.props.updateSection(this.props.section);\n    }\n\n    render() {\n        let editButton = null;\n        let describeSection = null;\n\n        if (!this.props.disableOpen && isMobile()) {\n            editButton = (\n                <li className='col-xs-12 col-sm-3 section-edit'>\n                    <button\n                        id={this.props.section + 'Edit'}\n                        className='color--link cursor--pointer style--none'\n                        onClick={this.handleUpdateSection}\n                        ref={this.getEdit}\n                    >\n                        <i\n                            className='fa fa-pencil'\n                            title={localizeMessage('generic_icons.edit', 'Edit Icon')}\n                        />\n                        {this.props.describe}\n                    </button>\n                </li>\n            );\n        } else if (!this.props.disableOpen) {\n            editButton = (\n                <li className='col-xs-12 col-sm-3 section-edit'>\n                    <button\n                        id={this.props.section + 'Edit'}\n                        className='color--link cursor--pointer style--none text-left'\n                        onClick={this.handleUpdateSection}\n                        ref={this.getEdit}\n                    >\n                        <i\n                            className='fa fa-pencil'\n                            title={localizeMessage('generic_icons.edit', 'Edit Icon')}\n                        />\n                        <FormattedMessage\n                            id='setting_item_min.edit'\n                            defaultMessage='Edit'\n                        />\n                    </button>\n                </li>\n            );\n\n            describeSection = (\n                <li\n                    id={this.props.section + 'Desc'}\n                    className='col-xs-12 section-describe'\n                >\n                    {this.props.describe}\n                </li>\n            );\n        }\n\n        return (\n            <ul\n                className='section-min'\n                onClick={this.handleUpdateSection}\n            >\n                <li\n                    id={this.props.section + 'Title'}\n                    className='col-xs-12 col-sm-9 section-title'\n                >\n                    {this.props.title}\n                </li>\n                {editButton}\n                {describeSection}\n            </ul>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {batchActions} from 'redux-batched-actions';\n\nimport {SearchTypes} from 'mattermost-redux/action_types';\nimport {searchPostsWithParams} from 'mattermost-redux/actions/search';\nimport * as PostActions from 'mattermost-redux/actions/posts';\nimport {Client4} from 'mattermost-redux/client';\nimport {getCurrentUserId, getCurrentUserMentionKeys} from 'mattermost-redux/selectors/entities/users';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentChannelId} from 'mattermost-redux/selectors/entities/channels';\nimport {getPost} from 'mattermost-redux/selectors/entities/posts';\nimport {getUserTimezone} from 'mattermost-redux/selectors/entities/timezone';\nimport {getUserCurrentTimezone} from 'mattermost-redux/utils/timezone_utils';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport {getSearchTerms, getRhsState} from 'selectors/rhs';\nimport {ActionTypes, RHSStates} from 'utils/constants';\nimport * as Utils from 'utils/utils';\n\nimport {getBrowserUtcOffset, getUtcOffsetForTimeZone} from 'utils/timezone';\n\nexport function updateRhsState(rhsState, channelId) {\n    return (dispatch, getState) => {\n        const action = {\n            type: ActionTypes.UPDATE_RHS_STATE,\n            state: rhsState,\n        };\n\n        if (rhsState === RHSStates.PIN) {\n            action.channelId = channelId || getCurrentChannelId(getState());\n        }\n\n        dispatch(action);\n    };\n}\n\nexport function selectPostFromRightHandSideSearch(post) {\n    return async (dispatch, getState) => {\n        await dispatch(PostActions.getPostThread(post.id));\n\n        dispatch({\n            type: ActionTypes.SELECT_POST,\n            postId: Utils.getRootId(post),\n            channelId: post.channel_id,\n            previousRhsState: getRhsState(getState()),\n        });\n    };\n}\n\nexport function selectPostFromRightHandSideSearchByPostId(postId) {\n    return async (dispatch, getState) => {\n        const post = getPost(getState(), postId);\n        return selectPostFromRightHandSideSearch(post)(dispatch, getState);\n    };\n}\n\nexport function updateSearchTerms(terms) {\n    return {\n        type: ActionTypes.UPDATE_RHS_SEARCH_TERMS,\n        terms,\n    };\n}\n\nexport function performSearch(terms, isMentionSearch) {\n    return (dispatch, getState) => {\n        const teamId = getCurrentTeamId(getState());\n        const config = getConfig(getState());\n        const viewArchivedChannels = config.ExperimentalViewArchivedChannels === 'true';\n\n        // timezone offset in seconds\n        const userId = getCurrentUserId(getState());\n        const userTimezone = getUserTimezone(getState(), userId);\n        const userCurrentTimezone = getUserCurrentTimezone(userTimezone);\n        const timezoneOffset = (userCurrentTimezone.length > 0 ? getUtcOffsetForTimeZone(userCurrentTimezone) : getBrowserUtcOffset()) * 60;\n        return dispatch(searchPostsWithParams(teamId, {terms, is_or_search: isMentionSearch, include_deleted_channels: viewArchivedChannels, time_zone_offset: timezoneOffset, page: 0, per_page: 20}, true));\n    };\n}\n\nexport function showSearchResults() {\n    return (dispatch, getState) => {\n        const searchTerms = getSearchTerms(getState());\n\n        dispatch(updateRhsState(RHSStates.SEARCH));\n        dispatch({\n            type: ActionTypes.UPDATE_RHS_SEARCH_RESULTS_TERMS,\n            terms: searchTerms,\n        });\n\n        return dispatch(performSearch(searchTerms));\n    };\n}\n\nfunction getSearchActions(result, teamId) {\n    return [\n        {\n            type: SearchTypes.RECEIVED_SEARCH_POSTS,\n            data: result,\n        },\n        {\n            type: SearchTypes.RECEIVED_SEARCH_TERM,\n            data: {\n                teamId,\n                terms: null,\n                isOrSearch: false,\n            },\n        },\n        {\n            type: SearchTypes.SEARCH_POSTS_SUCCESS,\n        },\n    ];\n}\n\nfunction getPreRHSSearchActions(searchPostRequest, terms, rhsState, channelId) {\n    const updateRHSState = {\n        type: ActionTypes.UPDATE_RHS_STATE,\n        state: rhsState,\n    };\n\n    if (channelId) {\n        updateRHSState.channelId = channelId;\n    }\n\n    return [\n        {\n            type: searchPostRequest,\n        },\n        {\n            type: ActionTypes.UPDATE_RHS_SEARCH_TERMS,\n            terms,\n        },\n        updateRHSState,\n    ];\n}\n\nfunction getPostRHSSearchActions(searchPostSuccess, result, teamId) {\n    const searchActions = getSearchActions(result, teamId);\n\n    return [...searchActions, {type: searchPostSuccess}];\n}\n\nexport function getFlaggedPosts() {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const userId = getCurrentUserId(state);\n        const teamId = getCurrentTeamId(state);\n\n        const result = await Client4.getFlaggedPosts(userId, '', teamId);\n\n        await PostActions.getProfilesAndStatusesForPosts(result.posts, dispatch, getState);\n\n        const searchActions = getSearchActions(result, teamId);\n\n        dispatch(batchActions(searchActions));\n    };\n}\n\nexport function showFlaggedPosts() {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const userId = getCurrentUserId(state);\n        const teamId = getCurrentTeamId(state);\n\n        const preRHSSearchActions = getPreRHSSearchActions(\n            ActionTypes.SEARCH_FLAGGED_POSTS_REQUEST,\n            '',\n            RHSStates.FLAG\n        );\n\n        dispatch(batchActions(preRHSSearchActions));\n\n        let result;\n        try {\n            result = await Client4.getFlaggedPosts(userId, '', teamId);\n        } catch (error) {\n            dispatch({type: ActionTypes.SEARCH_FLAGGED_POSTS_FAILURE, error});\n        }\n\n        await PostActions.getProfilesAndStatusesForPosts(result.posts, dispatch, getState);\n\n        const postRHSSearchActions = getPostRHSSearchActions(\n            ActionTypes.SEARCH_FLAGGED_POSTS_SUCCESS,\n            result,\n            teamId\n        );\n\n        dispatch(batchActions(postRHSSearchActions));\n    };\n}\n\nexport function getPinnedPosts(channelId) {\n    return async (dispatch, getState) => {\n        const currentChannelId = getCurrentChannelId(getState());\n        const result = await Client4.getPinnedPosts(channelId || currentChannelId);\n\n        await PostActions.getProfilesAndStatusesForPosts(result.posts, dispatch, getState);\n\n        const teamId = getCurrentTeamId(getState());\n        const searchActions = getSearchActions(result, teamId);\n\n        dispatch(batchActions(searchActions));\n    };\n}\n\nexport function showPinnedPosts(channelId) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const currentChannelId = getCurrentChannelId(state);\n\n        const preRHSSearchActions = getPreRHSSearchActions(\n            ActionTypes.SEARCH_PINNED_POSTS_REQUEST,\n            '',\n            RHSStates.PIN,\n            currentChannelId\n        );\n\n        dispatch(batchActions(preRHSSearchActions));\n\n        let result;\n        try {\n            result = await Client4.getPinnedPosts(channelId || currentChannelId);\n        } catch (error) {\n            dispatch({type: ActionTypes.SEARCH_PINNED_POSTS_FAILURE, error});\n        }\n\n        await PostActions.getProfilesAndStatusesForPosts(result.posts, dispatch, getState);\n\n        const teamId = getCurrentTeamId(state);\n\n        const postRHSSearchActions = getPostRHSSearchActions(\n            ActionTypes.SEARCH_PINNED_POSTS_SUCCESS,\n            result,\n            teamId\n        );\n\n        dispatch(batchActions(postRHSSearchActions));\n    };\n}\n\nexport function showMentions() {\n    return (dispatch, getState) => {\n        const termKeys = getCurrentUserMentionKeys(getState()).filter(({key}) => {\n            return key !== '@channel' && key !== '@all' && key !== '@here';\n        });\n\n        const terms = termKeys.map(({key}) => key).join(' ').trim() + ' ';\n\n        trackEvent('api', 'api_posts_search_mention');\n\n        dispatch(performSearch(terms, true));\n        dispatch(batchActions([\n            {\n                type: ActionTypes.UPDATE_RHS_SEARCH_TERMS,\n                terms,\n            },\n            {\n                type: ActionTypes.UPDATE_RHS_STATE,\n                state: RHSStates.MENTION,\n            },\n        ]));\n    };\n}\n\nexport function closeRightHandSide() {\n    return (dispatch) => {\n        dispatch(batchActions([\n            {\n                type: ActionTypes.UPDATE_RHS_STATE,\n                state: null,\n            },\n            {\n                type: ActionTypes.SELECT_POST,\n                postId: '',\n                channelId: '',\n            },\n        ]));\n    };\n}\n\nexport const toggleMenu = () => (dispatch) => dispatch({\n    type: ActionTypes.TOGGLE_RHS_MENU,\n});\n\nexport const openMenu = () => (dispatch) => dispatch({\n    type: ActionTypes.OPEN_RHS_MENU,\n});\n\nexport const closeMenu = () => (dispatch) => dispatch({\n    type: ActionTypes.CLOSE_RHS_MENU,\n});\n\nexport function setRhsExpanded(expanded) {\n    return {\n        type: ActionTypes.SET_RHS_EXPANDED,\n        expanded,\n    };\n}\n\nexport function toggleRhsExpanded() {\n    return {\n        type: ActionTypes.TOGGLE_RHS_EXPANDED,\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport EventEmitter from 'events';\n\nimport {TeamTypes} from 'mattermost-redux/action_types';\nimport * as Selectors from 'mattermost-redux/selectors/entities/teams';\n\nimport ChannelStore from 'stores/channel_store.jsx';\nimport store from 'stores/redux_store.jsx';\nimport UserStore from 'stores/user_store.jsx';\nimport Constants from 'utils/constants.jsx';\nimport {getSiteURL} from 'utils/url.jsx';\nimport AppDispatcher from '../dispatcher/app_dispatcher.jsx';\n\nconst NotificationPrefs = Constants.NotificationPrefs;\n\nconst ActionTypes = Constants.ActionTypes;\n\nconst CHANGE_EVENT = 'change';\nconst STATS_EVENT = 'stats';\nconst UNREAD_EVENT = 'unread';\n\nvar Utils;\n\nclass TeamStoreClass extends EventEmitter {\n    constructor() {\n        super();\n\n        this.entities = store.getState().entities.teams;\n\n        store.subscribe(() => {\n            const newEntities = store.getState().entities.teams;\n            const entities = this.entities;\n            this.entities = newEntities;\n\n            let doEmit = false;\n\n            if (newEntities.currentTeamId !== entities.currentTeamId) {\n                doEmit = true;\n            }\n\n            if (newEntities.teams !== entities.teams) {\n                doEmit = true;\n            }\n\n            if (newEntities.myMembers !== entities.myMembers) {\n                doEmit = true;\n                this.emitUnreadChange();\n            }\n\n            if (newEntities.membersInTeam !== entities.membersInTeam) {\n                doEmit = true;\n            }\n\n            if (newEntities.stats !== entities.stats) {\n                this.emitStatsChange();\n            }\n\n            if (doEmit) {\n                this.emitChange();\n            }\n        });\n    }\n\n    emitChange() {\n        this.emit(CHANGE_EVENT);\n    }\n\n    addChangeListener(callback) {\n        this.on(CHANGE_EVENT, callback);\n    }\n\n    removeChangeListener(callback) {\n        this.removeListener(CHANGE_EVENT, callback);\n    }\n\n    emitStatsChange() {\n        this.emit(STATS_EVENT);\n    }\n\n    addStatsChangeListener(callback) {\n        this.on(STATS_EVENT, callback);\n    }\n\n    removeStatsChangeListener(callback) {\n        this.removeListener(STATS_EVENT, callback);\n    }\n\n    emitUnreadChange() {\n        this.emit(UNREAD_EVENT);\n    }\n\n    addUnreadChangeListener(callback) {\n        this.on(UNREAD_EVENT, callback);\n    }\n\n    removeUnreadChangeListener(callback) {\n        this.removeListener(UNREAD_EVENT, callback);\n    }\n\n    get(id) {\n        var c = this.getAll();\n        return c[id];\n    }\n\n    getByName(name) {\n        const t = this.getAll();\n\n        for (const id in t) {\n            if (t.hasOwnProperty(id)) {\n                if (t[id].name === name) {\n                    return t[id];\n                }\n            }\n        }\n\n        return null;\n    }\n\n    getAll() {\n        const list = Selectors.getMyTeams(store.getState());\n        const teams = {};\n        list.forEach((t) => {\n            teams[t.id] = t;\n        });\n        return teams;\n    }\n\n    getCurrentId() {\n        return Selectors.getCurrentTeamId(store.getState());\n    }\n\n    setCurrentId(id) {\n        store.dispatch({\n            type: TeamTypes.SELECT_TEAM,\n            data: id,\n        });\n    }\n\n    getCurrent() {\n        const team = Selectors.getCurrentTeam(store.getState());\n\n        if (team) {\n            return team;\n        }\n\n        return null;\n    }\n\n    getCurrentTeamUrl() {\n        return this.getTeamUrl(this.getCurrentId());\n    }\n\n    getCurrentTeamRelativeUrl() {\n        return this.getTeamRelativeUrl(this.getCurrentId());\n    }\n\n    getCurrentInviteLink() {\n        const current = this.getCurrent();\n\n        if (current) {\n            return getSiteURL() + '/signup_user_complete/?id=' + current.invite_id;\n        }\n\n        return '';\n    }\n\n    getTeamRelativeUrl(id) {\n        const team = this.get(id);\n\n        if (!team) {\n            return '';\n        }\n\n        return '/' + team.name;\n    }\n\n    getTeamUrl(id) {\n        const team = this.get(id);\n\n        if (!team) {\n            return '';\n        }\n\n        return getSiteURL() + '/' + team.name;\n    }\n\n    getCurrentStats() {\n        return this.getStats(this.getCurrentId());\n    }\n\n    getStats(teamId) {\n        let stats;\n\n        if (teamId) {\n            stats = Selectors.getTeamStats(store.getState())[teamId];\n        }\n\n        if (stats) {\n            // create a defensive copy\n            stats = Object.assign({}, stats);\n        } else {\n            stats = {member_count: 0};\n        }\n\n        return stats;\n    }\n\n    saveTeam(team) {\n        const teams = {};\n        teams[team.id] = team;\n        this.saveTeams(teams);\n    }\n\n    saveTeams(teams) {\n        store.dispatch({\n            type: TeamTypes.RECEIVED_TEAMS,\n            data: teams,\n        });\n    }\n\n    updateTeam(team) {\n        const t = JSON.parse(team);\n        const teams = Object.assign({}, this.getAll(), this.getTeamListings());\n        if (teams && teams[t.id]) {\n            this.saveTeam(t);\n        }\n    }\n\n    saveMyTeam(team) {\n        this.saveTeam(team);\n        this.setCurrentId(team.id);\n    }\n\n    saveStats(teamId, stats) {\n        store.dispatch({\n            type: TeamTypes.RECEIVED_TEAM_STATS,\n            data: stats,\n        });\n    }\n\n    saveMyTeamMembers(members) {\n        store.dispatch({\n            type: TeamTypes.RECEIVED_MY_TEAM_MEMBERS,\n            data: members,\n        });\n    }\n\n    appendMyTeamMember(member) {\n        const members = this.getMyTeamMembers();\n        members.push(member);\n        this.saveMyTeamMembers(members);\n    }\n\n    saveMyTeamMembersUnread(members) {\n        const myMembers = this.getMyTeamMembers();\n        for (let i = 0; i < myMembers.length; i++) {\n            const team = myMembers[i];\n            const member = members.filter((m) => m.team_id === team.team_id)[0];\n\n            if (member) {\n                myMembers[i] = Object.assign({},\n                    team,\n                    {\n                        msg_count: member.msg_count,\n                        mention_count: member.mention_count,\n                    });\n            }\n        }\n\n        this.saveMyTeamMembers(myMembers);\n    }\n\n    removeMyTeamMember(teamId) {\n        const myMembers = this.getMyTeamMembers();\n        for (let i = 0; i < myMembers.length; i++) {\n            if (myMembers[i].team_id === teamId) {\n                myMembers.splice(i, 1);\n            }\n        }\n\n        this.saveMyTeamMembers(myMembers);\n    }\n\n    getMyTeamMembers() {\n        return Object.values(Selectors.getTeamMemberships(store.getState()));\n    }\n\n    saveMembersInTeam(members) {\n        store.dispatch({\n            type: TeamTypes.RECEIVED_MEMBERS_IN_TEAM,\n            data: Object.values(members),\n        });\n    }\n\n    removeMemberInTeam(teamId = this.getCurrentId(), userId) {\n        store.dispatch({\n            type: TeamTypes.REMOVE_MEMBER_FROM_TEAM,\n            data: {team_id: teamId, user_id: userId},\n        });\n    }\n\n    getMembersInTeam(teamId = this.getCurrentId()) {\n        return Selectors.getMembersInTeams(store.getState())[teamId] || {};\n    }\n\n    getMemberInTeam(teamId = this.getCurrentId(), userId) {\n        return Selectors.getTeamMember(store.getState(), teamId, userId);\n    }\n\n    hasActiveMemberInTeam(teamId = this.getCurrentId(), userId) {\n        if (this.getMemberInTeam(teamId, userId)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getTeamListings() {\n        return Selectors.getJoinableTeams(store.getState());\n    }\n\n    isTeamAdminForAnyTeam() {\n        if (!Utils) {\n            Utils = require('utils/utils.jsx'); //eslint-disable-line global-require\n        }\n\n        for (const teamMember of this.getMyTeamMembers()) {\n            if (Utils.isAdmin(teamMember.roles)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    isTeamAdmin(userId, teamId) {\n        if (!Utils) {\n            Utils = require('utils/utils.jsx'); //eslint-disable-line global-require\n        }\n\n        var teamMembers = this.getMyTeamMembers();\n        const teamMember = teamMembers.find((m) => m.user_id === userId && m.team_id === teamId);\n\n        if (teamMember) {\n            return Utils.isAdmin(teamMember.roles);\n        }\n\n        return false;\n    }\n\n    updateMyRoles(member) {\n        const teamMembers = this.getMyTeamMembers();\n        const teamMember = teamMembers.find((m) => m.user_id === member.user_id && m.team_id === member.team_id);\n\n        if (teamMember) {\n            const newMember = Object.assign({}, teamMember, {\n                roles: member.roles,\n            });\n\n            store.dispatch({\n                type: TeamTypes.RECEIVED_MY_TEAM_MEMBER,\n                data: newMember,\n            });\n        }\n    }\n\n    incrementMessages(id, channelId) {\n        const channelMember = ChannelStore.getMyMember(channelId);\n        if (channelMember && channelMember.notify_props && channelMember.notify_props.mark_unread === NotificationPrefs.MENTION) {\n            return;\n        }\n\n        const member = Object.assign({}, this.getMyTeamMembers().filter((m) => m.team_id === id)[0]);\n        member.msg_count++;\n\n        store.dispatch({\n            type: TeamTypes.RECEIVED_MY_TEAM_MEMBER,\n            data: member,\n        });\n    }\n\n    incrementMentionsIfNeeded(id, msgProps) {\n        let mentions = [];\n        if (msgProps && msgProps.mentions) {\n            mentions = JSON.parse(msgProps.mentions);\n        }\n\n        if (mentions.indexOf(UserStore.getCurrentId()) !== -1) {\n            const member = Object.assign({}, this.getMyTeamMembers().filter((m) => m.team_id === id)[0]);\n            member.mention_count++;\n\n            store.dispatch({\n                type: TeamTypes.RECEIVED_MY_TEAM_MEMBER,\n                data: member,\n            });\n        }\n    }\n}\n\nvar TeamStore = new TeamStoreClass();\n\nTeamStore.dispatchToken = AppDispatcher.register((payload) => {\n    var action = payload.action;\n\n    switch (action.type) {\n    case ActionTypes.RECEIVED_MY_TEAM:\n        TeamStore.saveMyTeam(action.team);\n        break;\n    case ActionTypes.RECEIVED_TEAM:\n        TeamStore.saveTeam(action.team);\n        break;\n    case ActionTypes.CREATED_TEAM:\n        TeamStore.saveTeam(action.team);\n        TeamStore.appendMyTeamMember(action.member);\n        break;\n    case ActionTypes.UPDATE_TEAM:\n        TeamStore.saveTeam(action.team);\n        break;\n    case ActionTypes.RECEIVED_ALL_TEAMS:\n        TeamStore.saveTeams(action.teams);\n        break;\n    case ActionTypes.RECEIVED_MY_TEAM_MEMBERS:\n        TeamStore.saveMyTeamMembers(action.team_members);\n        break;\n    case ActionTypes.RECEIVED_MY_TEAMS_UNREAD:\n        TeamStore.saveMyTeamMembersUnread(action.team_members);\n        break;\n    case ActionTypes.RECEIVED_ALL_TEAM_LISTINGS:\n        TeamStore.saveTeamListings(action.teams);\n        break;\n    case ActionTypes.RECEIVED_MEMBERS_IN_TEAM:\n        TeamStore.saveMembersInTeam(action.team_members);\n        break;\n    case ActionTypes.RECEIVED_TEAM_STATS:\n        TeamStore.saveStats(action.team_id, action.stats);\n        break;\n    default:\n    }\n});\n\nTeamStore.setMaxListeners(15);\n\nwindow.TeamStore = TeamStore;\nexport default TeamStore;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class Suggestion extends React.Component {\n    static get propTypes() {\n        return {\n            item: PropTypes.oneOfType([\n                PropTypes.object,\n                PropTypes.string,\n            ]).isRequired,\n            term: PropTypes.string.isRequired,\n            matchedPretext: PropTypes.string.isRequired,\n            isSelection: PropTypes.bool,\n            onClick: PropTypes.func,\n        };\n    }\n\n    static baseProps = {\n        role: 'button',\n        tabIndex: 0,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(e) {\n        e.preventDefault();\n\n        this.props.onClick(this.props.term, this.props.matchedPretext);\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport * as ChannelActions from 'mattermost-redux/actions/channels';\nimport {savePreferences} from 'mattermost-redux/actions/preferences';\nimport {getMyChannelMemberships} from 'mattermost-redux/selectors/entities/common';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport {loadNewDMIfNeeded, loadNewGMIfNeeded, loadProfilesForSidebar} from 'actions/user_actions.jsx';\nimport ChannelStore from 'stores/channel_store.jsx';\nimport PreferenceStore from 'stores/preference_store.jsx';\nimport store from 'stores/redux_store.jsx';\nimport TeamStore from 'stores/team_store.jsx';\nimport UserStore from 'stores/user_store.jsx';\nimport {Constants, Preferences} from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nconst dispatch = store.dispatch;\nconst getState = store.getState;\n\n// To be removed in a future PR\nexport async function openDirectChannelToUser(userId, success, error) {\n    const channelName = Utils.getDirectChannelName(UserStore.getCurrentId(), userId);\n    const channel = ChannelStore.getByName(channelName);\n\n    if (channel) {\n        trackEvent('api', 'api_channels_join_direct');\n        const now = Utils.getTimestamp();\n        PreferenceStore.setPreference(Preferences.CATEGORY_DIRECT_CHANNEL_SHOW, userId, 'true');\n        PreferenceStore.setPreference(Preferences.CATEGORY_CHANNEL_OPEN_TIME, channel.id, now.toString());\n        loadProfilesForSidebar();\n\n        const currentUserId = UserStore.getCurrentId();\n        savePreferences(currentUserId, [\n            {user_id: currentUserId, category: Preferences.CATEGORY_DIRECT_CHANNEL_SHOW, name: userId, value: 'true'},\n            {user_id: currentUserId, category: Preferences.CATEGORY_CHANNEL_OPEN_TIME, name: channel.id, value: now.toString()},\n        ])(dispatch, getState);\n\n        if (success) {\n            success(channel, true);\n        }\n\n        return;\n    }\n\n    const result = await ChannelActions.createDirectChannel(UserStore.getCurrentId(), userId)(dispatch, getState);\n    loadProfilesForSidebar();\n    if (result.data && success) {\n        success(result.data, false);\n    } else if (result.error && error) {\n        error({id: result.error.server_error_id, ...result.error});\n    }\n}\n\nexport async function openGroupChannelToUsers(userIds, success, error) {\n    const result = await ChannelActions.createGroupChannel(userIds)(dispatch, getState);\n    loadProfilesForSidebar();\n    if (result.data && success) {\n        success(result.data, false);\n    } else if (result.error && error) {\n        browserHistory.push(TeamStore.getCurrentTeamUrl());\n        error({id: result.error.server_error_id, ...result.error});\n    }\n}\n\nexport async function loadChannelsForCurrentUser() {\n    await ChannelActions.fetchMyChannelsAndMembers(TeamStore.getCurrentId())(dispatch, getState);\n    loadDMsAndGMsForUnreads();\n}\n\nexport function loadDMsAndGMsForUnreads() {\n    const unreads = ChannelStore.getUnreadCounts();\n    for (const id in unreads) {\n        if (!unreads.hasOwnProperty(id)) {\n            continue;\n        }\n\n        if (unreads[id].msgs > 0 || unreads[id].mentions > 0) {\n            const channel = ChannelStore.get(id);\n            if (channel && channel.type === Constants.DM_CHANNEL) {\n                loadNewDMIfNeeded(channel.id);\n            } else if (channel && channel.type === Constants.GM_CHANNEL) {\n                loadNewGMIfNeeded(channel.id);\n            }\n        }\n    }\n}\n\nexport async function searchMoreChannels(term, success, error) {\n    const teamId = TeamStore.getCurrentId();\n    if (!teamId) {\n        return;\n    }\n\n    const {data, error: err} = await ChannelActions.searchChannels(teamId, term)(dispatch, getState);\n    if (data && success) {\n        const myMembers = getMyChannelMemberships(getState());\n        const channels = data.filter((c) => !myMembers[c.id]);\n        success(channels);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function autocompleteChannels(term, success, error) {\n    const teamId = TeamStore.getCurrentId();\n    if (!teamId) {\n        return;\n    }\n\n    const {data, error: err} = await ChannelActions.autocompleteChannels(teamId, term)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function autocompleteChannelsForSearch(term, success, error) {\n    const teamId = TeamStore.getCurrentId();\n    if (!teamId) {\n        return;\n    }\n\n    const {data, error: err} = await ChannelActions.autocompleteChannelsForSearch(teamId, term)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function getChannelMembersForUserIds(channelId, userIds, success, error) {\n    const {data, error: err} = await ChannelActions.getChannelMembersByIds(channelId, userIds)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport function addUsersToChannel(channelId, userIds) {\n    return async (doDispatch) => {\n        try {\n            const requests = userIds.map((uId) => doDispatch(ChannelActions.addChannelMember(channelId, uId)));\n\n            return await Promise.all(requests);\n        } catch (error) {\n            return {error};\n        }\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport EventEmitter from 'events';\n\nimport {batchActions} from 'redux-batched-actions';\nimport {ChannelTypes} from 'mattermost-redux/action_types';\nimport * as Selectors from 'mattermost-redux/selectors/entities/channels';\nimport {getMyChannelMemberships} from 'mattermost-redux/selectors/entities/common';\nimport {getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport UserStore from 'stores/user_store.jsx';\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport store from 'stores/redux_store.jsx';\nimport TeamStore from 'stores/team_store.jsx';\nimport {ActionTypes, Constants} from 'utils/constants.jsx';\n\nvar ChannelUtils;\nvar Utils;\nconst NotificationPrefs = Constants.NotificationPrefs;\n\nconst CHANGE_EVENT = 'change';\nconst STATS_EVENT = 'stats';\nconst LAST_VIEWED_EVENT = 'last_viewed';\n\nclass ChannelStoreClass extends EventEmitter {\n    constructor(props) {\n        super(props);\n        this.setMaxListeners(600);\n        this.clear();\n\n        this.entities = store.getState().entities.channels;\n\n        store.subscribe(() => {\n            const newEntities = store.getState().entities.channels;\n            let doEmit = false;\n\n            const entities = this.entities;\n            this.entities = newEntities;\n\n            if (newEntities.currentChannelId !== entities.currentChannelId) {\n                doEmit = true;\n            }\n\n            if (newEntities.channels !== entities.channels) {\n                this.setUnreadCountsByChannels(Object.values(newEntities.channels));\n                doEmit = true;\n            }\n\n            if (newEntities.myMembers !== entities.myMembers) {\n                this.setUnreadCountsByMembers(Object.values(newEntities.myMembers));\n                this.emitLastViewed();\n                doEmit = true;\n            }\n\n            if (newEntities.membersInChannel !== entities.membersInChannel) {\n                doEmit = true;\n            }\n\n            if (newEntities.stats !== entities.stats) {\n                this.emitStatsChange();\n            }\n\n            if (doEmit) {\n                this.emitChange();\n            }\n        });\n    }\n\n    clear() {\n        this.postMode = this.POST_MODE_CHANNEL;\n        this.unreadCounts = {};\n    }\n\n    get POST_MODE_CHANNEL() {\n        return 1;\n    }\n\n    get POST_MODE_FOCUS() {\n        return 2;\n    }\n\n    emitChange() {\n        this.emit(CHANGE_EVENT);\n    }\n\n    addChangeListener(callback) {\n        this.on(CHANGE_EVENT, callback);\n    }\n\n    removeChangeListener(callback) {\n        this.removeListener(CHANGE_EVENT, callback);\n    }\n\n    emitStatsChange() {\n        this.emit(STATS_EVENT);\n    }\n\n    addStatsChangeListener(callback) {\n        this.on(STATS_EVENT, callback);\n    }\n\n    removeStatsChangeListener(callback) {\n        this.removeListener(STATS_EVENT, callback);\n    }\n\n    emitLastViewed() {\n        this.emit(LAST_VIEWED_EVENT);\n    }\n\n    addLastViewedListener(callback) {\n        this.on(LAST_VIEWED_EVENT, callback);\n    }\n\n    removeLastViewedListener(callback) {\n        this.removeListener(LAST_VIEWED_EVENT, callback);\n    }\n\n    findFirstBy(field, value) {\n        return this.doFindFirst(field, value, this.getChannels());\n    }\n\n    findFirstMoreBy(field, value) {\n        return this.doFindFirst(field, value, this.getMoreChannels());\n    }\n\n    doFindFirst(field, value, channels) {\n        for (var i = 0; i < channels.length; i++) {\n            if (channels[i][field] === value) {\n                return channels[i];\n            }\n        }\n\n        return null;\n    }\n\n    get(id) {\n        return this.findFirstBy('id', id);\n    }\n\n    getMyMember(id) {\n        return this.getMyMembers()[id];\n    }\n\n    getByName(name) {\n        return this.findFirstBy('name', name);\n    }\n\n    getByDisplayName(displayName) {\n        return this.findFirstBy('display_name', displayName);\n    }\n\n    getMoreByName(name) {\n        return this.findFirstMoreBy('name', name);\n    }\n\n    getAll() {\n        return this.getChannels();\n    }\n\n    getMoreAll() {\n        return this.getMoreChannels();\n    }\n\n    setCurrentId(id) {\n        store.dispatch(batchActions([{\n            type: ChannelTypes.SELECT_CHANNEL,\n            data: id,\n        }, {\n            type: ActionTypes.SELECT_CHANNEL_WITH_MEMBER,\n            data: id,\n            channel: this.getChannelById(id),\n            member: this.getMyMember(id),\n        }]));\n    }\n\n    resetCounts(ids) {\n        const membersToStore = [];\n        ids.forEach((id) => {\n            const member = this.getMyMember(id);\n            const channel = this.get(id);\n            if (member && channel) {\n                const memberToStore = {...member};\n                memberToStore.msg_count = channel.total_msg_count;\n                memberToStore.mention_count = 0;\n                membersToStore.push(memberToStore);\n                this.setUnreadCountByChannel(id);\n            }\n        });\n\n        if (membersToStore.length) {\n            this.storeMyChannelMembersList(membersToStore);\n        }\n    }\n\n    getCurrentId() {\n        return Selectors.getCurrentChannelId(store.getState());\n    }\n\n    getCurrent() {\n        var currentId = this.getCurrentId();\n\n        if (currentId) {\n            return this.get(currentId);\n        }\n\n        return null;\n    }\n\n    getCurrentMember() {\n        var currentId = this.getCurrentId();\n\n        if (currentId) {\n            return this.getMyMembers()[currentId];\n        }\n\n        return null;\n    }\n\n    getCurrentStats() {\n        return this.getStats(this.getCurrentId());\n    }\n\n    getStats(channelId) {\n        let stats;\n\n        if (channelId) {\n            stats = Selectors.getAllChannelStats(store.getState())[channelId];\n        }\n\n        if (stats) {\n            // create a defensive copy\n            stats = Object.assign({}, stats);\n        } else {\n            stats = {member_count: 0};\n        }\n\n        return stats;\n    }\n\n    storeChannel(channel) {\n        var channels = this.getChannels();\n        var found;\n\n        for (var i = 0; i < channels.length; i++) {\n            if (channels[i].id === channel.id) {\n                channels[i] = channel;\n                found = true;\n                break;\n            }\n        }\n\n        if (!found) {\n            channels.push(channel);\n        }\n\n        if (!ChannelUtils) {\n            ChannelUtils = require('utils/channel_utils.jsx'); //eslint-disable-line global-require\n        }\n\n        this.storeChannels(channels);\n    }\n\n    storeChannels(channels) {\n        store.dispatch({\n            type: ChannelTypes.RECEIVED_CHANNELS,\n            data: channels,\n            teamId: channels[0].team_id,\n        });\n    }\n\n    getChannels() {\n        return Selectors.getMyChannels(store.getState());\n    }\n\n    getChannelById(id) {\n        return this.get(id);\n    }\n\n    storeMyChannelMember(channelMember) {\n        store.dispatch({\n            type: ChannelTypes.RECEIVED_MY_CHANNEL_MEMBER,\n            data: channelMember,\n        });\n    }\n\n    storeMyChannelMembers(channelMembers) {\n        store.dispatch({\n            type: ChannelTypes.RECEIVED_MY_CHANNEL_MEMBERS,\n            data: Object.values(channelMembers),\n        });\n    }\n\n    storeMyChannelMembersList(channelMembers) {\n        store.dispatch({\n            type: ChannelTypes.RECEIVED_MY_CHANNEL_MEMBERS,\n            data: channelMembers,\n        });\n    }\n\n    getMyMembers() {\n        return getMyChannelMemberships(store.getState());\n    }\n\n    saveMembersInChannel(channelId, members) {\n        store.dispatch({\n            type: ChannelTypes.RECEIVED_CHANNEL_MEMBERS,\n            data: Object.values(members),\n        });\n    }\n\n    getMembersInChannel(channelId = this.getCurrentId()) {\n        return Selectors.getChannelMembersInChannels(store.getState())[channelId] || {};\n    }\n\n    hasActiveMemberInChannel(channelId = this.getCurrentId(), userId) {\n        const members = this.getMembersInChannel(channelId);\n        if (members && members[userId]) {\n            return true;\n        }\n\n        return false;\n    }\n\n    storeMoreChannels(channels, teamId = TeamStore.getCurrentId()) {\n        store.dispatch({\n            type: ChannelTypes.RECEIVED_CHANNELS,\n            data: channels,\n            teamId,\n        });\n    }\n\n    getMoreChannels() {\n        const channels = Selectors.getOtherChannels(store.getState());\n        const channelMap = {};\n        channels.forEach((c) => {\n            channelMap[c.id] = c;\n        });\n        return channelMap;\n    }\n\n    getMoreChannelsList() {\n        return Selectors.getOtherChannels(store.getState());\n    }\n\n    isDefault(channel) {\n        return channel.name === Constants.DEFAULT_CHANNEL;\n    }\n\n    setPostMode(mode) {\n        this.postMode = mode;\n    }\n\n    getPostMode() {\n        return this.postMode;\n    }\n\n    setUnreadCountsByMembers(members) {\n        members.forEach((m) => {\n            this.setUnreadCountByChannel(m.channel_id);\n        });\n    }\n\n    setUnreadCountsByCurrentMembers() {\n        Object.keys(this.getMyMembers()).forEach((key) => {\n            this.setUnreadCountByChannel(this.getMyMember(key).channel_id);\n        });\n    }\n\n    setUnreadCountsByChannels(channels) {\n        channels.forEach((c) => {\n            this.setUnreadCountByChannel(c.id);\n        });\n    }\n\n    setUnreadCountByChannel(id) {\n        const ch = this.get(id);\n        const chMember = this.getMyMember(id);\n\n        if (ch == null || chMember == null) {\n            return;\n        }\n\n        const chMentionCount = chMember.mention_count;\n        let chUnreadCount = ch.total_msg_count - chMember.msg_count;\n\n        if (chMember.notify_props && chMember.notify_props.mark_unread === NotificationPrefs.MENTION) {\n            chUnreadCount = 0;\n        }\n\n        this.unreadCounts[id] = {msgs: chUnreadCount, mentions: chMentionCount};\n    }\n\n    getUnreadCount(id) {\n        return this.unreadCounts[id] || {msgs: 0, mentions: 0};\n    }\n\n    getUnreadCounts() {\n        return this.unreadCounts;\n    }\n\n    getChannelNamesMap() {\n        var channelNamesMap = {};\n\n        var channels = this.getChannels();\n        for (var key in channels) {\n            if (channels.hasOwnProperty(key)) {\n                var channel = channels[key];\n                channelNamesMap[channel.name] = channel;\n            }\n        }\n\n        var moreChannels = this.getMoreChannels();\n        for (var moreKey in moreChannels) {\n            if (moreChannels.hasOwnProperty(moreKey)) {\n                var moreChannel = moreChannels[moreKey];\n                channelNamesMap[moreChannel.name] = moreChannel;\n            }\n        }\n\n        return channelNamesMap;\n    }\n\n    isChannelAdminForCurrentChannel() {\n        if (!Utils) {\n            Utils = require('utils/utils.jsx'); //eslint-disable-line global-require\n        }\n\n        const member = this.getMyMember(this.getCurrentId());\n\n        if (!member) {\n            return false;\n        }\n\n        const isLicensed = getLicense(store.getState()).IsLicensed === 'true';\n\n        return Utils.isChannelAdmin(isLicensed, member.roles);\n    }\n\n    isChannelAdmin(userId, channelId) {\n        if (!Utils) {\n            Utils = require('utils/utils.jsx'); //eslint-disable-line global-require\n        }\n\n        const channelMembers = this.getMembersInChannel(channelId);\n        const channelMember = channelMembers[userId];\n\n        if (channelMember) {\n            const isLicensed = getLicense(store.getState()).IsLicensed === 'true';\n            return Utils.isChannelAdmin(isLicensed, channelMember.roles);\n        }\n\n        return false;\n    }\n\n    incrementMessages(id, markRead = false) {\n        if (!this.unreadCounts[id]) {\n            // Should never happen\n            console.log(`Missing channel_id=${id} in unreads object`); //eslint-disable-line no-console\n        }\n\n        const member = this.getMyMember(id);\n        if (member && member.notify_props && member.notify_props.mark_unread === NotificationPrefs.MENTION) {\n            return;\n        }\n\n        const channel = {...this.get(id)};\n        channel.total_msg_count++;\n\n        const actions = [];\n        if (markRead) {\n            actions.push({\n                type: ChannelTypes.RECEIVED_MY_CHANNEL_MEMBER,\n                data: {...member, msg_count: channel.total_msg_count},\n            });\n        }\n\n        actions.push(\n            {\n                type: ChannelTypes.RECEIVED_CHANNEL,\n                data: channel,\n            }\n        );\n        store.dispatch(batchActions(actions));\n    }\n\n    incrementMentionsIfNeeded(id, msgProps) {\n        let mentions = [];\n        if (msgProps && msgProps.mentions) {\n            mentions = JSON.parse(msgProps.mentions);\n        }\n\n        if (!this.unreadCounts[id]) {\n            // Should never happen\n            console.log(`Missing channel_id=${id} in unreads object`); //eslint-disable-line no-console\n        }\n\n        if (mentions.indexOf(UserStore.getCurrentId()) !== -1) {\n            const member = {...this.getMyMember(id)};\n            member.mention_count++;\n            store.dispatch({\n                type: ChannelTypes.RECEIVED_MY_CHANNEL_MEMBER,\n                data: member,\n            });\n        }\n    }\n}\n\nvar ChannelStore = new ChannelStoreClass();\n\nChannelStore.dispatchToken = AppDispatcher.register((payload) => {\n    var action = payload.action;\n\n    switch (action.type) {\n    case ActionTypes.CLICK_CHANNEL:\n        ChannelStore.setCurrentId(action.id);\n        ChannelStore.setPostMode(ChannelStore.POST_MODE_CHANNEL);\n        break;\n\n    case ActionTypes.RECEIVED_FOCUSED_POST: {\n        const post = action.post_list.posts[action.postId];\n        ChannelStore.setCurrentId(post.channel_id);\n        ChannelStore.setPostMode(ChannelStore.POST_MODE_FOCUS);\n        ChannelStore.emitChange();\n        break;\n    }\n\n    case ActionTypes.RECEIVED_CHANNELS:\n        ChannelStore.storeChannels(action.channels);\n        break;\n\n    case ActionTypes.RECEIVED_CHANNEL:\n        ChannelStore.storeChannel(action.channel);\n        if (action.member) {\n            ChannelStore.storeMyChannelMember(action.member);\n        }\n        break;\n\n    case ActionTypes.RECEIVED_MY_CHANNEL_MEMBERS:\n        ChannelStore.storeMyChannelMembersList(action.members);\n        break;\n    case ActionTypes.RECEIVED_CHANNEL_MEMBER:\n        ChannelStore.storeMyChannelMember(action.member);\n        break;\n    case ActionTypes.RECEIVED_MORE_CHANNELS:\n        ChannelStore.storeMoreChannels(action.channels);\n        break;\n    case ActionTypes.RECEIVED_MEMBERS_IN_CHANNEL:\n        ChannelStore.saveMembersInChannel(action.channel_members);\n        break;\n    case ActionTypes.RECEIVED_CHANNEL_STATS:\n        store.dispatch({\n            type: ChannelTypes.RECEIVED_CHANNEL_STATS,\n            data: action.stats,\n        });\n        break;\n\n    case ActionTypes.CREATE_POST:\n        ChannelStore.incrementMessages(action.post.channel_id, true);\n        break;\n\n    case ActionTypes.CREATE_COMMENT:\n        ChannelStore.incrementMessages(action.post.channel_id, true);\n        break;\n\n    default:\n        break;\n    }\n});\n\nglobal.channelstore = ChannelStore;\n\nexport default ChannelStore;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class TeamPermissionGate extends React.Component {\n    static defaultProps = {\n        invert: false,\n    }\n\n    static propTypes = {\n\n        /**\n         * Team to check the permission\n         */\n        teamId: PropTypes.string,\n\n        /**\n         * Permissions enough to pass the gate (binary OR)\n         */\n        permissions: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n        /**\n         * Has permission\n         */\n        hasPermission: PropTypes.bool.isRequired,\n\n        /**\n         * Invert the permission (used for else)\n         */\n        invert: PropTypes.bool.isRequired,\n\n        /**\n         * Content protected by the permissions gate\n         */\n        children: PropTypes.node.isRequired,\n    };\n\n    render() {\n        if (this.props.hasPermission && !this.props.invert) {\n            return this.props.children;\n        }\n        if (!this.props.hasPermission && this.props.invert) {\n            return this.props.children;\n        }\n        return null;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\n\nimport TeamPermissionGate from './team_permission_gate.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    if (!ownProps.teamId) {\n        return {hasPermission: false};\n    }\n\n    for (const permission of ownProps.permissions) {\n        if (haveITeamPermission(state, {team: ownProps.teamId, permission})) {\n            return {hasPermission: true};\n        }\n    }\n\n    return {hasPermission: false};\n}\n\nexport default connect(mapStateToProps)(TeamPermissionGate);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport EventEmitter from 'events';\n\nimport BrowserStore from 'stores/browser_store.jsx';\nimport Constants from 'utils/constants.jsx';\nimport AppDispatcher from '../dispatcher/app_dispatcher.jsx';\n\nconst ActionTypes = Constants.ActionTypes;\n\nconst CHANGE_EVENT = 'change';\n\nclass ErrorStoreClass extends EventEmitter {\n    constructor() {\n        super();\n\n        this.emitChange = this.emitChange.bind(this);\n        this.addChangeListener = this.addChangeListener.bind(this);\n        this.removeChangeListener = this.removeChangeListener.bind(this);\n        this.getLastError = this.getLastError.bind(this);\n        this.storeLastError = this.storeLastError.bind(this);\n        this.getIgnoreNotification = this.getIgnoreNotification.bind(this);\n        this.ignore_notification = false;\n    }\n\n    getIgnoreNotification() {\n        return this.ignore_notification;\n    }\n\n    emitChange() {\n        this.emit(CHANGE_EVENT);\n    }\n\n    addChangeListener(callback) {\n        this.on(CHANGE_EVENT, callback);\n    }\n\n    removeChangeListener(callback) {\n        this.removeListener(CHANGE_EVENT, callback);\n    }\n\n    getLastError() {\n        return BrowserStore.getGlobalItem('last_error');\n    }\n\n    storeLastError(error) {\n        BrowserStore.setGlobalItem('last_error', error);\n    }\n\n    getConnectionErrorCount() {\n        var count = BrowserStore.getGlobalItem('last_error_conn');\n\n        if (count == null) {\n            return 0;\n        }\n\n        return count;\n    }\n\n    setConnectionErrorCount(count) {\n        BrowserStore.setGlobalItem('last_error_conn', count);\n    }\n\n    clearError(message) {\n        const lastError = this.getLastError();\n\n        if (lastError && lastError.message === message) {\n            this.clearLastError(true);\n        }\n    }\n\n    clearLastError(force) {\n        var lastError = this.getLastError();\n\n        // preview message can only be cleared by clearNotificationError\n        if (!force && lastError && lastError.notification) {\n            return;\n        }\n\n        BrowserStore.removeGlobalItem('last_error');\n        BrowserStore.removeGlobalItem('last_error_conn');\n        if (lastError) {\n            this.emitChange();\n        }\n    }\n\n    clearNotificationError() {\n        this.ignore_notification = true;\n        this.storeLastError('');\n        this.clearLastError();\n    }\n}\n\nvar ErrorStore = new ErrorStoreClass();\n\nErrorStore.dispatchToken = AppDispatcher.register((payload) => {\n    var action = payload.action;\n    switch (action.type) {\n    case ActionTypes.RECEIVED_ERROR:\n        ErrorStore.storeLastError(action.err);\n        ErrorStore.emitChange();\n        break;\n\n    default:\n    }\n});\n\nexport default ErrorStore;\nwindow.ErrorStore = ErrorStore;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {ActionTypes} from 'utils/constants';\n\nexport function openModal(modalData) {\n    return (dispatch) => {\n        const action = {\n            type: ActionTypes.MODAL_OPEN,\n            modalId: modalData.modalId,\n            dialogProps: modalData.dialogProps,\n            dialogType: modalData.dialogType,\n        };\n\n        dispatch(action);\n    };\n}\n\nexport function closeModal(modalId) {\n    return (dispatch) => {\n        const action = {\n            type: ActionTypes.MODAL_CLOSE,\n            modalId,\n        };\n\n        dispatch(action);\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nexport default class Provider {\n    constructor() {\n        this.latestPrefix = '';\n        this.latestComplete = true;\n        this.disableDispatches = false;\n        this.requestStarted = false;\n    }\n\n    handlePretextChanged(suggestionId, pretext) { // eslint-disable-line no-unused-vars\n        // NO-OP for inherited classes to override\n    }\n\n    resetRequest() {\n        this.requestStarted = false;\n    }\n\n    startNewRequest(suggestionId, prefix) {\n        this.latestPrefix = prefix;\n        this.latestComplete = false;\n        this.requestStarted = true;\n    }\n\n    shouldCancelDispatch(prefix) {\n        if (this.disableDispatches) {\n            return true;\n        }\n\n        if (!this.requestStarted) {\n            return true;\n        }\n\n        if (prefix === this.latestPrefix) {\n            this.latestComplete = true;\n        } else if (this.latestComplete) {\n            return true;\n        }\n\n        return false;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {TeamTypes} from 'mattermost-redux/action_types';\nimport {viewChannel, getChannelStats} from 'mattermost-redux/actions/channels';\nimport * as TeamActions from 'mattermost-redux/actions/teams';\nimport {getCurrentChannelId} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {getUser} from 'mattermost-redux/actions/users';\nimport {Client4} from 'mattermost-redux/client';\n\nimport {browserHistory} from 'utils/browser_history';\nimport store from 'stores/redux_store.jsx';\n\nconst dispatch = store.dispatch;\nconst getState = store.getState;\n\nexport async function removeUserFromTeam(teamId, userId, success, error) {\n    const {data, error: err} = await dispatch(TeamActions.removeUserFromTeam(teamId, userId));\n    dispatch(getUser(userId));\n    dispatch(TeamActions.getTeamStats(teamId));\n    dispatch(getChannelStats(getCurrentChannelId(getState())));\n\n    if (data && success) {\n        success();\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport function addUserToTeamFromInvite(token, inviteId, success, error) {\n    Client4.addToTeamFromInvite(token, inviteId).then(\n        async (member) => {\n            const {data: team} = await TeamActions.getTeam(member.team_id)(dispatch, getState);\n            dispatch({\n                type: TeamTypes.RECEIVED_MY_TEAM_MEMBER,\n                data: {\n                    ...member,\n                    delete_at: 0,\n                    msg_count: 0,\n                    mention_count: 0,\n                },\n            });\n\n            if (success) {\n                success(team);\n            }\n        }\n    ).catch(\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport function addUsersToTeam(teamId, userIds) {\n    return async (doDispatch, doGetState) => {\n        const {data, error} = await doDispatch(TeamActions.addUsersToTeam(teamId, userIds));\n\n        if (error) {\n            return {error};\n        }\n\n        doDispatch(getChannelStats(doGetState().entities.channels.currentChannelId));\n\n        return {data};\n    };\n}\n\nexport function getInviteInfo(inviteId, success, error) {\n    Client4.getTeamInviteInfo(inviteId).then(\n        (inviteData) => {\n            if (success) {\n                success(inviteData);\n            }\n        }\n    ).catch(\n        (err) => {\n            if (error) {\n                error(err);\n            }\n        }\n    );\n}\n\nexport async function inviteMembers(data, success, error) {\n    if (!data.invites) {\n        success();\n    }\n    const emails = [];\n    data.invites.forEach((i) => {\n        emails.push(i.email);\n    });\n    const {data: result, error: err} = await dispatch(TeamActions.sendEmailInvitesToTeam(getCurrentTeamId(getState()), emails));\n    if (result && success) {\n        success();\n    } else if (result == null && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport function switchTeams(url) {\n    dispatch(viewChannel(getCurrentChannelId(getState())));\n    browserHistory.push(url);\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class SaveButton extends React.PureComponent {\n    static propTypes = {\n        saving: PropTypes.bool.isRequired,\n        disabled: PropTypes.bool,\n        savingMessage: PropTypes.node,\n        defaultMessage: PropTypes.node,\n        btnClass: PropTypes.string,\n        extraClasses: PropTypes.string,\n    }\n\n    static defaultProps = {\n        disabled: false,\n        savingMessage: localizeMessage('save_button.saving', 'Saving'),\n        defaultMessage: localizeMessage('save_button.save', 'Save'),\n        btnClass: 'btn-primary',\n        extraClasses: '',\n    }\n\n    render() {\n        const {saving, disabled, savingMessage, defaultMessage, btnClass, extraClasses, ...props} = this.props; // eslint-disable-line no-use-before-define\n\n        let contents;\n        if (saving) {\n            contents = (\n                <span>\n                    <span\n                        className='fa fa-spinner icon--rotate'\n                        title={localizeMessage('generic_icons.loading', 'Loading Icon')}\n                    />\n                    {savingMessage}\n                </span>\n            );\n        } else {\n            contents = defaultMessage;\n        }\n\n        let className = 'save-button btn';\n        if (!disabled || saving) {\n            className += ' ' + btnClass;\n        }\n\n        if (extraClasses) {\n            className += ' ' + extraClasses;\n        }\n\n        return (\n            <button\n                type='submit'\n                id='saveSetting'\n                className={className}\n                disabled={disabled}\n                {...props}\n            >\n                {contents}\n            </button>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class Pluggable extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Should be a single overridable React component. One of this or pluggableName is required\n         */\n        children: PropTypes.element,\n\n        /*\n         * Override the component to be plugged. One of this or children is required\n         */\n        pluggableName: PropTypes.string,\n\n        /*\n         * Components for overriding provided by plugins\n         */\n        components: PropTypes.object.isRequired,\n\n        /*\n         * Logged in user's theme\n         */\n        theme: PropTypes.object.isRequired,\n    }\n\n    render() {\n        const pluggableName = this.props.pluggableName;\n\n        let child;\n        if (this.props.children) {\n            child = React.Children.only(this.props.children).type;\n        } else if (!pluggableName) {\n            return null;\n        }\n\n        const components = this.props.components;\n        const childrenProps = child ? this.props.children.props : {};\n        const componentName = pluggableName || child.getComponentName();\n\n        // Include any props passed to this component or to the child component\n        let props = {...this.props};\n        Reflect.deleteProperty(props, 'children');\n        Reflect.deleteProperty(props, 'components');\n        Reflect.deleteProperty(props, 'pluggableName');\n        props = {...props, ...childrenProps};\n\n        // Override the default component with any registered plugin's component\n        if (components.hasOwnProperty(componentName)) {\n            const pluginComponents = components[componentName];\n            const content = pluginComponents.map((p) => {\n                const PluginComponent = p.component;\n                return (\n                    <PluginComponent\n                        {...props}\n                        theme={this.props.theme}\n                        key={componentName + p.id}\n                    />\n                );\n            });\n\n            return (\n                <React.Fragment>\n                    {content}\n                </React.Fragment>\n            );\n        }\n\n        if (child == null) {\n            return null;\n        }\n\n        return React.cloneElement(this.props.children, {...props});\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getTheme} from 'mattermost-redux/selectors/entities/preferences';\n\nimport Pluggable from './pluggable.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        components: state.plugins.components,\n        theme: getTheme(state),\n    };\n}\n\nexport default connect(mapStateToProps)(Pluggable);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {getStatusesByIds} from 'mattermost-redux/actions/users';\nimport {getCurrentChannelId} from 'mattermost-redux/selectors/entities/channels';\nimport {getPostsInCurrentChannel} from 'mattermost-redux/selectors/entities/posts';\nimport {getDirectShowPreferences} from 'mattermost-redux/selectors/entities/preferences';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\n\nimport store from 'stores/redux_store.jsx';\nimport {Constants} from 'utils/constants.jsx';\n\nexport function loadStatusesForChannelAndSidebar() {\n    return (dispatch, getState) => {\n        const state = getState();\n        const statusesToLoad = {};\n\n        const channelId = getCurrentChannelId(state);\n        const postsInChannel = getPostsInCurrentChannel(state);\n        const posts = postsInChannel.slice(0, state.views.channel.postVisibility[channelId] || 0);\n        for (const post of posts) {\n            if (post.user_id) {\n                statusesToLoad[post.user_id] = true;\n            }\n        }\n\n        const dmPrefs = getDirectShowPreferences(state);\n\n        for (const pref of dmPrefs) {\n            if (pref.value === 'true') {\n                statusesToLoad[pref.name] = true;\n            }\n        }\n\n        const currentUserId = getCurrentUserId(state);\n        statusesToLoad[currentUserId] = true;\n\n        dispatch(loadStatusesByIds(Object.keys(statusesToLoad)));\n    };\n}\n\nexport function loadStatusesForProfilesList(users) {\n    return (dispatch) => {\n        if (users == null) {\n            return;\n        }\n\n        const statusesToLoad = [];\n        for (let i = 0; i < users.length; i++) {\n            statusesToLoad.push(users[i].id);\n        }\n\n        dispatch(loadStatusesByIds(statusesToLoad));\n    };\n}\n\nexport function loadStatusesForProfilesMap(users) {\n    return (dispatch) => {\n        if (users == null) {\n            return;\n        }\n\n        const statusesToLoad = [];\n        for (const userId in users) {\n            if ({}.hasOwnProperty.call(users, userId)) {\n                statusesToLoad.push(userId);\n            }\n        }\n\n        dispatch(loadStatusesByIds(statusesToLoad));\n    };\n}\n\nexport function loadStatusesByIds(userIds) {\n    return (dispatch) => {\n        if (userIds.length === 0) {\n            return;\n        }\n\n        dispatch(getStatusesByIds(userIds));\n    };\n}\n\nlet intervalId = '';\n\nexport function startPeriodicStatusUpdates() {\n    clearInterval(intervalId);\n\n    intervalId = setInterval(\n        () => {\n            store.dispatch(loadStatusesForChannelAndSidebar());\n        },\n        Constants.STATUS_INTERVAL\n    );\n}\n\nexport function stopPeriodicStatusUpdates() {\n    clearInterval(intervalId);\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {browserHistory} from 'utils/browser_history';\nimport * as Selectors from 'selectors/storage';\nimport * as Actions from 'actions/storage';\nimport store from 'stores/redux_store.jsx';\nimport {ErrorPageTypes, StoragePrefixes} from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nconst dispatch = store.dispatch;\nconst getState = store.getState;\n\nclass BrowserStoreClass {\n    setItem(name, value) {\n        dispatch(Actions.setItem(name, value));\n    }\n\n    getItem(name, defaultValue) {\n        return Selectors.makeGetItem(name, defaultValue)(getState());\n    }\n\n    removeItem(name) {\n        dispatch(Actions.removeItem(name));\n    }\n\n    setGlobalItem(name, value) {\n        dispatch(Actions.setGlobalItem(name, value));\n    }\n\n    getGlobalItem(name, defaultValue = null) {\n        return Selectors.makeGetGlobalItem(name, defaultValue)(getState());\n    }\n\n    removeGlobalItem(name) {\n        dispatch(Actions.removeGlobalItem(name));\n    }\n\n    signalLogout() {\n        if (this.isLocalStorageSupported()) {\n            // PLT-1285 store an identifier in session storage so we can catch if the logout came from this tab on IE11\n            const logoutId = Utils.generateId();\n\n            Utils.removePrefixFromLocalStorage(StoragePrefixes.ANNOUNCEMENT);\n\n            sessionStorage.setItem(StoragePrefixes.LOGOUT, logoutId);\n            localStorage.setItem(StoragePrefixes.LOGOUT, logoutId);\n            localStorage.removeItem(StoragePrefixes.LOGOUT);\n        }\n    }\n\n    isSignallingLogout(logoutId) {\n        return logoutId === sessionStorage.getItem(StoragePrefixes.LOGOUT);\n    }\n\n    signalLogin() {\n        if (this.isLocalStorageSupported()) {\n            // PLT-1285 store an identifier in session storage so we can catch if the logout came from this tab on IE11\n            const loginId = Utils.generateId();\n\n            sessionStorage.setItem(StoragePrefixes.LOGIN, loginId);\n            localStorage.setItem(StoragePrefixes.LOGIN, loginId);\n            localStorage.removeItem(StoragePrefixes.LOGIN);\n        }\n    }\n\n    isSignallingLogin(loginId) {\n        return loginId === sessionStorage.getItem(StoragePrefixes.LOGIN);\n    }\n\n    clear(options) {\n        dispatch(Actions.clear(options));\n    }\n\n    isLocalStorageSupported() {\n        if (this.hasCheckedLocalStorage) {\n            return this.localStorageSupported;\n        }\n\n        this.localStorageSupported = false;\n\n        try {\n            localStorage.setItem('__testLocal__', '1');\n            if (localStorage.getItem('__testLocal__') === '1') {\n                this.localStorageSupported = true;\n            }\n            localStorage.removeItem('__testLocal__', '1');\n        } catch (e) {\n            this.localStorageSupported = false;\n        }\n\n        try {\n            sessionStorage.setItem('__testSession__', '1');\n            sessionStorage.removeItem('__testSession__');\n        } catch (e) {\n            // Session storage not usable, website is unusable\n            browserHistory.push('/error?type=' + ErrorPageTypes.LOCAL_STORAGE);\n        }\n\n        this.hasCheckedLocalStorage = true;\n\n        return this.localStorageSupported;\n    }\n\n    hasSeenLandingPage() {\n        return localStorage.getItem(StoragePrefixes.LANDING_PAGE_SEEN);\n    }\n\n    setLandingPageSeen(landingPageSeen) {\n        localStorage.setItem(StoragePrefixes.LANDING_PAGE_SEEN, landingPageSeen);\n    }\n}\n\nvar BrowserStore = new BrowserStoreClass();\nexport default BrowserStore;\n","module.exports = __webpack_public_path__ + \"files/1171271cb71e89919600b8c3ae1774cb.gif\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {OverlayTrigger} from 'react-bootstrap';\n\nimport Pluggable from 'plugins/pluggable';\n\nimport ProfilePopover from 'components/profile_popover';\nimport StatusIcon from 'components/status_icon';\n\nexport default class ProfilePicture extends React.PureComponent {\n    static defaultProps = {\n        width: '36',\n        height: '36',\n        isRHS: false,\n        hasMention: false,\n    };\n\n    static propTypes = {\n        src: PropTypes.string.isRequired,\n        status: PropTypes.string,\n        width: PropTypes.string,\n        height: PropTypes.string,\n        user: PropTypes.object,\n        isBusy: PropTypes.bool,\n        isRHS: PropTypes.bool,\n        hasMention: PropTypes.bool,\n    };\n\n    hideProfilePopover = () => {\n        this.refs.overlay.hide();\n    }\n\n    render() {\n        if (this.props.user) {\n            return (\n                <OverlayTrigger\n                    ref='overlay'\n                    trigger='click'\n                    placement='right'\n                    rootClose={true}\n                    overlay={\n                        <Pluggable>\n                            <ProfilePopover\n                                user={this.props.user}\n                                src={this.props.src}\n                                status={this.props.status}\n                                isBusy={this.props.isBusy}\n                                hide={this.hideProfilePopover}\n                                isRHS={this.props.isRHS}\n                                hasMention={this.props.hasMention}\n                            />\n                        </Pluggable>\n                    }\n                >\n                    <span className='status-wrapper'>\n                        <img\n                            className='more-modal__image'\n                            alt={`${this.props.user.username || 'user'} profile image`}\n                            width={this.props.width}\n                            height={this.props.width}\n                            src={this.props.src}\n                        />\n                        <StatusIcon status={this.props.status}/>\n                    </span>\n                </OverlayTrigger>\n            );\n        }\n        return (\n            <span className='status-wrapper'>\n                <img\n                    className='more-modal__image'\n                    alt={'user profile image'}\n                    width={this.props.width}\n                    height={this.props.width}\n                    src={this.props.src}\n                />\n                <StatusIcon status={this.props.status}/>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport store from 'stores/redux_store.jsx';\n\nconst LICENSE_EXPIRY_NOTIFICATION = 1000 * 60 * 60 * 24 * 60; // 60 days\nconst LICENSE_GRACE_PERIOD = 1000 * 60 * 60 * 24 * 15; // 15 days\n\nexport function isLicenseExpiring() {\n    const license = getLicense(store.getState());\n    if (license.IsLicensed !== 'true') {\n        return false;\n    }\n\n    const timeDiff = parseInt(license.ExpiresAt, 10) - Date.now();\n    return timeDiff <= LICENSE_EXPIRY_NOTIFICATION;\n}\n\nexport function isLicenseExpired() {\n    const license = getLicense(store.getState());\n    if (license.IsLicensed !== 'true') {\n        return false;\n    }\n\n    const timeDiff = parseInt(license.ExpiresAt, 10) - Date.now();\n    return timeDiff < 0;\n}\n\nexport function isLicensePastGracePeriod() {\n    const license = getLicense(store.getState());\n    if (license.IsLicensed !== 'true') {\n        return false;\n    }\n\n    const timeDiff = Date.now() - parseInt(license.ExpiresAt, 10);\n    return timeDiff > LICENSE_GRACE_PERIOD;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport * as AdminActions from 'actions/admin_actions.jsx';\nimport AnalyticsStore from 'stores/analytics_store.jsx';\nimport ErrorStore from 'stores/error_store.jsx';\n\nimport {AnnouncementBarTypes, AnnouncementBarMessages, StatTypes, StoragePrefixes} from 'utils/constants.jsx';\nimport {isLicenseExpired, isLicenseExpiring, isLicensePastGracePeriod} from 'utils/license_utils.jsx';\nimport * as TextFormatting from 'utils/text_formatting.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nconst RENEWAL_LINK = 'https://licensing.mattermost.com/renew';\n\nexport default class AnnouncementBar extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Set if the user is logged in\n         */\n        isLoggedIn: PropTypes.bool.isRequired,\n\n        /*\n         * Set if the user can view system errors\n         */\n        canViewSystemErrors: PropTypes.bool.isRequired,\n        canViewAPIv3Banner: PropTypes.bool.isRequired,\n        license: PropTypes.object,\n        siteURL: PropTypes.string,\n        sendEmailNotifications: PropTypes.bool.isRequired,\n        bannerText: PropTypes.string,\n        allowBannerDismissal: PropTypes.bool.isRequired,\n        enableBanner: PropTypes.bool.isRequired,\n        enablePreviewMode: PropTypes.bool.isRequired,\n        bannerColor: PropTypes.string,\n        bannerTextColor: PropTypes.string,\n        enableSignUpWithGitLab: PropTypes.bool.isRequired,\n        requireEmailVerification: PropTypes.bool,\n        user: PropTypes.shape({\n            email: PropTypes.string.isRequired,\n            email_verified: PropTypes.bool,\n        }),\n        actions: PropTypes.shape({\n\n            /*\n             * Action creator to send a verification email to the user\n             */\n            sendVerificationEmail: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.onErrorChange = this.onErrorChange.bind(this);\n        this.onAnalyticsChange = this.onAnalyticsChange.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n\n        const lastError = ErrorStore.getLastError();\n        if (lastError && lastError.message !== AnnouncementBarMessages.EMAIL_VERIFIED) {\n            ErrorStore.clearLastError(true);\n        }\n\n        this.setInitialError();\n\n        this.state = this.getState(props);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (nextProps.enableBanner !== this.props.enableBanner ||\n                nextProps.bannerText !== this.props.bannerText ||\n                nextProps.bannerColor !== this.props.bannerColor ||\n                nextProps.bannerTextColor !== this.props.bannerTextColor ||\n                nextProps.allowBannerDismissal !== this.props.allowBannerDismissal) {\n            this.setState(this.getState(nextProps));\n        }\n    }\n\n    handleEmailResend = (email) => {\n        this.setState({resendStatus: 'sending', showSpinner: true});\n        this.props.actions.sendVerificationEmail(email).then(({data, error: err}) => {\n            if (data) {\n                this.setState({resendStatus: 'success'});\n            } else if (err) {\n                this.setState({resendStatus: 'failure'});\n            }\n        });\n    }\n\n    createEmailResendLink = (email) => {\n        let resendHTML;\n        if (this.state && this.state.showSpinner) {\n            resendHTML = (\n                <React.Fragment>\n                    <span className='fa-wrapper'>\n                        <span\n                            className='fa fa-spinner icon--rotate'\n                            title={Utils.localizeMessage('generic_icons.loading', 'Loading Icon')}\n                        />\n                    </span>\n                    <FormattedMessage\n                        id='announcement_bar.error.sending'\n                        defaultMessage='Sending'\n                    />\n                </React.Fragment>\n            );\n        } else {\n            resendHTML = (\n                <span className='resend-verification-wrapper'>\n                    <a\n                        onClick={() => {\n                            this.handleEmailResend(email);\n                            setTimeout(() => {\n                                this.setState({\n                                    showSpinner: false,\n                                });\n                            }, 500);\n                        }}\n                    >\n                        <FormattedMessage\n                            id='announcement_bar.error.send_again'\n                            defaultMessage='Send again'\n                        />\n                    </a>\n                </span>\n            );\n        }\n        return resendHTML;\n    };\n    setInitialError = () => {\n        const errorIgnored = ErrorStore.getIgnoreNotification();\n\n        if (!errorIgnored) {\n            if (this.props.canViewSystemErrors && this.props.siteURL === '') {\n                ErrorStore.storeLastError({notification: true, message: AnnouncementBarMessages.SITE_URL});\n                return;\n            } else if (!this.props.sendEmailNotifications && this.props.enablePreviewMode) {\n                ErrorStore.storeLastError({notification: true, message: AnnouncementBarMessages.PREVIEW_MODE});\n                return;\n            }\n        }\n\n        if (isLicensePastGracePeriod()) {\n            if (this.props.canViewSystemErrors) {\n                ErrorStore.storeLastError({notification: true, message: AnnouncementBarMessages.LICENSE_EXPIRED, type: AnnouncementBarTypes.CRITICAL});\n            } else {\n                ErrorStore.storeLastError({notification: true, message: AnnouncementBarMessages.LICENSE_PAST_GRACE, type: AnnouncementBarTypes.CRITICAL});\n            }\n        } else if (isLicenseExpired() && this.props.canViewSystemErrors) {\n            ErrorStore.storeLastError({notification: true, message: AnnouncementBarMessages.LICENSE_EXPIRED, type: AnnouncementBarTypes.CRITICAL});\n        } else if (isLicenseExpiring() && this.props.canViewSystemErrors) {\n            ErrorStore.storeLastError({notification: true, message: AnnouncementBarMessages.LICENSE_EXPIRING, type: AnnouncementBarTypes.CRITICAL});\n        }\n\n        if (this.props.isLoggedIn && this.props.user && !this.props.user.email_verified && this.props.requireEmailVerification) {\n            ErrorStore.storeLastError({\n                notification: true,\n                message: AnnouncementBarMessages.EMAIL_VERIFICATION_REQUIRED,\n            });\n        }\n    }\n\n    getState(props = this.props) {\n        const error = ErrorStore.getLastError();\n        if (error && error.message) {\n            return {message: error.message, color: null, textColor: null, type: error.type, allowDismissal: true};\n        }\n\n        const bannerText = props.bannerText || '';\n        const allowDismissal = props.allowBannerDismissal;\n        const bannerDismissed = localStorage.getItem(StoragePrefixes.ANNOUNCEMENT + props.bannerText);\n\n        if (props.enableBanner &&\n            bannerText.length > 0 &&\n            (!bannerDismissed || !allowDismissal)\n        ) {\n            // Remove old local storage items\n            Utils.removePrefixFromLocalStorage(StoragePrefixes.ANNOUNCEMENT);\n            return {\n                message: bannerText,\n                color: props.bannerColor,\n                textColor: props.bannerTextColor,\n                type: AnnouncementBarTypes.ANNOUNCEMENT,\n                allowDismissal,\n            };\n        }\n\n        return {message: null, color: null, colorText: null, textColor: null, type: null, allowDismissal: true};\n    }\n\n    componentDidMount() {\n        const isFixed = this.shouldRender(this.props, this.state) && !this.state.allowDismissal;\n        if (isFixed) {\n            document.body.classList.add('announcement-bar--fixed');\n        }\n\n        ErrorStore.addChangeListener(this.onErrorChange);\n        AnalyticsStore.addChangeListener(this.onAnalyticsChange);\n\n        if (this.state.message === AnnouncementBarMessages.EMAIL_VERIFIED) {\n            setTimeout(() => {\n                ErrorStore.storeLastError('');\n                ErrorStore.emitChange();\n            }, 4000);\n        }\n    }\n\n    componentWillUnmount() {\n        document.body.classList.remove('announcement-bar--fixed');\n        ErrorStore.removeChangeListener(this.onErrorChange);\n        AnalyticsStore.removeChangeListener(this.onAnalyticsChange);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (!this.props.isLoggedIn) {\n            return;\n        }\n\n        const wasFixed = this.shouldRender(prevProps, prevState) && !prevState.allowDismissal;\n        const isFixed = this.shouldRender(this.props, this.state) && !this.state.allowDismissal;\n\n        if (!wasFixed && isFixed) {\n            document.body.classList.add('announcement-bar--fixed');\n        } else if (wasFixed && !isFixed) {\n            document.body.classList.remove('announcement-bar--fixed');\n        }\n    }\n\n    onErrorChange() {\n        const newState = this.getState();\n        if (newState.message === AnnouncementBarMessages.LICENSE_EXPIRING && !this.state.totalUsers) {\n            AdminActions.getStandardAnalytics();\n        }\n\n        if (newState.message === AnnouncementBarMessages.EMAIL_VERIFIED) {\n            setTimeout(() => {\n                ErrorStore.storeLastError('');\n                ErrorStore.emitChange();\n            }, 4000);\n        }\n        this.setState(newState);\n    }\n\n    onAnalyticsChange() {\n        const stats = AnalyticsStore.getAllSystem();\n        this.setState({totalUsers: stats[StatTypes.TOTAL_USERS]});\n    }\n\n    handleClose(e) {\n        if (e) {\n            e.preventDefault();\n        }\n\n        if (this.state.type === AnnouncementBarTypes.ANNOUNCEMENT) {\n            localStorage.setItem(StoragePrefixes.ANNOUNCEMENT + this.state.message, true);\n        }\n\n        if (ErrorStore.getLastError() && ErrorStore.getLastError().notification) {\n            ErrorStore.clearNotificationError();\n        } else {\n            ErrorStore.clearLastError();\n        }\n\n        this.setState(this.getState());\n    }\n\n    shouldRender(props, state) {\n        if (!state) {\n            return false;\n        }\n\n        if (!state.message) {\n            return false;\n        }\n\n        if (state.message === AnnouncementBarMessages.LICENSE_EXPIRING && !state.totalUsers) {\n            return false;\n        }\n\n        if (!props.isLoggedIn && state.type === AnnouncementBarTypes.ANNOUNCEMENT) {\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        if (!this.shouldRender(this.props, this.state)) {\n            return <div/>;\n        }\n\n        let barClass = 'announcement-bar';\n        let dismissClass = ' announcement-bar--fixed';\n        const barStyle = {};\n        const linkStyle = {};\n        if (this.state.color && this.state.textColor) {\n            barStyle.backgroundColor = this.state.color;\n            barStyle.color = this.state.textColor;\n            linkStyle.color = this.state.textColor;\n        } else if (this.state.type === AnnouncementBarTypes.DEVELOPER) {\n            barClass = 'announcement-bar announcement-bar-developer';\n        } else if (this.state.type === AnnouncementBarTypes.CRITICAL) {\n            barClass = 'announcement-bar announcement-bar-critical';\n        } else if (this.state.type === AnnouncementBarTypes.SUCCESS) {\n            barClass = 'announcement-bar announcement-bar-success';\n        }\n\n        let closeButton;\n        if (this.state.allowDismissal) {\n            dismissClass = '';\n            closeButton = (\n                <a\n                    href='#'\n                    className='announcement-bar__close'\n                    style={linkStyle}\n                    onClick={this.handleClose}\n                >\n                    {'×'}\n                </a>\n            );\n        }\n\n        const renewalLink = RENEWAL_LINK + '?id=' + this.props.license.id + '&user_count=' + this.state.totalUsers;\n\n        let message = this.state.message;\n        if (this.state.type === AnnouncementBarTypes.ANNOUNCEMENT) {\n            message = (\n                <span\n                    dangerouslySetInnerHTML={{__html: TextFormatting.formatText(message, {singleline: true, mentionHighlight: false})}}\n                />\n            );\n        } else if (message === AnnouncementBarMessages.PREVIEW_MODE) {\n            message = (\n                <FormattedMessage\n                    id={AnnouncementBarMessages.PREVIEW_MODE}\n                    defaultMessage='Preview Mode: Email notifications have not been configured'\n                />\n            );\n        } else if (message === AnnouncementBarMessages.LICENSE_EXPIRING) {\n            message = (\n                <FormattedMarkdownMessage\n                    id={AnnouncementBarMessages.LICENSE_EXPIRING}\n                    defaultMessage='Enterprise license expires on {date, date, long}. [Please renew](!{link}).'\n                    values={{\n                        date: new Date(parseInt(this.props.license.ExpiresAt, 10)),\n                        link: renewalLink,\n                    }}\n                />\n            );\n        } else if (message === AnnouncementBarMessages.LICENSE_EXPIRED) {\n            message = (\n                <FormattedMarkdownMessage\n                    id={AnnouncementBarMessages.LICENSE_EXPIRED}\n                    defaultMessage='Enterprise license is expired and some features may be disabled. [Please renew](!{link}).'\n                    values={{\n                        link: renewalLink,\n                    }}\n                />\n            );\n        } else if (message === AnnouncementBarMessages.LICENSE_PAST_GRACE) {\n            message = (\n                <FormattedMessage\n                    id={AnnouncementBarMessages.LICENSE_PAST_GRACE}\n                    defaultMessage='Enterprise license is expired and some features may be disabled. Please contact your System Administrator for details.'\n                />\n            );\n        } else if (message === AnnouncementBarMessages.WEBSOCKET_PORT_ERROR) {\n            message = (\n                <FormattedMarkdownMessage\n                    id={AnnouncementBarMessages.WEBSOCKET_PORT_ERROR}\n                    defaultMessage={'Please check connection, Mattermost unreachable. If issue persists, ask administrator to [check WebSocket port](!https://about.mattermost.com/default-websocket-port-help).'}\n                />\n            );\n        } else if (message === AnnouncementBarMessages.SITE_URL) {\n            let id;\n            let defaultMessage;\n            if (this.props.enableSignUpWithGitLab) {\n                id = t('announcement_bar.error.site_url_gitlab');\n                defaultMessage = 'Please configure your {docsLink} in the System Console or in gitlab.rb if you\\'re using GitLab Mattermost.';\n            } else {\n                id = t('announcement_bar.error.site_url');\n                defaultMessage = 'Please configure your {docsLink} in the System Console.';\n            }\n\n            message = (\n                <FormattedMessage\n                    id={id}\n                    defaultMessage={defaultMessage}\n                    values={{\n                        docsLink: (\n                            <a\n                                href='https://docs.mattermost.com/administration/config-settings.html#site-url'\n                                rel='noopener noreferrer'\n                                target='_blank'\n                            >\n                                <FormattedMessage\n                                    id='announcement_bar.error.site_url.docsLink'\n                                    defaultMessage='Site URL'\n                                />\n                            </a>\n                        ),\n                        link: (\n                            <Link to='/admin_console/general/configuration'>\n                                <FormattedMessage\n                                    id='announcement_bar.error.site_url.link'\n                                    defaultMessage='the System Console'\n                                />\n                            </Link>\n                        ),\n                    }}\n                />\n            );\n        } else if (message === AnnouncementBarMessages.EMAIL_VERIFICATION_REQUIRED) {\n            message = (\n                <React.Fragment>\n                    <FormattedHTMLMessage\n                        id={AnnouncementBarMessages.EMAIL_VERIFICATION_REQUIRED}\n                        defaultMessage='Check your email at {email} to verify the address. Cannot find the email?'\n                        values={{\n                            email: this.props.user.email,\n                        }}\n                    />\n                    {this.createEmailResendLink(this.props.user.email)}\n                </React.Fragment>\n            );\n        } else if (message === AnnouncementBarMessages.EMAIL_VERIFIED) {\n            message = (\n                <React.Fragment>\n                    <span className='fa-wrapper'>\n                        <i className='fa fa-check'/>\n                    </span>\n                    <FormattedHTMLMessage\n                        id={AnnouncementBarMessages.EMAIL_VERIFIED}\n                        defaultMessage='Email verified'\n                    />\n                </React.Fragment>\n            );\n        }\n\n        return (\n            <div\n                className={barClass + dismissClass}\n                style={barStyle}\n            >\n                <span>{message}</span>\n                {closeButton}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {sendVerificationEmail} from 'mattermost-redux/actions/users';\nimport {getCurrentUserId, getCurrentUser} from 'mattermost-redux/selectors/entities/users';\nimport {haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport AnnouncementBar from './announcement_bar.jsx';\n\nfunction mapStateToProps(state) {\n    const canViewSystemErrors = haveISystemPermission(state, {permission: Permissions.MANAGE_SYSTEM});\n    const canViewAPIv3Banner = haveISystemPermission(state, {permission: Permissions.MANAGE_SYSTEM});\n    const license = getLicense(state);\n    const config = getConfig(state);\n    const user = getCurrentUser(state);\n    const siteURL = config.SiteURL;\n    const sendEmailNotifications = config.SendEmailNotifications === 'true';\n    const requireEmailVerification = config.RequireEmailVerification === 'true';\n    const enablePreviewMode = config.EnablePreviewModeBanner === 'true';\n    const bannerText = config.BannerText;\n    const allowBannerDismissal = config.AllowBannerDismissal === 'true';\n    const enableBanner = config.EnableBanner === 'true';\n    const bannerColor = config.BannerColor;\n    const bannerTextColor = config.BannerTextColor;\n    const enableSignUpWithGitLab = config.EnableSignUpWithGitLab === 'true';\n    return {\n        isLoggedIn: Boolean(getCurrentUserId(state)),\n        canViewSystemErrors,\n        user,\n        canViewAPIv3Banner,\n        license,\n        siteURL,\n        sendEmailNotifications,\n        requireEmailVerification,\n        bannerText,\n        allowBannerDismissal,\n        enableBanner,\n        enablePreviewMode,\n        bannerColor,\n        bannerTextColor,\n        enableSignUpWithGitLab,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            sendVerificationEmail,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnnouncementBar);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class SystemPermissionGate extends React.Component {\n    static defaultProps = {\n        invert: false,\n    }\n\n    static propTypes = {\n\n        /**\n         * Permissions enough to pass the gate (binary OR)\n         */\n        permissions: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n        /**\n         * Has permission\n         */\n        hasPermission: PropTypes.bool.isRequired,\n\n        /**\n         * Invert the permission (used for else)\n         */\n        invert: PropTypes.bool.isRequired,\n\n        /**\n         * Content protected by the permissions gate\n         */\n        children: PropTypes.node.isRequired,\n    };\n\n    render() {\n        if (this.props.hasPermission && !this.props.invert) {\n            return this.props.children;\n        }\n        if (!this.props.hasPermission && this.props.invert) {\n            return this.props.children;\n        }\n        return null;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\n\nimport SystemPermissionGate from './system_permission_gate.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    for (const permission of ownProps.permissions) {\n        if (haveISystemPermission(state, {permission})) {\n            return {hasPermission: true};\n        }\n    }\n\n    return {hasPermission: false};\n}\n\nexport default connect(mapStateToProps)(SystemPermissionGate);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {createSelector} from 'reselect';\nimport {getCustomEmojisByName} from 'mattermost-redux/selectors/entities/emojis';\n\nimport Constants from 'utils/constants.jsx';\nimport {getItemFromStorage} from 'selectors/storage';\nimport EmojiMap from 'utils/emoji_map';\n\nexport const getEmojiMap = createSelector(\n    getCustomEmojisByName,\n    (customEmojisByName) => {\n        return new EmojiMap(customEmojisByName);\n    }\n);\n\nexport const getRecentEmojis = createSelector(\n    (state) => state.storage,\n    (storage) => {\n        if (!storage || !storage.storage) {\n            return [];\n        }\n\n        let recentEmojis;\n        try {\n            recentEmojis = JSON.parse(getItemFromStorage(storage.storage, Constants.RECENT_EMOJI_KEY, null));\n        } catch (e) {\n            // Errors are handled below\n        }\n\n        if (!recentEmojis) {\n            return [];\n        }\n\n        if (recentEmojis.length > 0 && typeof recentEmojis[0] === 'object') {\n            // Prior to PLT-7267, recent emojis were stored with the entire object for the emoji, but this\n            // has been changed to store only the names of the emojis, so we need to change that\n            recentEmojis = recentEmojis.map((emoji) => {\n                return emoji.name || emoji.aliases[0];\n            });\n        }\n\n        return recentEmojis;\n    },\n);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport Constants from 'utils/constants.jsx';\nimport * as UserAgent from 'utils/user_agent';\n\nexport function canUploadFiles(config) {\n    const enableFileAttachments = config.EnableFileAttachments === 'true';\n    const enableMobileFileUpload = config.EnableMobileFileUpload === 'true';\n\n    if (!enableFileAttachments) {\n        return false;\n    }\n\n    if (UserAgent.isMobileApp()) {\n        return enableMobileFileUpload;\n    }\n\n    return true;\n}\n\nexport function canDownloadFiles(config) {\n    if (UserAgent.isMobileApp()) {\n        return config.EnableMobileFileDownload === 'true';\n    }\n\n    return true;\n}\n\nexport function trimFilename(filename) {\n    let trimmedFilename = filename;\n    if (filename.length > Constants.MAX_FILENAME_LENGTH) {\n        trimmedFilename = filename.substring(0, Math.min(Constants.MAX_FILENAME_LENGTH, filename.length)) + '...';\n    }\n\n    return trimmedFilename;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {createSelector} from 'reselect';\n\nimport {getPost} from 'mattermost-redux/selectors/entities/posts';\nimport {getBool as getBoolPreference} from 'mattermost-redux/selectors/entities/preferences';\n\nimport {getGlobalItem} from 'selectors/storage';\nimport {Preferences, StoragePrefixes} from 'utils/constants';\n\nexport const getEditingPost = createSelector(\n    (state) => {\n        if (state.views.posts.editingPost && state.views.posts.editingPost.postId) {\n            return getPost(state, state.views.posts.editingPost.postId);\n        }\n\n        return null;\n    },\n    (state) => state.views.posts.editingPost,\n    (post, editingPost) => {\n        return {\n            ...editingPost,\n            post,\n        };\n    }\n);\n\nexport function isEmbedVisible(state, postId) {\n    const previewCollapsed = getBoolPreference(\n        state,\n        Preferences.CATEGORY_DISPLAY_SETTINGS,\n        Preferences.COLLAPSE_DISPLAY,\n        Preferences.COLLAPSE_DISPLAY_DEFAULT !== 'false'\n    );\n\n    return getGlobalItem(state, StoragePrefixes.EMBED_VISIBLE + postId, !previewCollapsed);\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {haveIChannelPermission} from 'mattermost-redux/selectors/entities/roles';\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport store from 'stores/redux_store.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nexport function canManageMembers(channel) {\n    if (channel.type === Constants.PRIVATE_CHANNEL) {\n        return haveIChannelPermission(\n            store.getState(),\n            {\n                channel: channel.id,\n                team: channel.team_id,\n                permission: Permissions.MANAGE_PRIVATE_CHANNEL_MEMBERS,\n            }\n        );\n    }\n\n    if (channel.type === Constants.OPEN_CHANNEL) {\n        return haveIChannelPermission(\n            store.getState(),\n            {\n                channel: channel.id,\n                team: channel.team_id,\n                permission: Permissions.MANAGE_PUBLIC_CHANNEL_MEMBERS,\n            }\n        );\n    }\n\n    return true;\n}\n\nexport function findNextUnreadChannelId(curChannelId, allChannelIds, unreadChannelIds, direction) {\n    const curIndex = allChannelIds.indexOf(curChannelId);\n\n    for (let i = 1; i < allChannelIds.length; i++) {\n        const index = Utils.mod(curIndex + (i * direction), allChannelIds.length);\n\n        if (unreadChannelIds.includes(allChannelIds[index])) {\n            return index;\n        }\n    }\n\n    return -1;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\n/* eslint-disable import/order */\nconst de = require('./de.json');\n\nconst es = require('./es.json');\n\nconst fr = require('./fr.json');\n\nconst it = require('./it.json');\n\nconst ja = require('./ja.json');\n\nconst ko = require('./ko.json');\n\nconst nl = require('./nl.json');\n\nconst pl = require('./pl.json');\n\nconst ptBR = require('./pt-BR.json');\n\nconst ro = require('./ro.json');\n\nconst ru = require('./ru.json');\n\nconst tr = require('./tr.json');\n\nconst zhTW = require('./zh-TW.json');\n\nconst zhCN = require('./zh-CN.json');\n\nimport {addLocaleData} from 'react-intl';\nimport deLocaleData from 'react-intl/locale-data/de';\nimport enLocaleData from 'react-intl/locale-data/en';\nimport esLocaleData from 'react-intl/locale-data/es';\nimport frLocaleData from 'react-intl/locale-data/fr';\nimport itLocaleData from 'react-intl/locale-data/it';\nimport jaLocaleData from 'react-intl/locale-data/ja';\nimport koLocaleData from 'react-intl/locale-data/ko';\nimport nlLocaleData from 'react-intl/locale-data/nl';\nimport plLocaleData from 'react-intl/locale-data/pl';\nimport ptLocaleData from 'react-intl/locale-data/pt';\nimport roLocaleData from 'react-intl/locale-data/ro';\nimport ruLocaleData from 'react-intl/locale-data/ru';\nimport trLocaleData from 'react-intl/locale-data/tr';\nimport zhLocaleData from 'react-intl/locale-data/zh';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport store from 'stores/redux_store.jsx';\n\n// should match the values in model/config.go\nconst languages = {\n    de: {\n        value: 'de',\n        name: 'Deutsch',\n        order: 0,\n        url: de,\n    },\n    en: {\n        value: 'en',\n        name: 'English',\n        order: 1,\n        url: '',\n    },\n    es: {\n        value: 'es',\n        name: 'Español',\n        order: 2,\n        url: es,\n    },\n    fr: {\n        value: 'fr',\n        name: 'Français',\n        order: 3,\n        url: fr,\n    },\n    it: {\n        value: 'it',\n        name: 'Italiano',\n        order: 4,\n        url: it,\n    },\n    ja: {\n        value: 'ja',\n        name: '日本語',\n        order: 14,\n        url: ja,\n    },\n    ko: {\n        value: 'ko',\n        name: '한국어 (Alpha)',\n        order: 11,\n        url: ko,\n    },\n    nl: {\n        value: 'nl',\n        name: 'Nederlands (Alpha)',\n        order: 5,\n        url: nl,\n    },\n    pl: {\n        value: 'pl',\n        name: 'Polski (Alpha)',\n        order: 6,\n        url: pl,\n    },\n    'pt-BR': {\n        value: 'pt-BR',\n        name: 'Português (Brasil)',\n        order: 7,\n        url: ptBR,\n    },\n    ro: {\n        value: 'ro',\n        name: 'Română (Beta)',\n        order: 8,\n        url: ro,\n    },\n    ru: {\n        value: 'ru',\n        name: 'Pусский (Alpha)',\n        order: 9,\n        url: ru,\n    },\n    tr: {\n        value: 'tr',\n        name: 'Türkçe',\n        order: 10,\n        url: tr,\n    },\n    'zh-TW': {\n        value: 'zh-TW',\n        name: '中文 (繁體)',\n        order: 13,\n        url: zhTW,\n    },\n    'zh-CN': {\n        value: 'zh-CN',\n        name: '中文 (简体)',\n        order: 12,\n        url: zhCN,\n    },\n};\n\nexport function getAllLanguages() {\n    return languages;\n}\n\nexport function getLanguages() {\n    const config = getConfig(store.getState());\n    if (!config.AvailableLocales) {\n        return getAllLanguages();\n    }\n\n    return config.AvailableLocales.split(',').filter((l) => languages[l]).map((l) => languages[l]);\n}\n\nexport function getLanguageInfo(locale) {\n    return getAllLanguages()[locale];\n}\n\nexport function isLanguageAvailable(locale) {\n    return Boolean(getLanguages()[locale]);\n}\n\nexport function safariFix(callback) {\n    require.ensure([\n        'intl',\n        'intl/locale-data/jsonp/de.js',\n        'intl/locale-data/jsonp/en.js',\n        'intl/locale-data/jsonp/es.js',\n        'intl/locale-data/jsonp/fr.js',\n        'intl/locale-data/jsonp/it.js',\n        'intl/locale-data/jsonp/ja.js',\n        'intl/locale-data/jsonp/ko.js',\n        'intl/locale-data/jsonp/nl.js',\n        'intl/locale-data/jsonp/pl.js',\n        'intl/locale-data/jsonp/pt.js',\n        'intl/locale-data/jsonp/ro.js',\n        'intl/locale-data/jsonp/ru.js',\n        'intl/locale-data/jsonp/tr.js',\n        'intl/locale-data/jsonp/zh.js',\n    ], (require) => {\n        require('intl');\n        require('intl/locale-data/jsonp/de.js');\n        require('intl/locale-data/jsonp/en.js');\n        require('intl/locale-data/jsonp/es.js');\n        require('intl/locale-data/jsonp/fr.js');\n        require('intl/locale-data/jsonp/it.js');\n        require('intl/locale-data/jsonp/ja.js');\n        require('intl/locale-data/jsonp/ko.js');\n        require('intl/locale-data/jsonp/nl.js');\n        require('intl/locale-data/jsonp/pl.js');\n        require('intl/locale-data/jsonp/pt.js');\n        require('intl/locale-data/jsonp/ro.js');\n        require('intl/locale-data/jsonp/ru.js');\n        require('intl/locale-data/jsonp/tr.js');\n        require('intl/locale-data/jsonp/zh.js');\n        callback();\n    });\n}\n\nexport function doAddLocaleData() {\n    addLocaleData(enLocaleData);\n    addLocaleData(deLocaleData);\n    addLocaleData(esLocaleData);\n    addLocaleData(frLocaleData);\n    addLocaleData(itLocaleData);\n    addLocaleData(jaLocaleData);\n    addLocaleData(koLocaleData);\n    addLocaleData(nlLocaleData);\n    addLocaleData(plLocaleData);\n    addLocaleData(ptLocaleData);\n    addLocaleData(roLocaleData);\n    addLocaleData(ruLocaleData);\n    addLocaleData(trLocaleData);\n    addLocaleData(zhLocaleData);\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {debounce} from 'mattermost-redux/actions/helpers';\n\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport QuickInput from 'components/quick_input.jsx';\nimport SuggestionStore from 'stores/suggestion_store.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nconst KeyCodes = Constants.KeyCodes;\nconst MIN_TIME_BEFORE_CLICK = 200;\n\nexport default class SuggestionBox extends React.Component {\n    static propTypes = {\n\n        /**\n         * The list component to render, usually SuggestionList\n         */\n        listComponent: PropTypes.func.isRequired,\n\n        /**\n         * The date component to render\n         */\n        dateComponent: PropTypes.func,\n\n        /**\n         * The value of in the input\n         */\n        value: PropTypes.string.isRequired,\n\n        /**\n         * Array of suggestion providers\n         */\n        providers: PropTypes.arrayOf(PropTypes.object),\n\n        /**\n         * Where the list will be displayed relative to the input box, defaults to 'top'\n         */\n        listStyle: PropTypes.string,\n\n        /**\n         * CSS class for the div parent of the input box\n         */\n        containerClass: PropTypes.string,\n\n        /**\n         * Set to true to draw dividers between types of list items, defaults to false\n         */\n        renderDividers: PropTypes.bool,\n\n        /**\n         * Set to true to render a message when there were no results found, defaults to false\n         */\n        renderNoResults: PropTypes.bool,\n\n        /**\n         * Set to allow TAB to select an item in the list, defaults to true\n         */\n        completeOnTab: PropTypes.bool,\n\n        /**\n         * Function called when input box gains focus\n         */\n        onFocus: PropTypes.func,\n\n        /**\n         * Function called when input box loses focus\n         */\n        onBlur: PropTypes.func,\n\n        /**\n         * Function called when input box value changes\n         */\n        onChange: PropTypes.func,\n\n        /**\n         * Function called when a key is pressed and the input box is in focus\n         */\n        onKeyDown: PropTypes.func,\n\n        /**\n         * Function called when an item is selected\n         */\n        onItemSelected: PropTypes.func,\n\n        /**\n         * Flags if the suggestion_box is for the RHS (Reply).\n         */\n        isRHS: PropTypes.bool,\n\n        /**\n         * Function called when @mention is clicked\n         */\n        popoverMentionKeyClick: PropTypes.bool,\n\n        /**\n         * The number of characters required to show the suggestion list, defaults to 1\n         */\n        requiredCharacters: PropTypes.number,\n\n        /**\n         * If true, the suggestion box is opened on focus, default to false\n         */\n        openOnFocus: PropTypes.bool,\n\n        /**\n         * If true, the suggestion box is disabled\n         */\n        disabled: PropTypes.bool,\n\n        /**\n         * If true, it displays allow to display a default list when empty\n         */\n        openWhenEmpty: PropTypes.bool,\n\n        /**\n         * If true, replace all input in the suggestion box with the selected option after a select, defaults to false\n         */\n        replaceAllInputOnSelect: PropTypes.bool,\n    }\n\n    static defaultProps = {\n        listStyle: 'top',\n        containerClass: '',\n        renderDividers: false,\n        renderNoResults: false,\n        completeOnTab: true,\n        isRHS: false,\n        requiredCharacters: 1,\n        openOnFocus: false,\n        openWhenEmpty: false,\n        replaceAllInputOnSelect: false,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handlePopoverMentionKeyClick = this.handlePopoverMentionKeyClick.bind(this);\n        this.handleCompleteWord = this.handleCompleteWord.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleCompositionStart = this.handleCompositionStart.bind(this);\n        this.handleCompositionUpdate = this.handleCompositionUpdate.bind(this);\n        this.handleCompositionEnd = this.handleCompositionEnd.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.handlePretextChanged = this.handlePretextChanged.bind(this);\n        this.blur = this.blur.bind(this);\n\n        this.suggestionId = Utils.generateId();\n        SuggestionStore.registerSuggestionBox(this.suggestionId);\n\n        // Keep track of whether we're composing a CJK character so we can make suggestions for partial characters\n        this.composing = false;\n\n        // Keep track of whether a list based or date based suggestion provider has been triggered\n        this.presentationType = 'text';\n\n        this.state = {\n            focused: false,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.popoverMentionKeyClick) {\n            SuggestionStore.addPopoverMentionKeyClickListener(this.props.isRHS, this.handlePopoverMentionKeyClick);\n        }\n        SuggestionStore.addPretextChangedListener(this.suggestionId, this.handlePretextChanged);\n    }\n\n    componentWillUnmount() {\n        if (this.props.popoverMentionKeyClick) {\n            SuggestionStore.removePopoverMentionKeyClickListener(this.props.isRHS, this.handlePopoverMentionKeyClick);\n        }\n        SuggestionStore.removePretextChangedListener(this.suggestionId, this.handlePretextChanged);\n\n        SuggestionStore.unregisterSuggestionBox(this.suggestionId);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.providers !== prevProps.providers) {\n            const textbox = this.getTextbox();\n            const pretext = textbox.value.substring(0, textbox.selectionEnd);\n            GlobalActions.emitSuggestionPretextChanged(this.suggestionId, pretext);\n        }\n    }\n\n    getTextbox() {\n        if (!this.refs.input) {\n            return null;\n        }\n\n        const input = this.refs.input.getInput();\n\n        if (input.getDOMNode) {\n            return input.getDOMNode();\n        }\n\n        return input;\n    }\n\n    recalculateSize() {\n        // Pretty hacky way to force an AutosizeTextarea to recalculate its height if that's what\n        // we're rendering as the input\n        const input = this.refs.input.getInput();\n\n        if (input.recalculateSize) {\n            input.recalculateSize();\n        }\n    }\n\n    handleEmitClearSuggestions = (suggestionId, delay = 0) => {\n        setTimeout(() => {\n            GlobalActions.emitClearSuggestions(suggestionId);\n        }, delay);\n    }\n\n    handleFocusOut = (e) => {\n        // Focus is switching TO e.relatedTarget, so only treat this as a blur event if we're not switching\n        // between children (like from the textbox to the suggestion list)\n        if (this.container.contains(e.relatedTarget)) {\n            return;\n        }\n\n        this.setState({focused: false});\n\n        if (UserAgent.isIos() && !e.relatedTarget) {\n            // iOS doesn't support e.relatedTarget, so we need to use the old method of just delaying the\n            // blur so that click handlers on the list items still register\n            if (this.presentationType !== 'date' || this.props.value.length === 0) {\n                this.handleEmitClearSuggestions(this.suggestionId, MIN_TIME_BEFORE_CLICK);\n            }\n        } else {\n            this.handleEmitClearSuggestions(this.suggestionId);\n        }\n\n        if (this.props.onBlur) {\n            this.props.onBlur();\n        }\n    };\n\n    handleFocusIn = (e) => {\n        // Focus is switching FROM e.relatedTarget, so only treat this as a focus event if we're not switching\n        // between children (like from the textbox to the suggestion list)\n        if (this.container.contains(e.relatedTarget)) {\n            return;\n        }\n\n        this.setState({focused: true});\n\n        if (this.props.openOnFocus || this.props.openWhenEmpty) {\n            setTimeout(() => {\n                const textbox = this.getTextbox();\n                if (textbox) {\n                    const pretext = textbox.value.substring(0, textbox.selectionEnd);\n                    if (this.props.openWhenEmpty || pretext.length >= this.props.requiredCharacters) {\n                        GlobalActions.emitSuggestionPretextChanged(this.suggestionId, pretext);\n                    }\n                }\n            });\n        }\n\n        if (this.props.onFocus) {\n            this.props.onFocus();\n        }\n    };\n\n    handleChange(e) {\n        const textbox = this.getTextbox();\n        const pretext = textbox.value.substring(0, textbox.selectionEnd);\n\n        if (!this.composing && SuggestionStore.getPretext(this.suggestionId) !== pretext) {\n            this.doEmitSuggestionPretextChanged(pretext);\n        }\n\n        if (this.props.onChange) {\n            this.props.onChange(e);\n        }\n    }\n\n    doEmitSuggestionPretextChanged = debounce((pretext) => {\n        GlobalActions.emitSuggestionPretextChanged(this.suggestionId, pretext);\n    }, Constants.SEARCH_TIMEOUT_MILLISECONDS)\n\n    handleCompositionStart() {\n        this.composing = true;\n    }\n\n    handleCompositionUpdate(e) {\n        if (!e.data) {\n            return;\n        }\n\n        // The caret appears before the CJK character currently being composed, so re-add it to the pretext\n        const textbox = this.getTextbox();\n        const pretext = textbox.value.substring(0, textbox.selectionStart) + e.data;\n\n        if (SuggestionStore.getPretext(this.suggestionId) !== pretext) {\n            GlobalActions.emitSuggestionPretextChanged(this.suggestionId, pretext);\n        }\n    }\n\n    handleCompositionEnd() {\n        this.composing = false;\n    }\n\n    handlePopoverMentionKeyClick(mentionKey) {\n        let insertText = '@' + mentionKey;\n\n        // if the current text does not end with a whitespace, then insert a space\n        if (this.props.value && (/[^\\s]$/).test(this.props.value)) {\n            insertText = ' ' + insertText;\n        }\n\n        this.addTextAtCaret(insertText, '');\n    }\n\n    addTextAtCaret(term, matchedPretext) {\n        const textbox = this.getTextbox();\n        const caret = textbox.selectionEnd;\n        const text = this.props.value;\n        const pretext = textbox.value.substring(0, textbox.selectionEnd);\n\n        let prefix;\n        let keepPretext = false;\n        if (pretext.toLowerCase().endsWith(matchedPretext.toLowerCase())) {\n            prefix = pretext.substring(0, pretext.length - matchedPretext.length);\n        } else {\n            // the pretext has changed since we got a term to complete so see if the term still fits the pretext\n            const termWithoutMatched = term.substring(matchedPretext.length);\n            const overlap = SuggestionBox.findOverlap(pretext, termWithoutMatched);\n\n            keepPretext = overlap.length === 0;\n            prefix = pretext.substring(0, pretext.length - overlap.length - matchedPretext.length);\n        }\n\n        const suffix = text.substring(caret);\n\n        let newValue;\n        if (keepPretext) {\n            newValue = pretext;\n        } else {\n            newValue = prefix + term + ' ' + suffix;\n        }\n\n        textbox.value = newValue;\n\n        if (this.props.onChange) {\n            // fake an input event to send back to parent components\n            const e = {\n                target: textbox,\n            };\n\n            // don't call handleChange or we'll get into an event loop\n            this.props.onChange(e);\n        }\n\n        // set the caret position after the next rendering\n        window.requestAnimationFrame(() => {\n            if (textbox.value === newValue) {\n                Utils.setCaretPosition(textbox, prefix.length + term.length + 1);\n            }\n        });\n    }\n\n    replaceText(term) {\n        const textbox = this.getTextbox();\n        textbox.value = term;\n\n        if (this.props.onChange) {\n            // fake an input event to send back to parent components\n            const e = {\n                target: textbox,\n            };\n\n            // don't call handleChange or we'll get into an event loop\n            this.props.onChange(e);\n        }\n    }\n\n    handleCompleteWord(term, matchedPretext) {\n        if (this.props.replaceAllInputOnSelect) {\n            this.replaceText(term);\n        } else {\n            this.addTextAtCaret(term, matchedPretext);\n        }\n\n        if (this.props.onItemSelected) {\n            const items = SuggestionStore.getItems(this.suggestionId);\n            const terms = SuggestionStore.getTerms(this.suggestionId);\n            for (let i = 0; i < terms.length; i++) {\n                if (terms[i] === term) {\n                    this.props.onItemSelected(items[i]);\n                    break;\n                }\n            }\n        }\n\n        this.refs.input.focus();\n\n        for (const provider of this.props.providers) {\n            if (provider.handleCompleteWord) {\n                provider.handleCompleteWord(term, matchedPretext);\n            }\n        }\n\n        GlobalActions.emitCompleteWordSuggestion(this.suggestionId);\n    }\n\n    handleKeyDown(e) {\n        if ((this.props.openWhenEmpty || this.props.value) && SuggestionStore.hasSuggestions(this.suggestionId)) {\n            if (Utils.isKeyPressed(e, KeyCodes.UP)) {\n                GlobalActions.emitSelectPreviousSuggestion(this.suggestionId);\n                e.preventDefault();\n            } else if (Utils.isKeyPressed(e, KeyCodes.DOWN)) {\n                GlobalActions.emitSelectNextSuggestion(this.suggestionId);\n                e.preventDefault();\n            } else if (Utils.isKeyPressed(e, KeyCodes.ENTER) || (this.props.completeOnTab && Utils.isKeyPressed(e, KeyCodes.TAB))) {\n                this.handleCompleteWord(SuggestionStore.getSelection(this.suggestionId), SuggestionStore.getSelectedMatchedPretext(this.suggestionId));\n                if (this.props.onKeyDown) {\n                    this.props.onKeyDown(e);\n                }\n                e.preventDefault();\n            } else if (Utils.isKeyPressed(e, KeyCodes.ESCAPE)) {\n                GlobalActions.emitClearSuggestions(this.suggestionId);\n                this.presentationType = 'text';\n                e.preventDefault();\n                e.stopPropagation();\n            } else if (this.props.onKeyDown) {\n                this.props.onKeyDown(e);\n            }\n        } else if (this.props.onKeyDown) {\n            this.props.onKeyDown(e);\n        }\n    }\n\n    handlePretextChanged(pretext) {\n        let handled = false;\n        for (const provider of this.props.providers) {\n            handled = provider.handlePretextChanged(this.suggestionId, pretext) || handled;\n\n            if (handled) {\n                if (provider.constructor.name === 'SearchDateProvider') {\n                    this.presentationType = 'date';\n                } else {\n                    this.presentationType = 'text';\n                }\n\n                break;\n            }\n        }\n\n        if (!handled) {\n            SuggestionStore.clearSuggestions(this.suggestionId);\n        }\n    }\n\n    blur() {\n        this.refs.input.blur();\n    }\n\n    setContainerRef = (container) => {\n        // Attach/detach event listeners that aren't supported by React\n        if (this.container) {\n            this.container.removeEventListener('focusin', this.handleFocusIn);\n            this.container.removeEventListener('focusout', this.handleFocusOut);\n        }\n\n        if (container) {\n            container.addEventListener('focusin', this.handleFocusIn);\n            container.addEventListener('focusout', this.handleFocusOut);\n        }\n\n        // Save ref\n        this.container = container;\n    };\n\n    render() {\n        const {\n            listComponent,\n            dateComponent,\n            listStyle,\n            renderDividers,\n            renderNoResults,\n            ...props\n        } = this.props;\n\n        // Don't pass props used by SuggestionBox\n        Reflect.deleteProperty(props, 'providers');\n        Reflect.deleteProperty(props, 'onChange'); // We use onInput instead of onChange on the actual input\n        Reflect.deleteProperty(props, 'onItemSelected');\n        Reflect.deleteProperty(props, 'completeOnTab');\n        Reflect.deleteProperty(props, 'isRHS');\n        Reflect.deleteProperty(props, 'popoverMentionKeyClick');\n        Reflect.deleteProperty(props, 'requiredCharacters');\n        Reflect.deleteProperty(props, 'openOnFocus');\n        Reflect.deleteProperty(props, 'openWhenEmpty');\n        Reflect.deleteProperty(props, 'onFocus');\n        Reflect.deleteProperty(props, 'onBlur');\n        Reflect.deleteProperty(props, 'containerClass');\n        Reflect.deleteProperty(props, 'replaceAllInputOnSelect');\n\n        // This needs to be upper case so React doesn't think it's an html tag\n        const SuggestionListComponent = listComponent;\n        const SuggestionDateComponent = dateComponent;\n\n        return (\n            <div\n                ref={this.setContainerRef}\n                className={this.props.containerClass}\n            >\n                <QuickInput\n                    ref='input'\n                    autoComplete='off'\n                    {...props}\n                    onInput={this.handleChange}\n                    onCompositionStart={this.handleCompositionStart}\n                    onCompositionUpdate={this.handleCompositionUpdate}\n                    onCompositionEnd={this.handleCompositionEnd}\n                    onKeyDown={this.handleKeyDown}\n                />\n                {(this.props.openWhenEmpty || this.props.value.length >= this.props.requiredCharacters) && this.presentationType === 'text' &&\n                    <SuggestionListComponent\n                        open={this.state.focused}\n                        suggestionId={this.suggestionId}\n                        location={listStyle}\n                        renderDividers={renderDividers}\n                        renderNoResults={renderNoResults}\n                        onCompleteWord={this.handleCompleteWord}\n                    />\n                }\n                {(this.props.openWhenEmpty || this.props.value.length >= this.props.requiredCharacters) && this.presentationType === 'date' &&\n                    <SuggestionDateComponent\n                        suggestionId={this.suggestionId}\n                        onCompleteWord={this.handleCompleteWord}\n                    />\n                }\n            </div>\n        );\n    }\n\n    // Finds the longest substring that's at both the end of b and the start of a. For example,\n    // if a = \"firepit\" and b = \"pitbull\", findOverlap would return \"pit\".\n    static findOverlap(a, b) {\n        const aLower = a.toLowerCase();\n        const bLower = b.toLowerCase();\n\n        for (let i = bLower.length; i > 0; i--) {\n            const substring = bLower.substring(0, i);\n\n            if (aLower.endsWith(substring)) {\n                return substring;\n            }\n        }\n\n        return '';\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport SuggestionStore from 'stores/suggestion_store.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class SuggestionList extends React.PureComponent {\n    static propTypes = {\n        open: PropTypes.bool.isRequired,\n        suggestionId: PropTypes.string.isRequired,\n        location: PropTypes.string,\n        renderDividers: PropTypes.bool,\n        renderNoResults: PropTypes.bool,\n        onCompleteWord: PropTypes.func.isRequired,\n    };\n\n    static defaultProps = {\n        renderDividers: false,\n        renderNoResults: false,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.getStateFromStores = this.getStateFromStores.bind(this);\n\n        this.getContent = this.getContent.bind(this);\n\n        this.handleSuggestionsChanged = this.handleSuggestionsChanged.bind(this);\n\n        this.scrollToItem = this.scrollToItem.bind(this);\n\n        this.state = this.getStateFromStores(props.suggestionId);\n    }\n\n    getStateFromStores(suggestionId) {\n        const suggestions = SuggestionStore.getSuggestions(suggestionId || this.props.suggestionId);\n\n        return {\n            pretext: suggestions.pretext,\n            matchedPretext: suggestions.matchedPretext,\n            items: suggestions.items,\n            terms: suggestions.terms,\n            components: suggestions.components,\n            selection: suggestions.selection,\n            cleared: suggestions.cleared,\n        };\n    }\n\n    componentDidMount() {\n        SuggestionStore.addSuggestionsChangedListener(this.props.suggestionId, this.handleSuggestionsChanged);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.selection !== prevState.selection && this.state.selection) {\n            this.scrollToItem(this.state.selection);\n        }\n    }\n\n    componentWillUnmount() {\n        SuggestionStore.removeSuggestionsChangedListener(this.props.suggestionId, this.handleSuggestionsChanged);\n    }\n\n    getContent() {\n        return $(ReactDOM.findDOMNode(this.refs.content));\n    }\n\n    handleSuggestionsChanged() {\n        this.setState(this.getStateFromStores());\n    }\n\n    scrollToItem(term) {\n        const content = this.getContent();\n        if (!content || content.length === 0) {\n            return;\n        }\n\n        const visibleContentHeight = content[0].clientHeight;\n        const actualContentHeight = content[0].scrollHeight;\n\n        if (visibleContentHeight < actualContentHeight) {\n            const contentTop = content.scrollTop();\n            const contentTopPadding = parseInt(content.css('padding-top'), 10);\n            const contentBottomPadding = parseInt(content.css('padding-top'), 10);\n\n            const item = $(ReactDOM.findDOMNode(this.refs[term]));\n            const itemTop = item[0].offsetTop - parseInt(item.css('margin-top'), 10);\n            const itemBottomMargin = parseInt(item.css('margin-bottom'), 10) + parseInt(item.css('padding-bottom'), 10);\n            const itemBottom = item[0].offsetTop + item.height() + itemBottomMargin;\n\n            if (itemTop - contentTopPadding < contentTop) {\n                // the item is off the top of the visible space\n                content.scrollTop(itemTop - contentTopPadding);\n            } else if (itemBottom + contentTopPadding + contentBottomPadding > contentTop + visibleContentHeight) {\n                // the item has gone off the bottom of the visible space\n                content.scrollTop((itemBottom - visibleContentHeight) + contentTopPadding + contentBottomPadding);\n            }\n        }\n    }\n\n    renderDivider(type) {\n        return (\n            <div\n                key={type + '-divider'}\n                className='suggestion-list__divider'\n            >\n                <span>\n                    <FormattedMessage id={'suggestion.' + type}/>\n                </span>\n            </div>\n        );\n    }\n\n    renderLoading(type) {\n        return (\n            <div\n                key={type + '-loading'}\n                className='suggestion-loader'\n            >\n                <i\n                    className='fa fa-spinner fa-pulse fa-fw margin-bottom'\n                    title={localizeMessage('generic_icons.loading', 'Loading Icon')}\n                />\n            </div>\n        );\n    }\n\n    renderNoResults() {\n        return (\n            <div\n                key='list-no-results'\n                className='suggestion-list__no-results'\n            >\n                <FormattedMarkdownMessage\n                    id='suggestion_list.no_matches'\n                    defaultMessage='No items match __{value}__'\n                    values={{\n                        value: this.state.pretext || '\"\"',\n                    }}\n                />\n            </div>\n        );\n    }\n\n    render() {\n        if (!this.props.open || this.state.cleared) {\n            return null;\n        }\n\n        const items = [];\n        if (this.state.items.length === 0) {\n            if (!this.props.renderNoResults) {\n                return null;\n            }\n\n            items.push(this.renderNoResults());\n        }\n\n        let lastType;\n        for (let i = 0; i < this.state.items.length; i++) {\n            const item = this.state.items[i];\n            const term = this.state.terms[i];\n            const isSelection = term === this.state.selection;\n\n            // ReactComponent names need to be upper case when used in JSX\n            const Component = this.state.components[i];\n\n            if (this.props.renderDividers && item.type !== lastType) {\n                items.push(this.renderDivider(item.type));\n                lastType = item.type;\n            }\n\n            if (item.loading) {\n                items.push(this.renderLoading(item.type));\n                continue;\n            }\n\n            items.push(\n                <Component\n                    key={term}\n                    ref={term}\n                    item={this.state.items[i]}\n                    term={term}\n                    matchedPretext={this.state.matchedPretext[i]}\n                    isSelection={isSelection}\n                    onClick={this.props.onCompleteWord}\n                />\n            );\n        }\n\n        const mainClass = 'suggestion-list suggestion-list--' + this.props.location;\n        const contentClass = 'suggestion-list__content suggestion-list__content--' + this.props.location;\n\n        return (\n            <div className={mainClass}>\n                <div\n                    ref='content'\n                    className={contentClass}\n                >\n                    {items}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {SearchTypes} from 'utils/constants';\n\nexport function setModalSearchTerm(term) {\n    return async (dispatch) => {\n        dispatch({\n            type: SearchTypes.SET_MODAL_SEARCH,\n            data: term,\n        });\n        return {data: true};\n    };\n}\n\nexport function setSystemUsersSearch(term, team = '') {\n    return async (dispatch) => {\n        dispatch({\n            type: SearchTypes.SET_SYSTEM_USERS_SEARCH,\n            data: {term, team},\n        });\n        return {data: true};\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {getPrefix} from 'utils/storage_utils';\n\nexport const getGlobalItem = (state, name, defaultValue) => {\n    const storage = state && state.storage && state.storage.storage;\n\n    return getItemFromStorage(storage, name, defaultValue);\n};\n\nexport const makeGetItem = (name, defaultValue) => {\n    return (state) => {\n        return getGlobalItem(state, getPrefix(state) + name, defaultValue);\n    };\n};\n\nexport const makeGetGlobalItem = (name, defaultValue) => {\n    return (state) => {\n        return getGlobalItem(state, name, defaultValue);\n    };\n};\n\nexport const getItemFromStorage = (storage, name, defaultValue) => {\n    if (storage &&\n        typeof storage[name] !== 'undefined' &&\n        storage[name] !== null &&\n        typeof storage[name].value !== 'undefined' &&\n        storage[name].value !== null) {\n        return storage[name].value;\n    }\n\n    return defaultValue;\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {getSupportedTimezones as getTimezones} from 'mattermost-redux/selectors/entities/general';\nimport moment from 'moment-timezone';\n\nimport store from 'stores/redux_store.jsx';\n\nexport function getSupportedTimezones() {\n    return getTimezones(store.getState());\n}\n\nexport function getBrowserTimezone() {\n    return moment.tz.guess();\n}\n\nexport function getBrowserUtcOffset() {\n    return moment().utcOffset();\n}\n\nexport function getUtcOffsetForTimeZone(timezone) {\n    return moment.tz(timezone).utcOffset();\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport EventEmitter from 'events';\n\nimport {PreferenceTypes} from 'mattermost-redux/action_types';\nimport * as Selectors from 'mattermost-redux/selectors/entities/preferences';\n\nimport store from 'stores/redux_store.jsx';\nimport Constants from 'utils/constants.jsx';\nimport AppDispatcher from '../dispatcher/app_dispatcher.jsx';\n\nconst ActionTypes = Constants.ActionTypes;\n\nconst CHANGE_EVENT = 'change';\n\nclass PreferenceStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.handleEventPayload = this.handleEventPayload.bind(this);\n        this.dispatchToken = AppDispatcher.register(this.handleEventPayload);\n\n        this.preferences = new Map();\n        this.entities = Selectors.getMyPreferences(store.getState());\n        Object.keys(this.entities).forEach((key) => {\n            this.preferences.set(key, this.entities[key].value);\n        });\n\n        store.subscribe(() => {\n            const newEntities = Selectors.getMyPreferences(store.getState());\n            const entities = this.entities;\n            this.entities = newEntities;\n\n            if (entities !== newEntities) {\n                this.preferences = new Map();\n                Object.keys(newEntities).forEach((key) => {\n                    this.preferences.set(key, newEntities[key].value);\n                });\n                this.emitChange();\n            }\n        });\n\n        this.setMaxListeners(600);\n    }\n\n    getKey(category, name) {\n        return `${category}--${name}`;\n    }\n\n    get(category, name, defaultValue = '') {\n        const key = this.getKey(category, name);\n\n        if (!this.preferences.has(key)) {\n            return defaultValue;\n        }\n\n        return this.preferences.get(key);\n    }\n\n    getBool(category, name, defaultValue = false) {\n        const key = this.getKey(category, name);\n\n        if (!this.preferences.has(key)) {\n            return defaultValue;\n        }\n\n        return this.preferences.get(key) !== 'false';\n    }\n\n    getInt(category, name, defaultValue = 0) {\n        const key = this.getKey(category, name);\n\n        if (!this.preferences.has(key)) {\n            return defaultValue;\n        }\n\n        return parseInt(this.preferences.get(key), 10);\n    }\n\n    getObject(category, name, defaultValue = null) {\n        const key = this.getKey(category, name);\n\n        if (!this.preferences.has(key)) {\n            return defaultValue;\n        }\n\n        return JSON.parse(this.preferences.get(key));\n    }\n\n    getCategory(category) {\n        const prefix = category + '--';\n\n        const preferences = new Map();\n\n        for (const [key, value] of this.preferences) {\n            if (key.startsWith(prefix)) {\n                preferences.set(key.substring(prefix.length), value);\n            }\n        }\n\n        return preferences;\n    }\n\n    setPreference(category, name, value) {\n        store.dispatch({\n            type: PreferenceTypes.RECEIVED_PREFERENCES,\n            data: [{category, name, value}],\n        });\n    }\n\n    setPreferencesFromServer(newPreferences) {\n        store.dispatch({\n            type: PreferenceTypes.RECEIVED_PREFERENCES,\n            data: newPreferences,\n        });\n    }\n\n    deletePreference(preference) {\n        store.dispatch({\n            type: PreferenceTypes.DELETED_PREFERENCES,\n            data: [preference],\n        });\n    }\n\n    emitChange(category) {\n        this.emit(CHANGE_EVENT, category);\n    }\n\n    addChangeListener(callback) {\n        this.on(CHANGE_EVENT, callback);\n    }\n\n    removeChangeListener(callback) {\n        this.removeListener(CHANGE_EVENT, callback);\n    }\n\n    getTheme() {\n        return Selectors.getTheme(store.getState());\n    }\n\n    handleEventPayload(payload) {\n        const action = payload.action;\n\n        switch (action.type) {\n        case ActionTypes.RECEIVED_PREFERENCE: {\n            const preference = action.preference;\n            this.setPreference(preference.category, preference.name, preference.value);\n            this.emitChange(preference.category);\n            break;\n        }\n        case ActionTypes.RECEIVED_PREFERENCES:\n            this.setPreferencesFromServer(action.preferences);\n            this.emitChange();\n            break;\n        case ActionTypes.DELETED_PREFERENCES:\n            for (const preference of action.preferences) {\n                this.deletePreference(preference);\n            }\n            this.emitChange();\n            break;\n        case ActionTypes.CLICK_CHANNEL:\n            this.setPreference(action.team_id, 'channel', action.id);\n            break;\n        }\n    }\n}\n\nglobal.PreferenceStore = new PreferenceStore();\nexport default global.PreferenceStore;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport {batchActions} from 'redux-batched-actions';\nimport {ChannelTypes, EmojiTypes, PostTypes, TeamTypes, UserTypes, RoleTypes, GeneralTypes, AdminTypes} from 'mattermost-redux/action_types';\nimport {WebsocketEvents, General} from 'mattermost-redux/constants';\nimport {\n    getChannelAndMyMember,\n    getChannelStats,\n    viewChannel,\n} from 'mattermost-redux/actions/channels';\nimport {setServerVersion} from 'mattermost-redux/actions/general';\nimport {getPosts, getProfilesAndStatusesForPosts, getCustomEmojiForReaction} from 'mattermost-redux/actions/posts';\nimport * as TeamActions from 'mattermost-redux/actions/teams';\nimport {getMe, getStatusesByIds, getProfilesByIds} from 'mattermost-redux/actions/users';\nimport {Client4} from 'mattermost-redux/client';\nimport {getCurrentUser, getCurrentUserId, getStatusForUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getMyTeams} from 'mattermost-redux/selectors/entities/teams';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getChannel} from 'mattermost-redux/selectors/entities/channels';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {loadChannelsForCurrentUser} from 'actions/channel_actions.jsx';\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport {handleNewPost} from 'actions/post_actions.jsx';\nimport * as StatusActions from 'actions/status_actions.jsx';\nimport {loadProfilesForSidebar} from 'actions/user_actions.jsx';\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport BrowserStore from 'stores/browser_store.jsx';\nimport ChannelStore from 'stores/channel_store.jsx';\nimport ErrorStore from 'stores/error_store.jsx';\nimport PreferenceStore from 'stores/preference_store.jsx';\nimport store from 'stores/redux_store.jsx';\nimport TeamStore from 'stores/team_store.jsx';\nimport UserStore from 'stores/user_store.jsx';\nimport WebSocketClient from 'client/web_websocket_client.jsx';\nimport {loadPlugin, loadPluginsIfNecessary, removePlugin} from 'plugins';\nimport {ActionTypes, Constants, AnnouncementBarMessages, Preferences, SocketEvents, UserStatuses} from 'utils/constants.jsx';\nimport {fromAutoResponder} from 'utils/post_utils';\nimport {getSiteURL} from 'utils/url.jsx';\n\nconst dispatch = store.dispatch;\nconst getState = store.getState;\n\nconst MAX_WEBSOCKET_FAILS = 7;\n\nconst pluginEventHandlers = {};\n\nexport function initialize() {\n    if (!window.WebSocket) {\n        console.log('Browser does not support websocket'); //eslint-disable-line no-console\n        return;\n    }\n\n    const config = getConfig(getState());\n    let connUrl = '';\n    if (config.WebsocketURL) {\n        connUrl = config.WebsocketURL;\n    } else {\n        connUrl = new URL(getSiteURL());\n\n        // replace the protocol with a websocket one\n        if (connUrl.protocol === 'https:') {\n            connUrl.protocol = 'wss:';\n        } else {\n            connUrl.protocol = 'ws:';\n        }\n\n        // append a port number if one isn't already specified\n        if (!(/:\\d+$/).test(connUrl.host)) {\n            if (connUrl.protocol === 'wss:') {\n                connUrl.host += ':' + config.WebsocketSecurePort;\n            } else {\n                connUrl.host += ':' + config.WebsocketPort;\n            }\n        }\n\n        connUrl = connUrl.toString();\n    }\n\n    // Strip any trailing slash before appending the pathname below.\n    if (connUrl.length > 0 && connUrl[connUrl.length - 1] === '/') {\n        connUrl = connUrl.substring(0, connUrl.length - 1);\n    }\n\n    connUrl += Client4.getUrlVersion() + '/websocket';\n\n    WebSocketClient.setEventCallback(handleEvent);\n    WebSocketClient.setFirstConnectCallback(handleFirstConnect);\n    WebSocketClient.setReconnectCallback(() => reconnect(false));\n    WebSocketClient.setMissedEventCallback(() => reconnect(false));\n    WebSocketClient.setCloseCallback(handleClose);\n    WebSocketClient.initialize(connUrl);\n}\n\nexport function close() {\n    WebSocketClient.close();\n}\n\nfunction reconnectWebSocket() {\n    close();\n    initialize();\n}\n\nconst pluginReconnectHandlers = {};\n\nexport function registerPluginReconnectHandler(pluginId, handler) {\n    pluginReconnectHandlers[pluginId] = handler;\n}\n\nexport function unregisterPluginReconnectHandler(pluginId) {\n    Reflect.deleteProperty(pluginReconnectHandlers, pluginId);\n}\n\nexport function reconnect(includeWebSocket = true) {\n    if (includeWebSocket) {\n        reconnectWebSocket();\n    }\n\n    loadPluginsIfNecessary();\n\n    Object.values(pluginReconnectHandlers).forEach((handler) => {\n        if (handler && typeof handler === 'function') {\n            handler();\n        }\n    });\n\n    const currentTeamId = getState().entities.teams.currentTeamId;\n    if (currentTeamId) {\n        loadChannelsForCurrentUser();\n        getPosts(ChannelStore.getCurrentId())(dispatch, getState);\n        dispatch(StatusActions.loadStatusesForChannelAndSidebar());\n        TeamActions.getMyTeamUnreads()(dispatch, getState);\n    }\n\n    ErrorStore.setConnectionErrorCount(0);\n    ErrorStore.clearLastError();\n    ErrorStore.emitChange();\n}\n\nlet intervalId = '';\nconst SYNC_INTERVAL_MILLISECONDS = 1000 * 60 * 15; // 15 minutes\n\nexport function startPeriodicSync() {\n    clearInterval(intervalId);\n\n    intervalId = setInterval(\n        () => {\n            if (UserStore.getCurrentUser() != null) {\n                reconnect(false);\n            }\n        },\n        SYNC_INTERVAL_MILLISECONDS\n    );\n}\n\nexport function stopPeriodicSync() {\n    clearInterval(intervalId);\n}\n\nexport function registerPluginWebSocketEvent(pluginId, event, action) {\n    if (!pluginEventHandlers[pluginId]) {\n        pluginEventHandlers[pluginId] = {};\n    }\n    pluginEventHandlers[pluginId][event] = action;\n}\n\nexport function unregisterPluginWebSocketEvent(pluginId, event) {\n    const events = pluginEventHandlers[pluginId];\n    if (!events) {\n        return;\n    }\n\n    Reflect.deleteProperty(events, event);\n}\n\nexport function unregisterAllPluginWebSocketEvents(pluginId) {\n    Reflect.deleteProperty(pluginEventHandlers, pluginId);\n}\n\nfunction handleFirstConnect() {\n    ErrorStore.clearLastError();\n    ErrorStore.emitChange();\n}\n\nfunction handleClose(failCount) {\n    if (failCount > MAX_WEBSOCKET_FAILS) {\n        ErrorStore.storeLastError({message: AnnouncementBarMessages.WEBSOCKET_PORT_ERROR});\n    }\n\n    ErrorStore.setConnectionErrorCount(failCount);\n    ErrorStore.emitChange();\n}\n\nfunction handleEvent(msg) {\n    switch (msg.event) {\n    case SocketEvents.POSTED:\n    case SocketEvents.EPHEMERAL_MESSAGE:\n        handleNewPostEvent(msg);\n        break;\n\n    case SocketEvents.POST_EDITED:\n        handlePostEditEvent(msg);\n        break;\n\n    case SocketEvents.POST_DELETED:\n        handlePostDeleteEvent(msg);\n        break;\n\n    case SocketEvents.LEAVE_TEAM:\n        handleLeaveTeamEvent(msg);\n        break;\n\n    case SocketEvents.UPDATE_TEAM:\n        handleUpdateTeamEvent(msg);\n        break;\n\n    case SocketEvents.DELETE_TEAM:\n        handleDeleteTeamEvent(msg);\n        break;\n\n    case SocketEvents.ADDED_TO_TEAM:\n        handleTeamAddedEvent(msg);\n        break;\n\n    case SocketEvents.USER_ADDED:\n        handleUserAddedEvent(msg);\n        break;\n\n    case SocketEvents.USER_REMOVED:\n        handleUserRemovedEvent(msg);\n        break;\n\n    case SocketEvents.USER_UPDATED:\n        handleUserUpdatedEvent(msg);\n        break;\n\n    case SocketEvents.ROLE_ADDED:\n        handleRoleAddedEvent(msg, dispatch, getState);\n        break;\n\n    case SocketEvents.ROLE_REMOVED:\n        handleRoleRemovedEvent(msg, dispatch, getState);\n        break;\n\n    case SocketEvents.MEMBERROLE_UPDATED:\n        handleUpdateMemberRoleEvent(msg);\n        break;\n\n    case SocketEvents.ROLE_UPDATED:\n        handleRoleUpdatedEvent(msg, dispatch, getState);\n        break;\n\n    case SocketEvents.CHANNEL_CREATED:\n        handleChannelCreatedEvent(msg);\n        break;\n\n    case SocketEvents.CHANNEL_DELETED:\n        handleChannelDeletedEvent(msg);\n        break;\n\n    case SocketEvents.CHANNEL_CONVERTED:\n        handleChannelConvertedEvent(msg);\n        break;\n\n    case SocketEvents.CHANNEL_UPDATED:\n        handleChannelUpdatedEvent(msg);\n        break;\n\n    case SocketEvents.CHANNEL_MEMBER_UPDATED:\n        handleChannelMemberUpdatedEvent(msg);\n        break;\n\n    case SocketEvents.DIRECT_ADDED:\n        handleDirectAddedEvent(msg);\n        break;\n\n    case SocketEvents.PREFERENCE_CHANGED:\n        handlePreferenceChangedEvent(msg);\n        break;\n\n    case SocketEvents.PREFERENCES_CHANGED:\n        handlePreferencesChangedEvent(msg);\n        break;\n\n    case SocketEvents.PREFERENCES_DELETED:\n        handlePreferencesDeletedEvent(msg);\n        break;\n\n    case SocketEvents.TYPING:\n        handleUserTypingEvent(msg);\n        break;\n\n    case SocketEvents.STATUS_CHANGED:\n        handleStatusChangedEvent(msg);\n        break;\n\n    case SocketEvents.HELLO:\n        handleHelloEvent(msg);\n        break;\n\n    case SocketEvents.REACTION_ADDED:\n        handleReactionAddedEvent(msg);\n        break;\n\n    case SocketEvents.REACTION_REMOVED:\n        handleReactionRemovedEvent(msg);\n        break;\n\n    case SocketEvents.EMOJI_ADDED:\n        handleAddEmoji(msg);\n        break;\n\n    case SocketEvents.CHANNEL_VIEWED:\n        handleChannelViewedEvent(msg);\n        break;\n\n    case SocketEvents.PLUGIN_ENABLED:\n        handlePluginEnabled(msg);\n        break;\n\n    case SocketEvents.PLUGIN_DISABLED:\n        handlePluginDisabled(msg);\n        break;\n\n    case SocketEvents.USER_ROLE_UPDATED:\n        handleUserRoleUpdated(msg);\n        break;\n\n    case SocketEvents.CONFIG_CHANGED:\n        handleConfigChanged(msg);\n        break;\n\n    case SocketEvents.LICENSE_CHANGED:\n        handleLicenseChanged(msg);\n        break;\n\n    case SocketEvents.PLUGIN_STATUSES_CHANGED:\n        handlePluginStatusesChangedEvent(msg);\n        break;\n\n    default:\n    }\n\n    Object.values(pluginEventHandlers).forEach((pluginEvents) => {\n        if (!pluginEvents) {\n            return;\n        }\n\n        if (pluginEvents.hasOwnProperty(msg.event) && typeof pluginEvents[msg.event] === 'function') {\n            pluginEvents[msg.event](msg);\n        }\n    });\n}\n\n// handleChannelConvertedEvent handles updating of channel which is converted from public to private\nfunction handleChannelConvertedEvent(msg) {\n    const channelId = msg.data.channel_id;\n    if (channelId) {\n        const channel = getChannel(getState(), channelId);\n        if (channel) {\n            dispatch({\n                type: ChannelTypes.RECEIVED_CHANNEL,\n                data: {...channel, type: General.PRIVATE_CHANNEL},\n            });\n        }\n    }\n}\n\nfunction handleChannelUpdatedEvent(msg) {\n    const channel = JSON.parse(msg.data.channel);\n    dispatch({type: ChannelTypes.RECEIVED_CHANNEL, data: channel});\n}\n\nfunction handleChannelMemberUpdatedEvent(msg) {\n    const channelMember = JSON.parse(msg.data.channelMember);\n    dispatch({type: ChannelTypes.RECEIVED_MY_CHANNEL_MEMBER, data: channelMember});\n}\n\nfunction handleNewPostEvent(msg) {\n    const post = JSON.parse(msg.data.post);\n    dispatch(handleNewPost(post, msg));\n\n    getProfilesAndStatusesForPosts([post], dispatch, getState);\n\n    if (post.user_id !== UserStore.getCurrentId() && !fromAutoResponder(post)) {\n        UserStore.setStatus(post.user_id, UserStatuses.ONLINE);\n    }\n}\n\nfunction handlePostEditEvent(msg) {\n    // Store post\n    const post = JSON.parse(msg.data.post);\n    dispatch({\n        type: PostTypes.RECEIVED_POSTS,\n        data: {\n            order: [],\n            posts: {\n                [post.id]: post,\n            },\n        },\n        channelId: post.channel_id,\n    });\n\n    getProfilesAndStatusesForPosts([post], dispatch, getState);\n\n    // Update channel state\n    if (ChannelStore.getCurrentId() === msg.broadcast.channel_id) {\n        if (window.isActive) {\n            viewChannel(ChannelStore.getCurrentId())(dispatch, getState);\n        }\n    }\n\n    // Needed for search store\n    AppDispatcher.handleViewAction({\n        type: Constants.ActionTypes.POST_UPDATED,\n        post,\n    });\n}\n\nfunction handlePostDeleteEvent(msg) {\n    const post = JSON.parse(msg.data.post);\n    dispatch({type: PostTypes.POST_DELETED, data: post});\n\n    // Needed for search store\n    AppDispatcher.handleViewAction({\n        type: Constants.ActionTypes.POST_DELETED,\n        post,\n    });\n}\n\nasync function handleTeamAddedEvent(msg) {\n    await TeamActions.getTeam(msg.data.team_id)(dispatch, getState);\n    await TeamActions.getMyTeamMembers()(dispatch, getState);\n    await TeamActions.getMyTeamUnreads()(dispatch, getState);\n}\n\nfunction handleLeaveTeamEvent(msg) {\n    if (UserStore.getCurrentId() === msg.data.user_id) {\n        TeamStore.removeMyTeamMember(msg.data.team_id);\n\n        // if they are on the team being removed redirect them to default team\n        if (TeamStore.getCurrentId() === msg.data.team_id) {\n            BrowserStore.removeGlobalItem('team');\n            BrowserStore.removeGlobalItem(msg.data.team_id);\n\n            if (!global.location.pathname.startsWith('/admin_console')) {\n                GlobalActions.redirectUserToDefaultTeam();\n            }\n        }\n\n        dispatch(batchActions([\n            {\n                type: UserTypes.RECEIVED_PROFILE_NOT_IN_TEAM,\n                data: {id: msg.data.team_id, user_id: msg.data.user_id},\n            },\n            {\n                type: TeamTypes.REMOVE_MEMBER_FROM_TEAM,\n                data: {team_id: msg.data.team_id, user_id: msg.data.user_id},\n            },\n        ]));\n    } else {\n        UserStore.removeProfileFromTeam(msg.data.team_id, msg.data.user_id);\n        TeamStore.removeMemberInTeam(msg.data.team_id, msg.data.user_id);\n    }\n}\n\nfunction handleUpdateTeamEvent(msg) {\n    TeamStore.updateTeam(msg.data.team);\n}\n\nfunction handleDeleteTeamEvent(msg) {\n    const deletedTeam = JSON.parse(msg.data.team);\n    const state = store.getState();\n    const {teams} = state.entities.teams;\n    if (\n        deletedTeam &&\n        teams &&\n        teams[deletedTeam.id] &&\n        teams[deletedTeam.id].delete_at === 0\n    ) {\n        const {currentUserId} = state.entities.users;\n        const {currentTeamId, myMembers} = state.entities.teams;\n        const teamMembers = Object.values(myMembers);\n        const teamMember = teamMembers.find((m) => m.user_id === currentUserId && m.team_id === currentTeamId);\n\n        let newTeamId = '';\n        if (\n            deletedTeam &&\n            teamMember &&\n            deletedTeam.id === teamMember.team_id\n        ) {\n            const myTeams = {};\n            getMyTeams(state).forEach((t) => {\n                myTeams[t.id] = t;\n            });\n\n            for (let i = 0; i < teamMembers.length; i++) {\n                const memberTeamId = teamMembers[i].team_id;\n                if (\n                    myTeams &&\n                    myTeams[memberTeamId] &&\n                    myTeams[memberTeamId].delete_at === 0 &&\n                    deletedTeam.id !== memberTeamId\n                ) {\n                    newTeamId = memberTeamId;\n                    break;\n                }\n            }\n        }\n\n        dispatch(batchActions([\n            {type: TeamTypes.RECEIVED_TEAM_DELETED, data: {id: deletedTeam.id}},\n            {type: TeamTypes.UPDATED_TEAM, data: deletedTeam},\n        ]));\n\n        if (newTeamId) {\n            dispatch({type: TeamTypes.SELECT_TEAM, data: newTeamId});\n            browserHistory.push(`${TeamStore.getCurrentTeamUrl()}/channels/${Constants.DEFAULT_CHANNEL}`);\n        } else {\n            browserHistory.push('/');\n        }\n    }\n}\n\nfunction handleUpdateMemberRoleEvent(msg) {\n    const member = JSON.parse(msg.data.member);\n    TeamStore.updateMyRoles(member);\n}\n\nfunction handleDirectAddedEvent(msg) {\n    getChannelAndMyMember(msg.broadcast.channel_id)(dispatch, getState);\n    PreferenceStore.setPreference(Preferences.CATEGORY_DIRECT_CHANNEL_SHOW, msg.data.teammate_id, 'true');\n    loadProfilesForSidebar();\n}\n\nfunction handleUserAddedEvent(msg) {\n    if (ChannelStore.getCurrentId() === msg.broadcast.channel_id) {\n        getChannelStats(ChannelStore.getCurrentId())(dispatch, getState);\n        dispatch({\n            type: UserTypes.RECEIVED_PROFILE_IN_CHANNEL,\n            data: {id: msg.broadcast.channel_id, user_id: msg.data.user_id},\n        });\n    }\n\n    if (TeamStore.getCurrentId() === msg.data.team_id && UserStore.getCurrentId() === msg.data.user_id) {\n        getChannelAndMyMember(msg.broadcast.channel_id)(dispatch, getState);\n    }\n}\n\nfunction handleUserRemovedEvent(msg) {\n    if (UserStore.getCurrentId() === msg.broadcast.user_id) {\n        loadChannelsForCurrentUser();\n\n        if (msg.data.channel_id === ChannelStore.getCurrentId()) {\n            if (msg.data.remover_id !== msg.broadcast.user_id &&\n                $('#removed_from_channel').length > 0) {\n                var sentState = {};\n                sentState.channelName = ChannelStore.getCurrent().display_name;\n                sentState.remover = UserStore.getProfile(msg.data.remover_id).username;\n\n                BrowserStore.setItem('channel-removed-state', sentState);\n                $('#removed_from_channel').modal('show');\n            }\n\n            GlobalActions.emitCloseRightHandSide();\n\n            const townsquare = ChannelStore.getByName(Constants.DEFAULT_CHANNEL);\n            browserHistory.push(TeamStore.getCurrentTeamRelativeUrl() + '/channels/' + townsquare.name);\n        }\n\n        dispatch({\n            type: ChannelTypes.LEAVE_CHANNEL,\n            data: {id: msg.data.channel_id, user_id: msg.broadcast.user_id},\n        });\n    } else if (ChannelStore.getCurrentId() === msg.broadcast.channel_id) {\n        getChannelStats(ChannelStore.getCurrentId())(dispatch, getState);\n        dispatch({\n            type: UserTypes.RECEIVED_PROFILE_NOT_IN_CHANNEL,\n            data: {id: msg.broadcast.channel_id, user_id: msg.data.user_id},\n        });\n    }\n}\n\nfunction handleUserUpdatedEvent(msg) {\n    const currentUser = getCurrentUser(getState());\n    const user = msg.data.user;\n\n    if (currentUser.id === user.id) {\n        if (user.update_at > currentUser.update_at) {\n            // Need to request me to make sure we don't override with sanitized fields from the\n            // websocket event\n            getMe()(dispatch, getState);\n        }\n    } else {\n        UserStore.saveProfile(user);\n    }\n}\n\nfunction handleRoleAddedEvent(msg) {\n    const role = JSON.parse(msg.data.role);\n\n    dispatch({\n        type: RoleTypes.RECEIVED_ROLE,\n        data: role,\n    });\n}\n\nfunction handleRoleRemovedEvent(msg) {\n    const role = JSON.parse(msg.data.role);\n\n    dispatch({\n        type: RoleTypes.ROLE_DELETED,\n        data: role,\n    });\n}\n\nfunction handleRoleUpdatedEvent(msg) {\n    const role = JSON.parse(msg.data.role);\n\n    dispatch({\n        type: RoleTypes.RECEIVED_ROLE,\n        data: role,\n    });\n}\n\nfunction handleChannelCreatedEvent(msg) {\n    const channelId = msg.data.channel_id;\n    const teamId = msg.data.team_id;\n\n    if (TeamStore.getCurrentId() === teamId && !ChannelStore.getChannelById(channelId)) {\n        getChannelAndMyMember(channelId)(dispatch, getState);\n    }\n}\n\nfunction handleChannelDeletedEvent(msg) {\n    const state = getState();\n    const config = getConfig(state);\n    const viewArchivedChannels = config.ExperimentalViewArchivedChannels === 'true';\n    if (ChannelStore.getCurrentId() === msg.data.channel_id && !viewArchivedChannels) {\n        const teamUrl = TeamStore.getCurrentTeamRelativeUrl();\n        browserHistory.push(teamUrl + '/channels/' + Constants.DEFAULT_CHANNEL);\n    }\n\n    dispatch({type: ChannelTypes.RECEIVED_CHANNEL_DELETED, data: {id: msg.data.channel_id, team_id: msg.broadcast.team_id, deleteAt: msg.data.delete_at}}, getState);\n}\n\nfunction handlePreferenceChangedEvent(msg) {\n    const preference = JSON.parse(msg.data.preference);\n    GlobalActions.emitPreferenceChangedEvent(preference);\n}\n\nfunction handlePreferencesChangedEvent(msg) {\n    const preferences = JSON.parse(msg.data.preferences);\n    GlobalActions.emitPreferencesChangedEvent(preferences);\n}\n\nfunction handlePreferencesDeletedEvent(msg) {\n    const preferences = JSON.parse(msg.data.preferences);\n    GlobalActions.emitPreferencesDeletedEvent(preferences);\n}\n\nfunction handleUserTypingEvent(msg) {\n    const state = getState();\n    const config = getConfig(state);\n    const currentUserId = getCurrentUserId(state);\n    const currentUser = getCurrentUser(state);\n    const userId = msg.data.user_id;\n\n    const data = {\n        id: msg.broadcast.channel_id + msg.data.parent_id,\n        userId,\n        now: Date.now(),\n    };\n\n    dispatch({\n        type: WebsocketEvents.TYPING,\n        data,\n    }, getState);\n\n    setTimeout(() => {\n        dispatch({\n            type: WebsocketEvents.STOP_TYPING,\n            data,\n        }, getState);\n    }, parseInt(config.TimeBetweenUserTypingUpdatesMilliseconds, 10));\n\n    if (!currentUser && userId !== currentUserId) {\n        getProfilesByIds([userId])(dispatch, getState);\n    }\n\n    const status = getStatusForUserId(state, userId);\n    if (status !== General.ONLINE) {\n        getStatusesByIds([userId])(dispatch, getState);\n    }\n}\n\nfunction handleStatusChangedEvent(msg) {\n    UserStore.setStatus(msg.data.user_id, msg.data.status);\n}\n\nfunction handleHelloEvent(msg) {\n    setServerVersion(msg.data.server_version)(dispatch, getState);\n}\n\nfunction handleReactionAddedEvent(msg) {\n    const reaction = JSON.parse(msg.data.reaction);\n\n    dispatch(getCustomEmojiForReaction(reaction.emoji_name));\n\n    dispatch({\n        type: PostTypes.RECEIVED_REACTION,\n        data: reaction,\n    });\n}\n\nfunction handleAddEmoji(msg) {\n    const data = JSON.parse(msg.data.emoji);\n\n    dispatch({\n        type: EmojiTypes.RECEIVED_CUSTOM_EMOJI,\n        data,\n    });\n}\n\nfunction handleReactionRemovedEvent(msg) {\n    const reaction = JSON.parse(msg.data.reaction);\n\n    dispatch({\n        type: PostTypes.REACTION_DELETED,\n        data: reaction,\n    });\n}\n\nfunction handleChannelViewedEvent(msg) {\n    // Useful for when multiple devices have the app open to different channels\n    if ((!window.isActive || ChannelStore.getCurrentId() !== msg.data.channel_id) &&\n        UserStore.getCurrentId() === msg.broadcast.user_id) {\n        // Mark previous and next channel as read\n        ChannelStore.resetCounts([msg.data.channel_id]);\n    }\n}\n\nfunction handlePluginEnabled(msg) {\n    const manifest = msg.data.manifest;\n    store.dispatch({type: ActionTypes.RECEIVED_WEBAPP_PLUGIN, data: manifest});\n    loadPlugin(manifest);\n}\n\nfunction handlePluginDisabled(msg) {\n    const manifest = msg.data.manifest;\n    store.dispatch({type: ActionTypes.REMOVED_WEBAPP_PLUGIN, data: manifest});\n    removePlugin(manifest);\n}\n\nfunction handleUserRoleUpdated(msg) {\n    const user = store.getState().entities.users.profiles[msg.data.user_id];\n\n    if (user) {\n        const roles = msg.data.roles;\n        const demoted = user.roles.includes(Constants.PERMISSIONS_SYSTEM_ADMIN) && !roles.includes(Constants.PERMISSIONS_SYSTEM_ADMIN);\n\n        store.dispatch({type: UserTypes.RECEIVED_PROFILE, data: {...user, roles}});\n\n        if (demoted && global.location.pathname.startsWith('/admin_console')) {\n            GlobalActions.redirectUserToDefaultTeam();\n        }\n    }\n}\n\nfunction handleConfigChanged(msg) {\n    store.dispatch({type: GeneralTypes.CLIENT_CONFIG_RECEIVED, data: msg.data.config});\n}\n\nfunction handleLicenseChanged(msg) {\n    store.dispatch({type: GeneralTypes.CLIENT_LICENSE_RECEIVED, data: msg.data.license});\n}\n\nfunction handlePluginStatusesChangedEvent(msg) {\n    store.dispatch({type: AdminTypes.RECEIVED_PLUGIN_STATUSES, data: msg.data.plugin_statuses});\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport EventEmitter from 'events';\n\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport Constants from 'utils/constants.jsx';\n\nconst ActionTypes = Constants.ActionTypes;\n\nconst COMPLETE_WORD_EVENT = 'complete_word';\nconst PRETEXT_CHANGED_EVENT = 'pretext_changed';\nconst SUGGESTIONS_CHANGED_EVENT = 'suggestions_changed';\nconst POPOVER_MENTION_KEY_CLICK_EVENT = 'popover_mention_key_click';\n\nclass SuggestionStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.addSuggestionsChangedListener = this.addSuggestionsChangedListener.bind(this);\n        this.removeSuggestionsChangedListener = this.removeSuggestionsChangedListener.bind(this);\n        this.emitSuggestionsChanged = this.emitSuggestionsChanged.bind(this);\n\n        this.addPretextChangedListener = this.addPretextChangedListener.bind(this);\n        this.removePretextChangedListener = this.removePretextChangedListener.bind(this);\n        this.emitPretextChanged = this.emitPretextChanged.bind(this);\n\n        this.addCompleteWordListener = this.addCompleteWordListener.bind(this);\n        this.removeCompleteWordListener = this.removeCompleteWordListener.bind(this);\n        this.emitCompleteWord = this.emitCompleteWord.bind(this);\n\n        this.addPopoverMentionKeyClickListener = this.addPopoverMentionKeyClickListener.bind(this);\n        this.removePopoverMentionKeyClickListener = this.removePopoverMentionKeyClickListener.bind(this);\n        this.emitPopoverMentionKeyClick = this.emitPopoverMentionKeyClick.bind(this);\n\n        this.handleEventPayload = this.handleEventPayload.bind(this);\n        this.dispatchToken = AppDispatcher.register(this.handleEventPayload);\n\n        // this.suggestions stores the state of all SuggestionBoxes by mapping their unique identifier to an\n        // object with the following fields:\n        // pretext: the text before the cursor\n        // matchedPretext: a list of the text before the cursor that will be replaced if the corresponding autocomplete term is selected\n        // terms: a list of strings which the previously typed text may be replaced by\n        // items: a list of objects backing the terms which may be used in rendering\n        // components: a list of react components that can be used to render their corresponding item\n        // selection: the term currently selected by the keyboard\n        this.suggestions = new Map();\n    }\n\n    addSuggestionsChangedListener(id, callback) {\n        this.on(SUGGESTIONS_CHANGED_EVENT + id, callback);\n    }\n    removeSuggestionsChangedListener(id, callback) {\n        this.removeListener(SUGGESTIONS_CHANGED_EVENT + id, callback);\n    }\n    emitSuggestionsChanged(id) {\n        this.emit(SUGGESTIONS_CHANGED_EVENT + id);\n    }\n\n    addPretextChangedListener(id, callback) {\n        this.on(PRETEXT_CHANGED_EVENT + id, callback);\n    }\n    removePretextChangedListener(id, callback) {\n        this.removeListener(PRETEXT_CHANGED_EVENT + id, callback);\n    }\n    emitPretextChanged(id, pretext) {\n        this.emit(PRETEXT_CHANGED_EVENT + id, pretext);\n    }\n\n    addCompleteWordListener(id, callback) {\n        this.on(COMPLETE_WORD_EVENT + id, callback);\n    }\n    removeCompleteWordListener(id, callback) {\n        this.removeListener(COMPLETE_WORD_EVENT + id, callback);\n    }\n    emitCompleteWord(id, term, matchedPretext) {\n        this.emit(COMPLETE_WORD_EVENT + id, term, matchedPretext);\n    }\n\n    addPopoverMentionKeyClickListener(id, callback) {\n        this.on(POPOVER_MENTION_KEY_CLICK_EVENT + id, callback);\n    }\n    removePopoverMentionKeyClickListener(id, callback) {\n        this.removeListener(POPOVER_MENTION_KEY_CLICK_EVENT + id, callback);\n    }\n    emitPopoverMentionKeyClick(isRHS, mentionKey) {\n        this.emit(POPOVER_MENTION_KEY_CLICK_EVENT + isRHS, mentionKey);\n    }\n\n    registerSuggestionBox(id) {\n        this.suggestions.set(id, {\n            cleared: true,\n            pretext: '',\n            matchedPretext: [],\n            terms: [],\n            items: [],\n            components: [],\n            selection: '',\n        });\n    }\n\n    unregisterSuggestionBox(id) {\n        this.suggestions.delete(id);\n    }\n\n    clearSuggestions(id) {\n        const suggestion = this.getSuggestions(id);\n\n        suggestion.cleared = true;\n        suggestion.matchedPretext = [];\n        suggestion.terms = [];\n        suggestion.items = [];\n        suggestion.components = [];\n    }\n\n    clearSelection(id) {\n        const suggestion = this.getSuggestions(id);\n\n        suggestion.selection = '';\n    }\n\n    suggestionBoxExists(id) {\n        return this.suggestions.has(id);\n    }\n\n    // hasSuggestions returns true if the given suggestion box has selectable items.\n    //\n    // This adopts a convention introduced by a particular suggestion provider tagging a loading\n    // item with a flag indicating same. Ideally, this would be modelled as a concept within the\n    // suggestion store itself.\n    hasSuggestions(id) {\n        return this.getSuggestions(id).items.some((item) => !item.loading);\n    }\n\n    setPretext(id, pretext) {\n        const suggestion = this.getSuggestions(id);\n\n        suggestion.pretext = pretext;\n    }\n\n    addSuggestion(id, term, item, component, matchedPretext) {\n        const suggestion = this.getSuggestions(id);\n\n        suggestion.cleared = false;\n        suggestion.terms.push(term);\n        suggestion.items.push(item);\n        suggestion.components.push(component);\n        suggestion.matchedPretext.push(matchedPretext);\n    }\n\n    addSuggestions(id, terms, items, component, matchedPretext) {\n        const suggestion = this.getSuggestions(id);\n\n        suggestion.cleared = false;\n        suggestion.terms.push(...terms);\n        suggestion.items.push(...items);\n\n        for (let i = 0; i < terms.length; i++) {\n            suggestion.components.push(component);\n            suggestion.matchedPretext.push(matchedPretext);\n        }\n    }\n\n    // make sure that if suggestions exist, then one of them is selected. return true if the selection changes.\n    ensureSelectionExists(id) {\n        const suggestion = this.getSuggestions(id);\n\n        if (suggestion.terms.length > 0) {\n            // if the current selection is no longer in the map, select the first term in the list\n            if (!suggestion.selection || suggestion.terms.indexOf(suggestion.selection) === -1) {\n                suggestion.selection = suggestion.terms[0];\n\n                return true;\n            }\n        } else if (suggestion.selection) {\n            suggestion.selection = '';\n\n            return true;\n        }\n\n        return false;\n    }\n\n    getPretext(id) {\n        return this.getSuggestions(id).pretext;\n    }\n\n    getSelectedMatchedPretext(id) {\n        const suggestion = this.getSuggestions(id);\n\n        for (let i = 0; i < suggestion.terms.length; i++) {\n            if (suggestion.terms[i] === suggestion.selection) {\n                return suggestion.matchedPretext[i];\n            }\n        }\n\n        return '';\n    }\n\n    getItems(id) {\n        return this.getSuggestions(id).items;\n    }\n\n    getTerms(id) {\n        return this.getSuggestions(id).terms;\n    }\n\n    getComponents(id) {\n        return this.getSuggestions(id).components;\n    }\n\n    getSuggestions(id) {\n        return this.suggestions.get(id) || {};\n    }\n\n    getSelection(id) {\n        return this.getSuggestions(id).selection;\n    }\n\n    selectNext(id) {\n        this.setSelectionByDelta(id, 1);\n    }\n\n    selectPrevious(id) {\n        this.setSelectionByDelta(id, -1);\n    }\n\n    setSelectionByDelta(id, delta) {\n        const suggestion = this.suggestions.get(id);\n\n        let selectionIndex = suggestion.terms.indexOf(suggestion.selection);\n\n        if (selectionIndex === -1) {\n            // this should never happen since selection should always be in terms\n            throw new Error('selection is not in terms');\n        }\n\n        selectionIndex += delta;\n\n        if (selectionIndex < 0) {\n            selectionIndex = 0;\n        } else if (selectionIndex > suggestion.terms.length - 1) {\n            selectionIndex = suggestion.terms.length - 1;\n        }\n\n        suggestion.selection = suggestion.terms[selectionIndex];\n    }\n\n    checkIfPretextMatches(id, matchedPretext) {\n        const pretext = this.getPretext(id) || '';\n        return pretext.endsWith(matchedPretext);\n    }\n\n    completeWord(id, term = '', matchedPretext = '') {\n        this.emitCompleteWord(id, term || this.getSelection(id), matchedPretext || this.getSelectedMatchedPretext(id));\n\n        this.setPretext(id, '');\n        this.clearSuggestions(id);\n        this.clearSelection(id);\n        this.emitSuggestionsChanged(id);\n    }\n\n    handleEventPayload(payload) {\n        const {type, id, ...other} = payload.action;\n\n        if (id && !this.suggestionBoxExists(id)) {\n            return;\n        }\n\n        switch (type) {\n        case ActionTypes.SUGGESTION_PRETEXT_CHANGED:\n            // Clear the suggestions if the pretext is empty or ends with whitespace\n            if (other.pretext === '') {\n                this.clearSuggestions(id);\n            }\n\n            other.pretext = other.pretext.toLowerCase();\n\n            this.setPretext(id, other.pretext);\n            this.emitPretextChanged(id, other.pretext);\n\n            this.ensureSelectionExists(id);\n            this.emitSuggestionsChanged(id);\n            break;\n        case ActionTypes.SUGGESTION_RECEIVED_SUGGESTIONS:\n            if (!this.checkIfPretextMatches(id, other.matchedPretext)) {\n                // These suggestions are out of date since the pretext has changed\n                return;\n            }\n\n            this.clearSuggestions(id);\n            this.addSuggestions(id, other.terms, other.items, other.component, other.matchedPretext);\n            this.ensureSelectionExists(id);\n\n            this.emitSuggestionsChanged(id);\n            break;\n        case ActionTypes.SUGGESTION_CLEAR_SUGGESTIONS:\n            this.setPretext(id, '');\n            this.clearSuggestions(id);\n            this.clearSelection(id);\n            this.emitSuggestionsChanged(id);\n            break;\n        case ActionTypes.SUGGESTION_SELECT_NEXT:\n            this.selectNext(id);\n            this.emitSuggestionsChanged(id);\n            break;\n        case ActionTypes.SUGGESTION_SELECT_PREVIOUS:\n            this.selectPrevious(id);\n            this.emitSuggestionsChanged(id);\n            break;\n        case ActionTypes.SUGGESTION_COMPLETE_WORD:\n            this.completeWord(id, other.term, other.matchedPretext);\n            break;\n        case ActionTypes.POPOVER_MENTION_KEY_CLICK:\n            this.emitPopoverMentionKeyClick(other.isRHS, other.mentionKey);\n            break;\n        }\n    }\n}\n\nexport default new SuggestionStore();\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class StatusAwayAvatarIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='13px'\n                    height='13px'\n                    viewBox='0 0 12 12'\n                    style={style}\n                    role='icon'\n                    aria-label={localizeMessage('mobile.set_status.away.icon', 'Away Icon')}\n                >\n                    <path\n                        className='away--icon'\n                        d='M9.081,5.712C9.267,5.712 9.417,5.863 9.417,6.048L9.417,9.086L11.864,10.499C12.025,10.592 12.08,10.797 11.987,10.958L11.482,11.832C11.39,11.993 11.184,12.048 11.023,11.955L7.904,10.154C7.788,10.087 7.727,9.961 7.737,9.836C7.736,9.827 7.736,9.818 7.736,9.809L7.736,6.048C7.736,5.863 7.886,5.712 8.072,5.712L9.081,5.712ZM4.812,11.513L4.605,11.513C2.325,11.41 0.253,10.374 0.046,9.027C-0.058,8.923 0.046,8.509 0.046,8.405C0.15,7.576 0.357,6.437 0.771,5.815C0.978,5.401 2.015,5.297 2.015,5.297C2.015,5.297 2.015,7.369 4.605,7.369L5.019,7.369C4.915,7.784 4.812,8.198 4.812,8.612C4.812,9.648 5.226,10.581 5.848,11.41C5.537,11.513 5.123,11.513 4.812,11.513ZM4.605,0.117C6.034,0.117 7.195,1.277 7.195,2.707C7.195,4.136 6.034,5.297 4.605,5.297C3.175,5.297 2.015,4.136 2.015,2.707C2.015,1.277 3.175,0.117 4.605,0.117Z'\n                    />\n                </svg>\n            </span>\n        );\n    }\n}\n\nconst style = {\n    fillRule: 'evenodd',\n    clipRule: 'evenodd',\n    strokeLinejoin: 'round',\n    strokeMiterlimit: 1.41421,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class StatusAwayIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='100%'\n                    height='100%'\n                    viewBox='0 0 20 20'\n                    style={style}\n                    role='icon'\n                    aria-label={localizeMessage('mobile.set_status.away.icon', 'Away Icon')}\n                >\n                    <path\n                        className='away--icon'\n                        d='M10,0C15.519,0 20,4.481 20,10C20,15.519 15.519,20 10,20C4.481,20 0,15.519 0,10C0,4.481 4.481,0 10,0ZM10.27,3C10.949,3 11.5,3.586 11.5,4.307L11.5,9.379L15.002,12.881C15.492,13.37 15.499,14.158 15.019,14.638L14.638,15.019C14.158,15.499 13.37,15.492 12.881,15.002L8.887,11.008C8.739,10.861 8.636,10.686 8.576,10.501C8.528,10.402 8.5,10.299 8.5,10.193L8.5,4.307C8.5,3.586 9.051,3 9.73,3L10.27,3Z'\n                    />\n                </svg>\n            </span>\n        );\n    }\n}\n\nconst style = {\n    fillRule: 'evenodd',\n    clipRule: 'evenodd',\n    strokeLinejoin: 'round',\n    strokeMiterlimit: 1.41421,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class StatusDndAvatarIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    id='Layer_1'\n                    x='0px'\n                    y='0px'\n                    width='13px'\n                    height='13px'\n                    viewBox='-299 391 12 12'\n                    style={style}\n                    role='icon'\n                    aria-label={localizeMessage('mobile.set_status.dnd.icon', 'Do Not Disturb Icon')}\n                >\n                    <g>\n                        <ellipse\n                            className='dnd--icon'\n                            cx='-294.6'\n                            cy='394'\n                            rx='2.5'\n                            ry='2.5'\n                        />\n                        <path\n                            className='dnd--icon'\n                            d='M-293.8,399.4c0-0.4,0.1-0.7,0.2-1c-0.3,0.1-0.6,0.2-1,0.2c-2.5,0-2.5-2-2.5-2s-1,0.1-1.2,0.5c-0.4,0.6-0.6,1.7-0.7,2.5 c0,0.1-0.1,0.5,0,0.6c0.2,1.3,2.2,2.3,4.4,2.4c0,0,0.1,0,0.1,0c0,0,0.1,0,0.1,0c0.7,0,1.4-0.1,2-0.3 C-293.3,401.5-293.8,400.5-293.8,399.4z'\n                        />\n                    </g>\n                    <path\n                        className='dnd--icon'\n                        d='M-287,400c0,0.1-0.1,0.1-0.1,0.1l-4.9,0c-0.1,0-0.1-0.1-0.1-0.1v-1.6c0-0.1,0.1-0.1,0.1-0.1l4.9,0c0.1,0,0.1,0.1,0.1,0.1 V400z'\n                    />\n                </svg>\n            </span>\n        );\n    }\n}\n\nconst style = {\n    enableBackground: 'new -299 391 12 12',\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class StatusDndIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='100%'\n                    height='100%'\n                    viewBox='0 0 20 20'\n                    style={style}\n                    role='icon'\n                    aria-label={localizeMessage('mobile.set_status.dnd.icon', 'Do Not Disturb Icon')}\n                >\n                    <path\n                        className='dnd--icon'\n                        d='M10,0c5.519,0 10,4.481 10,10c0,5.519 -4.481,10 -10,10c-5.519,0 -10,-4.481 -10,-10c0,-5.519 4.481,-10 10,-10Zm5.25,8.5l-10.5,0c-0.414,0 -0.75,0.336 -0.75,0.75l0,1.5c0,0.414 0.336,0.75 0.75,0.75l10.5,0c0.414,0 0.75,-0.336 0.75,-0.75l0,-1.5c0,-0.414 -0.336,-0.75 -0.75,-0.75Z'\n                    />\n                </svg>\n            </span>\n        );\n    }\n}\n\nconst style = {\n    fillRule: 'evenodd',\n    clipRule: 'evenodd',\n    strokeLinejoin: 'round',\n    strokeMiterlimit: 1.41421,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class StatusDndAvatarIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    id='Layer_1'\n                    x='0px'\n                    y='0px'\n                    width='13px'\n                    height='13px'\n                    viewBox='-299 391 12 12'\n                    style={style}\n                    role='icon'\n                    aria-label={localizeMessage('mobile.set_status.offline.icon', 'Offline Icon')}\n                >\n                    <g>\n                        <g>\n                            <ellipse\n                                className='offline--icon'\n                                cx='-294.5'\n                                cy='394'\n                                rx='2.5'\n                                ry='2.5'\n                            />\n                            <path\n                                className='offline--icon'\n                                d='M-294.3,399.7c0-0.4,0.1-0.8,0.2-1.2c-0.1,0-0.2,0-0.4,0c-2.5,0-2.5-2-2.5-2s-1,0.1-1.2,0.5c-0.4,0.6-0.6,1.7-0.7,2.5 c0,0.1-0.1,0.5,0,0.6c0.2,1.3,2.2,2.3,4.4,2.4h0.1h0.1c0.3,0,0.7,0,1-0.1C-293.9,401.6-294.3,400.7-294.3,399.7z'\n                            />\n                        </g>\n                    </g>\n                    <g>\n                        <path\n                            className='offline--icon'\n                            d='M-288.9,399.4l1.8-1.8c0.1-0.1,0.1-0.3,0-0.3l-0.7-0.7c-0.1-0.1-0.3-0.1-0.3,0l-1.8,1.8l-1.8-1.8c-0.1-0.1-0.3-0.1-0.3,0 l-0.7,0.7c-0.1,0.1-0.1,0.3,0,0.3l1.8,1.8l-1.8,1.8c-0.1,0.1-0.1,0.3,0,0.3l0.7,0.7c0.1,0.1,0.3,0.1,0.3,0l1.8-1.8l1.8,1.8 c0.1,0.1,0.3,0.1,0.3,0l0.7-0.7c0.1-0.1,0.1-0.3,0-0.3L-288.9,399.4z'\n                        />\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n\nconst style = {\n    enableBackground: 'new -299 391 12 12',\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class StatusOfflineIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='100%'\n                    height='100%'\n                    className='offline--icon'\n                    viewBox='0 0 20 20'\n                    style={style}\n                    role='icon'\n                    aria-label={localizeMessage('mobile.set_status.offline.icon', 'Offline Icon')}\n                >\n                    <path d='M10,0c5.519,0 10,4.481 10,10c0,5.519 -4.481,10 -10,10c-5.519,0 -10,-4.481 -10,-10c0,-5.519 4.481,-10 10,-10Zm0,2c4.415,0 8,3.585 8,8c0,4.415 -3.585,8 -8,8c-4.415,0 -8,-3.585 -8,-8c0,-4.415 3.585,-8 8,-8Z'/>\n                </svg>\n            </span>\n        );\n    }\n}\n\nconst style = {\n    fillRule: 'evenodd',\n    clipRule: 'evenodd',\n    strokeLinejoin: 'round',\n    strokeMiterlimit: 1.41421,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class StatusOnlineAvatarIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    id='Layer_1'\n                    x='0px'\n                    y='0px'\n                    width='13px'\n                    height='13px'\n                    viewBox='-243 245 12 12'\n                    style={style}\n                    role='icon'\n                    aria-label={localizeMessage('mobile.set_status.online.icon', 'Online Icon')}\n                >\n                    <g>\n                        <path\n                            className='online--icon'\n                            d='M-236,250.5C-236,250.5-236,250.5-236,250.5C-236,250.5-236,250.5-236,250.5C-236,250.5-236,250.5-236,250.5z'\n                        />\n                        <ellipse\n                            className='online--icon'\n                            cx='-238.5'\n                            cy='248'\n                            rx='2.5'\n                            ry='2.5'\n                        />\n                    </g>\n                    <path\n                        className='online--icon'\n                        d='M-238.9,253.8c0-0.4,0.1-0.9,0.2-1.3c-2.2-0.2-2.2-2-2.2-2s-1,0.1-1.2,0.5c-0.4,0.6-0.6,1.7-0.7,2.5c0,0.1-0.1,0.5,0,0.6 c0.2,1.3,2.2,2.3,4.4,2.4c0,0,0.1,0,0.1,0c0,0,0.1,0,0.1,0c0,0,0.1,0,0.1,0C-238.7,255.7-238.9,254.8-238.9,253.8z'\n                    />\n                    <g>\n                        <g>\n                            <path\n                                className='online--icon'\n                                d='M-232.3,250.1l1.3,1.3c0,0,0,0.1,0,0.1l-4.1,4.1c0,0,0,0-0.1,0c0,0,0,0,0,0l-2.7-2.7c0,0,0-0.1,0-0.1l1.2-1.2 c0,0,0.1,0,0.1,0l1.4,1.4l2.9-2.9C-232.4,250.1-232.3,250.1-232.3,250.1z'\n                            />\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n\nconst style = {\n    enableBackground: 'new -243 245 12 12',\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class StatusOnlineIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='100%'\n                    height='100%'\n                    viewBox='0 0 20 20'\n                    style={style}\n                    role='icon'\n                    aria-label={localizeMessage('mobile.set_status.online.icon', 'Online Icon')}\n                >\n                    <path\n                        className='online--icon'\n                        d='M10,0c5.519,0 10,4.481 10,10c0,5.519 -4.481,10 -10,10c-5.519,0 -10,-4.481 -10,-10c0,-5.519 4.481,-10 10,-10Zm6.19,7.18c0,0.208 -0.075,0.384 -0.224,0.53l-5.782,5.64l-1.087,1.059c-0.149,0.146 -0.33,0.218 -0.543,0.218c-0.213,0 -0.394,-0.072 -0.543,-0.218l-1.086,-1.059l-2.891,-2.82c-0.149,-0.146 -0.224,-0.322 -0.224,-0.53c0,-0.208 0.075,-0.384 0.224,-0.53l1.086,-1.059c0.149,-0.146 0.33,-0.218 0.543,-0.218c0.213,0 0.394,0.072 0.543,0.218l2.348,2.298l5.24,-5.118c0.149,-0.146 0.33,-0.218 0.543,-0.218c0.213,0 0.394,0.072 0.543,0.218l1.086,1.059c0.149,0.146 0.224,0.322 0.224,0.53Z'\n                    />\n                </svg>\n            </span>\n        );\n    }\n}\n\nconst style = {\n    fillRule: 'evenodd',\n    clipRule: 'evenodd',\n    strokeLinejoin: 'round',\n    strokeMiterlimit: 1.41421,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport StatusAwayAvatarIcon from 'components/svg/status_away_avatar_icon';\nimport StatusAwayIcon from 'components/svg/status_away_icon';\nimport StatusDndAvatarIcon from 'components/svg/status_dnd_avatar_icon';\nimport StatusDndIcon from 'components/svg/status_dnd_icon';\nimport StatusOfflineAvatarIcon from 'components/svg/status_offline_avatar_icon';\nimport StatusOfflineIcon from 'components/svg/status_offline_icon';\nimport StatusOnlineAvatarIcon from 'components/svg/status_online_avatar_icon';\nimport StatusOnlineIcon from 'components/svg/status_online_icon';\n\nexport default class StatusIcon extends React.PureComponent {\n    static propTypes = {\n        status: PropTypes.string,\n        className: PropTypes.string,\n        type: PropTypes.string,\n    };\n\n    static defaultProps = {\n        className: '',\n    };\n\n    render() {\n        const {status, type} = this.props;\n\n        if (!status) {\n            return null;\n        }\n\n        const className = 'status ' + this.props.className;\n\n        let IconComponent = 'span';\n        if (type === 'avatar') {\n            if (status === 'online') {\n                IconComponent = StatusOnlineAvatarIcon;\n            } else if (status === 'away') {\n                IconComponent = StatusAwayAvatarIcon;\n            } else if (status === 'dnd') {\n                IconComponent = StatusDndAvatarIcon;\n            } else {\n                IconComponent = StatusOfflineAvatarIcon;\n            }\n        } else if (status === 'online') {\n            IconComponent = StatusOnlineIcon;\n        } else if (status === 'away') {\n            IconComponent = StatusAwayIcon;\n        } else if (status === 'dnd') {\n            IconComponent = StatusDndIcon;\n        } else {\n            IconComponent = StatusOfflineIcon;\n        }\n\n        return <IconComponent className={className}/>;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport marked from 'marked';\n\nimport * as PostUtils from 'utils/post_utils.jsx';\nimport * as SyntaxHighlighting from 'utils/syntax_highlighting.jsx';\nimport * as TextFormatting from 'utils/text_formatting.jsx';\nimport {getScheme, isUrlSafe} from 'utils/url.jsx';\n\nexport default class Renderer extends marked.Renderer {\n    constructor(options, formattingOptions = {}) {\n        super(options);\n\n        this.heading = this.heading.bind(this);\n        this.paragraph = this.paragraph.bind(this);\n        this.text = this.text.bind(this);\n\n        this.formattingOptions = formattingOptions;\n    }\n\n    code(code, language) {\n        let usedLanguage = language || '';\n        usedLanguage = usedLanguage.toLowerCase();\n\n        if (usedLanguage === 'tex' || usedLanguage === 'latex') {\n            return `<div data-latex=\"${TextFormatting.escapeHtml(code)}\"></div>`;\n        }\n\n        // treat html as xml to prevent injection attacks\n        if (usedLanguage === 'html') {\n            usedLanguage = 'xml';\n        }\n\n        let className = 'post-code';\n        if (!usedLanguage) {\n            className += ' post-code--wrap';\n        }\n\n        let header = '';\n        if (SyntaxHighlighting.canHighlight(usedLanguage)) {\n            header = (\n                '<span class=\"post-code__language\">' +\n                    SyntaxHighlighting.getLanguageName(usedLanguage) +\n                '</span>'\n            );\n        }\n\n        // if we have to apply syntax highlighting AND highlighting of search terms, create two copies\n        // of the code block, one with syntax highlighting applied and another with invisible text, but\n        // search term highlighting and overlap them\n        const content = SyntaxHighlighting.highlight(usedLanguage, code);\n        let searchedContent = '';\n\n        if (this.formattingOptions.searchPatterns) {\n            const tokens = new Map();\n\n            let searched = TextFormatting.sanitizeHtml(code);\n            searched = TextFormatting.highlightSearchTerms(searched, tokens, this.formattingOptions.searchPatterns);\n\n            if (tokens.size > 0) {\n                searched = TextFormatting.replaceTokens(searched, tokens);\n\n                searchedContent = (\n                    '<div class=\"post-code__search-highlighting\">' +\n                        searched +\n                    '</div>'\n                );\n            }\n        }\n\n        return (\n            '<div class=\"' + className + '\">' +\n                header +\n                '<code class=\"hljs\">' +\n                    searchedContent +\n                    content +\n                '</code>' +\n            '</div>'\n        );\n    }\n\n    codespan(text) {\n        let output = text;\n\n        if (this.formattingOptions.searchPatterns) {\n            const tokens = new Map();\n            output = TextFormatting.highlightSearchTerms(output, tokens, this.formattingOptions.searchPatterns);\n            output = TextFormatting.replaceTokens(output, tokens);\n        }\n\n        return (\n            '<span class=\"codespan__pre-wrap\">' +\n                '<code>' +\n                    output +\n                '</code>' +\n            '</span>'\n        );\n    }\n\n    br() {\n        if (this.formattingOptions.singleline) {\n            return ' ';\n        }\n\n        return super.br();\n    }\n\n    image(href, title, text) {\n        let src = href;\n        let dimensions = [];\n        const parts = href.split(' ');\n        if (parts.length > 1) {\n            const lastPart = parts.pop();\n            src = parts.join(' ');\n            if (lastPart[0] === '=') {\n                dimensions = lastPart.substr(1).split('x');\n                if (dimensions.length === 2 && dimensions[1] === '') {\n                    dimensions[1] = 'auto';\n                }\n            }\n        }\n        src = PostUtils.getImageSrc(src, this.formattingOptions.proxyImages);\n        let out = '<img src=\"' + src + '\" alt=\"' + text + '\"';\n        if (title) {\n            out += ' title=\"' + title + '\"';\n        }\n        if (dimensions.length > 0) {\n            out += ' width=\"' + dimensions[0] + '\"';\n        }\n        if (dimensions.length > 1) {\n            out += ' height=\"' + dimensions[1] + '\"';\n        }\n        out += ' class=\"markdown-inline-img\"';\n        out += this.options.xhtml ? '/>' : '>';\n        return out;\n    }\n\n    heading(text, level) {\n        return `<h${level} class=\"markdown__heading\">${text}</h${level}>`;\n    }\n\n    link(href, title, text, isUrl) {\n        let outHref = href;\n\n        if (!href.startsWith('/')) {\n            const scheme = getScheme(href);\n            if (!scheme) {\n                outHref = `http://${outHref}`;\n            } else if (isUrl && this.formattingOptions.autolinkedUrlSchemes) {\n                const isValidUrl = this.formattingOptions.autolinkedUrlSchemes.indexOf(scheme) !== -1;\n\n                if (!isValidUrl) {\n                    return text;\n                }\n            }\n        }\n\n        if (!isUrlSafe(unescapeHtmlEntities(href))) {\n            return text;\n        }\n\n        let output = '<a class=\"theme markdown__link';\n\n        if (this.formattingOptions.searchPatterns) {\n            for (const pattern of this.formattingOptions.searchPatterns) {\n                if (pattern.pattern.test(href)) {\n                    output += ' search-highlight';\n                    break;\n                }\n            }\n        }\n\n        output += '\" href=\"' + outHref + '\" rel=\"noreferrer\"';\n\n        // special case for team invite links, channel links, and permalinks that are inside the app\n        let internalLink = false;\n        if (this.formattingOptions.siteURL) {\n            const pattern = new RegExp('^' + TextFormatting.escapeRegex(this.formattingOptions.siteURL) + '\\\\/(?:signup_user_complete|admin_console|[^\\\\/]+\\\\/(?:pl|channels|messages))\\\\/');\n\n            internalLink = pattern.test(outHref);\n        }\n\n        if (internalLink) {\n            output += ' data-link=\"' + outHref.substring(this.formattingOptions.siteURL.length) + '\"';\n        } else {\n            output += ' target=\"_blank\"';\n        }\n\n        if (title) {\n            output += ' title=\"' + title + '\"';\n        }\n\n        // remove any links added to the text by hashtag or mention parsing since they'll break this link\n        output += '>' + text.replace(/<\\/?a[^>]*>/g, '') + '</a>';\n\n        return output;\n    }\n\n    paragraph(text) {\n        if (this.formattingOptions.singleline) {\n            return `<p class=\"markdown__paragraph-inline\">${text}</p>`;\n        }\n\n        return super.paragraph(text);\n    }\n\n    table(header, body) {\n        return `<div class=\"table-responsive\"><table class=\"markdown__table\"><thead>${header}</thead><tbody>${body}</tbody></table></div>`;\n    }\n\n    tablerow(content) {\n        return `<tr>${content}</tr>`;\n    }\n\n    tablecell(content, flags) {\n        return marked.Renderer.prototype.tablecell(content, flags).trim();\n    }\n\n    listitem(text, bullet) {\n        const taskListReg = /^\\[([ |xX])] /;\n        const isTaskList = taskListReg.exec(text);\n\n        if (isTaskList) {\n            return `<li class=\"list-item--task-list\">${'<input type=\"checkbox\" disabled=\"disabled\" ' + (isTaskList[1] === ' ' ? '' : 'checked=\"checked\" ') + '/> '}${text.replace(taskListReg, '')}</li>`;\n        }\n\n        if ((/^\\d+.$/).test(bullet)) {\n            // this is a numbered list item so override the numbering\n            return `<li value=\"${parseInt(bullet, 10)}\">${text}</li>`;\n        }\n\n        return `<li>${text}</li>`;\n    }\n\n    text(txt) {\n        return TextFormatting.doFormatText(txt, this.formattingOptions);\n    }\n}\n\n// Marked helper functions that should probably just be exported\n\nfunction unescapeHtmlEntities(html) {\n    return html.replace(/&([#\\w]+);/g, (_, m) => {\n        const n = m.toLowerCase();\n        if (n === 'colon') {\n            return ':';\n        } else if (n.charAt(0) === '#') {\n            return n.charAt(1) === 'x' ?\n                String.fromCharCode(parseInt(n.substring(2), 16)) :\n                String.fromCharCode(Number(n.substring(1)));\n        }\n        return '';\n    });\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport marked from 'marked';\n\nimport {convertEntityToCharacter} from 'utils/text_formatting.jsx';\nimport RemoveMarkdown from 'utils/markdown/remove_markdown';\n\nimport Renderer from './renderer';\n\nconst removeMarkdown = new RemoveMarkdown();\n\nexport function format(text, options = {}) {\n    return formatWithRenderer(text, new Renderer(null, options));\n}\n\nexport function formatWithRenderer(text, renderer) {\n    const markdownOptions = {\n        renderer,\n        sanitize: true,\n        gfm: true,\n        tables: true,\n        mangle: false,\n    };\n\n    return marked(text, markdownOptions);\n}\n\nexport function stripMarkdown(text) {\n    if (typeof text === 'string' && text.length > 0) {\n        return convertEntityToCharacter(formatWithRenderer(text, removeMarkdown)).trim();\n    }\n\n    return text;\n}\n","// This file is automatically generated via `make emojis`. Do not modify it manually.\n\n/* eslint-disable */\n\nimport emojis from './emoji.json';\n\nexport const Emojis = emojis;\n\nexport const EmojiIndicesByAlias = new Map([[\"grinning\",0],[\"smiley\",1],[\"smile\",2],[\"grin\",3],[\"laughing\",4],[\"satisfied\",4],[\"sweat_smile\",5],[\"joy\",6],[\"rofl\",7],[\"relaxed\",8],[\"blush\",9],[\"innocent\",10],[\"slightly_smiling_face\",11],[\"upside_down_face\",12],[\"wink\",13],[\"relieved\",14],[\"heart_eyes\",15],[\"kissing_heart\",16],[\"kissing\",17],[\"kissing_smiling_eyes\",18],[\"kissing_closed_eyes\",19],[\"yum\",20],[\"stuck_out_tongue_winking_eye\",21],[\"stuck_out_tongue_closed_eyes\",22],[\"stuck_out_tongue\",23],[\"money_mouth_face\",24],[\"hugs\",25],[\"nerd_face\",26],[\"sunglasses\",27],[\"clown_face\",28],[\"cowboy_hat_face\",29],[\"smirk\",30],[\"unamused\",31],[\"disappointed\",32],[\"pensive\",33],[\"worried\",34],[\"confused\",35],[\"slightly_frowning_face\",36],[\"frowning_face\",37],[\"persevere\",38],[\"confounded\",39],[\"tired_face\",40],[\"weary\",41],[\"triumph\",42],[\"angry\",43],[\"rage\",44],[\"pout\",44],[\"no_mouth\",45],[\"neutral_face\",46],[\"expressionless\",47],[\"hushed\",48],[\"frowning\",49],[\"anguished\",50],[\"open_mouth\",51],[\"astonished\",52],[\"dizzy_face\",53],[\"flushed\",54],[\"scream\",55],[\"fearful\",56],[\"cold_sweat\",57],[\"cry\",58],[\"disappointed_relieved\",59],[\"drooling_face\",60],[\"sob\",61],[\"sweat\",62],[\"sleepy\",63],[\"sleeping\",64],[\"roll_eyes\",65],[\"thinking\",66],[\"lying_face\",67],[\"grimacing\",68],[\"zipper_mouth_face\",69],[\"nauseated_face\",70],[\"sneezing_face\",71],[\"mask\",72],[\"face_with_thermometer\",73],[\"face_with_head_bandage\",74],[\"smiling_imp\",75],[\"imp\",76],[\"japanese_ogre\",77],[\"japanese_goblin\",78],[\"hankey\",79],[\"poop\",79],[\"shit\",79],[\"ghost\",80],[\"skull\",81],[\"skull_and_crossbones\",82],[\"alien\",83],[\"space_invader\",84],[\"robot\",85],[\"jack_o_lantern\",86],[\"smiley_cat\",87],[\"smile_cat\",88],[\"joy_cat\",89],[\"heart_eyes_cat\",90],[\"smirk_cat\",91],[\"kissing_cat\",92],[\"scream_cat\",93],[\"crying_cat_face\",94],[\"pouting_cat\",95],[\"open_hands\",96],[\"raised_hands\",97],[\"clap\",98],[\"pray\",99],[\"handshake\",100],[\"+1\",101],[\"thumbsup\",101],[\"-1\",102],[\"thumbsdown\",102],[\"fist_oncoming\",103],[\"facepunch\",103],[\"punch\",103],[\"fist_raised\",104],[\"fist\",104],[\"fist_left\",105],[\"fist_right\",106],[\"crossed_fingers\",107],[\"v\",108],[\"metal\",109],[\"ok_hand\",110],[\"point_left\",111],[\"point_right\",112],[\"point_up_2\",113],[\"point_down\",114],[\"point_up\",115],[\"hand\",116],[\"raised_hand\",116],[\"raised_back_of_hand\",117],[\"raised_hand_with_fingers_splayed\",118],[\"vulcan_salute\",119],[\"wave\",120],[\"call_me_hand\",121],[\"muscle\",122],[\"middle_finger\",123],[\"fu\",123],[\"writing_hand\",124],[\"selfie\",125],[\"nail_care\",126],[\"ring\",127],[\"lipstick\",128],[\"kiss\",129],[\"lips\",130],[\"tongue\",131],[\"ear\",132],[\"nose\",133],[\"footprints\",134],[\"eye\",135],[\"eyes\",136],[\"speaking_head\",137],[\"bust_in_silhouette\",138],[\"busts_in_silhouette\",139],[\"baby\",140],[\"boy\",141],[\"girl\",142],[\"man\",143],[\"woman\",144],[\"blonde_woman\",145],[\"blonde_man\",146],[\"person_with_blond_hair\",146],[\"older_man\",147],[\"older_woman\",148],[\"man_with_gua_pi_mao\",149],[\"woman_with_turban\",150],[\"man_with_turban\",151],[\"policewoman\",152],[\"policeman\",153],[\"cop\",153],[\"construction_worker_woman\",154],[\"construction_worker_man\",155],[\"construction_worker\",155],[\"guardswoman\",156],[\"guardsman\",157],[\"female_detective\",158],[\"male_detective\",159],[\"detective\",159],[\"woman_health_worker\",160],[\"man_health_worker\",161],[\"woman_farmer\",162],[\"man_farmer\",163],[\"woman_cook\",164],[\"man_cook\",165],[\"woman_student\",166],[\"man_student\",167],[\"woman_singer\",168],[\"man_singer\",169],[\"woman_teacher\",170],[\"man_teacher\",171],[\"woman_factory_worker\",172],[\"man_factory_worker\",173],[\"woman_technologist\",174],[\"man_technologist\",175],[\"woman_office_worker\",176],[\"man_office_worker\",177],[\"woman_mechanic\",178],[\"man_mechanic\",179],[\"woman_scientist\",180],[\"man_scientist\",181],[\"woman_artist\",182],[\"man_artist\",183],[\"woman_firefighter\",184],[\"man_firefighter\",185],[\"woman_pilot\",186],[\"man_pilot\",187],[\"woman_astronaut\",188],[\"man_astronaut\",189],[\"woman_judge\",190],[\"man_judge\",191],[\"mrs_claus\",192],[\"santa\",193],[\"princess\",194],[\"prince\",195],[\"bride_with_veil\",196],[\"man_in_tuxedo\",197],[\"angel\",198],[\"pregnant_woman\",199],[\"bowing_woman\",200],[\"bowing_man\",201],[\"bow\",201],[\"tipping_hand_woman\",202],[\"information_desk_person\",202],[\"tipping_hand_man\",203],[\"no_good_woman\",204],[\"no_good\",204],[\"ng_woman\",204],[\"no_good_man\",205],[\"ng_man\",205],[\"ok_woman\",206],[\"ok_man\",207],[\"raising_hand_woman\",208],[\"raising_hand\",208],[\"raising_hand_man\",209],[\"woman_facepalming\",210],[\"man_facepalming\",211],[\"woman_shrugging\",212],[\"man_shrugging\",213],[\"pouting_woman\",214],[\"person_with_pouting_face\",214],[\"pouting_man\",215],[\"frowning_woman\",216],[\"person_frowning\",216],[\"frowning_man\",217],[\"haircut_woman\",218],[\"haircut\",218],[\"haircut_man\",219],[\"massage_woman\",220],[\"massage\",220],[\"massage_man\",221],[\"business_suit_levitating\",222],[\"dancer\",223],[\"man_dancing\",224],[\"dancing_women\",225],[\"dancers\",225],[\"dancing_men\",226],[\"walking_woman\",227],[\"walking_man\",228],[\"walking\",228],[\"running_woman\",229],[\"running_man\",230],[\"runner\",230],[\"running\",230],[\"couple\",231],[\"two_women_holding_hands\",232],[\"two_men_holding_hands\",233],[\"couple_with_heart_woman_man\",234],[\"couple_with_heart\",234],[\"couple_with_heart_woman_woman\",235],[\"couple_with_heart_man_man\",236],[\"couplekiss_man_woman\",237],[\"couplekiss_woman_woman\",238],[\"couplekiss_man_man\",239],[\"family_man_woman_boy\",240],[\"family\",240],[\"family_man_woman_girl\",241],[\"family_man_woman_girl_boy\",242],[\"family_man_woman_boy_boy\",243],[\"family_man_woman_girl_girl\",244],[\"family_woman_woman_boy\",245],[\"family_woman_woman_girl\",246],[\"family_woman_woman_girl_boy\",247],[\"family_woman_woman_boy_boy\",248],[\"family_woman_woman_girl_girl\",249],[\"family_man_man_boy\",250],[\"family_man_man_girl\",251],[\"family_man_man_girl_boy\",252],[\"family_man_man_boy_boy\",253],[\"family_man_man_girl_girl\",254],[\"family_woman_boy\",255],[\"family_woman_girl\",256],[\"family_woman_girl_boy\",257],[\"family_woman_boy_boy\",258],[\"family_woman_girl_girl\",259],[\"family_man_boy\",260],[\"family_man_girl\",261],[\"family_man_girl_boy\",262],[\"family_man_boy_boy\",263],[\"family_man_girl_girl\",264],[\"womans_clothes\",265],[\"shirt\",266],[\"tshirt\",266],[\"jeans\",267],[\"necktie\",268],[\"dress\",269],[\"bikini\",270],[\"kimono\",271],[\"high_heel\",272],[\"sandal\",273],[\"boot\",274],[\"mans_shoe\",275],[\"shoe\",275],[\"athletic_shoe\",276],[\"womans_hat\",277],[\"tophat\",278],[\"mortar_board\",279],[\"crown\",280],[\"rescue_worker_helmet\",281],[\"school_satchel\",282],[\"pouch\",283],[\"purse\",284],[\"handbag\",285],[\"briefcase\",286],[\"eyeglasses\",287],[\"dark_sunglasses\",288],[\"closed_umbrella\",289],[\"open_umbrella\",290],[\"dog\",291],[\"cat\",292],[\"mouse\",293],[\"hamster\",294],[\"rabbit\",295],[\"fox_face\",296],[\"bear\",297],[\"panda_face\",298],[\"koala\",299],[\"tiger\",300],[\"lion\",301],[\"cow\",302],[\"pig\",303],[\"pig_nose\",304],[\"frog\",305],[\"monkey_face\",306],[\"see_no_evil\",307],[\"hear_no_evil\",308],[\"speak_no_evil\",309],[\"monkey\",310],[\"chicken\",311],[\"penguin\",312],[\"bird\",313],[\"baby_chick\",314],[\"hatching_chick\",315],[\"hatched_chick\",316],[\"duck\",317],[\"eagle\",318],[\"owl\",319],[\"bat\",320],[\"wolf\",321],[\"boar\",322],[\"horse\",323],[\"unicorn\",324],[\"bee\",325],[\"honeybee\",325],[\"bug\",326],[\"butterfly\",327],[\"snail\",328],[\"shell\",329],[\"beetle\",330],[\"ant\",331],[\"spider\",332],[\"spider_web\",333],[\"turtle\",334],[\"snake\",335],[\"lizard\",336],[\"scorpion\",337],[\"crab\",338],[\"squid\",339],[\"octopus\",340],[\"shrimp\",341],[\"tropical_fish\",342],[\"fish\",343],[\"blowfish\",344],[\"dolphin\",345],[\"flipper\",345],[\"shark\",346],[\"whale\",347],[\"whale2\",348],[\"crocodile\",349],[\"leopard\",350],[\"tiger2\",351],[\"water_buffalo\",352],[\"ox\",353],[\"cow2\",354],[\"deer\",355],[\"dromedary_camel\",356],[\"camel\",357],[\"elephant\",358],[\"rhinoceros\",359],[\"gorilla\",360],[\"racehorse\",361],[\"pig2\",362],[\"goat\",363],[\"ram\",364],[\"sheep\",365],[\"dog2\",366],[\"poodle\",367],[\"cat2\",368],[\"rooster\",369],[\"turkey\",370],[\"dove\",371],[\"rabbit2\",372],[\"mouse2\",373],[\"rat\",374],[\"chipmunk\",375],[\"feet\",376],[\"paw_prints\",376],[\"dragon\",377],[\"dragon_face\",378],[\"cactus\",379],[\"christmas_tree\",380],[\"evergreen_tree\",381],[\"deciduous_tree\",382],[\"palm_tree\",383],[\"seedling\",384],[\"herb\",385],[\"shamrock\",386],[\"four_leaf_clover\",387],[\"bamboo\",388],[\"tanabata_tree\",389],[\"leaves\",390],[\"fallen_leaf\",391],[\"maple_leaf\",392],[\"mushroom\",393],[\"ear_of_rice\",394],[\"bouquet\",395],[\"tulip\",396],[\"rose\",397],[\"wilted_flower\",398],[\"sunflower\",399],[\"blossom\",400],[\"cherry_blossom\",401],[\"hibiscus\",402],[\"earth_americas\",403],[\"earth_africa\",404],[\"earth_asia\",405],[\"full_moon\",406],[\"waning_gibbous_moon\",407],[\"last_quarter_moon\",408],[\"waning_crescent_moon\",409],[\"new_moon\",410],[\"waxing_crescent_moon\",411],[\"first_quarter_moon\",412],[\"moon\",413],[\"waxing_gibbous_moon\",413],[\"new_moon_with_face\",414],[\"full_moon_with_face\",415],[\"sun_with_face\",416],[\"first_quarter_moon_with_face\",417],[\"last_quarter_moon_with_face\",418],[\"crescent_moon\",419],[\"dizzy\",420],[\"star\",421],[\"star2\",422],[\"sparkles\",423],[\"zap\",424],[\"fire\",425],[\"boom\",426],[\"collision\",426],[\"comet\",427],[\"sunny\",428],[\"sun_behind_small_cloud\",429],[\"partly_sunny\",430],[\"sun_behind_large_cloud\",431],[\"sun_behind_rain_cloud\",432],[\"rainbow\",433],[\"cloud\",434],[\"cloud_with_rain\",435],[\"cloud_with_lightning_and_rain\",436],[\"cloud_with_lightning\",437],[\"cloud_with_snow\",438],[\"snowman_with_snow\",439],[\"snowman\",440],[\"snowflake\",441],[\"wind_face\",442],[\"dash\",443],[\"tornado\",444],[\"fog\",445],[\"ocean\",446],[\"droplet\",447],[\"sweat_drops\",448],[\"umbrella\",449],[\"green_apple\",450],[\"apple\",451],[\"pear\",452],[\"tangerine\",453],[\"orange\",453],[\"mandarin\",453],[\"lemon\",454],[\"banana\",455],[\"watermelon\",456],[\"grapes\",457],[\"strawberry\",458],[\"melon\",459],[\"cherries\",460],[\"peach\",461],[\"pineapple\",462],[\"kiwi_fruit\",463],[\"avocado\",464],[\"tomato\",465],[\"eggplant\",466],[\"cucumber\",467],[\"carrot\",468],[\"corn\",469],[\"hot_pepper\",470],[\"potato\",471],[\"sweet_potato\",472],[\"chestnut\",473],[\"peanuts\",474],[\"honey_pot\",475],[\"croissant\",476],[\"bread\",477],[\"baguette_bread\",478],[\"cheese\",479],[\"egg\",480],[\"fried_egg\",481],[\"bacon\",482],[\"pancakes\",483],[\"fried_shrimp\",484],[\"poultry_leg\",485],[\"meat_on_bone\",486],[\"pizza\",487],[\"hotdog\",488],[\"hamburger\",489],[\"fries\",490],[\"stuffed_flatbread\",491],[\"taco\",492],[\"burrito\",493],[\"green_salad\",494],[\"shallow_pan_of_food\",495],[\"spaghetti\",496],[\"ramen\",497],[\"stew\",498],[\"fish_cake\",499],[\"sushi\",500],[\"bento\",501],[\"curry\",502],[\"rice\",503],[\"rice_ball\",504],[\"rice_cracker\",505],[\"oden\",506],[\"dango\",507],[\"shaved_ice\",508],[\"ice_cream\",509],[\"icecream\",510],[\"cake\",511],[\"birthday\",512],[\"custard\",513],[\"lollipop\",514],[\"candy\",515],[\"chocolate_bar\",516],[\"popcorn\",517],[\"doughnut\",518],[\"cookie\",519],[\"milk_glass\",520],[\"baby_bottle\",521],[\"coffee\",522],[\"tea\",523],[\"sake\",524],[\"beer\",525],[\"beers\",526],[\"clinking_glasses\",527],[\"wine_glass\",528],[\"tumbler_glass\",529],[\"cocktail\",530],[\"tropical_drink\",531],[\"champagne\",532],[\"spoon\",533],[\"fork_and_knife\",534],[\"plate_with_cutlery\",535],[\"soccer\",536],[\"basketball\",537],[\"football\",538],[\"baseball\",539],[\"tennis\",540],[\"volleyball\",541],[\"rugby_football\",542],[\"8ball\",543],[\"ping_pong\",544],[\"badminton\",545],[\"goal_net\",546],[\"ice_hockey\",547],[\"field_hockey\",548],[\"cricket\",549],[\"golf\",550],[\"bow_and_arrow\",551],[\"fishing_pole_and_fish\",552],[\"boxing_glove\",553],[\"martial_arts_uniform\",554],[\"ice_skate\",555],[\"ski\",556],[\"skier\",557],[\"snowboarder\",558],[\"weight_lifting_woman\",559],[\"weight_lifting_man\",560],[\"person_fencing\",561],[\"women_wrestling\",562],[\"men_wrestling\",563],[\"woman_cartwheeling\",564],[\"man_cartwheeling\",565],[\"basketball_woman\",566],[\"basketball_man\",567],[\"woman_playing_handball\",568],[\"man_playing_handball\",569],[\"golfing_woman\",570],[\"golfing_man\",571],[\"surfing_woman\",572],[\"surfing_man\",573],[\"surfer\",573],[\"swimming_woman\",574],[\"swimming_man\",575],[\"swimmer\",575],[\"woman_playing_water_polo\",576],[\"man_playing_water_polo\",577],[\"rowing_woman\",578],[\"rowing_man\",579],[\"rowboat\",579],[\"horse_racing\",580],[\"biking_woman\",581],[\"biking_man\",582],[\"bicyclist\",582],[\"mountain_biking_woman\",583],[\"mountain_biking_man\",584],[\"mountain_bicyclist\",584],[\"running_shirt_with_sash\",585],[\"medal_sports\",586],[\"medal_military\",587],[\"1st_place_medal\",588],[\"2nd_place_medal\",589],[\"3rd_place_medal\",590],[\"trophy\",591],[\"rosette\",592],[\"reminder_ribbon\",593],[\"ticket\",594],[\"tickets\",595],[\"circus_tent\",596],[\"woman_juggling\",597],[\"man_juggling\",598],[\"performing_arts\",599],[\"art\",600],[\"clapper\",601],[\"microphone\",602],[\"headphones\",603],[\"musical_score\",604],[\"musical_keyboard\",605],[\"drum\",606],[\"saxophone\",607],[\"trumpet\",608],[\"guitar\",609],[\"violin\",610],[\"game_die\",611],[\"dart\",612],[\"bowling\",613],[\"video_game\",614],[\"slot_machine\",615],[\"car\",616],[\"red_car\",616],[\"taxi\",617],[\"blue_car\",618],[\"bus\",619],[\"trolleybus\",620],[\"racing_car\",621],[\"police_car\",622],[\"ambulance\",623],[\"fire_engine\",624],[\"minibus\",625],[\"truck\",626],[\"articulated_lorry\",627],[\"tractor\",628],[\"kick_scooter\",629],[\"bike\",630],[\"motor_scooter\",631],[\"motorcycle\",632],[\"rotating_light\",633],[\"oncoming_police_car\",634],[\"oncoming_bus\",635],[\"oncoming_automobile\",636],[\"oncoming_taxi\",637],[\"aerial_tramway\",638],[\"mountain_cableway\",639],[\"suspension_railway\",640],[\"railway_car\",641],[\"train\",642],[\"mountain_railway\",643],[\"monorail\",644],[\"bullettrain_side\",645],[\"bullettrain_front\",646],[\"light_rail\",647],[\"steam_locomotive\",648],[\"train2\",649],[\"metro\",650],[\"tram\",651],[\"station\",652],[\"helicopter\",653],[\"small_airplane\",654],[\"airplane\",655],[\"flight_departure\",656],[\"flight_arrival\",657],[\"rocket\",658],[\"artificial_satellite\",659],[\"seat\",660],[\"canoe\",661],[\"boat\",662],[\"sailboat\",662],[\"motor_boat\",663],[\"speedboat\",664],[\"passenger_ship\",665],[\"ferry\",666],[\"ship\",667],[\"anchor\",668],[\"construction\",669],[\"fuelpump\",670],[\"busstop\",671],[\"vertical_traffic_light\",672],[\"traffic_light\",673],[\"world_map\",674],[\"moyai\",675],[\"statue_of_liberty\",676],[\"fountain\",677],[\"tokyo_tower\",678],[\"european_castle\",679],[\"japanese_castle\",680],[\"stadium\",681],[\"ferris_wheel\",682],[\"roller_coaster\",683],[\"carousel_horse\",684],[\"parasol_on_ground\",685],[\"beach_umbrella\",686],[\"desert_island\",687],[\"mountain\",688],[\"mountain_snow\",689],[\"mount_fuji\",690],[\"volcano\",691],[\"desert\",692],[\"camping\",693],[\"tent\",694],[\"railway_track\",695],[\"motorway\",696],[\"building_construction\",697],[\"factory\",698],[\"house\",699],[\"house_with_garden\",700],[\"houses\",701],[\"derelict_house\",702],[\"office\",703],[\"department_store\",704],[\"post_office\",705],[\"european_post_office\",706],[\"hospital\",707],[\"bank\",708],[\"hotel\",709],[\"convenience_store\",710],[\"school\",711],[\"love_hotel\",712],[\"wedding\",713],[\"classical_building\",714],[\"church\",715],[\"mosque\",716],[\"synagogue\",717],[\"kaaba\",718],[\"shinto_shrine\",719],[\"japan\",720],[\"rice_scene\",721],[\"national_park\",722],[\"sunrise\",723],[\"sunrise_over_mountains\",724],[\"stars\",725],[\"sparkler\",726],[\"fireworks\",727],[\"city_sunrise\",728],[\"city_sunset\",729],[\"cityscape\",730],[\"night_with_stars\",731],[\"milky_way\",732],[\"bridge_at_night\",733],[\"foggy\",734],[\"watch\",735],[\"iphone\",736],[\"calling\",737],[\"computer\",738],[\"keyboard\",739],[\"desktop_computer\",740],[\"printer\",741],[\"computer_mouse\",742],[\"trackball\",743],[\"joystick\",744],[\"clamp\",745],[\"minidisc\",746],[\"floppy_disk\",747],[\"cd\",748],[\"dvd\",749],[\"vhs\",750],[\"camera\",751],[\"camera_flash\",752],[\"video_camera\",753],[\"movie_camera\",754],[\"film_projector\",755],[\"film_strip\",756],[\"telephone_receiver\",757],[\"phone\",758],[\"telephone\",758],[\"pager\",759],[\"fax\",760],[\"tv\",761],[\"radio\",762],[\"studio_microphone\",763],[\"level_slider\",764],[\"control_knobs\",765],[\"stopwatch\",766],[\"timer_clock\",767],[\"alarm_clock\",768],[\"mantelpiece_clock\",769],[\"hourglass\",770],[\"hourglass_flowing_sand\",771],[\"satellite\",772],[\"battery\",773],[\"electric_plug\",774],[\"bulb\",775],[\"flashlight\",776],[\"candle\",777],[\"wastebasket\",778],[\"oil_drum\",779],[\"money_with_wings\",780],[\"dollar\",781],[\"yen\",782],[\"euro\",783],[\"pound\",784],[\"moneybag\",785],[\"credit_card\",786],[\"gem\",787],[\"balance_scale\",788],[\"wrench\",789],[\"hammer\",790],[\"hammer_and_pick\",791],[\"hammer_and_wrench\",792],[\"pick\",793],[\"nut_and_bolt\",794],[\"gear\",795],[\"chains\",796],[\"gun\",797],[\"bomb\",798],[\"hocho\",799],[\"knife\",799],[\"dagger\",800],[\"crossed_swords\",801],[\"shield\",802],[\"smoking\",803],[\"coffin\",804],[\"funeral_urn\",805],[\"amphora\",806],[\"crystal_ball\",807],[\"prayer_beads\",808],[\"barber\",809],[\"alembic\",810],[\"telescope\",811],[\"microscope\",812],[\"hole\",813],[\"pill\",814],[\"syringe\",815],[\"thermometer\",816],[\"toilet\",817],[\"potable_water\",818],[\"shower\",819],[\"bathtub\",820],[\"bath\",821],[\"bellhop_bell\",822],[\"key\",823],[\"old_key\",824],[\"door\",825],[\"couch_and_lamp\",826],[\"bed\",827],[\"sleeping_bed\",828],[\"framed_picture\",829],[\"shopping\",830],[\"shopping_cart\",831],[\"gift\",832],[\"balloon\",833],[\"flags\",834],[\"ribbon\",835],[\"confetti_ball\",836],[\"tada\",837],[\"dolls\",838],[\"izakaya_lantern\",839],[\"lantern\",839],[\"wind_chime\",840],[\"email\",841],[\"envelope\",841],[\"envelope_with_arrow\",842],[\"incoming_envelope\",843],[\"e-mail\",844],[\"love_letter\",845],[\"inbox_tray\",846],[\"outbox_tray\",847],[\"package\",848],[\"label\",849],[\"mailbox_closed\",850],[\"mailbox\",851],[\"mailbox_with_mail\",852],[\"mailbox_with_no_mail\",853],[\"postbox\",854],[\"postal_horn\",855],[\"scroll\",856],[\"page_with_curl\",857],[\"page_facing_up\",858],[\"bookmark_tabs\",859],[\"bar_chart\",860],[\"chart_with_upwards_trend\",861],[\"chart_with_downwards_trend\",862],[\"spiral_notepad\",863],[\"spiral_calendar\",864],[\"calendar\",865],[\"date\",866],[\"card_index\",867],[\"card_file_box\",868],[\"ballot_box\",869],[\"file_cabinet\",870],[\"clipboard\",871],[\"file_folder\",872],[\"open_file_folder\",873],[\"card_index_dividers\",874],[\"newspaper_roll\",875],[\"newspaper\",876],[\"notebook\",877],[\"notebook_with_decorative_cover\",878],[\"ledger\",879],[\"closed_book\",880],[\"green_book\",881],[\"blue_book\",882],[\"orange_book\",883],[\"books\",884],[\"book\",885],[\"open_book\",885],[\"bookmark\",886],[\"link\",887],[\"paperclip\",888],[\"paperclips\",889],[\"triangular_ruler\",890],[\"straight_ruler\",891],[\"pushpin\",892],[\"round_pushpin\",893],[\"scissors\",894],[\"pen\",895],[\"fountain_pen\",896],[\"black_nib\",897],[\"paintbrush\",898],[\"crayon\",899],[\"memo\",900],[\"pencil\",900],[\"pencil2\",901],[\"mag\",902],[\"mag_right\",903],[\"lock_with_ink_pen\",904],[\"closed_lock_with_key\",905],[\"lock\",906],[\"unlock\",907],[\"heart\",908],[\"yellow_heart\",909],[\"green_heart\",910],[\"blue_heart\",911],[\"purple_heart\",912],[\"black_heart\",913],[\"broken_heart\",914],[\"heavy_heart_exclamation\",915],[\"two_hearts\",916],[\"revolving_hearts\",917],[\"heartbeat\",918],[\"heartpulse\",919],[\"sparkling_heart\",920],[\"cupid\",921],[\"gift_heart\",922],[\"heart_decoration\",923],[\"peace_symbol\",924],[\"latin_cross\",925],[\"star_and_crescent\",926],[\"om\",927],[\"wheel_of_dharma\",928],[\"star_of_david\",929],[\"six_pointed_star\",930],[\"menorah\",931],[\"yin_yang\",932],[\"orthodox_cross\",933],[\"place_of_worship\",934],[\"ophiuchus\",935],[\"aries\",936],[\"taurus\",937],[\"gemini\",938],[\"cancer\",939],[\"leo\",940],[\"virgo\",941],[\"libra\",942],[\"scorpius\",943],[\"sagittarius\",944],[\"capricorn\",945],[\"aquarius\",946],[\"pisces\",947],[\"id\",948],[\"atom_symbol\",949],[\"accept\",950],[\"radioactive\",951],[\"biohazard\",952],[\"mobile_phone_off\",953],[\"vibration_mode\",954],[\"u6709\",955],[\"u7121\",956],[\"u7533\",957],[\"u55b6\",958],[\"u6708\",959],[\"eight_pointed_black_star\",960],[\"vs\",961],[\"white_flower\",962],[\"ideograph_advantage\",963],[\"secret\",964],[\"congratulations\",965],[\"u5408\",966],[\"u6e80\",967],[\"u5272\",968],[\"u7981\",969],[\"a\",970],[\"b\",971],[\"ab\",972],[\"cl\",973],[\"o2\",974],[\"sos\",975],[\"x\",976],[\"o\",977],[\"stop_sign\",978],[\"no_entry\",979],[\"name_badge\",980],[\"no_entry_sign\",981],[\"100\",982],[\"anger\",983],[\"hotsprings\",984],[\"no_pedestrians\",985],[\"do_not_litter\",986],[\"no_bicycles\",987],[\"non-potable_water\",988],[\"underage\",989],[\"no_mobile_phones\",990],[\"no_smoking\",991],[\"exclamation\",992],[\"heavy_exclamation_mark\",992],[\"grey_exclamation\",993],[\"question\",994],[\"grey_question\",995],[\"bangbang\",996],[\"interrobang\",997],[\"low_brightness\",998],[\"high_brightness\",999],[\"part_alternation_mark\",1000],[\"warning\",1001],[\"children_crossing\",1002],[\"trident\",1003],[\"fleur_de_lis\",1004],[\"beginner\",1005],[\"recycle\",1006],[\"white_check_mark\",1007],[\"u6307\",1008],[\"chart\",1009],[\"sparkle\",1010],[\"eight_spoked_asterisk\",1011],[\"negative_squared_cross_mark\",1012],[\"globe_with_meridians\",1013],[\"diamond_shape_with_a_dot_inside\",1014],[\"m\",1015],[\"cyclone\",1016],[\"zzz\",1017],[\"atm\",1018],[\"wc\",1019],[\"wheelchair\",1020],[\"parking\",1021],[\"u7a7a\",1022],[\"sa\",1023],[\"passport_control\",1024],[\"customs\",1025],[\"baggage_claim\",1026],[\"left_luggage\",1027],[\"mens\",1028],[\"womens\",1029],[\"baby_symbol\",1030],[\"restroom\",1031],[\"put_litter_in_its_place\",1032],[\"cinema\",1033],[\"signal_strength\",1034],[\"koko\",1035],[\"symbols\",1036],[\"information_source\",1037],[\"abc\",1038],[\"abcd\",1039],[\"capital_abcd\",1040],[\"ng\",1041],[\"ok\",1042],[\"up\",1043],[\"cool\",1044],[\"new\",1045],[\"free\",1046],[\"zero\",1047],[\"one\",1048],[\"two\",1049],[\"three\",1050],[\"four\",1051],[\"five\",1052],[\"six\",1053],[\"seven\",1054],[\"eight\",1055],[\"nine\",1056],[\"keycap_ten\",1057],[\"1234\",1058],[\"hash\",1059],[\"asterisk\",1060],[\"arrow_forward\",1061],[\"pause_button\",1062],[\"play_or_pause_button\",1063],[\"stop_button\",1064],[\"record_button\",1065],[\"next_track_button\",1066],[\"previous_track_button\",1067],[\"fast_forward\",1068],[\"rewind\",1069],[\"arrow_double_up\",1070],[\"arrow_double_down\",1071],[\"arrow_backward\",1072],[\"arrow_up_small\",1073],[\"arrow_down_small\",1074],[\"arrow_right\",1075],[\"arrow_left\",1076],[\"arrow_up\",1077],[\"arrow_down\",1078],[\"arrow_upper_right\",1079],[\"arrow_lower_right\",1080],[\"arrow_lower_left\",1081],[\"arrow_upper_left\",1082],[\"arrow_up_down\",1083],[\"left_right_arrow\",1084],[\"arrow_right_hook\",1085],[\"leftwards_arrow_with_hook\",1086],[\"arrow_heading_up\",1087],[\"arrow_heading_down\",1088],[\"twisted_rightwards_arrows\",1089],[\"repeat\",1090],[\"repeat_one\",1091],[\"arrows_counterclockwise\",1092],[\"arrows_clockwise\",1093],[\"musical_note\",1094],[\"notes\",1095],[\"heavy_plus_sign\",1096],[\"heavy_minus_sign\",1097],[\"heavy_division_sign\",1098],[\"heavy_multiplication_x\",1099],[\"heavy_dollar_sign\",1100],[\"currency_exchange\",1101],[\"tm\",1102],[\"copyright\",1103],[\"registered\",1104],[\"wavy_dash\",1105],[\"curly_loop\",1106],[\"loop\",1107],[\"end\",1108],[\"back\",1109],[\"on\",1110],[\"top\",1111],[\"soon\",1112],[\"heavy_check_mark\",1113],[\"ballot_box_with_check\",1114],[\"radio_button\",1115],[\"white_circle\",1116],[\"black_circle\",1117],[\"red_circle\",1118],[\"large_blue_circle\",1119],[\"small_red_triangle\",1120],[\"small_red_triangle_down\",1121],[\"small_orange_diamond\",1122],[\"small_blue_diamond\",1123],[\"large_orange_diamond\",1124],[\"large_blue_diamond\",1125],[\"white_square_button\",1126],[\"black_square_button\",1127],[\"black_small_square\",1128],[\"white_small_square\",1129],[\"black_medium_small_square\",1130],[\"white_medium_small_square\",1131],[\"black_medium_square\",1132],[\"white_medium_square\",1133],[\"black_large_square\",1134],[\"white_large_square\",1135],[\"speaker\",1136],[\"mute\",1137],[\"sound\",1138],[\"loud_sound\",1139],[\"bell\",1140],[\"no_bell\",1141],[\"mega\",1142],[\"loudspeaker\",1143],[\"eye_speech_bubble\",1144],[\"speech_balloon\",1145],[\"thought_balloon\",1146],[\"right_anger_bubble\",1147],[\"spades\",1148],[\"clubs\",1149],[\"hearts\",1150],[\"diamonds\",1151],[\"black_joker\",1152],[\"flower_playing_cards\",1153],[\"mahjong\",1154],[\"clock1\",1155],[\"clock2\",1156],[\"clock3\",1157],[\"clock4\",1158],[\"clock5\",1159],[\"clock6\",1160],[\"clock7\",1161],[\"clock8\",1162],[\"clock9\",1163],[\"clock10\",1164],[\"clock11\",1165],[\"clock12\",1166],[\"clock130\",1167],[\"clock230\",1168],[\"clock330\",1169],[\"clock430\",1170],[\"clock530\",1171],[\"clock630\",1172],[\"clock730\",1173],[\"clock830\",1174],[\"clock930\",1175],[\"clock1030\",1176],[\"clock1130\",1177],[\"clock1230\",1178],[\"white_flag\",1179],[\"black_flag\",1180],[\"checkered_flag\",1181],[\"triangular_flag_on_post\",1182],[\"rainbow_flag\",1183],[\"afghanistan\",1184],[\"aland_islands\",1185],[\"albania\",1186],[\"algeria\",1187],[\"american_samoa\",1188],[\"andorra\",1189],[\"angola\",1190],[\"anguilla\",1191],[\"antarctica\",1192],[\"antigua_barbuda\",1193],[\"argentina\",1194],[\"armenia\",1195],[\"aruba\",1196],[\"australia\",1197],[\"austria\",1198],[\"azerbaijan\",1199],[\"bahamas\",1200],[\"bahrain\",1201],[\"bangladesh\",1202],[\"barbados\",1203],[\"belarus\",1204],[\"belgium\",1205],[\"belize\",1206],[\"benin\",1207],[\"bermuda\",1208],[\"bhutan\",1209],[\"bolivia\",1210],[\"caribbean_netherlands\",1211],[\"bosnia_herzegovina\",1212],[\"botswana\",1213],[\"brazil\",1214],[\"british_indian_ocean_territory\",1215],[\"british_virgin_islands\",1216],[\"brunei\",1217],[\"bulgaria\",1218],[\"burkina_faso\",1219],[\"burundi\",1220],[\"cape_verde\",1221],[\"cambodia\",1222],[\"cameroon\",1223],[\"canada\",1224],[\"ca\",1224],[\"canary_islands\",1225],[\"cayman_islands\",1226],[\"central_african_republic\",1227],[\"chad\",1228],[\"chile\",1229],[\"cn\",1230],[\"christmas_island\",1231],[\"cocos_islands\",1232],[\"colombia\",1233],[\"comoros\",1234],[\"congo_brazzaville\",1235],[\"congo_kinshasa\",1236],[\"cook_islands\",1237],[\"costa_rica\",1238],[\"cote_divoire\",1239],[\"croatia\",1240],[\"cuba\",1241],[\"curacao\",1242],[\"cyprus\",1243],[\"czech_republic\",1244],[\"denmark\",1245],[\"djibouti\",1246],[\"dominica\",1247],[\"dominican_republic\",1248],[\"ecuador\",1249],[\"egypt\",1250],[\"el_salvador\",1251],[\"equatorial_guinea\",1252],[\"eritrea\",1253],[\"estonia\",1254],[\"ethiopia\",1255],[\"eu\",1256],[\"european_union\",1256],[\"falkland_islands\",1257],[\"faroe_islands\",1258],[\"fiji\",1259],[\"finland\",1260],[\"fr\",1261],[\"french_guiana\",1262],[\"french_polynesia\",1263],[\"french_southern_territories\",1264],[\"gabon\",1265],[\"gambia\",1266],[\"georgia\",1267],[\"de\",1268],[\"ghana\",1269],[\"gibraltar\",1270],[\"greece\",1271],[\"greenland\",1272],[\"grenada\",1273],[\"guadeloupe\",1274],[\"guam\",1275],[\"guatemala\",1276],[\"guernsey\",1277],[\"guinea\",1278],[\"guinea_bissau\",1279],[\"guyana\",1280],[\"haiti\",1281],[\"honduras\",1282],[\"hong_kong\",1283],[\"hungary\",1284],[\"iceland\",1285],[\"india\",1286],[\"indonesia\",1287],[\"iran\",1288],[\"iraq\",1289],[\"ireland\",1290],[\"isle_of_man\",1291],[\"israel\",1292],[\"it\",1293],[\"jamaica\",1294],[\"jp\",1295],[\"crossed_flags\",1296],[\"jersey\",1297],[\"jordan\",1298],[\"kazakhstan\",1299],[\"kenya\",1300],[\"kiribati\",1301],[\"kosovo\",1302],[\"kuwait\",1303],[\"kyrgyzstan\",1304],[\"laos\",1305],[\"latvia\",1306],[\"lebanon\",1307],[\"lesotho\",1308],[\"liberia\",1309],[\"libya\",1310],[\"liechtenstein\",1311],[\"lithuania\",1312],[\"luxembourg\",1313],[\"macau\",1314],[\"macedonia\",1315],[\"madagascar\",1316],[\"malawi\",1317],[\"malaysia\",1318],[\"maldives\",1319],[\"mali\",1320],[\"malta\",1321],[\"marshall_islands\",1322],[\"martinique\",1323],[\"mauritania\",1324],[\"mauritius\",1325],[\"mayotte\",1326],[\"mexico\",1327],[\"micronesia\",1328],[\"moldova\",1329],[\"monaco\",1330],[\"mongolia\",1331],[\"montenegro\",1332],[\"montserrat\",1333],[\"morocco\",1334],[\"mozambique\",1335],[\"myanmar\",1336],[\"namibia\",1337],[\"nauru\",1338],[\"nepal\",1339],[\"netherlands\",1340],[\"new_caledonia\",1341],[\"new_zealand\",1342],[\"nicaragua\",1343],[\"niger\",1344],[\"nigeria\",1345],[\"niue\",1346],[\"norfolk_island\",1347],[\"northern_mariana_islands\",1348],[\"north_korea\",1349],[\"norway\",1350],[\"oman\",1351],[\"pakistan\",1352],[\"pk\",1352],[\"palau\",1353],[\"palestinian_territories\",1354],[\"panama\",1355],[\"papua_new_guinea\",1356],[\"paraguay\",1357],[\"peru\",1358],[\"philippines\",1359],[\"pitcairn_islands\",1360],[\"poland\",1361],[\"portugal\",1362],[\"puerto_rico\",1363],[\"qatar\",1364],[\"reunion\",1365],[\"romania\",1366],[\"ru\",1367],[\"rwanda\",1368],[\"st_barthelemy\",1369],[\"st_helena\",1370],[\"st_kitts_nevis\",1371],[\"st_lucia\",1372],[\"st_pierre_miquelon\",1373],[\"st_vincent_grenadines\",1374],[\"samoa\",1375],[\"san_marino\",1376],[\"sao_tome_principe\",1377],[\"saudi_arabia\",1378],[\"senegal\",1379],[\"serbia\",1380],[\"seychelles\",1381],[\"sierra_leone\",1382],[\"singapore\",1383],[\"sint_maarten\",1384],[\"slovakia\",1385],[\"slovenia\",1386],[\"solomon_islands\",1387],[\"somalia\",1388],[\"south_africa\",1389],[\"za\",1389],[\"south_georgia_south_sandwich_islands\",1390],[\"kr\",1391],[\"south_sudan\",1392],[\"es\",1393],[\"sri_lanka\",1394],[\"sudan\",1395],[\"suriname\",1396],[\"swaziland\",1397],[\"sweden\",1398],[\"switzerland\",1399],[\"syria\",1400],[\"taiwan\",1401],[\"tajikistan\",1402],[\"tanzania\",1403],[\"thailand\",1404],[\"timor_leste\",1405],[\"togo\",1406],[\"tokelau\",1407],[\"tonga\",1408],[\"trinidad_tobago\",1409],[\"tunisia\",1410],[\"tr\",1411],[\"turkmenistan\",1412],[\"turks_caicos_islands\",1413],[\"tuvalu\",1414],[\"uganda\",1415],[\"ukraine\",1416],[\"united_arab_emirates\",1417],[\"gb\",1418],[\"uk\",1418],[\"us\",1419],[\"us_virgin_islands\",1420],[\"uruguay\",1421],[\"uzbekistan\",1422],[\"vanuatu\",1423],[\"vatican_city\",1424],[\"venezuela\",1425],[\"vietnam\",1426],[\"wallis_futuna\",1427],[\"western_sahara\",1428],[\"yemen\",1429],[\"zambia\",1430],[\"zimbabwe\",1431],[\"bowtie\",1432],[\"feelsgood\",1433],[\"finnadie\",1434],[\"goberserk\",1435],[\"godmode\",1436],[\"hurtrealbad\",1437],[\"neckbeard\",1438],[\"octocat\",1439],[\"rage1\",1440],[\"rage2\",1441],[\"rage3\",1442],[\"rage4\",1443],[\"shipit\",1444],[\"squirrel\",1444],[\"suspect\",1445],[\"trollface\",1446],[\"mattermost\",1447],[\"open_hands_light_skin_tone\",1448],[\"open_hands_medium_light_skin_tone\",1449],[\"open_hands_medium_skin_tone\",1450],[\"open_hands_medium_dark_skin_tone\",1451],[\"open_hands_dark_skin_tone\",1452],[\"raised_hands_light_skin_tone\",1453],[\"raised_hands_medium_light_skin_tone\",1454],[\"raised_hands_medium_skin_tone\",1455],[\"raised_hands_medium_dark_skin_tone\",1456],[\"raised_hands_dark_skin_tone\",1457],[\"clap_light_skin_tone\",1458],[\"clap_medium_light_skin_tone\",1459],[\"clap_medium_skin_tone\",1460],[\"clap_medium_dark_skin_tone\",1461],[\"clap_dark_skin_tone\",1462],[\"pray_light_skin_tone\",1463],[\"pray_medium_light_skin_tone\",1464],[\"pray_medium_skin_tone\",1465],[\"pray_medium_dark_skin_tone\",1466],[\"pray_dark_skin_tone\",1467],[\"+1_light_skin_tone\",1468],[\"+1_medium_light_skin_tone\",1469],[\"+1_medium_skin_tone\",1470],[\"+1_medium_dark_skin_tone\",1471],[\"+1_dark_skin_tone\",1472],[\"-1_light_skin_tone\",1473],[\"-1_medium_light_skin_tone\",1474],[\"-1_medium_skin_tone\",1475],[\"-1_medium_dark_skin_tone\",1476],[\"-1_dark_skin_tone\",1477],[\"fist_oncoming_light_skin_tone\",1478],[\"fist_oncoming_medium_light_skin_tone\",1479],[\"fist_oncoming_medium_skin_tone\",1480],[\"fist_oncoming_medium_dark_skin_tone\",1481],[\"fist_oncoming_dark_skin_tone\",1482],[\"fist_raised_light_skin_tone\",1483],[\"fist_raised_medium_light_skin_tone\",1484],[\"fist_raised_medium_skin_tone\",1485],[\"fist_raised_medium_dark_skin_tone\",1486],[\"fist_raised_dark_skin_tone\",1487],[\"fist_left_light_skin_tone\",1488],[\"fist_left_medium_light_skin_tone\",1489],[\"fist_left_medium_skin_tone\",1490],[\"fist_left_medium_dark_skin_tone\",1491],[\"fist_left_dark_skin_tone\",1492],[\"fist_right_light_skin_tone\",1493],[\"fist_right_medium_light_skin_tone\",1494],[\"fist_right_medium_skin_tone\",1495],[\"fist_right_medium_dark_skin_tone\",1496],[\"fist_right_dark_skin_tone\",1497],[\"crossed_fingers_light_skin_tone\",1498],[\"crossed_fingers_medium_light_skin_tone\",1499],[\"crossed_fingers_medium_skin_tone\",1500],[\"crossed_fingers_medium_dark_skin_tone\",1501],[\"crossed_fingers_dark_skin_tone\",1502],[\"v_light_skin_tone\",1503],[\"v_medium_light_skin_tone\",1504],[\"v_medium_skin_tone\",1505],[\"v_medium_dark_skin_tone\",1506],[\"v_dark_skin_tone\",1507],[\"metal_light_skin_tone\",1508],[\"metal_medium_light_skin_tone\",1509],[\"metal_medium_skin_tone\",1510],[\"metal_medium_dark_skin_tone\",1511],[\"metal_dark_skin_tone\",1512],[\"ok_hand_light_skin_tone\",1513],[\"ok_hand_medium_light_skin_tone\",1514],[\"ok_hand_medium_skin_tone\",1515],[\"ok_hand_medium_dark_skin_tone\",1516],[\"ok_hand_dark_skin_tone\",1517],[\"point_left_light_skin_tone\",1518],[\"point_left_medium_light_skin_tone\",1519],[\"point_left_medium_skin_tone\",1520],[\"point_left_medium_dark_skin_tone\",1521],[\"point_left_dark_skin_tone\",1522],[\"point_right_light_skin_tone\",1523],[\"point_right_medium_light_skin_tone\",1524],[\"point_right_medium_skin_tone\",1525],[\"point_right_medium_dark_skin_tone\",1526],[\"point_right_dark_skin_tone\",1527],[\"point_up_2_light_skin_tone\",1528],[\"point_up_2_medium_light_skin_tone\",1529],[\"point_up_2_medium_skin_tone\",1530],[\"point_up_2_medium_dark_skin_tone\",1531],[\"point_up_2_dark_skin_tone\",1532],[\"point_down_light_skin_tone\",1533],[\"point_down_medium_light_skin_tone\",1534],[\"point_down_medium_skin_tone\",1535],[\"point_down_medium_dark_skin_tone\",1536],[\"point_down_dark_skin_tone\",1537],[\"point_up_light_skin_tone\",1538],[\"point_up_medium_light_skin_tone\",1539],[\"point_up_medium_skin_tone\",1540],[\"point_up_medium_dark_skin_tone\",1541],[\"point_up_dark_skin_tone\",1542],[\"hand_light_skin_tone\",1543],[\"hand_medium_light_skin_tone\",1544],[\"hand_medium_skin_tone\",1545],[\"hand_medium_dark_skin_tone\",1546],[\"hand_dark_skin_tone\",1547],[\"raised_back_of_hand_light_skin_tone\",1548],[\"raised_back_of_hand_medium_light_skin_tone\",1549],[\"raised_back_of_hand_medium_skin_tone\",1550],[\"raised_back_of_hand_medium_dark_skin_tone\",1551],[\"raised_back_of_hand_dark_skin_tone\",1552],[\"raised_hand_with_fingers_splayed_light_skin_tone\",1553],[\"raised_hand_with_fingers_splayed_medium_light_skin_tone\",1554],[\"raised_hand_with_fingers_splayed_medium_skin_tone\",1555],[\"raised_hand_with_fingers_splayed_medium_dark_skin_tone\",1556],[\"raised_hand_with_fingers_splayed_dark_skin_tone\",1557],[\"vulcan_salute_light_skin_tone\",1558],[\"vulcan_salute_medium_light_skin_tone\",1559],[\"vulcan_salute_medium_skin_tone\",1560],[\"vulcan_salute_medium_dark_skin_tone\",1561],[\"vulcan_salute_dark_skin_tone\",1562],[\"wave_light_skin_tone\",1563],[\"wave_medium_light_skin_tone\",1564],[\"wave_medium_skin_tone\",1565],[\"wave_medium_dark_skin_tone\",1566],[\"wave_dark_skin_tone\",1567],[\"call_me_hand_light_skin_tone\",1568],[\"call_me_hand_medium_light_skin_tone\",1569],[\"call_me_hand_medium_skin_tone\",1570],[\"call_me_hand_medium_dark_skin_tone\",1571],[\"call_me_hand_dark_skin_tone\",1572],[\"muscle_light_skin_tone\",1573],[\"muscle_medium_light_skin_tone\",1574],[\"muscle_medium_skin_tone\",1575],[\"muscle_medium_dark_skin_tone\",1576],[\"muscle_dark_skin_tone\",1577],[\"middle_finger_light_skin_tone\",1578],[\"middle_finger_medium_light_skin_tone\",1579],[\"middle_finger_medium_skin_tone\",1580],[\"middle_finger_medium_dark_skin_tone\",1581],[\"middle_finger_dark_skin_tone\",1582],[\"writing_hand_light_skin_tone\",1583],[\"writing_hand_medium_light_skin_tone\",1584],[\"writing_hand_medium_skin_tone\",1585],[\"writing_hand_medium_dark_skin_tone\",1586],[\"writing_hand_dark_skin_tone\",1587],[\"selfie_light_skin_tone\",1588],[\"selfie_medium_light_skin_tone\",1589],[\"selfie_medium_skin_tone\",1590],[\"selfie_medium_dark_skin_tone\",1591],[\"selfie_dark_skin_tone\",1592],[\"nail_care_light_skin_tone\",1593],[\"nail_care_medium_light_skin_tone\",1594],[\"nail_care_medium_skin_tone\",1595],[\"nail_care_medium_dark_skin_tone\",1596],[\"nail_care_dark_skin_tone\",1597],[\"ear_light_skin_tone\",1598],[\"ear_medium_light_skin_tone\",1599],[\"ear_medium_skin_tone\",1600],[\"ear_medium_dark_skin_tone\",1601],[\"ear_dark_skin_tone\",1602],[\"nose_light_skin_tone\",1603],[\"nose_medium_light_skin_tone\",1604],[\"nose_medium_skin_tone\",1605],[\"nose_medium_dark_skin_tone\",1606],[\"nose_dark_skin_tone\",1607],[\"baby_light_skin_tone\",1608],[\"baby_medium_light_skin_tone\",1609],[\"baby_medium_skin_tone\",1610],[\"baby_medium_dark_skin_tone\",1611],[\"baby_dark_skin_tone\",1612],[\"boy_light_skin_tone\",1613],[\"boy_medium_light_skin_tone\",1614],[\"boy_medium_skin_tone\",1615],[\"boy_medium_dark_skin_tone\",1616],[\"boy_dark_skin_tone\",1617],[\"girl_light_skin_tone\",1618],[\"girl_medium_light_skin_tone\",1619],[\"girl_medium_skin_tone\",1620],[\"girl_medium_dark_skin_tone\",1621],[\"girl_dark_skin_tone\",1622],[\"man_light_skin_tone\",1623],[\"man_medium_light_skin_tone\",1624],[\"man_medium_skin_tone\",1625],[\"man_medium_dark_skin_tone\",1626],[\"man_dark_skin_tone\",1627],[\"woman_light_skin_tone\",1628],[\"woman_medium_light_skin_tone\",1629],[\"woman_medium_skin_tone\",1630],[\"woman_medium_dark_skin_tone\",1631],[\"woman_dark_skin_tone\",1632],[\"blonde_woman_light_skin_tone\",1633],[\"blonde_woman_medium_light_skin_tone\",1634],[\"blonde_woman_medium_skin_tone\",1635],[\"blonde_woman_medium_dark_skin_tone\",1636],[\"blonde_woman_dark_skin_tone\",1637],[\"blonde_woman_light_skin_tone\",1638],[\"blonde_woman_medium_light_skin_tone\",1639],[\"blonde_woman_medium_skin_tone\",1640],[\"blonde_woman_medium_dark_skin_tone\",1641],[\"blonde_woman_dark_skin_tone\",1642],[\"blonde_man_light_skin_tone\",1643],[\"blonde_man_medium_light_skin_tone\",1644],[\"blonde_man_medium_skin_tone\",1645],[\"blonde_man_medium_dark_skin_tone\",1646],[\"blonde_man_dark_skin_tone\",1647],[\"blonde_man_light_skin_tone\",1648],[\"blonde_man_medium_light_skin_tone\",1649],[\"blonde_man_medium_skin_tone\",1650],[\"blonde_man_medium_dark_skin_tone\",1651],[\"blonde_man_dark_skin_tone\",1652],[\"older_man_light_skin_tone\",1653],[\"older_man_medium_light_skin_tone\",1654],[\"older_man_medium_skin_tone\",1655],[\"older_man_medium_dark_skin_tone\",1656],[\"older_man_dark_skin_tone\",1657],[\"older_woman_light_skin_tone\",1658],[\"older_woman_medium_light_skin_tone\",1659],[\"older_woman_medium_skin_tone\",1660],[\"older_woman_medium_dark_skin_tone\",1661],[\"older_woman_dark_skin_tone\",1662],[\"man_with_gua_pi_mao_light_skin_tone\",1663],[\"man_with_gua_pi_mao_medium_light_skin_tone\",1664],[\"man_with_gua_pi_mao_medium_skin_tone\",1665],[\"man_with_gua_pi_mao_medium_dark_skin_tone\",1666],[\"man_with_gua_pi_mao_dark_skin_tone\",1667],[\"woman_with_turban_light_skin_tone\",1668],[\"woman_with_turban_medium_light_skin_tone\",1669],[\"woman_with_turban_medium_skin_tone\",1670],[\"woman_with_turban_medium_dark_skin_tone\",1671],[\"woman_with_turban_dark_skin_tone\",1672],[\"woman_with_turban_light_skin_tone\",1673],[\"woman_with_turban_medium_light_skin_tone\",1674],[\"woman_with_turban_medium_skin_tone\",1675],[\"woman_with_turban_medium_dark_skin_tone\",1676],[\"woman_with_turban_dark_skin_tone\",1677],[\"man_with_turban_light_skin_tone\",1678],[\"man_with_turban_medium_light_skin_tone\",1679],[\"man_with_turban_medium_skin_tone\",1680],[\"man_with_turban_medium_dark_skin_tone\",1681],[\"man_with_turban_dark_skin_tone\",1682],[\"man_with_turban_light_skin_tone\",1683],[\"man_with_turban_medium_light_skin_tone\",1684],[\"man_with_turban_medium_skin_tone\",1685],[\"man_with_turban_medium_dark_skin_tone\",1686],[\"man_with_turban_dark_skin_tone\",1687],[\"policewoman_light_skin_tone\",1688],[\"policewoman_medium_light_skin_tone\",1689],[\"policewoman_medium_skin_tone\",1690],[\"policewoman_medium_dark_skin_tone\",1691],[\"policewoman_dark_skin_tone\",1692],[\"policewoman_light_skin_tone\",1693],[\"policewoman_medium_light_skin_tone\",1694],[\"policewoman_medium_skin_tone\",1695],[\"policewoman_medium_dark_skin_tone\",1696],[\"policewoman_dark_skin_tone\",1697],[\"policeman_light_skin_tone\",1698],[\"policeman_medium_light_skin_tone\",1699],[\"policeman_medium_skin_tone\",1700],[\"policeman_medium_dark_skin_tone\",1701],[\"policeman_dark_skin_tone\",1702],[\"policeman_light_skin_tone\",1703],[\"policeman_medium_light_skin_tone\",1704],[\"policeman_medium_skin_tone\",1705],[\"policeman_medium_dark_skin_tone\",1706],[\"policeman_dark_skin_tone\",1707],[\"construction_worker_woman_light_skin_tone\",1708],[\"construction_worker_woman_medium_light_skin_tone\",1709],[\"construction_worker_woman_medium_skin_tone\",1710],[\"construction_worker_woman_medium_dark_skin_tone\",1711],[\"construction_worker_woman_dark_skin_tone\",1712],[\"construction_worker_woman_light_skin_tone\",1713],[\"construction_worker_woman_medium_light_skin_tone\",1714],[\"construction_worker_woman_medium_skin_tone\",1715],[\"construction_worker_woman_medium_dark_skin_tone\",1716],[\"construction_worker_woman_dark_skin_tone\",1717],[\"construction_worker_man_light_skin_tone\",1718],[\"construction_worker_man_medium_light_skin_tone\",1719],[\"construction_worker_man_medium_skin_tone\",1720],[\"construction_worker_man_medium_dark_skin_tone\",1721],[\"construction_worker_man_dark_skin_tone\",1722],[\"construction_worker_man_light_skin_tone\",1723],[\"construction_worker_man_medium_light_skin_tone\",1724],[\"construction_worker_man_medium_skin_tone\",1725],[\"construction_worker_man_medium_dark_skin_tone\",1726],[\"construction_worker_man_dark_skin_tone\",1727],[\"guardswoman_light_skin_tone\",1728],[\"guardswoman_medium_light_skin_tone\",1729],[\"guardswoman_medium_skin_tone\",1730],[\"guardswoman_medium_dark_skin_tone\",1731],[\"guardswoman_dark_skin_tone\",1732],[\"guardswoman_light_skin_tone\",1733],[\"guardswoman_medium_light_skin_tone\",1734],[\"guardswoman_medium_skin_tone\",1735],[\"guardswoman_medium_dark_skin_tone\",1736],[\"guardswoman_dark_skin_tone\",1737],[\"guardsman_light_skin_tone\",1738],[\"guardsman_medium_light_skin_tone\",1739],[\"guardsman_medium_skin_tone\",1740],[\"guardsman_medium_dark_skin_tone\",1741],[\"guardsman_dark_skin_tone\",1742],[\"guardsman_light_skin_tone\",1743],[\"guardsman_medium_light_skin_tone\",1744],[\"guardsman_medium_skin_tone\",1745],[\"guardsman_medium_dark_skin_tone\",1746],[\"guardsman_dark_skin_tone\",1747],[\"female_detective_light_skin_tone\",1748],[\"female_detective_medium_light_skin_tone\",1749],[\"female_detective_medium_skin_tone\",1750],[\"female_detective_medium_dark_skin_tone\",1751],[\"female_detective_dark_skin_tone\",1752],[\"female_detective_light_skin_tone\",1753],[\"female_detective_medium_light_skin_tone\",1754],[\"female_detective_medium_skin_tone\",1755],[\"female_detective_medium_dark_skin_tone\",1756],[\"female_detective_dark_skin_tone\",1757],[\"male_detective_light_skin_tone\",1758],[\"male_detective_medium_light_skin_tone\",1759],[\"male_detective_medium_skin_tone\",1760],[\"male_detective_medium_dark_skin_tone\",1761],[\"male_detective_dark_skin_tone\",1762],[\"male_detective_light_skin_tone\",1763],[\"male_detective_medium_light_skin_tone\",1764],[\"male_detective_medium_skin_tone\",1765],[\"male_detective_medium_dark_skin_tone\",1766],[\"male_detective_dark_skin_tone\",1767],[\"woman_health_worker_light_skin_tone\",1768],[\"woman_health_worker_medium_light_skin_tone\",1769],[\"woman_health_worker_medium_skin_tone\",1770],[\"woman_health_worker_medium_dark_skin_tone\",1771],[\"woman_health_worker_dark_skin_tone\",1772],[\"man_health_worker_light_skin_tone\",1773],[\"man_health_worker_medium_light_skin_tone\",1774],[\"man_health_worker_medium_skin_tone\",1775],[\"man_health_worker_medium_dark_skin_tone\",1776],[\"man_health_worker_dark_skin_tone\",1777],[\"woman_farmer_light_skin_tone\",1778],[\"woman_farmer_medium_light_skin_tone\",1779],[\"woman_farmer_medium_skin_tone\",1780],[\"woman_farmer_medium_dark_skin_tone\",1781],[\"woman_farmer_dark_skin_tone\",1782],[\"man_farmer_light_skin_tone\",1783],[\"man_farmer_medium_light_skin_tone\",1784],[\"man_farmer_medium_skin_tone\",1785],[\"man_farmer_medium_dark_skin_tone\",1786],[\"man_farmer_dark_skin_tone\",1787],[\"woman_cook_light_skin_tone\",1788],[\"woman_cook_medium_light_skin_tone\",1789],[\"woman_cook_medium_skin_tone\",1790],[\"woman_cook_medium_dark_skin_tone\",1791],[\"woman_cook_dark_skin_tone\",1792],[\"man_cook_light_skin_tone\",1793],[\"man_cook_medium_light_skin_tone\",1794],[\"man_cook_medium_skin_tone\",1795],[\"man_cook_medium_dark_skin_tone\",1796],[\"man_cook_dark_skin_tone\",1797],[\"woman_student_light_skin_tone\",1798],[\"woman_student_medium_light_skin_tone\",1799],[\"woman_student_medium_skin_tone\",1800],[\"woman_student_medium_dark_skin_tone\",1801],[\"woman_student_dark_skin_tone\",1802],[\"man_student_light_skin_tone\",1803],[\"man_student_medium_light_skin_tone\",1804],[\"man_student_medium_skin_tone\",1805],[\"man_student_medium_dark_skin_tone\",1806],[\"man_student_dark_skin_tone\",1807],[\"woman_singer_light_skin_tone\",1808],[\"woman_singer_medium_light_skin_tone\",1809],[\"woman_singer_medium_skin_tone\",1810],[\"woman_singer_medium_dark_skin_tone\",1811],[\"woman_singer_dark_skin_tone\",1812],[\"man_singer_light_skin_tone\",1813],[\"man_singer_medium_light_skin_tone\",1814],[\"man_singer_medium_skin_tone\",1815],[\"man_singer_medium_dark_skin_tone\",1816],[\"man_singer_dark_skin_tone\",1817],[\"woman_teacher_light_skin_tone\",1818],[\"woman_teacher_medium_light_skin_tone\",1819],[\"woman_teacher_medium_skin_tone\",1820],[\"woman_teacher_medium_dark_skin_tone\",1821],[\"woman_teacher_dark_skin_tone\",1822],[\"man_teacher_light_skin_tone\",1823],[\"man_teacher_medium_light_skin_tone\",1824],[\"man_teacher_medium_skin_tone\",1825],[\"man_teacher_medium_dark_skin_tone\",1826],[\"man_teacher_dark_skin_tone\",1827],[\"woman_factory_worker_light_skin_tone\",1828],[\"woman_factory_worker_medium_light_skin_tone\",1829],[\"woman_factory_worker_medium_skin_tone\",1830],[\"woman_factory_worker_medium_dark_skin_tone\",1831],[\"woman_factory_worker_dark_skin_tone\",1832],[\"man_factory_worker_light_skin_tone\",1833],[\"man_factory_worker_medium_light_skin_tone\",1834],[\"man_factory_worker_medium_skin_tone\",1835],[\"man_factory_worker_medium_dark_skin_tone\",1836],[\"man_factory_worker_dark_skin_tone\",1837],[\"woman_technologist_light_skin_tone\",1838],[\"woman_technologist_medium_light_skin_tone\",1839],[\"woman_technologist_medium_skin_tone\",1840],[\"woman_technologist_medium_dark_skin_tone\",1841],[\"woman_technologist_dark_skin_tone\",1842],[\"man_technologist_light_skin_tone\",1843],[\"man_technologist_medium_light_skin_tone\",1844],[\"man_technologist_medium_skin_tone\",1845],[\"man_technologist_medium_dark_skin_tone\",1846],[\"man_technologist_dark_skin_tone\",1847],[\"woman_office_worker_light_skin_tone\",1848],[\"woman_office_worker_medium_light_skin_tone\",1849],[\"woman_office_worker_medium_skin_tone\",1850],[\"woman_office_worker_medium_dark_skin_tone\",1851],[\"woman_office_worker_dark_skin_tone\",1852],[\"man_office_worker_light_skin_tone\",1853],[\"man_office_worker_medium_light_skin_tone\",1854],[\"man_office_worker_medium_skin_tone\",1855],[\"man_office_worker_medium_dark_skin_tone\",1856],[\"man_office_worker_dark_skin_tone\",1857],[\"woman_mechanic_light_skin_tone\",1858],[\"woman_mechanic_medium_light_skin_tone\",1859],[\"woman_mechanic_medium_skin_tone\",1860],[\"woman_mechanic_medium_dark_skin_tone\",1861],[\"woman_mechanic_dark_skin_tone\",1862],[\"man_mechanic_light_skin_tone\",1863],[\"man_mechanic_medium_light_skin_tone\",1864],[\"man_mechanic_medium_skin_tone\",1865],[\"man_mechanic_medium_dark_skin_tone\",1866],[\"man_mechanic_dark_skin_tone\",1867],[\"woman_scientist_light_skin_tone\",1868],[\"woman_scientist_medium_light_skin_tone\",1869],[\"woman_scientist_medium_skin_tone\",1870],[\"woman_scientist_medium_dark_skin_tone\",1871],[\"woman_scientist_dark_skin_tone\",1872],[\"man_scientist_light_skin_tone\",1873],[\"man_scientist_medium_light_skin_tone\",1874],[\"man_scientist_medium_skin_tone\",1875],[\"man_scientist_medium_dark_skin_tone\",1876],[\"man_scientist_dark_skin_tone\",1877],[\"woman_artist_light_skin_tone\",1878],[\"woman_artist_medium_light_skin_tone\",1879],[\"woman_artist_medium_skin_tone\",1880],[\"woman_artist_medium_dark_skin_tone\",1881],[\"woman_artist_dark_skin_tone\",1882],[\"man_artist_light_skin_tone\",1883],[\"man_artist_medium_light_skin_tone\",1884],[\"man_artist_medium_skin_tone\",1885],[\"man_artist_medium_dark_skin_tone\",1886],[\"man_artist_dark_skin_tone\",1887],[\"woman_firefighter_light_skin_tone\",1888],[\"woman_firefighter_medium_light_skin_tone\",1889],[\"woman_firefighter_medium_skin_tone\",1890],[\"woman_firefighter_medium_dark_skin_tone\",1891],[\"woman_firefighter_dark_skin_tone\",1892],[\"man_firefighter_light_skin_tone\",1893],[\"man_firefighter_medium_light_skin_tone\",1894],[\"man_firefighter_medium_skin_tone\",1895],[\"man_firefighter_medium_dark_skin_tone\",1896],[\"man_firefighter_dark_skin_tone\",1897],[\"woman_pilot_light_skin_tone\",1898],[\"woman_pilot_medium_light_skin_tone\",1899],[\"woman_pilot_medium_skin_tone\",1900],[\"woman_pilot_medium_dark_skin_tone\",1901],[\"woman_pilot_dark_skin_tone\",1902],[\"man_pilot_light_skin_tone\",1903],[\"man_pilot_medium_light_skin_tone\",1904],[\"man_pilot_medium_skin_tone\",1905],[\"man_pilot_medium_dark_skin_tone\",1906],[\"man_pilot_dark_skin_tone\",1907],[\"woman_astronaut_light_skin_tone\",1908],[\"woman_astronaut_medium_light_skin_tone\",1909],[\"woman_astronaut_medium_skin_tone\",1910],[\"woman_astronaut_medium_dark_skin_tone\",1911],[\"woman_astronaut_dark_skin_tone\",1912],[\"man_astronaut_light_skin_tone\",1913],[\"man_astronaut_medium_light_skin_tone\",1914],[\"man_astronaut_medium_skin_tone\",1915],[\"man_astronaut_medium_dark_skin_tone\",1916],[\"man_astronaut_dark_skin_tone\",1917],[\"woman_judge_light_skin_tone\",1918],[\"woman_judge_medium_light_skin_tone\",1919],[\"woman_judge_medium_skin_tone\",1920],[\"woman_judge_medium_dark_skin_tone\",1921],[\"woman_judge_dark_skin_tone\",1922],[\"man_judge_light_skin_tone\",1923],[\"man_judge_medium_light_skin_tone\",1924],[\"man_judge_medium_skin_tone\",1925],[\"man_judge_medium_dark_skin_tone\",1926],[\"man_judge_dark_skin_tone\",1927],[\"mrs_claus_light_skin_tone\",1928],[\"mrs_claus_medium_light_skin_tone\",1929],[\"mrs_claus_medium_skin_tone\",1930],[\"mrs_claus_medium_dark_skin_tone\",1931],[\"mrs_claus_dark_skin_tone\",1932],[\"santa_light_skin_tone\",1933],[\"santa_medium_light_skin_tone\",1934],[\"santa_medium_skin_tone\",1935],[\"santa_medium_dark_skin_tone\",1936],[\"santa_dark_skin_tone\",1937],[\"princess_light_skin_tone\",1938],[\"princess_medium_light_skin_tone\",1939],[\"princess_medium_skin_tone\",1940],[\"princess_medium_dark_skin_tone\",1941],[\"princess_dark_skin_tone\",1942],[\"prince_light_skin_tone\",1943],[\"prince_medium_light_skin_tone\",1944],[\"prince_medium_skin_tone\",1945],[\"prince_medium_dark_skin_tone\",1946],[\"prince_dark_skin_tone\",1947],[\"bride_with_veil_light_skin_tone\",1948],[\"bride_with_veil_medium_light_skin_tone\",1949],[\"bride_with_veil_medium_skin_tone\",1950],[\"bride_with_veil_medium_dark_skin_tone\",1951],[\"bride_with_veil_dark_skin_tone\",1952],[\"man_in_tuxedo_light_skin_tone\",1953],[\"man_in_tuxedo_medium_light_skin_tone\",1954],[\"man_in_tuxedo_medium_skin_tone\",1955],[\"man_in_tuxedo_medium_dark_skin_tone\",1956],[\"man_in_tuxedo_dark_skin_tone\",1957],[\"angel_light_skin_tone\",1958],[\"angel_medium_light_skin_tone\",1959],[\"angel_medium_skin_tone\",1960],[\"angel_medium_dark_skin_tone\",1961],[\"angel_dark_skin_tone\",1962],[\"pregnant_woman_light_skin_tone\",1963],[\"pregnant_woman_medium_light_skin_tone\",1964],[\"pregnant_woman_medium_skin_tone\",1965],[\"pregnant_woman_medium_dark_skin_tone\",1966],[\"pregnant_woman_dark_skin_tone\",1967],[\"bowing_woman_light_skin_tone\",1968],[\"bowing_woman_medium_light_skin_tone\",1969],[\"bowing_woman_medium_skin_tone\",1970],[\"bowing_woman_medium_dark_skin_tone\",1971],[\"bowing_woman_dark_skin_tone\",1972],[\"bowing_woman_light_skin_tone\",1973],[\"bowing_woman_medium_light_skin_tone\",1974],[\"bowing_woman_medium_skin_tone\",1975],[\"bowing_woman_medium_dark_skin_tone\",1976],[\"bowing_woman_dark_skin_tone\",1977],[\"bowing_man_light_skin_tone\",1978],[\"bowing_man_medium_light_skin_tone\",1979],[\"bowing_man_medium_skin_tone\",1980],[\"bowing_man_medium_dark_skin_tone\",1981],[\"bowing_man_dark_skin_tone\",1982],[\"bowing_man_light_skin_tone\",1983],[\"bowing_man_medium_light_skin_tone\",1984],[\"bowing_man_medium_skin_tone\",1985],[\"bowing_man_medium_dark_skin_tone\",1986],[\"bowing_man_dark_skin_tone\",1987],[\"tipping_hand_woman_light_skin_tone\",1988],[\"tipping_hand_woman_medium_light_skin_tone\",1989],[\"tipping_hand_woman_medium_skin_tone\",1990],[\"tipping_hand_woman_medium_dark_skin_tone\",1991],[\"tipping_hand_woman_dark_skin_tone\",1992],[\"tipping_hand_woman_light_skin_tone\",1993],[\"tipping_hand_woman_medium_light_skin_tone\",1994],[\"tipping_hand_woman_medium_skin_tone\",1995],[\"tipping_hand_woman_medium_dark_skin_tone\",1996],[\"tipping_hand_woman_dark_skin_tone\",1997],[\"tipping_hand_man_light_skin_tone\",1998],[\"tipping_hand_man_medium_light_skin_tone\",1999],[\"tipping_hand_man_medium_skin_tone\",2000],[\"tipping_hand_man_medium_dark_skin_tone\",2001],[\"tipping_hand_man_dark_skin_tone\",2002],[\"no_good_woman_light_skin_tone\",2003],[\"no_good_woman_medium_light_skin_tone\",2004],[\"no_good_woman_medium_skin_tone\",2005],[\"no_good_woman_medium_dark_skin_tone\",2006],[\"no_good_woman_dark_skin_tone\",2007],[\"no_good_woman_light_skin_tone\",2008],[\"no_good_woman_medium_light_skin_tone\",2009],[\"no_good_woman_medium_skin_tone\",2010],[\"no_good_woman_medium_dark_skin_tone\",2011],[\"no_good_woman_dark_skin_tone\",2012],[\"no_good_man_light_skin_tone\",2013],[\"no_good_man_medium_light_skin_tone\",2014],[\"no_good_man_medium_skin_tone\",2015],[\"no_good_man_medium_dark_skin_tone\",2016],[\"no_good_man_dark_skin_tone\",2017],[\"ok_woman_light_skin_tone\",2018],[\"ok_woman_medium_light_skin_tone\",2019],[\"ok_woman_medium_skin_tone\",2020],[\"ok_woman_medium_dark_skin_tone\",2021],[\"ok_woman_dark_skin_tone\",2022],[\"ok_woman_light_skin_tone\",2023],[\"ok_woman_medium_light_skin_tone\",2024],[\"ok_woman_medium_skin_tone\",2025],[\"ok_woman_medium_dark_skin_tone\",2026],[\"ok_woman_dark_skin_tone\",2027],[\"ok_man_light_skin_tone\",2028],[\"ok_man_medium_light_skin_tone\",2029],[\"ok_man_medium_skin_tone\",2030],[\"ok_man_medium_dark_skin_tone\",2031],[\"ok_man_dark_skin_tone\",2032],[\"raising_hand_woman_light_skin_tone\",2033],[\"raising_hand_woman_medium_light_skin_tone\",2034],[\"raising_hand_woman_medium_skin_tone\",2035],[\"raising_hand_woman_medium_dark_skin_tone\",2036],[\"raising_hand_woman_dark_skin_tone\",2037],[\"raising_hand_woman_light_skin_tone\",2038],[\"raising_hand_woman_medium_light_skin_tone\",2039],[\"raising_hand_woman_medium_skin_tone\",2040],[\"raising_hand_woman_medium_dark_skin_tone\",2041],[\"raising_hand_woman_dark_skin_tone\",2042],[\"raising_hand_man_light_skin_tone\",2043],[\"raising_hand_man_medium_light_skin_tone\",2044],[\"raising_hand_man_medium_skin_tone\",2045],[\"raising_hand_man_medium_dark_skin_tone\",2046],[\"raising_hand_man_dark_skin_tone\",2047],[\"woman_facepalming_light_skin_tone\",2048],[\"woman_facepalming_medium_light_skin_tone\",2049],[\"woman_facepalming_medium_skin_tone\",2050],[\"woman_facepalming_medium_dark_skin_tone\",2051],[\"woman_facepalming_dark_skin_tone\",2052],[\"woman_facepalming_light_skin_tone\",2053],[\"woman_facepalming_medium_light_skin_tone\",2054],[\"woman_facepalming_medium_skin_tone\",2055],[\"woman_facepalming_medium_dark_skin_tone\",2056],[\"woman_facepalming_dark_skin_tone\",2057],[\"man_facepalming_light_skin_tone\",2058],[\"man_facepalming_medium_light_skin_tone\",2059],[\"man_facepalming_medium_skin_tone\",2060],[\"man_facepalming_medium_dark_skin_tone\",2061],[\"man_facepalming_dark_skin_tone\",2062],[\"woman_shrugging_light_skin_tone\",2063],[\"woman_shrugging_medium_light_skin_tone\",2064],[\"woman_shrugging_medium_skin_tone\",2065],[\"woman_shrugging_medium_dark_skin_tone\",2066],[\"woman_shrugging_dark_skin_tone\",2067],[\"woman_shrugging_light_skin_tone\",2068],[\"woman_shrugging_medium_light_skin_tone\",2069],[\"woman_shrugging_medium_skin_tone\",2070],[\"woman_shrugging_medium_dark_skin_tone\",2071],[\"woman_shrugging_dark_skin_tone\",2072],[\"man_shrugging_light_skin_tone\",2073],[\"man_shrugging_medium_light_skin_tone\",2074],[\"man_shrugging_medium_skin_tone\",2075],[\"man_shrugging_medium_dark_skin_tone\",2076],[\"man_shrugging_dark_skin_tone\",2077],[\"pouting_woman_light_skin_tone\",2078],[\"pouting_woman_medium_light_skin_tone\",2079],[\"pouting_woman_medium_skin_tone\",2080],[\"pouting_woman_medium_dark_skin_tone\",2081],[\"pouting_woman_dark_skin_tone\",2082],[\"pouting_woman_light_skin_tone\",2083],[\"pouting_woman_medium_light_skin_tone\",2084],[\"pouting_woman_medium_skin_tone\",2085],[\"pouting_woman_medium_dark_skin_tone\",2086],[\"pouting_woman_dark_skin_tone\",2087],[\"pouting_man_light_skin_tone\",2088],[\"pouting_man_medium_light_skin_tone\",2089],[\"pouting_man_medium_skin_tone\",2090],[\"pouting_man_medium_dark_skin_tone\",2091],[\"pouting_man_dark_skin_tone\",2092],[\"frowning_woman_light_skin_tone\",2093],[\"frowning_woman_medium_light_skin_tone\",2094],[\"frowning_woman_medium_skin_tone\",2095],[\"frowning_woman_medium_dark_skin_tone\",2096],[\"frowning_woman_dark_skin_tone\",2097],[\"frowning_woman_light_skin_tone\",2098],[\"frowning_woman_medium_light_skin_tone\",2099],[\"frowning_woman_medium_skin_tone\",2100],[\"frowning_woman_medium_dark_skin_tone\",2101],[\"frowning_woman_dark_skin_tone\",2102],[\"frowning_man_light_skin_tone\",2103],[\"frowning_man_medium_light_skin_tone\",2104],[\"frowning_man_medium_skin_tone\",2105],[\"frowning_man_medium_dark_skin_tone\",2106],[\"frowning_man_dark_skin_tone\",2107],[\"haircut_woman_light_skin_tone\",2108],[\"haircut_woman_medium_light_skin_tone\",2109],[\"haircut_woman_medium_skin_tone\",2110],[\"haircut_woman_medium_dark_skin_tone\",2111],[\"haircut_woman_dark_skin_tone\",2112],[\"haircut_woman_light_skin_tone\",2113],[\"haircut_woman_medium_light_skin_tone\",2114],[\"haircut_woman_medium_skin_tone\",2115],[\"haircut_woman_medium_dark_skin_tone\",2116],[\"haircut_woman_dark_skin_tone\",2117],[\"haircut_man_light_skin_tone\",2118],[\"haircut_man_medium_light_skin_tone\",2119],[\"haircut_man_medium_skin_tone\",2120],[\"haircut_man_medium_dark_skin_tone\",2121],[\"haircut_man_dark_skin_tone\",2122],[\"massage_woman_light_skin_tone\",2123],[\"massage_woman_medium_light_skin_tone\",2124],[\"massage_woman_medium_skin_tone\",2125],[\"massage_woman_medium_dark_skin_tone\",2126],[\"massage_woman_dark_skin_tone\",2127],[\"massage_woman_light_skin_tone\",2128],[\"massage_woman_medium_light_skin_tone\",2129],[\"massage_woman_medium_skin_tone\",2130],[\"massage_woman_medium_dark_skin_tone\",2131],[\"massage_woman_dark_skin_tone\",2132],[\"massage_man_light_skin_tone\",2133],[\"massage_man_medium_light_skin_tone\",2134],[\"massage_man_medium_skin_tone\",2135],[\"massage_man_medium_dark_skin_tone\",2136],[\"massage_man_dark_skin_tone\",2137],[\"business_suit_levitating_light_skin_tone\",2138],[\"business_suit_levitating_medium_light_skin_tone\",2139],[\"business_suit_levitating_medium_skin_tone\",2140],[\"business_suit_levitating_medium_dark_skin_tone\",2141],[\"business_suit_levitating_dark_skin_tone\",2142],[\"dancer_light_skin_tone\",2143],[\"dancer_medium_light_skin_tone\",2144],[\"dancer_medium_skin_tone\",2145],[\"dancer_medium_dark_skin_tone\",2146],[\"dancer_dark_skin_tone\",2147],[\"man_dancing_light_skin_tone\",2148],[\"man_dancing_medium_light_skin_tone\",2149],[\"man_dancing_medium_skin_tone\",2150],[\"man_dancing_medium_dark_skin_tone\",2151],[\"man_dancing_dark_skin_tone\",2152],[\"walking_woman_light_skin_tone\",2153],[\"walking_woman_medium_light_skin_tone\",2154],[\"walking_woman_medium_skin_tone\",2155],[\"walking_woman_medium_dark_skin_tone\",2156],[\"walking_woman_dark_skin_tone\",2157],[\"walking_woman_light_skin_tone\",2158],[\"walking_woman_medium_light_skin_tone\",2159],[\"walking_woman_medium_skin_tone\",2160],[\"walking_woman_medium_dark_skin_tone\",2161],[\"walking_woman_dark_skin_tone\",2162],[\"walking_man_light_skin_tone\",2163],[\"walking_man_medium_light_skin_tone\",2164],[\"walking_man_medium_skin_tone\",2165],[\"walking_man_medium_dark_skin_tone\",2166],[\"walking_man_dark_skin_tone\",2167],[\"walking_man_light_skin_tone\",2168],[\"walking_man_medium_light_skin_tone\",2169],[\"walking_man_medium_skin_tone\",2170],[\"walking_man_medium_dark_skin_tone\",2171],[\"walking_man_dark_skin_tone\",2172],[\"running_woman_light_skin_tone\",2173],[\"running_woman_medium_light_skin_tone\",2174],[\"running_woman_medium_skin_tone\",2175],[\"running_woman_medium_dark_skin_tone\",2176],[\"running_woman_dark_skin_tone\",2177],[\"running_woman_light_skin_tone\",2178],[\"running_woman_medium_light_skin_tone\",2179],[\"running_woman_medium_skin_tone\",2180],[\"running_woman_medium_dark_skin_tone\",2181],[\"running_woman_dark_skin_tone\",2182],[\"running_man_light_skin_tone\",2183],[\"running_man_medium_light_skin_tone\",2184],[\"running_man_medium_skin_tone\",2185],[\"running_man_medium_dark_skin_tone\",2186],[\"running_man_dark_skin_tone\",2187],[\"running_man_light_skin_tone\",2188],[\"running_man_medium_light_skin_tone\",2189],[\"running_man_medium_skin_tone\",2190],[\"running_man_medium_dark_skin_tone\",2191],[\"running_man_dark_skin_tone\",2192],[\"couple_with_heart_woman_woman_light_skin_tone\",2193],[\"couple_with_heart_woman_woman_medium_light_skin_tone\",2194],[\"couple_with_heart_woman_woman_medium_skin_tone\",2195],[\"couple_with_heart_woman_woman_medium_dark_skin_tone\",2196],[\"couple_with_heart_woman_woman_dark_skin_tone\",2197],[\"couple_with_heart_man_man_light_skin_tone\",2198],[\"couple_with_heart_man_man_medium_light_skin_tone\",2199],[\"couple_with_heart_man_man_medium_skin_tone\",2200],[\"couple_with_heart_man_man_medium_dark_skin_tone\",2201],[\"couple_with_heart_man_man_dark_skin_tone\",2202],[\"couplekiss_woman_woman_light_skin_tone\",2203],[\"couplekiss_woman_woman_medium_light_skin_tone\",2204],[\"couplekiss_woman_woman_medium_skin_tone\",2205],[\"couplekiss_woman_woman_medium_dark_skin_tone\",2206],[\"couplekiss_woman_woman_dark_skin_tone\",2207],[\"couplekiss_man_man_light_skin_tone\",2208],[\"couplekiss_man_man_medium_light_skin_tone\",2209],[\"couplekiss_man_man_medium_skin_tone\",2210],[\"couplekiss_man_man_medium_dark_skin_tone\",2211],[\"couplekiss_man_man_dark_skin_tone\",2212],[\"family_man_woman_girl_light_skin_tone\",2213],[\"family_man_woman_girl_medium_light_skin_tone\",2214],[\"family_man_woman_girl_medium_skin_tone\",2215],[\"family_man_woman_girl_medium_dark_skin_tone\",2216],[\"family_man_woman_girl_dark_skin_tone\",2217],[\"family_man_woman_girl_boy_light_skin_tone\",2218],[\"family_man_woman_girl_boy_medium_light_skin_tone\",2219],[\"family_man_woman_girl_boy_medium_skin_tone\",2220],[\"family_man_woman_girl_boy_medium_dark_skin_tone\",2221],[\"family_man_woman_girl_boy_dark_skin_tone\",2222],[\"family_man_woman_boy_boy_light_skin_tone\",2223],[\"family_man_woman_boy_boy_medium_light_skin_tone\",2224],[\"family_man_woman_boy_boy_medium_skin_tone\",2225],[\"family_man_woman_boy_boy_medium_dark_skin_tone\",2226],[\"family_man_woman_boy_boy_dark_skin_tone\",2227],[\"family_man_woman_girl_girl_light_skin_tone\",2228],[\"family_man_woman_girl_girl_medium_light_skin_tone\",2229],[\"family_man_woman_girl_girl_medium_skin_tone\",2230],[\"family_man_woman_girl_girl_medium_dark_skin_tone\",2231],[\"family_man_woman_girl_girl_dark_skin_tone\",2232],[\"family_woman_woman_boy_light_skin_tone\",2233],[\"family_woman_woman_boy_medium_light_skin_tone\",2234],[\"family_woman_woman_boy_medium_skin_tone\",2235],[\"family_woman_woman_boy_medium_dark_skin_tone\",2236],[\"family_woman_woman_boy_dark_skin_tone\",2237],[\"family_woman_woman_girl_light_skin_tone\",2238],[\"family_woman_woman_girl_medium_light_skin_tone\",2239],[\"family_woman_woman_girl_medium_skin_tone\",2240],[\"family_woman_woman_girl_medium_dark_skin_tone\",2241],[\"family_woman_woman_girl_dark_skin_tone\",2242],[\"family_woman_woman_girl_boy_light_skin_tone\",2243],[\"family_woman_woman_girl_boy_medium_light_skin_tone\",2244],[\"family_woman_woman_girl_boy_medium_skin_tone\",2245],[\"family_woman_woman_girl_boy_medium_dark_skin_tone\",2246],[\"family_woman_woman_girl_boy_dark_skin_tone\",2247],[\"family_woman_woman_boy_boy_light_skin_tone\",2248],[\"family_woman_woman_boy_boy_medium_light_skin_tone\",2249],[\"family_woman_woman_boy_boy_medium_skin_tone\",2250],[\"family_woman_woman_boy_boy_medium_dark_skin_tone\",2251],[\"family_woman_woman_boy_boy_dark_skin_tone\",2252],[\"family_woman_woman_girl_girl_light_skin_tone\",2253],[\"family_woman_woman_girl_girl_medium_light_skin_tone\",2254],[\"family_woman_woman_girl_girl_medium_skin_tone\",2255],[\"family_woman_woman_girl_girl_medium_dark_skin_tone\",2256],[\"family_woman_woman_girl_girl_dark_skin_tone\",2257],[\"family_man_man_boy_light_skin_tone\",2258],[\"family_man_man_boy_medium_light_skin_tone\",2259],[\"family_man_man_boy_medium_skin_tone\",2260],[\"family_man_man_boy_medium_dark_skin_tone\",2261],[\"family_man_man_boy_dark_skin_tone\",2262],[\"family_man_man_girl_light_skin_tone\",2263],[\"family_man_man_girl_medium_light_skin_tone\",2264],[\"family_man_man_girl_medium_skin_tone\",2265],[\"family_man_man_girl_medium_dark_skin_tone\",2266],[\"family_man_man_girl_dark_skin_tone\",2267],[\"family_man_man_girl_boy_light_skin_tone\",2268],[\"family_man_man_girl_boy_medium_light_skin_tone\",2269],[\"family_man_man_girl_boy_medium_skin_tone\",2270],[\"family_man_man_girl_boy_medium_dark_skin_tone\",2271],[\"family_man_man_girl_boy_dark_skin_tone\",2272],[\"family_man_man_boy_boy_light_skin_tone\",2273],[\"family_man_man_boy_boy_medium_light_skin_tone\",2274],[\"family_man_man_boy_boy_medium_skin_tone\",2275],[\"family_man_man_boy_boy_medium_dark_skin_tone\",2276],[\"family_man_man_boy_boy_dark_skin_tone\",2277],[\"family_man_man_girl_girl_light_skin_tone\",2278],[\"family_man_man_girl_girl_medium_light_skin_tone\",2279],[\"family_man_man_girl_girl_medium_skin_tone\",2280],[\"family_man_man_girl_girl_medium_dark_skin_tone\",2281],[\"family_man_man_girl_girl_dark_skin_tone\",2282],[\"family_woman_boy_light_skin_tone\",2283],[\"family_woman_boy_medium_light_skin_tone\",2284],[\"family_woman_boy_medium_skin_tone\",2285],[\"family_woman_boy_medium_dark_skin_tone\",2286],[\"family_woman_boy_dark_skin_tone\",2287],[\"family_woman_girl_light_skin_tone\",2288],[\"family_woman_girl_medium_light_skin_tone\",2289],[\"family_woman_girl_medium_skin_tone\",2290],[\"family_woman_girl_medium_dark_skin_tone\",2291],[\"family_woman_girl_dark_skin_tone\",2292],[\"family_woman_girl_boy_light_skin_tone\",2293],[\"family_woman_girl_boy_medium_light_skin_tone\",2294],[\"family_woman_girl_boy_medium_skin_tone\",2295],[\"family_woman_girl_boy_medium_dark_skin_tone\",2296],[\"family_woman_girl_boy_dark_skin_tone\",2297],[\"family_woman_boy_boy_light_skin_tone\",2298],[\"family_woman_boy_boy_medium_light_skin_tone\",2299],[\"family_woman_boy_boy_medium_skin_tone\",2300],[\"family_woman_boy_boy_medium_dark_skin_tone\",2301],[\"family_woman_boy_boy_dark_skin_tone\",2302],[\"family_woman_girl_girl_light_skin_tone\",2303],[\"family_woman_girl_girl_medium_light_skin_tone\",2304],[\"family_woman_girl_girl_medium_skin_tone\",2305],[\"family_woman_girl_girl_medium_dark_skin_tone\",2306],[\"family_woman_girl_girl_dark_skin_tone\",2307],[\"family_man_boy_light_skin_tone\",2308],[\"family_man_boy_medium_light_skin_tone\",2309],[\"family_man_boy_medium_skin_tone\",2310],[\"family_man_boy_medium_dark_skin_tone\",2311],[\"family_man_boy_dark_skin_tone\",2312],[\"family_man_girl_light_skin_tone\",2313],[\"family_man_girl_medium_light_skin_tone\",2314],[\"family_man_girl_medium_skin_tone\",2315],[\"family_man_girl_medium_dark_skin_tone\",2316],[\"family_man_girl_dark_skin_tone\",2317],[\"family_man_girl_boy_light_skin_tone\",2318],[\"family_man_girl_boy_medium_light_skin_tone\",2319],[\"family_man_girl_boy_medium_skin_tone\",2320],[\"family_man_girl_boy_medium_dark_skin_tone\",2321],[\"family_man_girl_boy_dark_skin_tone\",2322],[\"family_man_boy_boy_light_skin_tone\",2323],[\"family_man_boy_boy_medium_light_skin_tone\",2324],[\"family_man_boy_boy_medium_skin_tone\",2325],[\"family_man_boy_boy_medium_dark_skin_tone\",2326],[\"family_man_boy_boy_dark_skin_tone\",2327],[\"family_man_girl_girl_light_skin_tone\",2328],[\"family_man_girl_girl_medium_light_skin_tone\",2329],[\"family_man_girl_girl_medium_skin_tone\",2330],[\"family_man_girl_girl_medium_dark_skin_tone\",2331],[\"family_man_girl_girl_dark_skin_tone\",2332],[\"weight_lifting_woman_light_skin_tone\",2333],[\"weight_lifting_woman_medium_light_skin_tone\",2334],[\"weight_lifting_woman_medium_skin_tone\",2335],[\"weight_lifting_woman_medium_dark_skin_tone\",2336],[\"weight_lifting_woman_dark_skin_tone\",2337],[\"weight_lifting_woman_light_skin_tone\",2338],[\"weight_lifting_woman_medium_light_skin_tone\",2339],[\"weight_lifting_woman_medium_skin_tone\",2340],[\"weight_lifting_woman_medium_dark_skin_tone\",2341],[\"weight_lifting_woman_dark_skin_tone\",2342],[\"weight_lifting_man_light_skin_tone\",2343],[\"weight_lifting_man_medium_light_skin_tone\",2344],[\"weight_lifting_man_medium_skin_tone\",2345],[\"weight_lifting_man_medium_dark_skin_tone\",2346],[\"weight_lifting_man_dark_skin_tone\",2347],[\"weight_lifting_man_light_skin_tone\",2348],[\"weight_lifting_man_medium_light_skin_tone\",2349],[\"weight_lifting_man_medium_skin_tone\",2350],[\"weight_lifting_man_medium_dark_skin_tone\",2351],[\"weight_lifting_man_dark_skin_tone\",2352],[\"woman_cartwheeling_light_skin_tone\",2353],[\"woman_cartwheeling_medium_light_skin_tone\",2354],[\"woman_cartwheeling_medium_skin_tone\",2355],[\"woman_cartwheeling_medium_dark_skin_tone\",2356],[\"woman_cartwheeling_dark_skin_tone\",2357],[\"woman_cartwheeling_light_skin_tone\",2358],[\"woman_cartwheeling_medium_light_skin_tone\",2359],[\"woman_cartwheeling_medium_skin_tone\",2360],[\"woman_cartwheeling_medium_dark_skin_tone\",2361],[\"woman_cartwheeling_dark_skin_tone\",2362],[\"man_cartwheeling_light_skin_tone\",2363],[\"man_cartwheeling_medium_light_skin_tone\",2364],[\"man_cartwheeling_medium_skin_tone\",2365],[\"man_cartwheeling_medium_dark_skin_tone\",2366],[\"man_cartwheeling_dark_skin_tone\",2367],[\"basketball_woman_light_skin_tone\",2368],[\"basketball_woman_medium_light_skin_tone\",2369],[\"basketball_woman_medium_skin_tone\",2370],[\"basketball_woman_medium_dark_skin_tone\",2371],[\"basketball_woman_dark_skin_tone\",2372],[\"basketball_woman_light_skin_tone\",2373],[\"basketball_woman_medium_light_skin_tone\",2374],[\"basketball_woman_medium_skin_tone\",2375],[\"basketball_woman_medium_dark_skin_tone\",2376],[\"basketball_woman_dark_skin_tone\",2377],[\"basketball_man_light_skin_tone\",2378],[\"basketball_man_medium_light_skin_tone\",2379],[\"basketball_man_medium_skin_tone\",2380],[\"basketball_man_medium_dark_skin_tone\",2381],[\"basketball_man_dark_skin_tone\",2382],[\"basketball_man_light_skin_tone\",2383],[\"basketball_man_medium_light_skin_tone\",2384],[\"basketball_man_medium_skin_tone\",2385],[\"basketball_man_medium_dark_skin_tone\",2386],[\"basketball_man_dark_skin_tone\",2387],[\"woman_playing_handball_light_skin_tone\",2388],[\"woman_playing_handball_medium_light_skin_tone\",2389],[\"woman_playing_handball_medium_skin_tone\",2390],[\"woman_playing_handball_medium_dark_skin_tone\",2391],[\"woman_playing_handball_dark_skin_tone\",2392],[\"woman_playing_handball_light_skin_tone\",2393],[\"woman_playing_handball_medium_light_skin_tone\",2394],[\"woman_playing_handball_medium_skin_tone\",2395],[\"woman_playing_handball_medium_dark_skin_tone\",2396],[\"woman_playing_handball_dark_skin_tone\",2397],[\"man_playing_handball_light_skin_tone\",2398],[\"man_playing_handball_medium_light_skin_tone\",2399],[\"man_playing_handball_medium_skin_tone\",2400],[\"man_playing_handball_medium_dark_skin_tone\",2401],[\"man_playing_handball_dark_skin_tone\",2402],[\"golfing_woman_light_skin_tone\",2403],[\"golfing_woman_medium_light_skin_tone\",2404],[\"golfing_woman_medium_skin_tone\",2405],[\"golfing_woman_medium_dark_skin_tone\",2406],[\"golfing_woman_dark_skin_tone\",2407],[\"golfing_woman_light_skin_tone\",2408],[\"golfing_woman_medium_light_skin_tone\",2409],[\"golfing_woman_medium_skin_tone\",2410],[\"golfing_woman_medium_dark_skin_tone\",2411],[\"golfing_woman_dark_skin_tone\",2412],[\"golfing_man_light_skin_tone\",2413],[\"golfing_man_medium_light_skin_tone\",2414],[\"golfing_man_medium_skin_tone\",2415],[\"golfing_man_medium_dark_skin_tone\",2416],[\"golfing_man_dark_skin_tone\",2417],[\"golfing_man_light_skin_tone\",2418],[\"golfing_man_medium_light_skin_tone\",2419],[\"golfing_man_medium_skin_tone\",2420],[\"golfing_man_medium_dark_skin_tone\",2421],[\"golfing_man_dark_skin_tone\",2422],[\"surfing_woman_light_skin_tone\",2423],[\"surfing_woman_medium_light_skin_tone\",2424],[\"surfing_woman_medium_skin_tone\",2425],[\"surfing_woman_medium_dark_skin_tone\",2426],[\"surfing_woman_dark_skin_tone\",2427],[\"surfing_woman_light_skin_tone\",2428],[\"surfing_woman_medium_light_skin_tone\",2429],[\"surfing_woman_medium_skin_tone\",2430],[\"surfing_woman_medium_dark_skin_tone\",2431],[\"surfing_woman_dark_skin_tone\",2432],[\"surfing_man_light_skin_tone\",2433],[\"surfing_man_medium_light_skin_tone\",2434],[\"surfing_man_medium_skin_tone\",2435],[\"surfing_man_medium_dark_skin_tone\",2436],[\"surfing_man_dark_skin_tone\",2437],[\"surfing_man_light_skin_tone\",2438],[\"surfing_man_medium_light_skin_tone\",2439],[\"surfing_man_medium_skin_tone\",2440],[\"surfing_man_medium_dark_skin_tone\",2441],[\"surfing_man_dark_skin_tone\",2442],[\"swimming_woman_light_skin_tone\",2443],[\"swimming_woman_medium_light_skin_tone\",2444],[\"swimming_woman_medium_skin_tone\",2445],[\"swimming_woman_medium_dark_skin_tone\",2446],[\"swimming_woman_dark_skin_tone\",2447],[\"swimming_woman_light_skin_tone\",2448],[\"swimming_woman_medium_light_skin_tone\",2449],[\"swimming_woman_medium_skin_tone\",2450],[\"swimming_woman_medium_dark_skin_tone\",2451],[\"swimming_woman_dark_skin_tone\",2452],[\"swimming_man_light_skin_tone\",2453],[\"swimming_man_medium_light_skin_tone\",2454],[\"swimming_man_medium_skin_tone\",2455],[\"swimming_man_medium_dark_skin_tone\",2456],[\"swimming_man_dark_skin_tone\",2457],[\"swimming_man_light_skin_tone\",2458],[\"swimming_man_medium_light_skin_tone\",2459],[\"swimming_man_medium_skin_tone\",2460],[\"swimming_man_medium_dark_skin_tone\",2461],[\"swimming_man_dark_skin_tone\",2462],[\"woman_playing_water_polo_light_skin_tone\",2463],[\"woman_playing_water_polo_medium_light_skin_tone\",2464],[\"woman_playing_water_polo_medium_skin_tone\",2465],[\"woman_playing_water_polo_medium_dark_skin_tone\",2466],[\"woman_playing_water_polo_dark_skin_tone\",2467],[\"woman_playing_water_polo_light_skin_tone\",2468],[\"woman_playing_water_polo_medium_light_skin_tone\",2469],[\"woman_playing_water_polo_medium_skin_tone\",2470],[\"woman_playing_water_polo_medium_dark_skin_tone\",2471],[\"woman_playing_water_polo_dark_skin_tone\",2472],[\"man_playing_water_polo_light_skin_tone\",2473],[\"man_playing_water_polo_medium_light_skin_tone\",2474],[\"man_playing_water_polo_medium_skin_tone\",2475],[\"man_playing_water_polo_medium_dark_skin_tone\",2476],[\"man_playing_water_polo_dark_skin_tone\",2477],[\"rowing_woman_light_skin_tone\",2478],[\"rowing_woman_medium_light_skin_tone\",2479],[\"rowing_woman_medium_skin_tone\",2480],[\"rowing_woman_medium_dark_skin_tone\",2481],[\"rowing_woman_dark_skin_tone\",2482],[\"rowing_woman_light_skin_tone\",2483],[\"rowing_woman_medium_light_skin_tone\",2484],[\"rowing_woman_medium_skin_tone\",2485],[\"rowing_woman_medium_dark_skin_tone\",2486],[\"rowing_woman_dark_skin_tone\",2487],[\"rowing_man_light_skin_tone\",2488],[\"rowing_man_medium_light_skin_tone\",2489],[\"rowing_man_medium_skin_tone\",2490],[\"rowing_man_medium_dark_skin_tone\",2491],[\"rowing_man_dark_skin_tone\",2492],[\"rowing_man_light_skin_tone\",2493],[\"rowing_man_medium_light_skin_tone\",2494],[\"rowing_man_medium_skin_tone\",2495],[\"rowing_man_medium_dark_skin_tone\",2496],[\"rowing_man_dark_skin_tone\",2497],[\"horse_racing_light_skin_tone\",2498],[\"horse_racing_medium_light_skin_tone\",2499],[\"horse_racing_medium_skin_tone\",2500],[\"horse_racing_medium_dark_skin_tone\",2501],[\"horse_racing_dark_skin_tone\",2502],[\"biking_woman_light_skin_tone\",2503],[\"biking_woman_medium_light_skin_tone\",2504],[\"biking_woman_medium_skin_tone\",2505],[\"biking_woman_medium_dark_skin_tone\",2506],[\"biking_woman_dark_skin_tone\",2507],[\"biking_woman_light_skin_tone\",2508],[\"biking_woman_medium_light_skin_tone\",2509],[\"biking_woman_medium_skin_tone\",2510],[\"biking_woman_medium_dark_skin_tone\",2511],[\"biking_woman_dark_skin_tone\",2512],[\"biking_man_light_skin_tone\",2513],[\"biking_man_medium_light_skin_tone\",2514],[\"biking_man_medium_skin_tone\",2515],[\"biking_man_medium_dark_skin_tone\",2516],[\"biking_man_dark_skin_tone\",2517],[\"biking_man_light_skin_tone\",2518],[\"biking_man_medium_light_skin_tone\",2519],[\"biking_man_medium_skin_tone\",2520],[\"biking_man_medium_dark_skin_tone\",2521],[\"biking_man_dark_skin_tone\",2522],[\"mountain_biking_woman_light_skin_tone\",2523],[\"mountain_biking_woman_medium_light_skin_tone\",2524],[\"mountain_biking_woman_medium_skin_tone\",2525],[\"mountain_biking_woman_medium_dark_skin_tone\",2526],[\"mountain_biking_woman_dark_skin_tone\",2527],[\"mountain_biking_woman_light_skin_tone\",2528],[\"mountain_biking_woman_medium_light_skin_tone\",2529],[\"mountain_biking_woman_medium_skin_tone\",2530],[\"mountain_biking_woman_medium_dark_skin_tone\",2531],[\"mountain_biking_woman_dark_skin_tone\",2532],[\"mountain_biking_man_light_skin_tone\",2533],[\"mountain_biking_man_medium_light_skin_tone\",2534],[\"mountain_biking_man_medium_skin_tone\",2535],[\"mountain_biking_man_medium_dark_skin_tone\",2536],[\"mountain_biking_man_dark_skin_tone\",2537],[\"mountain_biking_man_light_skin_tone\",2538],[\"mountain_biking_man_medium_light_skin_tone\",2539],[\"mountain_biking_man_medium_skin_tone\",2540],[\"mountain_biking_man_medium_dark_skin_tone\",2541],[\"mountain_biking_man_dark_skin_tone\",2542],[\"woman_juggling_light_skin_tone\",2543],[\"woman_juggling_medium_light_skin_tone\",2544],[\"woman_juggling_medium_skin_tone\",2545],[\"woman_juggling_medium_dark_skin_tone\",2546],[\"woman_juggling_dark_skin_tone\",2547],[\"woman_juggling_light_skin_tone\",2548],[\"woman_juggling_medium_light_skin_tone\",2549],[\"woman_juggling_medium_skin_tone\",2550],[\"woman_juggling_medium_dark_skin_tone\",2551],[\"woman_juggling_dark_skin_tone\",2552],[\"man_juggling_light_skin_tone\",2553],[\"man_juggling_medium_light_skin_tone\",2554],[\"man_juggling_medium_skin_tone\",2555],[\"man_juggling_medium_dark_skin_tone\",2556],[\"man_juggling_dark_skin_tone\",2557],[\"bath_light_skin_tone\",2558],[\"bath_medium_light_skin_tone\",2559],[\"bath_medium_skin_tone\",2560],[\"bath_medium_dark_skin_tone\",2561],[\"bath_dark_skin_tone\",2562]]);\n\nexport const EmojiIndicesByUnicode = new Map([[\"1f600\",0],[\"1f600-fe0f\",0],[\"1f603\",1],[\"1f603-fe0f\",1],[\"1f604\",2],[\"1f604-fe0f\",2],[\"1f601\",3],[\"1f601-fe0f\",3],[\"1f606\",4],[\"1f606-fe0f\",4],[\"1f605\",5],[\"1f605-fe0f\",5],[\"1f602\",6],[\"1f602-fe0f\",6],[\"1f923\",7],[\"1f923-fe0f\",7],[\"263a-fe0f\",8],[\"1f60a\",9],[\"1f60a-fe0f\",9],[\"1f607\",10],[\"1f607-fe0f\",10],[\"1f642\",11],[\"1f642-fe0f\",11],[\"1f643\",12],[\"1f643-fe0f\",12],[\"1f609\",13],[\"1f609-fe0f\",13],[\"1f60c\",14],[\"1f60c-fe0f\",14],[\"1f60d\",15],[\"1f60d-fe0f\",15],[\"1f618\",16],[\"1f618-fe0f\",16],[\"1f617\",17],[\"1f617-fe0f\",17],[\"1f619\",18],[\"1f619-fe0f\",18],[\"1f61a\",19],[\"1f61a-fe0f\",19],[\"1f60b\",20],[\"1f60b-fe0f\",20],[\"1f61c\",21],[\"1f61c-fe0f\",21],[\"1f61d\",22],[\"1f61d-fe0f\",22],[\"1f61b\",23],[\"1f61b-fe0f\",23],[\"1f911\",24],[\"1f911-fe0f\",24],[\"1f917\",25],[\"1f917-fe0f\",25],[\"1f913\",26],[\"1f913-fe0f\",26],[\"1f60e\",27],[\"1f60e-fe0f\",27],[\"1f921\",28],[\"1f921-fe0f\",28],[\"1f920\",29],[\"1f920-fe0f\",29],[\"1f60f\",30],[\"1f60f-fe0f\",30],[\"1f612\",31],[\"1f612-fe0f\",31],[\"1f61e\",32],[\"1f61e-fe0f\",32],[\"1f614\",33],[\"1f614-fe0f\",33],[\"1f61f\",34],[\"1f61f-fe0f\",34],[\"1f615\",35],[\"1f615-fe0f\",35],[\"1f641\",36],[\"1f641-fe0f\",36],[\"2639-fe0f\",37],[\"1f623\",38],[\"1f623-fe0f\",38],[\"1f616\",39],[\"1f616-fe0f\",39],[\"1f62b\",40],[\"1f62b-fe0f\",40],[\"1f629\",41],[\"1f629-fe0f\",41],[\"1f624\",42],[\"1f624-fe0f\",42],[\"1f620\",43],[\"1f620-fe0f\",43],[\"1f621\",44],[\"1f621-fe0f\",44],[\"1f636\",45],[\"1f636-fe0f\",45],[\"1f610\",46],[\"1f610-fe0f\",46],[\"1f611\",47],[\"1f611-fe0f\",47],[\"1f62f\",48],[\"1f62f-fe0f\",48],[\"1f626\",49],[\"1f626-fe0f\",49],[\"1f627\",50],[\"1f627-fe0f\",50],[\"1f62e\",51],[\"1f62e-fe0f\",51],[\"1f632\",52],[\"1f632-fe0f\",52],[\"1f635\",53],[\"1f635-fe0f\",53],[\"1f633\",54],[\"1f633-fe0f\",54],[\"1f631\",55],[\"1f631-fe0f\",55],[\"1f628\",56],[\"1f628-fe0f\",56],[\"1f630\",57],[\"1f630-fe0f\",57],[\"1f622\",58],[\"1f622-fe0f\",58],[\"1f625\",59],[\"1f625-fe0f\",59],[\"1f924\",60],[\"1f924-fe0f\",60],[\"1f62d\",61],[\"1f62d-fe0f\",61],[\"1f613\",62],[\"1f613-fe0f\",62],[\"1f62a\",63],[\"1f62a-fe0f\",63],[\"1f634\",64],[\"1f634-fe0f\",64],[\"1f644\",65],[\"1f644-fe0f\",65],[\"1f914\",66],[\"1f914-fe0f\",66],[\"1f925\",67],[\"1f925-fe0f\",67],[\"1f62c\",68],[\"1f62c-fe0f\",68],[\"1f910\",69],[\"1f910-fe0f\",69],[\"1f922\",70],[\"1f922-fe0f\",70],[\"1f927\",71],[\"1f927-fe0f\",71],[\"1f637\",72],[\"1f637-fe0f\",72],[\"1f912\",73],[\"1f912-fe0f\",73],[\"1f915\",74],[\"1f915-fe0f\",74],[\"1f608\",75],[\"1f608-fe0f\",75],[\"1f47f\",76],[\"1f47f-fe0f\",76],[\"1f479\",77],[\"1f479-fe0f\",77],[\"1f47a\",78],[\"1f47a-fe0f\",78],[\"1f4a9\",79],[\"1f4a9-fe0f\",79],[\"1f47b\",80],[\"1f47b-fe0f\",80],[\"1f480\",81],[\"1f480-fe0f\",81],[\"2620-fe0f\",82],[\"1f47d\",83],[\"1f47d-fe0f\",83],[\"1f47e\",84],[\"1f47e-fe0f\",84],[\"1f916\",85],[\"1f916-fe0f\",85],[\"1f383\",86],[\"1f383-fe0f\",86],[\"1f63a\",87],[\"1f63a-fe0f\",87],[\"1f638\",88],[\"1f638-fe0f\",88],[\"1f639\",89],[\"1f639-fe0f\",89],[\"1f63b\",90],[\"1f63b-fe0f\",90],[\"1f63c\",91],[\"1f63c-fe0f\",91],[\"1f63d\",92],[\"1f63d-fe0f\",92],[\"1f640\",93],[\"1f640-fe0f\",93],[\"1f63f\",94],[\"1f63f-fe0f\",94],[\"1f63e\",95],[\"1f63e-fe0f\",95],[\"1f450\",96],[\"1f450-fe0f\",96],[\"1f64c\",97],[\"1f64c-fe0f\",97],[\"1f44f\",98],[\"1f44f-fe0f\",98],[\"1f64f\",99],[\"1f64f-fe0f\",99],[\"1f91d\",100],[\"1f91d-fe0f\",100],[\"1f44d\",101],[\"1f44d-fe0f\",101],[\"1f44e\",102],[\"1f44e-fe0f\",102],[\"1f44a\",103],[\"1f44a-fe0f\",103],[\"270a\",104],[\"270a-fe0f\",104],[\"1f91b\",105],[\"1f91b-fe0f\",105],[\"1f91c\",106],[\"1f91c-fe0f\",106],[\"1f91e\",107],[\"1f91e-fe0f\",107],[\"270c-fe0f\",108],[\"1f918\",109],[\"1f918-fe0f\",109],[\"1f44c\",110],[\"1f44c-fe0f\",110],[\"1f448\",111],[\"1f448-fe0f\",111],[\"1f449\",112],[\"1f449-fe0f\",112],[\"1f446\",113],[\"1f446-fe0f\",113],[\"1f447\",114],[\"1f447-fe0f\",114],[\"261d-fe0f\",115],[\"270b\",116],[\"270b-fe0f\",116],[\"1f91a\",117],[\"1f91a-fe0f\",117],[\"1f590\",118],[\"1f590-fe0f\",118],[\"1f596\",119],[\"1f596-fe0f\",119],[\"1f44b\",120],[\"1f44b-fe0f\",120],[\"1f919\",121],[\"1f919-fe0f\",121],[\"1f4aa\",122],[\"1f4aa-fe0f\",122],[\"1f595\",123],[\"1f595-fe0f\",123],[\"270d-fe0f\",124],[\"1f933\",125],[\"1f933-fe0f\",125],[\"1f485\",126],[\"1f485-fe0f\",126],[\"1f48d\",127],[\"1f48d-fe0f\",127],[\"1f484\",128],[\"1f484-fe0f\",128],[\"1f48b\",129],[\"1f48b-fe0f\",129],[\"1f444\",130],[\"1f444-fe0f\",130],[\"1f445\",131],[\"1f445-fe0f\",131],[\"1f442\",132],[\"1f442-fe0f\",132],[\"1f443\",133],[\"1f443-fe0f\",133],[\"1f463\",134],[\"1f463-fe0f\",134],[\"1f441\",135],[\"1f441-fe0f\",135],[\"1f440\",136],[\"1f440-fe0f\",136],[\"1f5e3\",137],[\"1f5e3-fe0f\",137],[\"1f464\",138],[\"1f464-fe0f\",138],[\"1f465\",139],[\"1f465-fe0f\",139],[\"1f476\",140],[\"1f476-fe0f\",140],[\"1f466\",141],[\"1f466-fe0f\",141],[\"1f467\",142],[\"1f467-fe0f\",142],[\"1f468\",143],[\"1f468-fe0f\",143],[\"1f469\",144],[\"1f469-fe0f\",144],[\"1f471-200d-2640-fe0f\",145],[\"1f471\",146],[\"1f471-fe0f\",146],[\"1f471-200d-2642-fe0f\",146],[\"1f474\",147],[\"1f474-fe0f\",147],[\"1f475\",148],[\"1f475-fe0f\",148],[\"1f472\",149],[\"1f472-fe0f\",149],[\"1f473-200d-2640-fe0f\",150],[\"1f473\",151],[\"1f473-fe0f\",151],[\"1f473-200d-2642-fe0f\",151],[\"1f46e-200d-2640-fe0f\",152],[\"1f46e\",153],[\"1f46e-fe0f\",153],[\"1f46e-200d-2642-fe0f\",153],[\"1f477-200d-2640-fe0f\",154],[\"1f477\",155],[\"1f477-fe0f\",155],[\"1f477-200d-2642-fe0f\",155],[\"1f482-200d-2640-fe0f\",156],[\"1f482\",157],[\"1f482-fe0f\",157],[\"1f482-200d-2642-fe0f\",157],[\"1f575-fe0f-200d-2640-fe0f\",158],[\"1f575-200d-2640-fe0f-fe0f\",158],[\"1f575-fe0f\",159],[\"1f575-fe0f-200d-2642-fe0f\",159],[\"1f469-200d-2695-fe0f\",160],[\"1f468-200d-2695-fe0f\",161],[\"1f469-200d-1f33e\",162],[\"1f469-200d-1f33e-fe0f\",162],[\"1f468-200d-1f33e\",163],[\"1f468-200d-1f33e-fe0f\",163],[\"1f469-200d-1f373\",164],[\"1f469-200d-1f373-fe0f\",164],[\"1f468-200d-1f373\",165],[\"1f468-200d-1f373-fe0f\",165],[\"1f469-200d-1f393\",166],[\"1f469-200d-1f393-fe0f\",166],[\"1f468-200d-1f393\",167],[\"1f468-200d-1f393-fe0f\",167],[\"1f469-200d-1f3a4\",168],[\"1f469-200d-1f3a4-fe0f\",168],[\"1f468-200d-1f3a4\",169],[\"1f468-200d-1f3a4-fe0f\",169],[\"1f469-200d-1f3eb\",170],[\"1f469-200d-1f3eb-fe0f\",170],[\"1f468-200d-1f3eb\",171],[\"1f468-200d-1f3eb-fe0f\",171],[\"1f469-200d-1f3ed\",172],[\"1f469-200d-1f3ed-fe0f\",172],[\"1f468-200d-1f3ed\",173],[\"1f468-200d-1f3ed-fe0f\",173],[\"1f469-200d-1f4bb\",174],[\"1f469-200d-1f4bb-fe0f\",174],[\"1f468-200d-1f4bb\",175],[\"1f468-200d-1f4bb-fe0f\",175],[\"1f469-200d-1f4bc\",176],[\"1f469-200d-1f4bc-fe0f\",176],[\"1f468-200d-1f4bc\",177],[\"1f468-200d-1f4bc-fe0f\",177],[\"1f469-200d-1f527\",178],[\"1f469-200d-1f527-fe0f\",178],[\"1f468-200d-1f527\",179],[\"1f468-200d-1f527-fe0f\",179],[\"1f469-200d-1f52c\",180],[\"1f469-200d-1f52c-fe0f\",180],[\"1f468-200d-1f52c\",181],[\"1f468-200d-1f52c-fe0f\",181],[\"1f469-200d-1f3a8\",182],[\"1f469-200d-1f3a8-fe0f\",182],[\"1f468-200d-1f3a8\",183],[\"1f468-200d-1f3a8-fe0f\",183],[\"1f469-200d-1f692\",184],[\"1f469-200d-1f692-fe0f\",184],[\"1f468-200d-1f692\",185],[\"1f468-200d-1f692-fe0f\",185],[\"1f469-200d-2708-fe0f\",186],[\"1f468-200d-2708-fe0f\",187],[\"1f469-200d-1f680\",188],[\"1f469-200d-1f680-fe0f\",188],[\"1f468-200d-1f680\",189],[\"1f468-200d-1f680-fe0f\",189],[\"1f469-200d-2696-fe0f\",190],[\"1f468-200d-2696-fe0f\",191],[\"1f936\",192],[\"1f936-fe0f\",192],[\"1f385\",193],[\"1f385-fe0f\",193],[\"1f478\",194],[\"1f478-fe0f\",194],[\"1f934\",195],[\"1f934-fe0f\",195],[\"1f470\",196],[\"1f470-fe0f\",196],[\"1f935\",197],[\"1f935-fe0f\",197],[\"1f47c\",198],[\"1f47c-fe0f\",198],[\"1f930\",199],[\"1f930-fe0f\",199],[\"1f647-200d-2640-fe0f\",200],[\"1f647\",201],[\"1f647-fe0f\",201],[\"1f647-200d-2642-fe0f\",201],[\"1f481\",202],[\"1f481-fe0f\",202],[\"1f481-200d-2640-fe0f\",202],[\"1f481-200d-2642-fe0f\",203],[\"1f645\",204],[\"1f645-fe0f\",204],[\"1f645-200d-2640-fe0f\",204],[\"1f645-200d-2642-fe0f\",205],[\"1f646\",206],[\"1f646-fe0f\",206],[\"1f646-200d-2640-fe0f\",206],[\"1f646-200d-2642-fe0f\",207],[\"1f64b\",208],[\"1f64b-fe0f\",208],[\"1f64b-200d-2640-fe0f\",208],[\"1f64b-200d-2642-fe0f\",209],[\"1f926-200d-2640-fe0f\",210],[\"1f926-200d-2642-fe0f\",211],[\"1f937-200d-2640-fe0f\",212],[\"1f937-200d-2642-fe0f\",213],[\"1f64e\",214],[\"1f64e-fe0f\",214],[\"1f64e-200d-2640-fe0f\",214],[\"1f64e-200d-2642-fe0f\",215],[\"1f64d\",216],[\"1f64d-fe0f\",216],[\"1f64d-200d-2640-fe0f\",216],[\"1f64d-200d-2642-fe0f\",217],[\"1f487\",218],[\"1f487-fe0f\",218],[\"1f487-200d-2640-fe0f\",218],[\"1f487-200d-2642-fe0f\",219],[\"1f486\",220],[\"1f486-fe0f\",220],[\"1f486-200d-2640-fe0f\",220],[\"1f486-200d-2642-fe0f\",221],[\"1f574\",222],[\"1f574-fe0f\",222],[\"1f483\",223],[\"1f483-fe0f\",223],[\"1f57a\",224],[\"1f57a-fe0f\",224],[\"1f46f\",225],[\"1f46f-fe0f\",225],[\"1f46f-200d-2640-fe0f\",225],[\"1f46f-200d-2642-fe0f\",226],[\"1f6b6-200d-2640-fe0f\",227],[\"1f6b6\",228],[\"1f6b6-fe0f\",228],[\"1f6b6-200d-2642-fe0f\",228],[\"1f3c3-200d-2640-fe0f\",229],[\"1f3c3\",230],[\"1f3c3-fe0f\",230],[\"1f3c3-200d-2642-fe0f\",230],[\"1f46b\",231],[\"1f46b-fe0f\",231],[\"1f46d\",232],[\"1f46d-fe0f\",232],[\"1f46c\",233],[\"1f46c-fe0f\",233],[\"1f491\",234],[\"1f491-fe0f\",234],[\"1f469-200d-2764-fe0f-200d-1f469\",235],[\"1f469-200d-2764-200d-1f469-fe0f\",235],[\"1f468-200d-2764-fe0f-200d-1f468\",236],[\"1f468-200d-2764-200d-1f468-fe0f\",236],[\"1f48f\",237],[\"1f48f-fe0f\",237],[\"1f469-200d-2764-fe0f-200d-1f48b-200d-1f469\",238],[\"1f469-200d-2764-200d-1f48b-200d-1f469-fe0f\",238],[\"1f468-200d-2764-fe0f-200d-1f48b-200d-1f468\",239],[\"1f468-200d-2764-200d-1f48b-200d-1f468-fe0f\",239],[\"1f46a\",240],[\"1f46a-fe0f\",240],[\"1f468-200d-1f469-200d-1f467\",241],[\"1f468-200d-1f469-200d-1f467-fe0f\",241],[\"1f468-200d-1f469-200d-1f467-200d-1f466\",242],[\"1f468-200d-1f469-200d-1f467-200d-1f466-fe0f\",242],[\"1f468-200d-1f469-200d-1f466-200d-1f466\",243],[\"1f468-200d-1f469-200d-1f466-200d-1f466-fe0f\",243],[\"1f468-200d-1f469-200d-1f467-200d-1f467\",244],[\"1f468-200d-1f469-200d-1f467-200d-1f467-fe0f\",244],[\"1f469-200d-1f469-200d-1f466\",245],[\"1f469-200d-1f469-200d-1f466-fe0f\",245],[\"1f469-200d-1f469-200d-1f467\",246],[\"1f469-200d-1f469-200d-1f467-fe0f\",246],[\"1f469-200d-1f469-200d-1f467-200d-1f466\",247],[\"1f469-200d-1f469-200d-1f467-200d-1f466-fe0f\",247],[\"1f469-200d-1f469-200d-1f466-200d-1f466\",248],[\"1f469-200d-1f469-200d-1f466-200d-1f466-fe0f\",248],[\"1f469-200d-1f469-200d-1f467-200d-1f467\",249],[\"1f469-200d-1f469-200d-1f467-200d-1f467-fe0f\",249],[\"1f468-200d-1f468-200d-1f466\",250],[\"1f468-200d-1f468-200d-1f466-fe0f\",250],[\"1f468-200d-1f468-200d-1f467\",251],[\"1f468-200d-1f468-200d-1f467-fe0f\",251],[\"1f468-200d-1f468-200d-1f467-200d-1f466\",252],[\"1f468-200d-1f468-200d-1f467-200d-1f466-fe0f\",252],[\"1f468-200d-1f468-200d-1f466-200d-1f466\",253],[\"1f468-200d-1f468-200d-1f466-200d-1f466-fe0f\",253],[\"1f468-200d-1f468-200d-1f467-200d-1f467\",254],[\"1f468-200d-1f468-200d-1f467-200d-1f467-fe0f\",254],[\"1f469-200d-1f466\",255],[\"1f469-200d-1f466-fe0f\",255],[\"1f469-200d-1f467\",256],[\"1f469-200d-1f467-fe0f\",256],[\"1f469-200d-1f467-200d-1f466\",257],[\"1f469-200d-1f467-200d-1f466-fe0f\",257],[\"1f469-200d-1f466-200d-1f466\",258],[\"1f469-200d-1f466-200d-1f466-fe0f\",258],[\"1f469-200d-1f467-200d-1f467\",259],[\"1f469-200d-1f467-200d-1f467-fe0f\",259],[\"1f468-200d-1f466\",260],[\"1f468-200d-1f466-fe0f\",260],[\"1f468-200d-1f467\",261],[\"1f468-200d-1f467-fe0f\",261],[\"1f468-200d-1f467-200d-1f466\",262],[\"1f468-200d-1f467-200d-1f466-fe0f\",262],[\"1f468-200d-1f466-200d-1f466\",263],[\"1f468-200d-1f466-200d-1f466-fe0f\",263],[\"1f468-200d-1f467-200d-1f467\",264],[\"1f468-200d-1f467-200d-1f467-fe0f\",264],[\"1f45a\",265],[\"1f45a-fe0f\",265],[\"1f455\",266],[\"1f455-fe0f\",266],[\"1f456\",267],[\"1f456-fe0f\",267],[\"1f454\",268],[\"1f454-fe0f\",268],[\"1f457\",269],[\"1f457-fe0f\",269],[\"1f459\",270],[\"1f459-fe0f\",270],[\"1f458\",271],[\"1f458-fe0f\",271],[\"1f460\",272],[\"1f460-fe0f\",272],[\"1f461\",273],[\"1f461-fe0f\",273],[\"1f462\",274],[\"1f462-fe0f\",274],[\"1f45e\",275],[\"1f45e-fe0f\",275],[\"1f45f\",276],[\"1f45f-fe0f\",276],[\"1f452\",277],[\"1f452-fe0f\",277],[\"1f3a9\",278],[\"1f3a9-fe0f\",278],[\"1f393\",279],[\"1f393-fe0f\",279],[\"1f451\",280],[\"1f451-fe0f\",280],[\"26d1\",281],[\"26d1-fe0f\",281],[\"1f392\",282],[\"1f392-fe0f\",282],[\"1f45d\",283],[\"1f45d-fe0f\",283],[\"1f45b\",284],[\"1f45b-fe0f\",284],[\"1f45c\",285],[\"1f45c-fe0f\",285],[\"1f4bc\",286],[\"1f4bc-fe0f\",286],[\"1f453\",287],[\"1f453-fe0f\",287],[\"1f576\",288],[\"1f576-fe0f\",288],[\"1f302\",289],[\"1f302-fe0f\",289],[\"2602-fe0f\",290],[\"1f436\",291],[\"1f436-fe0f\",291],[\"1f431\",292],[\"1f431-fe0f\",292],[\"1f42d\",293],[\"1f42d-fe0f\",293],[\"1f439\",294],[\"1f439-fe0f\",294],[\"1f430\",295],[\"1f430-fe0f\",295],[\"1f98a\",296],[\"1f98a-fe0f\",296],[\"1f43b\",297],[\"1f43b-fe0f\",297],[\"1f43c\",298],[\"1f43c-fe0f\",298],[\"1f428\",299],[\"1f428-fe0f\",299],[\"1f42f\",300],[\"1f42f-fe0f\",300],[\"1f981\",301],[\"1f981-fe0f\",301],[\"1f42e\",302],[\"1f42e-fe0f\",302],[\"1f437\",303],[\"1f437-fe0f\",303],[\"1f43d\",304],[\"1f43d-fe0f\",304],[\"1f438\",305],[\"1f438-fe0f\",305],[\"1f435\",306],[\"1f435-fe0f\",306],[\"1f648\",307],[\"1f648-fe0f\",307],[\"1f649\",308],[\"1f649-fe0f\",308],[\"1f64a\",309],[\"1f64a-fe0f\",309],[\"1f412\",310],[\"1f412-fe0f\",310],[\"1f414\",311],[\"1f414-fe0f\",311],[\"1f427\",312],[\"1f427-fe0f\",312],[\"1f426\",313],[\"1f426-fe0f\",313],[\"1f424\",314],[\"1f424-fe0f\",314],[\"1f423\",315],[\"1f423-fe0f\",315],[\"1f425\",316],[\"1f425-fe0f\",316],[\"1f986\",317],[\"1f986-fe0f\",317],[\"1f985\",318],[\"1f985-fe0f\",318],[\"1f989\",319],[\"1f989-fe0f\",319],[\"1f987\",320],[\"1f987-fe0f\",320],[\"1f43a\",321],[\"1f43a-fe0f\",321],[\"1f417\",322],[\"1f417-fe0f\",322],[\"1f434\",323],[\"1f434-fe0f\",323],[\"1f984\",324],[\"1f984-fe0f\",324],[\"1f41d\",325],[\"1f41d-fe0f\",325],[\"1f41b\",326],[\"1f41b-fe0f\",326],[\"1f98b\",327],[\"1f98b-fe0f\",327],[\"1f40c\",328],[\"1f40c-fe0f\",328],[\"1f41a\",329],[\"1f41a-fe0f\",329],[\"1f41e\",330],[\"1f41e-fe0f\",330],[\"1f41c\",331],[\"1f41c-fe0f\",331],[\"1f577\",332],[\"1f577-fe0f\",332],[\"1f578\",333],[\"1f578-fe0f\",333],[\"1f422\",334],[\"1f422-fe0f\",334],[\"1f40d\",335],[\"1f40d-fe0f\",335],[\"1f98e\",336],[\"1f98e-fe0f\",336],[\"1f982\",337],[\"1f982-fe0f\",337],[\"1f980\",338],[\"1f980-fe0f\",338],[\"1f991\",339],[\"1f991-fe0f\",339],[\"1f419\",340],[\"1f419-fe0f\",340],[\"1f990\",341],[\"1f990-fe0f\",341],[\"1f420\",342],[\"1f420-fe0f\",342],[\"1f41f\",343],[\"1f41f-fe0f\",343],[\"1f421\",344],[\"1f421-fe0f\",344],[\"1f42c\",345],[\"1f42c-fe0f\",345],[\"1f988\",346],[\"1f988-fe0f\",346],[\"1f433\",347],[\"1f433-fe0f\",347],[\"1f40b\",348],[\"1f40b-fe0f\",348],[\"1f40a\",349],[\"1f40a-fe0f\",349],[\"1f406\",350],[\"1f406-fe0f\",350],[\"1f405\",351],[\"1f405-fe0f\",351],[\"1f403\",352],[\"1f403-fe0f\",352],[\"1f402\",353],[\"1f402-fe0f\",353],[\"1f404\",354],[\"1f404-fe0f\",354],[\"1f98c\",355],[\"1f98c-fe0f\",355],[\"1f42a\",356],[\"1f42a-fe0f\",356],[\"1f42b\",357],[\"1f42b-fe0f\",357],[\"1f418\",358],[\"1f418-fe0f\",358],[\"1f98f\",359],[\"1f98f-fe0f\",359],[\"1f98d\",360],[\"1f98d-fe0f\",360],[\"1f40e\",361],[\"1f40e-fe0f\",361],[\"1f416\",362],[\"1f416-fe0f\",362],[\"1f410\",363],[\"1f410-fe0f\",363],[\"1f40f\",364],[\"1f40f-fe0f\",364],[\"1f411\",365],[\"1f411-fe0f\",365],[\"1f415\",366],[\"1f415-fe0f\",366],[\"1f429\",367],[\"1f429-fe0f\",367],[\"1f408\",368],[\"1f408-fe0f\",368],[\"1f413\",369],[\"1f413-fe0f\",369],[\"1f983\",370],[\"1f983-fe0f\",370],[\"1f54a\",371],[\"1f54a-fe0f\",371],[\"1f407\",372],[\"1f407-fe0f\",372],[\"1f401\",373],[\"1f401-fe0f\",373],[\"1f400\",374],[\"1f400-fe0f\",374],[\"1f43f\",375],[\"1f43f-fe0f\",375],[\"1f43e\",376],[\"1f43e-fe0f\",376],[\"1f409\",377],[\"1f409-fe0f\",377],[\"1f432\",378],[\"1f432-fe0f\",378],[\"1f335\",379],[\"1f335-fe0f\",379],[\"1f384\",380],[\"1f384-fe0f\",380],[\"1f332\",381],[\"1f332-fe0f\",381],[\"1f333\",382],[\"1f333-fe0f\",382],[\"1f334\",383],[\"1f334-fe0f\",383],[\"1f331\",384],[\"1f331-fe0f\",384],[\"1f33f\",385],[\"1f33f-fe0f\",385],[\"2618-fe0f\",386],[\"1f340\",387],[\"1f340-fe0f\",387],[\"1f38d\",388],[\"1f38d-fe0f\",388],[\"1f38b\",389],[\"1f38b-fe0f\",389],[\"1f343\",390],[\"1f343-fe0f\",390],[\"1f342\",391],[\"1f342-fe0f\",391],[\"1f341\",392],[\"1f341-fe0f\",392],[\"1f344\",393],[\"1f344-fe0f\",393],[\"1f33e\",394],[\"1f33e-fe0f\",394],[\"1f490\",395],[\"1f490-fe0f\",395],[\"1f337\",396],[\"1f337-fe0f\",396],[\"1f339\",397],[\"1f339-fe0f\",397],[\"1f940\",398],[\"1f940-fe0f\",398],[\"1f33b\",399],[\"1f33b-fe0f\",399],[\"1f33c\",400],[\"1f33c-fe0f\",400],[\"1f338\",401],[\"1f338-fe0f\",401],[\"1f33a\",402],[\"1f33a-fe0f\",402],[\"1f30e\",403],[\"1f30e-fe0f\",403],[\"1f30d\",404],[\"1f30d-fe0f\",404],[\"1f30f\",405],[\"1f30f-fe0f\",405],[\"1f315\",406],[\"1f315-fe0f\",406],[\"1f316\",407],[\"1f316-fe0f\",407],[\"1f317\",408],[\"1f317-fe0f\",408],[\"1f318\",409],[\"1f318-fe0f\",409],[\"1f311\",410],[\"1f311-fe0f\",410],[\"1f312\",411],[\"1f312-fe0f\",411],[\"1f313\",412],[\"1f313-fe0f\",412],[\"1f314\",413],[\"1f314-fe0f\",413],[\"1f31a\",414],[\"1f31a-fe0f\",414],[\"1f31d\",415],[\"1f31d-fe0f\",415],[\"1f31e\",416],[\"1f31e-fe0f\",416],[\"1f31b\",417],[\"1f31b-fe0f\",417],[\"1f31c\",418],[\"1f31c-fe0f\",418],[\"1f319\",419],[\"1f319-fe0f\",419],[\"1f4ab\",420],[\"1f4ab-fe0f\",420],[\"2b50-fe0f\",421],[\"1f31f\",422],[\"1f31f-fe0f\",422],[\"2728\",423],[\"2728-fe0f\",423],[\"26a1-fe0f\",424],[\"1f525\",425],[\"1f525-fe0f\",425],[\"1f4a5\",426],[\"1f4a5-fe0f\",426],[\"2604-fe0f\",427],[\"2600-fe0f\",428],[\"1f324\",429],[\"1f324-fe0f\",429],[\"26c5-fe0f\",430],[\"1f325\",431],[\"1f325-fe0f\",431],[\"1f326\",432],[\"1f326-fe0f\",432],[\"1f308\",433],[\"1f308-fe0f\",433],[\"2601-fe0f\",434],[\"1f327\",435],[\"1f327-fe0f\",435],[\"26c8\",436],[\"26c8-fe0f\",436],[\"1f329\",437],[\"1f329-fe0f\",437],[\"1f328\",438],[\"1f328-fe0f\",438],[\"2603-fe0f\",439],[\"26c4-fe0f\",440],[\"2744-fe0f\",441],[\"1f32c\",442],[\"1f32c-fe0f\",442],[\"1f4a8\",443],[\"1f4a8-fe0f\",443],[\"1f32a\",444],[\"1f32a-fe0f\",444],[\"1f32b\",445],[\"1f32b-fe0f\",445],[\"1f30a\",446],[\"1f30a-fe0f\",446],[\"1f4a7\",447],[\"1f4a7-fe0f\",447],[\"1f4a6\",448],[\"1f4a6-fe0f\",448],[\"2614-fe0f\",449],[\"1f34f\",450],[\"1f34f-fe0f\",450],[\"1f34e\",451],[\"1f34e-fe0f\",451],[\"1f350\",452],[\"1f350-fe0f\",452],[\"1f34a\",453],[\"1f34a-fe0f\",453],[\"1f34b\",454],[\"1f34b-fe0f\",454],[\"1f34c\",455],[\"1f34c-fe0f\",455],[\"1f349\",456],[\"1f349-fe0f\",456],[\"1f347\",457],[\"1f347-fe0f\",457],[\"1f353\",458],[\"1f353-fe0f\",458],[\"1f348\",459],[\"1f348-fe0f\",459],[\"1f352\",460],[\"1f352-fe0f\",460],[\"1f351\",461],[\"1f351-fe0f\",461],[\"1f34d\",462],[\"1f34d-fe0f\",462],[\"1f95d\",463],[\"1f95d-fe0f\",463],[\"1f951\",464],[\"1f951-fe0f\",464],[\"1f345\",465],[\"1f345-fe0f\",465],[\"1f346\",466],[\"1f346-fe0f\",466],[\"1f952\",467],[\"1f952-fe0f\",467],[\"1f955\",468],[\"1f955-fe0f\",468],[\"1f33d\",469],[\"1f33d-fe0f\",469],[\"1f336\",470],[\"1f336-fe0f\",470],[\"1f954\",471],[\"1f954-fe0f\",471],[\"1f360\",472],[\"1f360-fe0f\",472],[\"1f330\",473],[\"1f330-fe0f\",473],[\"1f95c\",474],[\"1f95c-fe0f\",474],[\"1f36f\",475],[\"1f36f-fe0f\",475],[\"1f950\",476],[\"1f950-fe0f\",476],[\"1f35e\",477],[\"1f35e-fe0f\",477],[\"1f956\",478],[\"1f956-fe0f\",478],[\"1f9c0\",479],[\"1f9c0-fe0f\",479],[\"1f95a\",480],[\"1f95a-fe0f\",480],[\"1f373\",481],[\"1f373-fe0f\",481],[\"1f953\",482],[\"1f953-fe0f\",482],[\"1f95e\",483],[\"1f95e-fe0f\",483],[\"1f364\",484],[\"1f364-fe0f\",484],[\"1f357\",485],[\"1f357-fe0f\",485],[\"1f356\",486],[\"1f356-fe0f\",486],[\"1f355\",487],[\"1f355-fe0f\",487],[\"1f32d\",488],[\"1f32d-fe0f\",488],[\"1f354\",489],[\"1f354-fe0f\",489],[\"1f35f\",490],[\"1f35f-fe0f\",490],[\"1f959\",491],[\"1f959-fe0f\",491],[\"1f32e\",492],[\"1f32e-fe0f\",492],[\"1f32f\",493],[\"1f32f-fe0f\",493],[\"1f957\",494],[\"1f957-fe0f\",494],[\"1f958\",495],[\"1f958-fe0f\",495],[\"1f35d\",496],[\"1f35d-fe0f\",496],[\"1f35c\",497],[\"1f35c-fe0f\",497],[\"1f372\",498],[\"1f372-fe0f\",498],[\"1f365\",499],[\"1f365-fe0f\",499],[\"1f363\",500],[\"1f363-fe0f\",500],[\"1f371\",501],[\"1f371-fe0f\",501],[\"1f35b\",502],[\"1f35b-fe0f\",502],[\"1f35a\",503],[\"1f35a-fe0f\",503],[\"1f359\",504],[\"1f359-fe0f\",504],[\"1f358\",505],[\"1f358-fe0f\",505],[\"1f362\",506],[\"1f362-fe0f\",506],[\"1f361\",507],[\"1f361-fe0f\",507],[\"1f367\",508],[\"1f367-fe0f\",508],[\"1f368\",509],[\"1f368-fe0f\",509],[\"1f366\",510],[\"1f366-fe0f\",510],[\"1f370\",511],[\"1f370-fe0f\",511],[\"1f382\",512],[\"1f382-fe0f\",512],[\"1f36e\",513],[\"1f36e-fe0f\",513],[\"1f36d\",514],[\"1f36d-fe0f\",514],[\"1f36c\",515],[\"1f36c-fe0f\",515],[\"1f36b\",516],[\"1f36b-fe0f\",516],[\"1f37f\",517],[\"1f37f-fe0f\",517],[\"1f369\",518],[\"1f369-fe0f\",518],[\"1f36a\",519],[\"1f36a-fe0f\",519],[\"1f95b\",520],[\"1f95b-fe0f\",520],[\"1f37c\",521],[\"1f37c-fe0f\",521],[\"2615-fe0f\",522],[\"1f375\",523],[\"1f375-fe0f\",523],[\"1f376\",524],[\"1f376-fe0f\",524],[\"1f37a\",525],[\"1f37a-fe0f\",525],[\"1f37b\",526],[\"1f37b-fe0f\",526],[\"1f942\",527],[\"1f942-fe0f\",527],[\"1f377\",528],[\"1f377-fe0f\",528],[\"1f943\",529],[\"1f943-fe0f\",529],[\"1f378\",530],[\"1f378-fe0f\",530],[\"1f379\",531],[\"1f379-fe0f\",531],[\"1f37e\",532],[\"1f37e-fe0f\",532],[\"1f944\",533],[\"1f944-fe0f\",533],[\"1f374\",534],[\"1f374-fe0f\",534],[\"1f37d\",535],[\"1f37d-fe0f\",535],[\"26bd-fe0f\",536],[\"1f3c0\",537],[\"1f3c0-fe0f\",537],[\"1f3c8\",538],[\"1f3c8-fe0f\",538],[\"26be-fe0f\",539],[\"1f3be\",540],[\"1f3be-fe0f\",540],[\"1f3d0\",541],[\"1f3d0-fe0f\",541],[\"1f3c9\",542],[\"1f3c9-fe0f\",542],[\"1f3b1\",543],[\"1f3b1-fe0f\",543],[\"1f3d3\",544],[\"1f3d3-fe0f\",544],[\"1f3f8\",545],[\"1f3f8-fe0f\",545],[\"1f945\",546],[\"1f945-fe0f\",546],[\"1f3d2\",547],[\"1f3d2-fe0f\",547],[\"1f3d1\",548],[\"1f3d1-fe0f\",548],[\"1f3cf\",549],[\"1f3cf-fe0f\",549],[\"26f3-fe0f\",550],[\"1f3f9\",551],[\"1f3f9-fe0f\",551],[\"1f3a3\",552],[\"1f3a3-fe0f\",552],[\"1f94a\",553],[\"1f94a-fe0f\",553],[\"1f94b\",554],[\"1f94b-fe0f\",554],[\"26f8\",555],[\"26f8-fe0f\",555],[\"1f3bf\",556],[\"1f3bf-fe0f\",556],[\"26f7\",557],[\"26f7-fe0f\",557],[\"1f3c2\",558],[\"1f3c2-fe0f\",558],[\"1f3cb-fe0f-200d-2640-fe0f\",559],[\"1f3cb-200d-2640-fe0f-fe0f\",559],[\"1f3cb-fe0f\",560],[\"1f3cb-fe0f-200d-2642-fe0f\",560],[\"1f93a\",561],[\"1f93a-fe0f\",561],[\"1f93c-200d-2640-fe0f\",562],[\"1f93c-200d-2642-fe0f\",563],[\"1f938-200d-2640-fe0f\",564],[\"1f938-200d-2642-fe0f\",565],[\"26f9-fe0f-200d-2640-fe0f\",566],[\"26f9-200d-2640-fe0f-fe0f\",566],[\"26f9-fe0f\",567],[\"26f9-fe0f-200d-2642-fe0f\",567],[\"1f93e-200d-2640-fe0f\",568],[\"1f93e-200d-2642-fe0f\",569],[\"1f3cc-fe0f-200d-2640-fe0f\",570],[\"1f3cc-200d-2640-fe0f-fe0f\",570],[\"1f3cc-fe0f\",571],[\"1f3cc-fe0f-200d-2642-fe0f\",571],[\"1f3c4-200d-2640-fe0f\",572],[\"1f3c4\",573],[\"1f3c4-fe0f\",573],[\"1f3c4-200d-2642-fe0f\",573],[\"1f3ca-200d-2640-fe0f\",574],[\"1f3ca\",575],[\"1f3ca-fe0f\",575],[\"1f3ca-200d-2642-fe0f\",575],[\"1f93d-200d-2640-fe0f\",576],[\"1f93d-200d-2642-fe0f\",577],[\"1f6a3-200d-2640-fe0f\",578],[\"1f6a3\",579],[\"1f6a3-fe0f\",579],[\"1f6a3-200d-2642-fe0f\",579],[\"1f3c7\",580],[\"1f3c7-fe0f\",580],[\"1f6b4-200d-2640-fe0f\",581],[\"1f6b4\",582],[\"1f6b4-fe0f\",582],[\"1f6b4-200d-2642-fe0f\",582],[\"1f6b5-200d-2640-fe0f\",583],[\"1f6b5\",584],[\"1f6b5-fe0f\",584],[\"1f6b5-200d-2642-fe0f\",584],[\"1f3bd\",585],[\"1f3bd-fe0f\",585],[\"1f3c5\",586],[\"1f3c5-fe0f\",586],[\"1f396\",587],[\"1f396-fe0f\",587],[\"1f947\",588],[\"1f947-fe0f\",588],[\"1f948\",589],[\"1f948-fe0f\",589],[\"1f949\",590],[\"1f949-fe0f\",590],[\"1f3c6\",591],[\"1f3c6-fe0f\",591],[\"1f3f5\",592],[\"1f3f5-fe0f\",592],[\"1f397\",593],[\"1f397-fe0f\",593],[\"1f3ab\",594],[\"1f3ab-fe0f\",594],[\"1f39f\",595],[\"1f39f-fe0f\",595],[\"1f3aa\",596],[\"1f3aa-fe0f\",596],[\"1f939-200d-2640-fe0f\",597],[\"1f939-200d-2642-fe0f\",598],[\"1f3ad\",599],[\"1f3ad-fe0f\",599],[\"1f3a8\",600],[\"1f3a8-fe0f\",600],[\"1f3ac\",601],[\"1f3ac-fe0f\",601],[\"1f3a4\",602],[\"1f3a4-fe0f\",602],[\"1f3a7\",603],[\"1f3a7-fe0f\",603],[\"1f3bc\",604],[\"1f3bc-fe0f\",604],[\"1f3b9\",605],[\"1f3b9-fe0f\",605],[\"1f941\",606],[\"1f941-fe0f\",606],[\"1f3b7\",607],[\"1f3b7-fe0f\",607],[\"1f3ba\",608],[\"1f3ba-fe0f\",608],[\"1f3b8\",609],[\"1f3b8-fe0f\",609],[\"1f3bb\",610],[\"1f3bb-fe0f\",610],[\"1f3b2\",611],[\"1f3b2-fe0f\",611],[\"1f3af\",612],[\"1f3af-fe0f\",612],[\"1f3b3\",613],[\"1f3b3-fe0f\",613],[\"1f3ae\",614],[\"1f3ae-fe0f\",614],[\"1f3b0\",615],[\"1f3b0-fe0f\",615],[\"1f697\",616],[\"1f697-fe0f\",616],[\"1f695\",617],[\"1f695-fe0f\",617],[\"1f699\",618],[\"1f699-fe0f\",618],[\"1f68c\",619],[\"1f68c-fe0f\",619],[\"1f68e\",620],[\"1f68e-fe0f\",620],[\"1f3ce\",621],[\"1f3ce-fe0f\",621],[\"1f693\",622],[\"1f693-fe0f\",622],[\"1f691\",623],[\"1f691-fe0f\",623],[\"1f692\",624],[\"1f692-fe0f\",624],[\"1f690\",625],[\"1f690-fe0f\",625],[\"1f69a\",626],[\"1f69a-fe0f\",626],[\"1f69b\",627],[\"1f69b-fe0f\",627],[\"1f69c\",628],[\"1f69c-fe0f\",628],[\"1f6f4\",629],[\"1f6f4-fe0f\",629],[\"1f6b2\",630],[\"1f6b2-fe0f\",630],[\"1f6f5\",631],[\"1f6f5-fe0f\",631],[\"1f3cd\",632],[\"1f3cd-fe0f\",632],[\"1f6a8\",633],[\"1f6a8-fe0f\",633],[\"1f694\",634],[\"1f694-fe0f\",634],[\"1f68d\",635],[\"1f68d-fe0f\",635],[\"1f698\",636],[\"1f698-fe0f\",636],[\"1f696\",637],[\"1f696-fe0f\",637],[\"1f6a1\",638],[\"1f6a1-fe0f\",638],[\"1f6a0\",639],[\"1f6a0-fe0f\",639],[\"1f69f\",640],[\"1f69f-fe0f\",640],[\"1f683\",641],[\"1f683-fe0f\",641],[\"1f68b\",642],[\"1f68b-fe0f\",642],[\"1f69e\",643],[\"1f69e-fe0f\",643],[\"1f69d\",644],[\"1f69d-fe0f\",644],[\"1f684\",645],[\"1f684-fe0f\",645],[\"1f685\",646],[\"1f685-fe0f\",646],[\"1f688\",647],[\"1f688-fe0f\",647],[\"1f682\",648],[\"1f682-fe0f\",648],[\"1f686\",649],[\"1f686-fe0f\",649],[\"1f687\",650],[\"1f687-fe0f\",650],[\"1f68a\",651],[\"1f68a-fe0f\",651],[\"1f689\",652],[\"1f689-fe0f\",652],[\"1f681\",653],[\"1f681-fe0f\",653],[\"1f6e9\",654],[\"1f6e9-fe0f\",654],[\"2708-fe0f\",655],[\"1f6eb\",656],[\"1f6eb-fe0f\",656],[\"1f6ec\",657],[\"1f6ec-fe0f\",657],[\"1f680\",658],[\"1f680-fe0f\",658],[\"1f6f0\",659],[\"1f6f0-fe0f\",659],[\"1f4ba\",660],[\"1f4ba-fe0f\",660],[\"1f6f6\",661],[\"1f6f6-fe0f\",661],[\"26f5-fe0f\",662],[\"1f6e5\",663],[\"1f6e5-fe0f\",663],[\"1f6a4\",664],[\"1f6a4-fe0f\",664],[\"1f6f3\",665],[\"1f6f3-fe0f\",665],[\"26f4\",666],[\"26f4-fe0f\",666],[\"1f6a2\",667],[\"1f6a2-fe0f\",667],[\"2693-fe0f\",668],[\"1f6a7\",669],[\"1f6a7-fe0f\",669],[\"26fd-fe0f\",670],[\"1f68f\",671],[\"1f68f-fe0f\",671],[\"1f6a6\",672],[\"1f6a6-fe0f\",672],[\"1f6a5\",673],[\"1f6a5-fe0f\",673],[\"1f5fa\",674],[\"1f5fa-fe0f\",674],[\"1f5ff\",675],[\"1f5ff-fe0f\",675],[\"1f5fd\",676],[\"1f5fd-fe0f\",676],[\"26f2-fe0f\",677],[\"1f5fc\",678],[\"1f5fc-fe0f\",678],[\"1f3f0\",679],[\"1f3f0-fe0f\",679],[\"1f3ef\",680],[\"1f3ef-fe0f\",680],[\"1f3df\",681],[\"1f3df-fe0f\",681],[\"1f3a1\",682],[\"1f3a1-fe0f\",682],[\"1f3a2\",683],[\"1f3a2-fe0f\",683],[\"1f3a0\",684],[\"1f3a0-fe0f\",684],[\"26f1\",685],[\"26f1-fe0f\",685],[\"1f3d6\",686],[\"1f3d6-fe0f\",686],[\"1f3dd\",687],[\"1f3dd-fe0f\",687],[\"26f0\",688],[\"26f0-fe0f\",688],[\"1f3d4\",689],[\"1f3d4-fe0f\",689],[\"1f5fb\",690],[\"1f5fb-fe0f\",690],[\"1f30b\",691],[\"1f30b-fe0f\",691],[\"1f3dc\",692],[\"1f3dc-fe0f\",692],[\"1f3d5\",693],[\"1f3d5-fe0f\",693],[\"26fa-fe0f\",694],[\"1f6e4\",695],[\"1f6e4-fe0f\",695],[\"1f6e3\",696],[\"1f6e3-fe0f\",696],[\"1f3d7\",697],[\"1f3d7-fe0f\",697],[\"1f3ed\",698],[\"1f3ed-fe0f\",698],[\"1f3e0\",699],[\"1f3e0-fe0f\",699],[\"1f3e1\",700],[\"1f3e1-fe0f\",700],[\"1f3d8\",701],[\"1f3d8-fe0f\",701],[\"1f3da\",702],[\"1f3da-fe0f\",702],[\"1f3e2\",703],[\"1f3e2-fe0f\",703],[\"1f3ec\",704],[\"1f3ec-fe0f\",704],[\"1f3e3\",705],[\"1f3e3-fe0f\",705],[\"1f3e4\",706],[\"1f3e4-fe0f\",706],[\"1f3e5\",707],[\"1f3e5-fe0f\",707],[\"1f3e6\",708],[\"1f3e6-fe0f\",708],[\"1f3e8\",709],[\"1f3e8-fe0f\",709],[\"1f3ea\",710],[\"1f3ea-fe0f\",710],[\"1f3eb\",711],[\"1f3eb-fe0f\",711],[\"1f3e9\",712],[\"1f3e9-fe0f\",712],[\"1f492\",713],[\"1f492-fe0f\",713],[\"1f3db\",714],[\"1f3db-fe0f\",714],[\"26ea-fe0f\",715],[\"1f54c\",716],[\"1f54c-fe0f\",716],[\"1f54d\",717],[\"1f54d-fe0f\",717],[\"1f54b\",718],[\"1f54b-fe0f\",718],[\"26e9\",719],[\"26e9-fe0f\",719],[\"1f5fe\",720],[\"1f5fe-fe0f\",720],[\"1f391\",721],[\"1f391-fe0f\",721],[\"1f3de\",722],[\"1f3de-fe0f\",722],[\"1f305\",723],[\"1f305-fe0f\",723],[\"1f304\",724],[\"1f304-fe0f\",724],[\"1f320\",725],[\"1f320-fe0f\",725],[\"1f387\",726],[\"1f387-fe0f\",726],[\"1f386\",727],[\"1f386-fe0f\",727],[\"1f307\",728],[\"1f307-fe0f\",728],[\"1f306\",729],[\"1f306-fe0f\",729],[\"1f3d9\",730],[\"1f3d9-fe0f\",730],[\"1f303\",731],[\"1f303-fe0f\",731],[\"1f30c\",732],[\"1f30c-fe0f\",732],[\"1f309\",733],[\"1f309-fe0f\",733],[\"1f301\",734],[\"1f301-fe0f\",734],[\"231a-fe0f\",735],[\"1f4f1\",736],[\"1f4f1-fe0f\",736],[\"1f4f2\",737],[\"1f4f2-fe0f\",737],[\"1f4bb\",738],[\"1f4bb-fe0f\",738],[\"2328-fe0f\",739],[\"1f5a5\",740],[\"1f5a5-fe0f\",740],[\"1f5a8\",741],[\"1f5a8-fe0f\",741],[\"1f5b1\",742],[\"1f5b1-fe0f\",742],[\"1f5b2\",743],[\"1f5b2-fe0f\",743],[\"1f579\",744],[\"1f579-fe0f\",744],[\"1f5dc\",745],[\"1f5dc-fe0f\",745],[\"1f4bd\",746],[\"1f4bd-fe0f\",746],[\"1f4be\",747],[\"1f4be-fe0f\",747],[\"1f4bf\",748],[\"1f4bf-fe0f\",748],[\"1f4c0\",749],[\"1f4c0-fe0f\",749],[\"1f4fc\",750],[\"1f4fc-fe0f\",750],[\"1f4f7\",751],[\"1f4f7-fe0f\",751],[\"1f4f8\",752],[\"1f4f8-fe0f\",752],[\"1f4f9\",753],[\"1f4f9-fe0f\",753],[\"1f3a5\",754],[\"1f3a5-fe0f\",754],[\"1f4fd\",755],[\"1f4fd-fe0f\",755],[\"1f39e\",756],[\"1f39e-fe0f\",756],[\"1f4de\",757],[\"1f4de-fe0f\",757],[\"260e-fe0f\",758],[\"1f4df\",759],[\"1f4df-fe0f\",759],[\"1f4e0\",760],[\"1f4e0-fe0f\",760],[\"1f4fa\",761],[\"1f4fa-fe0f\",761],[\"1f4fb\",762],[\"1f4fb-fe0f\",762],[\"1f399\",763],[\"1f399-fe0f\",763],[\"1f39a\",764],[\"1f39a-fe0f\",764],[\"1f39b\",765],[\"1f39b-fe0f\",765],[\"23f1\",766],[\"23f1-fe0f\",766],[\"23f2\",767],[\"23f2-fe0f\",767],[\"23f0\",768],[\"23f0-fe0f\",768],[\"1f570\",769],[\"1f570-fe0f\",769],[\"231b-fe0f\",770],[\"23f3\",771],[\"23f3-fe0f\",771],[\"1f4e1\",772],[\"1f4e1-fe0f\",772],[\"1f50b\",773],[\"1f50b-fe0f\",773],[\"1f50c\",774],[\"1f50c-fe0f\",774],[\"1f4a1\",775],[\"1f4a1-fe0f\",775],[\"1f526\",776],[\"1f526-fe0f\",776],[\"1f56f\",777],[\"1f56f-fe0f\",777],[\"1f5d1\",778],[\"1f5d1-fe0f\",778],[\"1f6e2\",779],[\"1f6e2-fe0f\",779],[\"1f4b8\",780],[\"1f4b8-fe0f\",780],[\"1f4b5\",781],[\"1f4b5-fe0f\",781],[\"1f4b4\",782],[\"1f4b4-fe0f\",782],[\"1f4b6\",783],[\"1f4b6-fe0f\",783],[\"1f4b7\",784],[\"1f4b7-fe0f\",784],[\"1f4b0\",785],[\"1f4b0-fe0f\",785],[\"1f4b3\",786],[\"1f4b3-fe0f\",786],[\"1f48e\",787],[\"1f48e-fe0f\",787],[\"2696-fe0f\",788],[\"1f527\",789],[\"1f527-fe0f\",789],[\"1f528\",790],[\"1f528-fe0f\",790],[\"2692\",791],[\"2692-fe0f\",791],[\"1f6e0\",792],[\"1f6e0-fe0f\",792],[\"26cf\",793],[\"26cf-fe0f\",793],[\"1f529\",794],[\"1f529-fe0f\",794],[\"2699-fe0f\",795],[\"26d3\",796],[\"26d3-fe0f\",796],[\"1f52b\",797],[\"1f52b-fe0f\",797],[\"1f4a3\",798],[\"1f4a3-fe0f\",798],[\"1f52a\",799],[\"1f52a-fe0f\",799],[\"1f5e1\",800],[\"1f5e1-fe0f\",800],[\"2694-fe0f\",801],[\"1f6e1\",802],[\"1f6e1-fe0f\",802],[\"1f6ac\",803],[\"1f6ac-fe0f\",803],[\"26b0-fe0f\",804],[\"26b1-fe0f\",805],[\"1f3fa\",806],[\"1f3fa-fe0f\",806],[\"1f52e\",807],[\"1f52e-fe0f\",807],[\"1f4ff\",808],[\"1f4ff-fe0f\",808],[\"1f488\",809],[\"1f488-fe0f\",809],[\"2697-fe0f\",810],[\"1f52d\",811],[\"1f52d-fe0f\",811],[\"1f52c\",812],[\"1f52c-fe0f\",812],[\"1f573\",813],[\"1f573-fe0f\",813],[\"1f48a\",814],[\"1f48a-fe0f\",814],[\"1f489\",815],[\"1f489-fe0f\",815],[\"1f321\",816],[\"1f321-fe0f\",816],[\"1f6bd\",817],[\"1f6bd-fe0f\",817],[\"1f6b0\",818],[\"1f6b0-fe0f\",818],[\"1f6bf\",819],[\"1f6bf-fe0f\",819],[\"1f6c1\",820],[\"1f6c1-fe0f\",820],[\"1f6c0\",821],[\"1f6c0-fe0f\",821],[\"1f6ce\",822],[\"1f6ce-fe0f\",822],[\"1f511\",823],[\"1f511-fe0f\",823],[\"1f5dd\",824],[\"1f5dd-fe0f\",824],[\"1f6aa\",825],[\"1f6aa-fe0f\",825],[\"1f6cb\",826],[\"1f6cb-fe0f\",826],[\"1f6cf\",827],[\"1f6cf-fe0f\",827],[\"1f6cc\",828],[\"1f6cc-fe0f\",828],[\"1f5bc\",829],[\"1f5bc-fe0f\",829],[\"1f6cd\",830],[\"1f6cd-fe0f\",830],[\"1f6d2\",831],[\"1f6d2-fe0f\",831],[\"1f381\",832],[\"1f381-fe0f\",832],[\"1f388\",833],[\"1f388-fe0f\",833],[\"1f38f\",834],[\"1f38f-fe0f\",834],[\"1f380\",835],[\"1f380-fe0f\",835],[\"1f38a\",836],[\"1f38a-fe0f\",836],[\"1f389\",837],[\"1f389-fe0f\",837],[\"1f38e\",838],[\"1f38e-fe0f\",838],[\"1f3ee\",839],[\"1f3ee-fe0f\",839],[\"1f390\",840],[\"1f390-fe0f\",840],[\"2709-fe0f\",841],[\"1f4e9\",842],[\"1f4e9-fe0f\",842],[\"1f4e8\",843],[\"1f4e8-fe0f\",843],[\"1f4e7\",844],[\"1f4e7-fe0f\",844],[\"1f48c\",845],[\"1f48c-fe0f\",845],[\"1f4e5\",846],[\"1f4e5-fe0f\",846],[\"1f4e4\",847],[\"1f4e4-fe0f\",847],[\"1f4e6\",848],[\"1f4e6-fe0f\",848],[\"1f3f7\",849],[\"1f3f7-fe0f\",849],[\"1f4ea\",850],[\"1f4ea-fe0f\",850],[\"1f4eb\",851],[\"1f4eb-fe0f\",851],[\"1f4ec\",852],[\"1f4ec-fe0f\",852],[\"1f4ed\",853],[\"1f4ed-fe0f\",853],[\"1f4ee\",854],[\"1f4ee-fe0f\",854],[\"1f4ef\",855],[\"1f4ef-fe0f\",855],[\"1f4dc\",856],[\"1f4dc-fe0f\",856],[\"1f4c3\",857],[\"1f4c3-fe0f\",857],[\"1f4c4\",858],[\"1f4c4-fe0f\",858],[\"1f4d1\",859],[\"1f4d1-fe0f\",859],[\"1f4ca\",860],[\"1f4ca-fe0f\",860],[\"1f4c8\",861],[\"1f4c8-fe0f\",861],[\"1f4c9\",862],[\"1f4c9-fe0f\",862],[\"1f5d2\",863],[\"1f5d2-fe0f\",863],[\"1f5d3\",864],[\"1f5d3-fe0f\",864],[\"1f4c6\",865],[\"1f4c6-fe0f\",865],[\"1f4c5\",866],[\"1f4c5-fe0f\",866],[\"1f4c7\",867],[\"1f4c7-fe0f\",867],[\"1f5c3\",868],[\"1f5c3-fe0f\",868],[\"1f5f3\",869],[\"1f5f3-fe0f\",869],[\"1f5c4\",870],[\"1f5c4-fe0f\",870],[\"1f4cb\",871],[\"1f4cb-fe0f\",871],[\"1f4c1\",872],[\"1f4c1-fe0f\",872],[\"1f4c2\",873],[\"1f4c2-fe0f\",873],[\"1f5c2\",874],[\"1f5c2-fe0f\",874],[\"1f5de\",875],[\"1f5de-fe0f\",875],[\"1f4f0\",876],[\"1f4f0-fe0f\",876],[\"1f4d3\",877],[\"1f4d3-fe0f\",877],[\"1f4d4\",878],[\"1f4d4-fe0f\",878],[\"1f4d2\",879],[\"1f4d2-fe0f\",879],[\"1f4d5\",880],[\"1f4d5-fe0f\",880],[\"1f4d7\",881],[\"1f4d7-fe0f\",881],[\"1f4d8\",882],[\"1f4d8-fe0f\",882],[\"1f4d9\",883],[\"1f4d9-fe0f\",883],[\"1f4da\",884],[\"1f4da-fe0f\",884],[\"1f4d6\",885],[\"1f4d6-fe0f\",885],[\"1f516\",886],[\"1f516-fe0f\",886],[\"1f517\",887],[\"1f517-fe0f\",887],[\"1f4ce\",888],[\"1f4ce-fe0f\",888],[\"1f587\",889],[\"1f587-fe0f\",889],[\"1f4d0\",890],[\"1f4d0-fe0f\",890],[\"1f4cf\",891],[\"1f4cf-fe0f\",891],[\"1f4cc\",892],[\"1f4cc-fe0f\",892],[\"1f4cd\",893],[\"1f4cd-fe0f\",893],[\"2702-fe0f\",894],[\"1f58a\",895],[\"1f58a-fe0f\",895],[\"1f58b\",896],[\"1f58b-fe0f\",896],[\"2712-fe0f\",897],[\"1f58c\",898],[\"1f58c-fe0f\",898],[\"1f58d\",899],[\"1f58d-fe0f\",899],[\"1f4dd\",900],[\"1f4dd-fe0f\",900],[\"270f-fe0f\",901],[\"1f50d\",902],[\"1f50d-fe0f\",902],[\"1f50e\",903],[\"1f50e-fe0f\",903],[\"1f50f\",904],[\"1f50f-fe0f\",904],[\"1f510\",905],[\"1f510-fe0f\",905],[\"1f512\",906],[\"1f512-fe0f\",906],[\"1f513\",907],[\"1f513-fe0f\",907],[\"2764-fe0f\",908],[\"1f49b\",909],[\"1f49b-fe0f\",909],[\"1f49a\",910],[\"1f49a-fe0f\",910],[\"1f499\",911],[\"1f499-fe0f\",911],[\"1f49c\",912],[\"1f49c-fe0f\",912],[\"1f5a4\",913],[\"1f5a4-fe0f\",913],[\"1f494\",914],[\"1f494-fe0f\",914],[\"2763-fe0f\",915],[\"1f495\",916],[\"1f495-fe0f\",916],[\"1f49e\",917],[\"1f49e-fe0f\",917],[\"1f493\",918],[\"1f493-fe0f\",918],[\"1f497\",919],[\"1f497-fe0f\",919],[\"1f496\",920],[\"1f496-fe0f\",920],[\"1f498\",921],[\"1f498-fe0f\",921],[\"1f49d\",922],[\"1f49d-fe0f\",922],[\"1f49f\",923],[\"1f49f-fe0f\",923],[\"262e-fe0f\",924],[\"271d-fe0f\",925],[\"262a-fe0f\",926],[\"1f549\",927],[\"1f549-fe0f\",927],[\"2638-fe0f\",928],[\"2721-fe0f\",929],[\"1f52f\",930],[\"1f52f-fe0f\",930],[\"1f54e\",931],[\"1f54e-fe0f\",931],[\"262f-fe0f\",932],[\"2626-fe0f\",933],[\"1f6d0\",934],[\"1f6d0-fe0f\",934],[\"26ce\",935],[\"26ce-fe0f\",935],[\"2648-fe0f\",936],[\"2649-fe0f\",937],[\"264a-fe0f\",938],[\"264b-fe0f\",939],[\"264c-fe0f\",940],[\"264d-fe0f\",941],[\"264e-fe0f\",942],[\"264f-fe0f\",943],[\"2650-fe0f\",944],[\"2651-fe0f\",945],[\"2652-fe0f\",946],[\"2653-fe0f\",947],[\"1f194\",948],[\"1f194-fe0f\",948],[\"269b-fe0f\",949],[\"1f251\",950],[\"1f251-fe0f\",950],[\"2622-fe0f\",951],[\"2623-fe0f\",952],[\"1f4f4\",953],[\"1f4f4-fe0f\",953],[\"1f4f3\",954],[\"1f4f3-fe0f\",954],[\"1f236\",955],[\"1f236-fe0f\",955],[\"1f21a-fe0f\",956],[\"1f238\",957],[\"1f238-fe0f\",957],[\"1f23a\",958],[\"1f23a-fe0f\",958],[\"1f237-fe0f\",959],[\"2734-fe0f\",960],[\"1f19a\",961],[\"1f19a-fe0f\",961],[\"1f4ae\",962],[\"1f4ae-fe0f\",962],[\"1f250\",963],[\"1f250-fe0f\",963],[\"3299-fe0f\",964],[\"3297-fe0f\",965],[\"1f234\",966],[\"1f234-fe0f\",966],[\"1f235\",967],[\"1f235-fe0f\",967],[\"1f239\",968],[\"1f239-fe0f\",968],[\"1f232\",969],[\"1f232-fe0f\",969],[\"1f170-fe0f\",970],[\"1f171-fe0f\",971],[\"1f18e\",972],[\"1f18e-fe0f\",972],[\"1f191\",973],[\"1f191-fe0f\",973],[\"1f17e-fe0f\",974],[\"1f198\",975],[\"1f198-fe0f\",975],[\"274c\",976],[\"274c-fe0f\",976],[\"2b55-fe0f\",977],[\"1f6d1\",978],[\"1f6d1-fe0f\",978],[\"26d4-fe0f\",979],[\"1f4db\",980],[\"1f4db-fe0f\",980],[\"1f6ab\",981],[\"1f6ab-fe0f\",981],[\"1f4af\",982],[\"1f4af-fe0f\",982],[\"1f4a2\",983],[\"1f4a2-fe0f\",983],[\"2668-fe0f\",984],[\"1f6b7\",985],[\"1f6b7-fe0f\",985],[\"1f6af\",986],[\"1f6af-fe0f\",986],[\"1f6b3\",987],[\"1f6b3-fe0f\",987],[\"1f6b1\",988],[\"1f6b1-fe0f\",988],[\"1f51e\",989],[\"1f51e-fe0f\",989],[\"1f4f5\",990],[\"1f4f5-fe0f\",990],[\"1f6ad\",991],[\"1f6ad-fe0f\",991],[\"2757-fe0f\",992],[\"2755\",993],[\"2755-fe0f\",993],[\"2753\",994],[\"2753-fe0f\",994],[\"2754\",995],[\"2754-fe0f\",995],[\"203c-fe0f\",996],[\"2049-fe0f\",997],[\"1f505\",998],[\"1f505-fe0f\",998],[\"1f506\",999],[\"1f506-fe0f\",999],[\"303d-fe0f\",1000],[\"26a0-fe0f\",1001],[\"1f6b8\",1002],[\"1f6b8-fe0f\",1002],[\"1f531\",1003],[\"1f531-fe0f\",1003],[\"269c-fe0f\",1004],[\"1f530\",1005],[\"1f530-fe0f\",1005],[\"267b-fe0f\",1006],[\"2705\",1007],[\"2705-fe0f\",1007],[\"1f22f-fe0f\",1008],[\"1f4b9\",1009],[\"1f4b9-fe0f\",1009],[\"2747-fe0f\",1010],[\"2733-fe0f\",1011],[\"274e\",1012],[\"274e-fe0f\",1012],[\"1f310\",1013],[\"1f310-fe0f\",1013],[\"1f4a0\",1014],[\"1f4a0-fe0f\",1014],[\"24c2-fe0f\",1015],[\"1f300\",1016],[\"1f300-fe0f\",1016],[\"1f4a4\",1017],[\"1f4a4-fe0f\",1017],[\"1f3e7\",1018],[\"1f3e7-fe0f\",1018],[\"1f6be\",1019],[\"1f6be-fe0f\",1019],[\"267f-fe0f\",1020],[\"1f17f-fe0f\",1021],[\"1f233\",1022],[\"1f233-fe0f\",1022],[\"1f202-fe0f\",1023],[\"1f6c2\",1024],[\"1f6c2-fe0f\",1024],[\"1f6c3\",1025],[\"1f6c3-fe0f\",1025],[\"1f6c4\",1026],[\"1f6c4-fe0f\",1026],[\"1f6c5\",1027],[\"1f6c5-fe0f\",1027],[\"1f6b9\",1028],[\"1f6b9-fe0f\",1028],[\"1f6ba\",1029],[\"1f6ba-fe0f\",1029],[\"1f6bc\",1030],[\"1f6bc-fe0f\",1030],[\"1f6bb\",1031],[\"1f6bb-fe0f\",1031],[\"1f6ae\",1032],[\"1f6ae-fe0f\",1032],[\"1f3a6\",1033],[\"1f3a6-fe0f\",1033],[\"1f4f6\",1034],[\"1f4f6-fe0f\",1034],[\"1f201\",1035],[\"1f201-fe0f\",1035],[\"1f523\",1036],[\"1f523-fe0f\",1036],[\"2139-fe0f\",1037],[\"1f524\",1038],[\"1f524-fe0f\",1038],[\"1f521\",1039],[\"1f521-fe0f\",1039],[\"1f520\",1040],[\"1f520-fe0f\",1040],[\"1f196\",1041],[\"1f196-fe0f\",1041],[\"1f197\",1042],[\"1f197-fe0f\",1042],[\"1f199\",1043],[\"1f199-fe0f\",1043],[\"1f192\",1044],[\"1f192-fe0f\",1044],[\"1f195\",1045],[\"1f195-fe0f\",1045],[\"1f193\",1046],[\"1f193-fe0f\",1046],[\"0030-fe0f-20e3\",1047],[\"0030-20e3-fe0f\",1047],[\"0031-fe0f-20e3\",1048],[\"0031-20e3-fe0f\",1048],[\"0032-fe0f-20e3\",1049],[\"0032-20e3-fe0f\",1049],[\"0033-fe0f-20e3\",1050],[\"0033-20e3-fe0f\",1050],[\"0034-fe0f-20e3\",1051],[\"0034-20e3-fe0f\",1051],[\"0035-fe0f-20e3\",1052],[\"0035-20e3-fe0f\",1052],[\"0036-fe0f-20e3\",1053],[\"0036-20e3-fe0f\",1053],[\"0037-fe0f-20e3\",1054],[\"0037-20e3-fe0f\",1054],[\"0038-fe0f-20e3\",1055],[\"0038-20e3-fe0f\",1055],[\"0039-fe0f-20e3\",1056],[\"0039-20e3-fe0f\",1056],[\"1f51f\",1057],[\"1f51f-fe0f\",1057],[\"1f522\",1058],[\"1f522-fe0f\",1058],[\"0023-fe0f-20e3\",1059],[\"0023-20e3-fe0f\",1059],[\"002a-fe0f-20e3\",1060],[\"002a-20e3-fe0f\",1060],[\"25b6-fe0f\",1061],[\"23f8\",1062],[\"23f8-fe0f\",1062],[\"23ef\",1063],[\"23ef-fe0f\",1063],[\"23f9\",1064],[\"23f9-fe0f\",1064],[\"23fa\",1065],[\"23fa-fe0f\",1065],[\"23ed\",1066],[\"23ed-fe0f\",1066],[\"23ee\",1067],[\"23ee-fe0f\",1067],[\"23e9\",1068],[\"23e9-fe0f\",1068],[\"23ea\",1069],[\"23ea-fe0f\",1069],[\"23eb\",1070],[\"23eb-fe0f\",1070],[\"23ec\",1071],[\"23ec-fe0f\",1071],[\"25c0-fe0f\",1072],[\"1f53c\",1073],[\"1f53c-fe0f\",1073],[\"1f53d\",1074],[\"1f53d-fe0f\",1074],[\"27a1-fe0f\",1075],[\"2b05-fe0f\",1076],[\"2b06-fe0f\",1077],[\"2b07-fe0f\",1078],[\"2197-fe0f\",1079],[\"2198-fe0f\",1080],[\"2199-fe0f\",1081],[\"2196-fe0f\",1082],[\"2195-fe0f\",1083],[\"2194-fe0f\",1084],[\"21aa-fe0f\",1085],[\"21a9-fe0f\",1086],[\"2934-fe0f\",1087],[\"2935-fe0f\",1088],[\"1f500\",1089],[\"1f500-fe0f\",1089],[\"1f501\",1090],[\"1f501-fe0f\",1090],[\"1f502\",1091],[\"1f502-fe0f\",1091],[\"1f504\",1092],[\"1f504-fe0f\",1092],[\"1f503\",1093],[\"1f503-fe0f\",1093],[\"1f3b5\",1094],[\"1f3b5-fe0f\",1094],[\"1f3b6\",1095],[\"1f3b6-fe0f\",1095],[\"2795\",1096],[\"2795-fe0f\",1096],[\"2796\",1097],[\"2796-fe0f\",1097],[\"2797\",1098],[\"2797-fe0f\",1098],[\"2716-fe0f\",1099],[\"1f4b2\",1100],[\"1f4b2-fe0f\",1100],[\"1f4b1\",1101],[\"1f4b1-fe0f\",1101],[\"2122-fe0f\",1102],[\"00a9-fe0f\",1103],[\"00ae-fe0f\",1104],[\"3030-fe0f\",1105],[\"27b0\",1106],[\"27b0-fe0f\",1106],[\"27bf\",1107],[\"27bf-fe0f\",1107],[\"1f51a\",1108],[\"1f51a-fe0f\",1108],[\"1f519\",1109],[\"1f519-fe0f\",1109],[\"1f51b\",1110],[\"1f51b-fe0f\",1110],[\"1f51d\",1111],[\"1f51d-fe0f\",1111],[\"1f51c\",1112],[\"1f51c-fe0f\",1112],[\"2714-fe0f\",1113],[\"2611-fe0f\",1114],[\"1f518\",1115],[\"1f518-fe0f\",1115],[\"26aa-fe0f\",1116],[\"26ab-fe0f\",1117],[\"1f534\",1118],[\"1f534-fe0f\",1118],[\"1f535\",1119],[\"1f535-fe0f\",1119],[\"1f53a\",1120],[\"1f53a-fe0f\",1120],[\"1f53b\",1121],[\"1f53b-fe0f\",1121],[\"1f538\",1122],[\"1f538-fe0f\",1122],[\"1f539\",1123],[\"1f539-fe0f\",1123],[\"1f536\",1124],[\"1f536-fe0f\",1124],[\"1f537\",1125],[\"1f537-fe0f\",1125],[\"1f533\",1126],[\"1f533-fe0f\",1126],[\"1f532\",1127],[\"1f532-fe0f\",1127],[\"25aa-fe0f\",1128],[\"25ab-fe0f\",1129],[\"25fe-fe0f\",1130],[\"25fd-fe0f\",1131],[\"25fc-fe0f\",1132],[\"25fb-fe0f\",1133],[\"2b1b-fe0f\",1134],[\"2b1c-fe0f\",1135],[\"1f508\",1136],[\"1f508-fe0f\",1136],[\"1f507\",1137],[\"1f507-fe0f\",1137],[\"1f509\",1138],[\"1f509-fe0f\",1138],[\"1f50a\",1139],[\"1f50a-fe0f\",1139],[\"1f514\",1140],[\"1f514-fe0f\",1140],[\"1f515\",1141],[\"1f515-fe0f\",1141],[\"1f4e3\",1142],[\"1f4e3-fe0f\",1142],[\"1f4e2\",1143],[\"1f4e2-fe0f\",1143],[\"1f441-200d-1f5e8\",1144],[\"1f441-200d-1f5e8-fe0f\",1144],[\"1f4ac\",1145],[\"1f4ac-fe0f\",1145],[\"1f4ad\",1146],[\"1f4ad-fe0f\",1146],[\"1f5ef\",1147],[\"1f5ef-fe0f\",1147],[\"2660-fe0f\",1148],[\"2663-fe0f\",1149],[\"2665-fe0f\",1150],[\"2666-fe0f\",1151],[\"1f0cf\",1152],[\"1f0cf-fe0f\",1152],[\"1f3b4\",1153],[\"1f3b4-fe0f\",1153],[\"1f004-fe0f\",1154],[\"1f550\",1155],[\"1f550-fe0f\",1155],[\"1f551\",1156],[\"1f551-fe0f\",1156],[\"1f552\",1157],[\"1f552-fe0f\",1157],[\"1f553\",1158],[\"1f553-fe0f\",1158],[\"1f554\",1159],[\"1f554-fe0f\",1159],[\"1f555\",1160],[\"1f555-fe0f\",1160],[\"1f556\",1161],[\"1f556-fe0f\",1161],[\"1f557\",1162],[\"1f557-fe0f\",1162],[\"1f558\",1163],[\"1f558-fe0f\",1163],[\"1f559\",1164],[\"1f559-fe0f\",1164],[\"1f55a\",1165],[\"1f55a-fe0f\",1165],[\"1f55b\",1166],[\"1f55b-fe0f\",1166],[\"1f55c\",1167],[\"1f55c-fe0f\",1167],[\"1f55d\",1168],[\"1f55d-fe0f\",1168],[\"1f55e\",1169],[\"1f55e-fe0f\",1169],[\"1f55f\",1170],[\"1f55f-fe0f\",1170],[\"1f560\",1171],[\"1f560-fe0f\",1171],[\"1f561\",1172],[\"1f561-fe0f\",1172],[\"1f562\",1173],[\"1f562-fe0f\",1173],[\"1f563\",1174],[\"1f563-fe0f\",1174],[\"1f564\",1175],[\"1f564-fe0f\",1175],[\"1f565\",1176],[\"1f565-fe0f\",1176],[\"1f566\",1177],[\"1f566-fe0f\",1177],[\"1f567\",1178],[\"1f567-fe0f\",1178],[\"1f3f3-fe0f\",1179],[\"1f3f4\",1180],[\"1f3f4-fe0f\",1180],[\"1f3c1\",1181],[\"1f3c1-fe0f\",1181],[\"1f6a9\",1182],[\"1f6a9-fe0f\",1182],[\"1f3f3-fe0f-200d-1f308\",1183],[\"1f3f3-200d-1f308-fe0f\",1183],[\"1f1e6-1f1eb\",1184],[\"1f1e6-1f1eb-fe0f\",1184],[\"1f1e6-1f1fd\",1185],[\"1f1e6-1f1fd-fe0f\",1185],[\"1f1e6-1f1f1\",1186],[\"1f1e6-1f1f1-fe0f\",1186],[\"1f1e9-1f1ff\",1187],[\"1f1e9-1f1ff-fe0f\",1187],[\"1f1e6-1f1f8\",1188],[\"1f1e6-1f1f8-fe0f\",1188],[\"1f1e6-1f1e9\",1189],[\"1f1e6-1f1e9-fe0f\",1189],[\"1f1e6-1f1f4\",1190],[\"1f1e6-1f1f4-fe0f\",1190],[\"1f1e6-1f1ee\",1191],[\"1f1e6-1f1ee-fe0f\",1191],[\"1f1e6-1f1f6\",1192],[\"1f1e6-1f1f6-fe0f\",1192],[\"1f1e6-1f1ec\",1193],[\"1f1e6-1f1ec-fe0f\",1193],[\"1f1e6-1f1f7\",1194],[\"1f1e6-1f1f7-fe0f\",1194],[\"1f1e6-1f1f2\",1195],[\"1f1e6-1f1f2-fe0f\",1195],[\"1f1e6-1f1fc\",1196],[\"1f1e6-1f1fc-fe0f\",1196],[\"1f1e6-1f1fa\",1197],[\"1f1e6-1f1fa-fe0f\",1197],[\"1f1e6-1f1f9\",1198],[\"1f1e6-1f1f9-fe0f\",1198],[\"1f1e6-1f1ff\",1199],[\"1f1e6-1f1ff-fe0f\",1199],[\"1f1e7-1f1f8\",1200],[\"1f1e7-1f1f8-fe0f\",1200],[\"1f1e7-1f1ed\",1201],[\"1f1e7-1f1ed-fe0f\",1201],[\"1f1e7-1f1e9\",1202],[\"1f1e7-1f1e9-fe0f\",1202],[\"1f1e7-1f1e7\",1203],[\"1f1e7-1f1e7-fe0f\",1203],[\"1f1e7-1f1fe\",1204],[\"1f1e7-1f1fe-fe0f\",1204],[\"1f1e7-1f1ea\",1205],[\"1f1e7-1f1ea-fe0f\",1205],[\"1f1e7-1f1ff\",1206],[\"1f1e7-1f1ff-fe0f\",1206],[\"1f1e7-1f1ef\",1207],[\"1f1e7-1f1ef-fe0f\",1207],[\"1f1e7-1f1f2\",1208],[\"1f1e7-1f1f2-fe0f\",1208],[\"1f1e7-1f1f9\",1209],[\"1f1e7-1f1f9-fe0f\",1209],[\"1f1e7-1f1f4\",1210],[\"1f1e7-1f1f4-fe0f\",1210],[\"1f1e7-1f1f6\",1211],[\"1f1e7-1f1f6-fe0f\",1211],[\"1f1e7-1f1e6\",1212],[\"1f1e7-1f1e6-fe0f\",1212],[\"1f1e7-1f1fc\",1213],[\"1f1e7-1f1fc-fe0f\",1213],[\"1f1e7-1f1f7\",1214],[\"1f1e7-1f1f7-fe0f\",1214],[\"1f1ee-1f1f4\",1215],[\"1f1ee-1f1f4-fe0f\",1215],[\"1f1fb-1f1ec\",1216],[\"1f1fb-1f1ec-fe0f\",1216],[\"1f1e7-1f1f3\",1217],[\"1f1e7-1f1f3-fe0f\",1217],[\"1f1e7-1f1ec\",1218],[\"1f1e7-1f1ec-fe0f\",1218],[\"1f1e7-1f1eb\",1219],[\"1f1e7-1f1eb-fe0f\",1219],[\"1f1e7-1f1ee\",1220],[\"1f1e7-1f1ee-fe0f\",1220],[\"1f1e8-1f1fb\",1221],[\"1f1e8-1f1fb-fe0f\",1221],[\"1f1f0-1f1ed\",1222],[\"1f1f0-1f1ed-fe0f\",1222],[\"1f1e8-1f1f2\",1223],[\"1f1e8-1f1f2-fe0f\",1223],[\"1f1e8-1f1e6\",1224],[\"1f1e8-1f1e6-fe0f\",1224],[\"1f1ee-1f1e8\",1225],[\"1f1ee-1f1e8-fe0f\",1225],[\"1f1f0-1f1fe\",1226],[\"1f1f0-1f1fe-fe0f\",1226],[\"1f1e8-1f1eb\",1227],[\"1f1e8-1f1eb-fe0f\",1227],[\"1f1f9-1f1e9\",1228],[\"1f1f9-1f1e9-fe0f\",1228],[\"1f1e8-1f1f1\",1229],[\"1f1e8-1f1f1-fe0f\",1229],[\"1f1e8-1f1f3\",1230],[\"1f1e8-1f1f3-fe0f\",1230],[\"1f1e8-1f1fd\",1231],[\"1f1e8-1f1fd-fe0f\",1231],[\"1f1e8-1f1e8\",1232],[\"1f1e8-1f1e8-fe0f\",1232],[\"1f1e8-1f1f4\",1233],[\"1f1e8-1f1f4-fe0f\",1233],[\"1f1f0-1f1f2\",1234],[\"1f1f0-1f1f2-fe0f\",1234],[\"1f1e8-1f1ec\",1235],[\"1f1e8-1f1ec-fe0f\",1235],[\"1f1e8-1f1e9\",1236],[\"1f1e8-1f1e9-fe0f\",1236],[\"1f1e8-1f1f0\",1237],[\"1f1e8-1f1f0-fe0f\",1237],[\"1f1e8-1f1f7\",1238],[\"1f1e8-1f1f7-fe0f\",1238],[\"1f1e8-1f1ee\",1239],[\"1f1e8-1f1ee-fe0f\",1239],[\"1f1ed-1f1f7\",1240],[\"1f1ed-1f1f7-fe0f\",1240],[\"1f1e8-1f1fa\",1241],[\"1f1e8-1f1fa-fe0f\",1241],[\"1f1e8-1f1fc\",1242],[\"1f1e8-1f1fc-fe0f\",1242],[\"1f1e8-1f1fe\",1243],[\"1f1e8-1f1fe-fe0f\",1243],[\"1f1e8-1f1ff\",1244],[\"1f1e8-1f1ff-fe0f\",1244],[\"1f1e9-1f1f0\",1245],[\"1f1e9-1f1f0-fe0f\",1245],[\"1f1e9-1f1ef\",1246],[\"1f1e9-1f1ef-fe0f\",1246],[\"1f1e9-1f1f2\",1247],[\"1f1e9-1f1f2-fe0f\",1247],[\"1f1e9-1f1f4\",1248],[\"1f1e9-1f1f4-fe0f\",1248],[\"1f1ea-1f1e8\",1249],[\"1f1ea-1f1e8-fe0f\",1249],[\"1f1ea-1f1ec\",1250],[\"1f1ea-1f1ec-fe0f\",1250],[\"1f1f8-1f1fb\",1251],[\"1f1f8-1f1fb-fe0f\",1251],[\"1f1ec-1f1f6\",1252],[\"1f1ec-1f1f6-fe0f\",1252],[\"1f1ea-1f1f7\",1253],[\"1f1ea-1f1f7-fe0f\",1253],[\"1f1ea-1f1ea\",1254],[\"1f1ea-1f1ea-fe0f\",1254],[\"1f1ea-1f1f9\",1255],[\"1f1ea-1f1f9-fe0f\",1255],[\"1f1ea-1f1fa\",1256],[\"1f1ea-1f1fa-fe0f\",1256],[\"1f1eb-1f1f0\",1257],[\"1f1eb-1f1f0-fe0f\",1257],[\"1f1eb-1f1f4\",1258],[\"1f1eb-1f1f4-fe0f\",1258],[\"1f1eb-1f1ef\",1259],[\"1f1eb-1f1ef-fe0f\",1259],[\"1f1eb-1f1ee\",1260],[\"1f1eb-1f1ee-fe0f\",1260],[\"1f1eb-1f1f7\",1261],[\"1f1eb-1f1f7-fe0f\",1261],[\"1f1ec-1f1eb\",1262],[\"1f1ec-1f1eb-fe0f\",1262],[\"1f1f5-1f1eb\",1263],[\"1f1f5-1f1eb-fe0f\",1263],[\"1f1f9-1f1eb\",1264],[\"1f1f9-1f1eb-fe0f\",1264],[\"1f1ec-1f1e6\",1265],[\"1f1ec-1f1e6-fe0f\",1265],[\"1f1ec-1f1f2\",1266],[\"1f1ec-1f1f2-fe0f\",1266],[\"1f1ec-1f1ea\",1267],[\"1f1ec-1f1ea-fe0f\",1267],[\"1f1e9-1f1ea\",1268],[\"1f1e9-1f1ea-fe0f\",1268],[\"1f1ec-1f1ed\",1269],[\"1f1ec-1f1ed-fe0f\",1269],[\"1f1ec-1f1ee\",1270],[\"1f1ec-1f1ee-fe0f\",1270],[\"1f1ec-1f1f7\",1271],[\"1f1ec-1f1f7-fe0f\",1271],[\"1f1ec-1f1f1\",1272],[\"1f1ec-1f1f1-fe0f\",1272],[\"1f1ec-1f1e9\",1273],[\"1f1ec-1f1e9-fe0f\",1273],[\"1f1ec-1f1f5\",1274],[\"1f1ec-1f1f5-fe0f\",1274],[\"1f1ec-1f1fa\",1275],[\"1f1ec-1f1fa-fe0f\",1275],[\"1f1ec-1f1f9\",1276],[\"1f1ec-1f1f9-fe0f\",1276],[\"1f1ec-1f1ec\",1277],[\"1f1ec-1f1ec-fe0f\",1277],[\"1f1ec-1f1f3\",1278],[\"1f1ec-1f1f3-fe0f\",1278],[\"1f1ec-1f1fc\",1279],[\"1f1ec-1f1fc-fe0f\",1279],[\"1f1ec-1f1fe\",1280],[\"1f1ec-1f1fe-fe0f\",1280],[\"1f1ed-1f1f9\",1281],[\"1f1ed-1f1f9-fe0f\",1281],[\"1f1ed-1f1f3\",1282],[\"1f1ed-1f1f3-fe0f\",1282],[\"1f1ed-1f1f0\",1283],[\"1f1ed-1f1f0-fe0f\",1283],[\"1f1ed-1f1fa\",1284],[\"1f1ed-1f1fa-fe0f\",1284],[\"1f1ee-1f1f8\",1285],[\"1f1ee-1f1f8-fe0f\",1285],[\"1f1ee-1f1f3\",1286],[\"1f1ee-1f1f3-fe0f\",1286],[\"1f1ee-1f1e9\",1287],[\"1f1ee-1f1e9-fe0f\",1287],[\"1f1ee-1f1f7\",1288],[\"1f1ee-1f1f7-fe0f\",1288],[\"1f1ee-1f1f6\",1289],[\"1f1ee-1f1f6-fe0f\",1289],[\"1f1ee-1f1ea\",1290],[\"1f1ee-1f1ea-fe0f\",1290],[\"1f1ee-1f1f2\",1291],[\"1f1ee-1f1f2-fe0f\",1291],[\"1f1ee-1f1f1\",1292],[\"1f1ee-1f1f1-fe0f\",1292],[\"1f1ee-1f1f9\",1293],[\"1f1ee-1f1f9-fe0f\",1293],[\"1f1ef-1f1f2\",1294],[\"1f1ef-1f1f2-fe0f\",1294],[\"1f1ef-1f1f5\",1295],[\"1f1ef-1f1f5-fe0f\",1295],[\"1f38c\",1296],[\"1f38c-fe0f\",1296],[\"1f1ef-1f1ea\",1297],[\"1f1ef-1f1ea-fe0f\",1297],[\"1f1ef-1f1f4\",1298],[\"1f1ef-1f1f4-fe0f\",1298],[\"1f1f0-1f1ff\",1299],[\"1f1f0-1f1ff-fe0f\",1299],[\"1f1f0-1f1ea\",1300],[\"1f1f0-1f1ea-fe0f\",1300],[\"1f1f0-1f1ee\",1301],[\"1f1f0-1f1ee-fe0f\",1301],[\"1f1fd-1f1f0\",1302],[\"1f1fd-1f1f0-fe0f\",1302],[\"1f1f0-1f1fc\",1303],[\"1f1f0-1f1fc-fe0f\",1303],[\"1f1f0-1f1ec\",1304],[\"1f1f0-1f1ec-fe0f\",1304],[\"1f1f1-1f1e6\",1305],[\"1f1f1-1f1e6-fe0f\",1305],[\"1f1f1-1f1fb\",1306],[\"1f1f1-1f1fb-fe0f\",1306],[\"1f1f1-1f1e7\",1307],[\"1f1f1-1f1e7-fe0f\",1307],[\"1f1f1-1f1f8\",1308],[\"1f1f1-1f1f8-fe0f\",1308],[\"1f1f1-1f1f7\",1309],[\"1f1f1-1f1f7-fe0f\",1309],[\"1f1f1-1f1fe\",1310],[\"1f1f1-1f1fe-fe0f\",1310],[\"1f1f1-1f1ee\",1311],[\"1f1f1-1f1ee-fe0f\",1311],[\"1f1f1-1f1f9\",1312],[\"1f1f1-1f1f9-fe0f\",1312],[\"1f1f1-1f1fa\",1313],[\"1f1f1-1f1fa-fe0f\",1313],[\"1f1f2-1f1f4\",1314],[\"1f1f2-1f1f4-fe0f\",1314],[\"1f1f2-1f1f0\",1315],[\"1f1f2-1f1f0-fe0f\",1315],[\"1f1f2-1f1ec\",1316],[\"1f1f2-1f1ec-fe0f\",1316],[\"1f1f2-1f1fc\",1317],[\"1f1f2-1f1fc-fe0f\",1317],[\"1f1f2-1f1fe\",1318],[\"1f1f2-1f1fe-fe0f\",1318],[\"1f1f2-1f1fb\",1319],[\"1f1f2-1f1fb-fe0f\",1319],[\"1f1f2-1f1f1\",1320],[\"1f1f2-1f1f1-fe0f\",1320],[\"1f1f2-1f1f9\",1321],[\"1f1f2-1f1f9-fe0f\",1321],[\"1f1f2-1f1ed\",1322],[\"1f1f2-1f1ed-fe0f\",1322],[\"1f1f2-1f1f6\",1323],[\"1f1f2-1f1f6-fe0f\",1323],[\"1f1f2-1f1f7\",1324],[\"1f1f2-1f1f7-fe0f\",1324],[\"1f1f2-1f1fa\",1325],[\"1f1f2-1f1fa-fe0f\",1325],[\"1f1fe-1f1f9\",1326],[\"1f1fe-1f1f9-fe0f\",1326],[\"1f1f2-1f1fd\",1327],[\"1f1f2-1f1fd-fe0f\",1327],[\"1f1eb-1f1f2\",1328],[\"1f1eb-1f1f2-fe0f\",1328],[\"1f1f2-1f1e9\",1329],[\"1f1f2-1f1e9-fe0f\",1329],[\"1f1f2-1f1e8\",1330],[\"1f1f2-1f1e8-fe0f\",1330],[\"1f1f2-1f1f3\",1331],[\"1f1f2-1f1f3-fe0f\",1331],[\"1f1f2-1f1ea\",1332],[\"1f1f2-1f1ea-fe0f\",1332],[\"1f1f2-1f1f8\",1333],[\"1f1f2-1f1f8-fe0f\",1333],[\"1f1f2-1f1e6\",1334],[\"1f1f2-1f1e6-fe0f\",1334],[\"1f1f2-1f1ff\",1335],[\"1f1f2-1f1ff-fe0f\",1335],[\"1f1f2-1f1f2\",1336],[\"1f1f2-1f1f2-fe0f\",1336],[\"1f1f3-1f1e6\",1337],[\"1f1f3-1f1e6-fe0f\",1337],[\"1f1f3-1f1f7\",1338],[\"1f1f3-1f1f7-fe0f\",1338],[\"1f1f3-1f1f5\",1339],[\"1f1f3-1f1f5-fe0f\",1339],[\"1f1f3-1f1f1\",1340],[\"1f1f3-1f1f1-fe0f\",1340],[\"1f1f3-1f1e8\",1341],[\"1f1f3-1f1e8-fe0f\",1341],[\"1f1f3-1f1ff\",1342],[\"1f1f3-1f1ff-fe0f\",1342],[\"1f1f3-1f1ee\",1343],[\"1f1f3-1f1ee-fe0f\",1343],[\"1f1f3-1f1ea\",1344],[\"1f1f3-1f1ea-fe0f\",1344],[\"1f1f3-1f1ec\",1345],[\"1f1f3-1f1ec-fe0f\",1345],[\"1f1f3-1f1fa\",1346],[\"1f1f3-1f1fa-fe0f\",1346],[\"1f1f3-1f1eb\",1347],[\"1f1f3-1f1eb-fe0f\",1347],[\"1f1f2-1f1f5\",1348],[\"1f1f2-1f1f5-fe0f\",1348],[\"1f1f0-1f1f5\",1349],[\"1f1f0-1f1f5-fe0f\",1349],[\"1f1f3-1f1f4\",1350],[\"1f1f3-1f1f4-fe0f\",1350],[\"1f1f4-1f1f2\",1351],[\"1f1f4-1f1f2-fe0f\",1351],[\"1f1f5-1f1f0\",1352],[\"1f1f5-1f1f0-fe0f\",1352],[\"1f1f5-1f1fc\",1353],[\"1f1f5-1f1fc-fe0f\",1353],[\"1f1f5-1f1f8\",1354],[\"1f1f5-1f1f8-fe0f\",1354],[\"1f1f5-1f1e6\",1355],[\"1f1f5-1f1e6-fe0f\",1355],[\"1f1f5-1f1ec\",1356],[\"1f1f5-1f1ec-fe0f\",1356],[\"1f1f5-1f1fe\",1357],[\"1f1f5-1f1fe-fe0f\",1357],[\"1f1f5-1f1ea\",1358],[\"1f1f5-1f1ea-fe0f\",1358],[\"1f1f5-1f1ed\",1359],[\"1f1f5-1f1ed-fe0f\",1359],[\"1f1f5-1f1f3\",1360],[\"1f1f5-1f1f3-fe0f\",1360],[\"1f1f5-1f1f1\",1361],[\"1f1f5-1f1f1-fe0f\",1361],[\"1f1f5-1f1f9\",1362],[\"1f1f5-1f1f9-fe0f\",1362],[\"1f1f5-1f1f7\",1363],[\"1f1f5-1f1f7-fe0f\",1363],[\"1f1f6-1f1e6\",1364],[\"1f1f6-1f1e6-fe0f\",1364],[\"1f1f7-1f1ea\",1365],[\"1f1f7-1f1ea-fe0f\",1365],[\"1f1f7-1f1f4\",1366],[\"1f1f7-1f1f4-fe0f\",1366],[\"1f1f7-1f1fa\",1367],[\"1f1f7-1f1fa-fe0f\",1367],[\"1f1f7-1f1fc\",1368],[\"1f1f7-1f1fc-fe0f\",1368],[\"1f1e7-1f1f1\",1369],[\"1f1e7-1f1f1-fe0f\",1369],[\"1f1f8-1f1ed\",1370],[\"1f1f8-1f1ed-fe0f\",1370],[\"1f1f0-1f1f3\",1371],[\"1f1f0-1f1f3-fe0f\",1371],[\"1f1f1-1f1e8\",1372],[\"1f1f1-1f1e8-fe0f\",1372],[\"1f1f5-1f1f2\",1373],[\"1f1f5-1f1f2-fe0f\",1373],[\"1f1fb-1f1e8\",1374],[\"1f1fb-1f1e8-fe0f\",1374],[\"1f1fc-1f1f8\",1375],[\"1f1fc-1f1f8-fe0f\",1375],[\"1f1f8-1f1f2\",1376],[\"1f1f8-1f1f2-fe0f\",1376],[\"1f1f8-1f1f9\",1377],[\"1f1f8-1f1f9-fe0f\",1377],[\"1f1f8-1f1e6\",1378],[\"1f1f8-1f1e6-fe0f\",1378],[\"1f1f8-1f1f3\",1379],[\"1f1f8-1f1f3-fe0f\",1379],[\"1f1f7-1f1f8\",1380],[\"1f1f7-1f1f8-fe0f\",1380],[\"1f1f8-1f1e8\",1381],[\"1f1f8-1f1e8-fe0f\",1381],[\"1f1f8-1f1f1\",1382],[\"1f1f8-1f1f1-fe0f\",1382],[\"1f1f8-1f1ec\",1383],[\"1f1f8-1f1ec-fe0f\",1383],[\"1f1f8-1f1fd\",1384],[\"1f1f8-1f1fd-fe0f\",1384],[\"1f1f8-1f1f0\",1385],[\"1f1f8-1f1f0-fe0f\",1385],[\"1f1f8-1f1ee\",1386],[\"1f1f8-1f1ee-fe0f\",1386],[\"1f1f8-1f1e7\",1387],[\"1f1f8-1f1e7-fe0f\",1387],[\"1f1f8-1f1f4\",1388],[\"1f1f8-1f1f4-fe0f\",1388],[\"1f1ff-1f1e6\",1389],[\"1f1ff-1f1e6-fe0f\",1389],[\"1f1ec-1f1f8\",1390],[\"1f1ec-1f1f8-fe0f\",1390],[\"1f1f0-1f1f7\",1391],[\"1f1f0-1f1f7-fe0f\",1391],[\"1f1f8-1f1f8\",1392],[\"1f1f8-1f1f8-fe0f\",1392],[\"1f1ea-1f1f8\",1393],[\"1f1ea-1f1f8-fe0f\",1393],[\"1f1f1-1f1f0\",1394],[\"1f1f1-1f1f0-fe0f\",1394],[\"1f1f8-1f1e9\",1395],[\"1f1f8-1f1e9-fe0f\",1395],[\"1f1f8-1f1f7\",1396],[\"1f1f8-1f1f7-fe0f\",1396],[\"1f1f8-1f1ff\",1397],[\"1f1f8-1f1ff-fe0f\",1397],[\"1f1f8-1f1ea\",1398],[\"1f1f8-1f1ea-fe0f\",1398],[\"1f1e8-1f1ed\",1399],[\"1f1e8-1f1ed-fe0f\",1399],[\"1f1f8-1f1fe\",1400],[\"1f1f8-1f1fe-fe0f\",1400],[\"1f1f9-1f1fc\",1401],[\"1f1f9-1f1fc-fe0f\",1401],[\"1f1f9-1f1ef\",1402],[\"1f1f9-1f1ef-fe0f\",1402],[\"1f1f9-1f1ff\",1403],[\"1f1f9-1f1ff-fe0f\",1403],[\"1f1f9-1f1ed\",1404],[\"1f1f9-1f1ed-fe0f\",1404],[\"1f1f9-1f1f1\",1405],[\"1f1f9-1f1f1-fe0f\",1405],[\"1f1f9-1f1ec\",1406],[\"1f1f9-1f1ec-fe0f\",1406],[\"1f1f9-1f1f0\",1407],[\"1f1f9-1f1f0-fe0f\",1407],[\"1f1f9-1f1f4\",1408],[\"1f1f9-1f1f4-fe0f\",1408],[\"1f1f9-1f1f9\",1409],[\"1f1f9-1f1f9-fe0f\",1409],[\"1f1f9-1f1f3\",1410],[\"1f1f9-1f1f3-fe0f\",1410],[\"1f1f9-1f1f7\",1411],[\"1f1f9-1f1f7-fe0f\",1411],[\"1f1f9-1f1f2\",1412],[\"1f1f9-1f1f2-fe0f\",1412],[\"1f1f9-1f1e8\",1413],[\"1f1f9-1f1e8-fe0f\",1413],[\"1f1f9-1f1fb\",1414],[\"1f1f9-1f1fb-fe0f\",1414],[\"1f1fa-1f1ec\",1415],[\"1f1fa-1f1ec-fe0f\",1415],[\"1f1fa-1f1e6\",1416],[\"1f1fa-1f1e6-fe0f\",1416],[\"1f1e6-1f1ea\",1417],[\"1f1e6-1f1ea-fe0f\",1417],[\"1f1ec-1f1e7\",1418],[\"1f1ec-1f1e7-fe0f\",1418],[\"1f1fa-1f1f8\",1419],[\"1f1fa-1f1f8-fe0f\",1419],[\"1f1fb-1f1ee\",1420],[\"1f1fb-1f1ee-fe0f\",1420],[\"1f1fa-1f1fe\",1421],[\"1f1fa-1f1fe-fe0f\",1421],[\"1f1fa-1f1ff\",1422],[\"1f1fa-1f1ff-fe0f\",1422],[\"1f1fb-1f1fa\",1423],[\"1f1fb-1f1fa-fe0f\",1423],[\"1f1fb-1f1e6\",1424],[\"1f1fb-1f1e6-fe0f\",1424],[\"1f1fb-1f1ea\",1425],[\"1f1fb-1f1ea-fe0f\",1425],[\"1f1fb-1f1f3\",1426],[\"1f1fb-1f1f3-fe0f\",1426],[\"1f1fc-1f1eb\",1427],[\"1f1fc-1f1eb-fe0f\",1427],[\"1f1ea-1f1ed\",1428],[\"1f1ea-1f1ed-fe0f\",1428],[\"1f1fe-1f1ea\",1429],[\"1f1fe-1f1ea-fe0f\",1429],[\"1f1ff-1f1f2\",1430],[\"1f1ff-1f1f2-fe0f\",1430],[\"1f1ff-1f1fc\",1431],[\"1f1ff-1f1fc-fe0f\",1431],[\"1f450-1f3fb\",1448],[\"1f450-1f3fc\",1449],[\"1f450-1f3fd\",1450],[\"1f450-1f3fe\",1451],[\"1f450-1f3ff\",1452],[\"1f64c-1f3fb\",1453],[\"1f64c-1f3fc\",1454],[\"1f64c-1f3fd\",1455],[\"1f64c-1f3fe\",1456],[\"1f64c-1f3ff\",1457],[\"1f44f-1f3fb\",1458],[\"1f44f-1f3fc\",1459],[\"1f44f-1f3fd\",1460],[\"1f44f-1f3fe\",1461],[\"1f44f-1f3ff\",1462],[\"1f64f-1f3fb\",1463],[\"1f64f-1f3fc\",1464],[\"1f64f-1f3fd\",1465],[\"1f64f-1f3fe\",1466],[\"1f64f-1f3ff\",1467],[\"1f44d-1f3fb\",1468],[\"1f44d-1f3fc\",1469],[\"1f44d-1f3fd\",1470],[\"1f44d-1f3fe\",1471],[\"1f44d-1f3ff\",1472],[\"1f44e-1f3fb\",1473],[\"1f44e-1f3fc\",1474],[\"1f44e-1f3fd\",1475],[\"1f44e-1f3fe\",1476],[\"1f44e-1f3ff\",1477],[\"1f44a-1f3fb\",1478],[\"1f44a-1f3fc\",1479],[\"1f44a-1f3fd\",1480],[\"1f44a-1f3fe\",1481],[\"1f44a-1f3ff\",1482],[\"270a-1f3fb\",1483],[\"270a-1f3fc\",1484],[\"270a-1f3fd\",1485],[\"270a-1f3fe\",1486],[\"270a-1f3ff\",1487],[\"1f91b-1f3fb\",1488],[\"1f91b-1f3fc\",1489],[\"1f91b-1f3fd\",1490],[\"1f91b-1f3fe\",1491],[\"1f91b-1f3ff\",1492],[\"1f91c-1f3fb\",1493],[\"1f91c-1f3fc\",1494],[\"1f91c-1f3fd\",1495],[\"1f91c-1f3fe\",1496],[\"1f91c-1f3ff\",1497],[\"1f91e-1f3fb\",1498],[\"1f91e-1f3fc\",1499],[\"1f91e-1f3fd\",1500],[\"1f91e-1f3fe\",1501],[\"1f91e-1f3ff\",1502],[\"270c-1f3fb\",1503],[\"270c-1f3fc\",1504],[\"270c-1f3fd\",1505],[\"270c-1f3fe\",1506],[\"270c-1f3ff\",1507],[\"1f918-1f3fb\",1508],[\"1f918-1f3fc\",1509],[\"1f918-1f3fd\",1510],[\"1f918-1f3fe\",1511],[\"1f918-1f3ff\",1512],[\"1f44c-1f3fb\",1513],[\"1f44c-1f3fc\",1514],[\"1f44c-1f3fd\",1515],[\"1f44c-1f3fe\",1516],[\"1f44c-1f3ff\",1517],[\"1f448-1f3fb\",1518],[\"1f448-1f3fc\",1519],[\"1f448-1f3fd\",1520],[\"1f448-1f3fe\",1521],[\"1f448-1f3ff\",1522],[\"1f449-1f3fb\",1523],[\"1f449-1f3fc\",1524],[\"1f449-1f3fd\",1525],[\"1f449-1f3fe\",1526],[\"1f449-1f3ff\",1527],[\"1f446-1f3fb\",1528],[\"1f446-1f3fc\",1529],[\"1f446-1f3fd\",1530],[\"1f446-1f3fe\",1531],[\"1f446-1f3ff\",1532],[\"1f447-1f3fb\",1533],[\"1f447-1f3fc\",1534],[\"1f447-1f3fd\",1535],[\"1f447-1f3fe\",1536],[\"1f447-1f3ff\",1537],[\"261d-1f3fb\",1538],[\"261d-1f3fc\",1539],[\"261d-1f3fd\",1540],[\"261d-1f3fe\",1541],[\"261d-1f3ff\",1542],[\"270b-1f3fb\",1543],[\"270b-1f3fc\",1544],[\"270b-1f3fd\",1545],[\"270b-1f3fe\",1546],[\"270b-1f3ff\",1547],[\"1f91a-1f3fb\",1548],[\"1f91a-1f3fc\",1549],[\"1f91a-1f3fd\",1550],[\"1f91a-1f3fe\",1551],[\"1f91a-1f3ff\",1552],[\"1f590-1f3fb\",1553],[\"1f590-1f3fc\",1554],[\"1f590-1f3fd\",1555],[\"1f590-1f3fe\",1556],[\"1f590-1f3ff\",1557],[\"1f596-1f3fb\",1558],[\"1f596-1f3fc\",1559],[\"1f596-1f3fd\",1560],[\"1f596-1f3fe\",1561],[\"1f596-1f3ff\",1562],[\"1f44b-1f3fb\",1563],[\"1f44b-1f3fc\",1564],[\"1f44b-1f3fd\",1565],[\"1f44b-1f3fe\",1566],[\"1f44b-1f3ff\",1567],[\"1f919-1f3fb\",1568],[\"1f919-1f3fc\",1569],[\"1f919-1f3fd\",1570],[\"1f919-1f3fe\",1571],[\"1f919-1f3ff\",1572],[\"1f4aa-1f3fb\",1573],[\"1f4aa-1f3fc\",1574],[\"1f4aa-1f3fd\",1575],[\"1f4aa-1f3fe\",1576],[\"1f4aa-1f3ff\",1577],[\"1f595-1f3fb\",1578],[\"1f595-1f3fc\",1579],[\"1f595-1f3fd\",1580],[\"1f595-1f3fe\",1581],[\"1f595-1f3ff\",1582],[\"270d-1f3fb\",1583],[\"270d-1f3fc\",1584],[\"270d-1f3fd\",1585],[\"270d-1f3fe\",1586],[\"270d-1f3ff\",1587],[\"1f933-1f3fb\",1588],[\"1f933-1f3fc\",1589],[\"1f933-1f3fd\",1590],[\"1f933-1f3fe\",1591],[\"1f933-1f3ff\",1592],[\"1f485-1f3fb\",1593],[\"1f485-1f3fc\",1594],[\"1f485-1f3fd\",1595],[\"1f485-1f3fe\",1596],[\"1f485-1f3ff\",1597],[\"1f442-1f3fb\",1598],[\"1f442-1f3fc\",1599],[\"1f442-1f3fd\",1600],[\"1f442-1f3fe\",1601],[\"1f442-1f3ff\",1602],[\"1f443-1f3fb\",1603],[\"1f443-1f3fc\",1604],[\"1f443-1f3fd\",1605],[\"1f443-1f3fe\",1606],[\"1f443-1f3ff\",1607],[\"1f476-1f3fb\",1608],[\"1f476-1f3fc\",1609],[\"1f476-1f3fd\",1610],[\"1f476-1f3fe\",1611],[\"1f476-1f3ff\",1612],[\"1f466-1f3fb\",1613],[\"1f466-1f3fc\",1614],[\"1f466-1f3fd\",1615],[\"1f466-1f3fe\",1616],[\"1f466-1f3ff\",1617],[\"1f467-1f3fb\",1618],[\"1f467-1f3fc\",1619],[\"1f467-1f3fd\",1620],[\"1f467-1f3fe\",1621],[\"1f467-1f3ff\",1622],[\"1f468-1f3fb\",1623],[\"1f468-1f3fc\",1624],[\"1f468-1f3fd\",1625],[\"1f468-1f3fe\",1626],[\"1f468-1f3ff\",1627],[\"1f469-1f3fb\",1628],[\"1f469-1f3fc\",1629],[\"1f469-1f3fd\",1630],[\"1f469-1f3fe\",1631],[\"1f469-1f3ff\",1632],[\"1f471-1f3fb\",1633],[\"1f471-1f3fc\",1634],[\"1f471-1f3fd\",1635],[\"1f471-1f3fe\",1636],[\"1f471-1f3ff\",1637],[\"1f471-1f3fb-200d-2640-fe0f\",1638],[\"1f471-1f3fc-200d-2640-fe0f\",1639],[\"1f471-1f3fd-200d-2640-fe0f\",1640],[\"1f471-1f3fe-200d-2640-fe0f\",1641],[\"1f471-1f3ff-200d-2640-fe0f\",1642],[\"1f471-1f3fb\",1643],[\"1f471-1f3fc\",1644],[\"1f471-1f3fd\",1645],[\"1f471-1f3fe\",1646],[\"1f471-1f3ff\",1647],[\"1f471-1f3fb-200d-2640-fe0f\",1648],[\"1f471-1f3fc-200d-2640-fe0f\",1649],[\"1f471-1f3fd-200d-2640-fe0f\",1650],[\"1f471-1f3fe-200d-2640-fe0f\",1651],[\"1f471-1f3ff-200d-2640-fe0f\",1652],[\"1f474-1f3fb\",1653],[\"1f474-1f3fc\",1654],[\"1f474-1f3fd\",1655],[\"1f474-1f3fe\",1656],[\"1f474-1f3ff\",1657],[\"1f475-1f3fb\",1658],[\"1f475-1f3fc\",1659],[\"1f475-1f3fd\",1660],[\"1f475-1f3fe\",1661],[\"1f475-1f3ff\",1662],[\"1f472-1f3fb\",1663],[\"1f472-1f3fc\",1664],[\"1f472-1f3fd\",1665],[\"1f472-1f3fe\",1666],[\"1f472-1f3ff\",1667],[\"1f473-1f3fb\",1668],[\"1f473-1f3fc\",1669],[\"1f473-1f3fd\",1670],[\"1f473-1f3fe\",1671],[\"1f473-1f3ff\",1672],[\"1f473-1f3fb-200d-2640-fe0f\",1673],[\"1f473-1f3fc-200d-2640-fe0f\",1674],[\"1f473-1f3fd-200d-2640-fe0f\",1675],[\"1f473-1f3fe-200d-2640-fe0f\",1676],[\"1f473-1f3ff-200d-2640-fe0f\",1677],[\"1f473-1f3fb\",1678],[\"1f473-1f3fc\",1679],[\"1f473-1f3fd\",1680],[\"1f473-1f3fe\",1681],[\"1f473-1f3ff\",1682],[\"1f473-1f3fb-200d-2640-fe0f\",1683],[\"1f473-1f3fc-200d-2640-fe0f\",1684],[\"1f473-1f3fd-200d-2640-fe0f\",1685],[\"1f473-1f3fe-200d-2640-fe0f\",1686],[\"1f473-1f3ff-200d-2640-fe0f\",1687],[\"1f46e-1f3fb\",1688],[\"1f46e-1f3fc\",1689],[\"1f46e-1f3fd\",1690],[\"1f46e-1f3fe\",1691],[\"1f46e-1f3ff\",1692],[\"1f46e-1f3fb-200d-2640-fe0f\",1693],[\"1f46e-1f3fc-200d-2640-fe0f\",1694],[\"1f46e-1f3fd-200d-2640-fe0f\",1695],[\"1f46e-1f3fe-200d-2640-fe0f\",1696],[\"1f46e-1f3ff-200d-2640-fe0f\",1697],[\"1f46e-1f3fb\",1698],[\"1f46e-1f3fc\",1699],[\"1f46e-1f3fd\",1700],[\"1f46e-1f3fe\",1701],[\"1f46e-1f3ff\",1702],[\"1f46e-1f3fb-200d-2640-fe0f\",1703],[\"1f46e-1f3fc-200d-2640-fe0f\",1704],[\"1f46e-1f3fd-200d-2640-fe0f\",1705],[\"1f46e-1f3fe-200d-2640-fe0f\",1706],[\"1f46e-1f3ff-200d-2640-fe0f\",1707],[\"1f477-1f3fb\",1708],[\"1f477-1f3fc\",1709],[\"1f477-1f3fd\",1710],[\"1f477-1f3fe\",1711],[\"1f477-1f3ff\",1712],[\"1f477-1f3fb-200d-2640-fe0f\",1713],[\"1f477-1f3fc-200d-2640-fe0f\",1714],[\"1f477-1f3fd-200d-2640-fe0f\",1715],[\"1f477-1f3fe-200d-2640-fe0f\",1716],[\"1f477-1f3ff-200d-2640-fe0f\",1717],[\"1f477-1f3fb\",1718],[\"1f477-1f3fc\",1719],[\"1f477-1f3fd\",1720],[\"1f477-1f3fe\",1721],[\"1f477-1f3ff\",1722],[\"1f477-1f3fb-200d-2640-fe0f\",1723],[\"1f477-1f3fc-200d-2640-fe0f\",1724],[\"1f477-1f3fd-200d-2640-fe0f\",1725],[\"1f477-1f3fe-200d-2640-fe0f\",1726],[\"1f477-1f3ff-200d-2640-fe0f\",1727],[\"1f482-1f3fb\",1728],[\"1f482-1f3fc\",1729],[\"1f482-1f3fd\",1730],[\"1f482-1f3fe\",1731],[\"1f482-1f3ff\",1732],[\"1f482-1f3fb-200d-2640-fe0f\",1733],[\"1f482-1f3fc-200d-2640-fe0f\",1734],[\"1f482-1f3fd-200d-2640-fe0f\",1735],[\"1f482-1f3fe-200d-2640-fe0f\",1736],[\"1f482-1f3ff-200d-2640-fe0f\",1737],[\"1f482-1f3fb\",1738],[\"1f482-1f3fc\",1739],[\"1f482-1f3fd\",1740],[\"1f482-1f3fe\",1741],[\"1f482-1f3ff\",1742],[\"1f482-1f3fb-200d-2640-fe0f\",1743],[\"1f482-1f3fc-200d-2640-fe0f\",1744],[\"1f482-1f3fd-200d-2640-fe0f\",1745],[\"1f482-1f3fe-200d-2640-fe0f\",1746],[\"1f482-1f3ff-200d-2640-fe0f\",1747],[\"1f575-1f3fb\",1748],[\"1f575-1f3fc\",1749],[\"1f575-1f3fd\",1750],[\"1f575-1f3fe\",1751],[\"1f575-1f3ff\",1752],[\"1f575-1f3fb-200d-2640-fe0f\",1753],[\"1f575-1f3fc-200d-2640-fe0f\",1754],[\"1f575-1f3fd-200d-2640-fe0f\",1755],[\"1f575-1f3fe-200d-2640-fe0f\",1756],[\"1f575-1f3ff-200d-2640-fe0f\",1757],[\"1f575-1f3fb\",1758],[\"1f575-1f3fc\",1759],[\"1f575-1f3fd\",1760],[\"1f575-1f3fe\",1761],[\"1f575-1f3ff\",1762],[\"1f575-1f3fb-200d-2640-fe0f\",1763],[\"1f575-1f3fc-200d-2640-fe0f\",1764],[\"1f575-1f3fd-200d-2640-fe0f\",1765],[\"1f575-1f3fe-200d-2640-fe0f\",1766],[\"1f575-1f3ff-200d-2640-fe0f\",1767],[\"1f469-1f3fb\",1768],[\"1f469-1f3fc\",1769],[\"1f469-1f3fd\",1770],[\"1f469-1f3fe\",1771],[\"1f469-1f3ff\",1772],[\"1f468-1f3fb\",1773],[\"1f468-1f3fc\",1774],[\"1f468-1f3fd\",1775],[\"1f468-1f3fe\",1776],[\"1f468-1f3ff\",1777],[\"1f469-1f3fb\",1778],[\"1f469-1f3fc\",1779],[\"1f469-1f3fd\",1780],[\"1f469-1f3fe\",1781],[\"1f469-1f3ff\",1782],[\"1f468-1f3fb\",1783],[\"1f468-1f3fc\",1784],[\"1f468-1f3fd\",1785],[\"1f468-1f3fe\",1786],[\"1f468-1f3ff\",1787],[\"1f469-1f3fb\",1788],[\"1f469-1f3fc\",1789],[\"1f469-1f3fd\",1790],[\"1f469-1f3fe\",1791],[\"1f469-1f3ff\",1792],[\"1f468-1f3fb\",1793],[\"1f468-1f3fc\",1794],[\"1f468-1f3fd\",1795],[\"1f468-1f3fe\",1796],[\"1f468-1f3ff\",1797],[\"1f469-1f3fb\",1798],[\"1f469-1f3fc\",1799],[\"1f469-1f3fd\",1800],[\"1f469-1f3fe\",1801],[\"1f469-1f3ff\",1802],[\"1f468-1f3fb\",1803],[\"1f468-1f3fc\",1804],[\"1f468-1f3fd\",1805],[\"1f468-1f3fe\",1806],[\"1f468-1f3ff\",1807],[\"1f469-1f3fb\",1808],[\"1f469-1f3fc\",1809],[\"1f469-1f3fd\",1810],[\"1f469-1f3fe\",1811],[\"1f469-1f3ff\",1812],[\"1f468-1f3fb\",1813],[\"1f468-1f3fc\",1814],[\"1f468-1f3fd\",1815],[\"1f468-1f3fe\",1816],[\"1f468-1f3ff\",1817],[\"1f469-1f3fb\",1818],[\"1f469-1f3fc\",1819],[\"1f469-1f3fd\",1820],[\"1f469-1f3fe\",1821],[\"1f469-1f3ff\",1822],[\"1f468-1f3fb\",1823],[\"1f468-1f3fc\",1824],[\"1f468-1f3fd\",1825],[\"1f468-1f3fe\",1826],[\"1f468-1f3ff\",1827],[\"1f469-1f3fb\",1828],[\"1f469-1f3fc\",1829],[\"1f469-1f3fd\",1830],[\"1f469-1f3fe\",1831],[\"1f469-1f3ff\",1832],[\"1f468-1f3fb\",1833],[\"1f468-1f3fc\",1834],[\"1f468-1f3fd\",1835],[\"1f468-1f3fe\",1836],[\"1f468-1f3ff\",1837],[\"1f469-1f3fb\",1838],[\"1f469-1f3fc\",1839],[\"1f469-1f3fd\",1840],[\"1f469-1f3fe\",1841],[\"1f469-1f3ff\",1842],[\"1f468-1f3fb\",1843],[\"1f468-1f3fc\",1844],[\"1f468-1f3fd\",1845],[\"1f468-1f3fe\",1846],[\"1f468-1f3ff\",1847],[\"1f469-1f3fb\",1848],[\"1f469-1f3fc\",1849],[\"1f469-1f3fd\",1850],[\"1f469-1f3fe\",1851],[\"1f469-1f3ff\",1852],[\"1f468-1f3fb\",1853],[\"1f468-1f3fc\",1854],[\"1f468-1f3fd\",1855],[\"1f468-1f3fe\",1856],[\"1f468-1f3ff\",1857],[\"1f469-1f3fb\",1858],[\"1f469-1f3fc\",1859],[\"1f469-1f3fd\",1860],[\"1f469-1f3fe\",1861],[\"1f469-1f3ff\",1862],[\"1f468-1f3fb\",1863],[\"1f468-1f3fc\",1864],[\"1f468-1f3fd\",1865],[\"1f468-1f3fe\",1866],[\"1f468-1f3ff\",1867],[\"1f469-1f3fb\",1868],[\"1f469-1f3fc\",1869],[\"1f469-1f3fd\",1870],[\"1f469-1f3fe\",1871],[\"1f469-1f3ff\",1872],[\"1f468-1f3fb\",1873],[\"1f468-1f3fc\",1874],[\"1f468-1f3fd\",1875],[\"1f468-1f3fe\",1876],[\"1f468-1f3ff\",1877],[\"1f469-1f3fb\",1878],[\"1f469-1f3fc\",1879],[\"1f469-1f3fd\",1880],[\"1f469-1f3fe\",1881],[\"1f469-1f3ff\",1882],[\"1f468-1f3fb\",1883],[\"1f468-1f3fc\",1884],[\"1f468-1f3fd\",1885],[\"1f468-1f3fe\",1886],[\"1f468-1f3ff\",1887],[\"1f469-1f3fb\",1888],[\"1f469-1f3fc\",1889],[\"1f469-1f3fd\",1890],[\"1f469-1f3fe\",1891],[\"1f469-1f3ff\",1892],[\"1f468-1f3fb\",1893],[\"1f468-1f3fc\",1894],[\"1f468-1f3fd\",1895],[\"1f468-1f3fe\",1896],[\"1f468-1f3ff\",1897],[\"1f469-1f3fb\",1898],[\"1f469-1f3fc\",1899],[\"1f469-1f3fd\",1900],[\"1f469-1f3fe\",1901],[\"1f469-1f3ff\",1902],[\"1f468-1f3fb\",1903],[\"1f468-1f3fc\",1904],[\"1f468-1f3fd\",1905],[\"1f468-1f3fe\",1906],[\"1f468-1f3ff\",1907],[\"1f469-1f3fb\",1908],[\"1f469-1f3fc\",1909],[\"1f469-1f3fd\",1910],[\"1f469-1f3fe\",1911],[\"1f469-1f3ff\",1912],[\"1f468-1f3fb\",1913],[\"1f468-1f3fc\",1914],[\"1f468-1f3fd\",1915],[\"1f468-1f3fe\",1916],[\"1f468-1f3ff\",1917],[\"1f469-1f3fb\",1918],[\"1f469-1f3fc\",1919],[\"1f469-1f3fd\",1920],[\"1f469-1f3fe\",1921],[\"1f469-1f3ff\",1922],[\"1f468-1f3fb\",1923],[\"1f468-1f3fc\",1924],[\"1f468-1f3fd\",1925],[\"1f468-1f3fe\",1926],[\"1f468-1f3ff\",1927],[\"1f936-1f3fb\",1928],[\"1f936-1f3fc\",1929],[\"1f936-1f3fd\",1930],[\"1f936-1f3fe\",1931],[\"1f936-1f3ff\",1932],[\"1f385-1f3fb\",1933],[\"1f385-1f3fc\",1934],[\"1f385-1f3fd\",1935],[\"1f385-1f3fe\",1936],[\"1f385-1f3ff\",1937],[\"1f478-1f3fb\",1938],[\"1f478-1f3fc\",1939],[\"1f478-1f3fd\",1940],[\"1f478-1f3fe\",1941],[\"1f478-1f3ff\",1942],[\"1f934-1f3fb\",1943],[\"1f934-1f3fc\",1944],[\"1f934-1f3fd\",1945],[\"1f934-1f3fe\",1946],[\"1f934-1f3ff\",1947],[\"1f470-1f3fb\",1948],[\"1f470-1f3fc\",1949],[\"1f470-1f3fd\",1950],[\"1f470-1f3fe\",1951],[\"1f470-1f3ff\",1952],[\"1f935-1f3fb\",1953],[\"1f935-1f3fc\",1954],[\"1f935-1f3fd\",1955],[\"1f935-1f3fe\",1956],[\"1f935-1f3ff\",1957],[\"1f47c-1f3fb\",1958],[\"1f47c-1f3fc\",1959],[\"1f47c-1f3fd\",1960],[\"1f47c-1f3fe\",1961],[\"1f47c-1f3ff\",1962],[\"1f930-1f3fb\",1963],[\"1f930-1f3fc\",1964],[\"1f930-1f3fd\",1965],[\"1f930-1f3fe\",1966],[\"1f930-1f3ff\",1967],[\"1f647-1f3fb\",1968],[\"1f647-1f3fc\",1969],[\"1f647-1f3fd\",1970],[\"1f647-1f3fe\",1971],[\"1f647-1f3ff\",1972],[\"1f647-1f3fb-200d-2640-fe0f\",1973],[\"1f647-1f3fc-200d-2640-fe0f\",1974],[\"1f647-1f3fd-200d-2640-fe0f\",1975],[\"1f647-1f3fe-200d-2640-fe0f\",1976],[\"1f647-1f3ff-200d-2640-fe0f\",1977],[\"1f647-1f3fb\",1978],[\"1f647-1f3fc\",1979],[\"1f647-1f3fd\",1980],[\"1f647-1f3fe\",1981],[\"1f647-1f3ff\",1982],[\"1f647-1f3fb-200d-2640-fe0f\",1983],[\"1f647-1f3fc-200d-2640-fe0f\",1984],[\"1f647-1f3fd-200d-2640-fe0f\",1985],[\"1f647-1f3fe-200d-2640-fe0f\",1986],[\"1f647-1f3ff-200d-2640-fe0f\",1987],[\"1f481-1f3fb\",1988],[\"1f481-1f3fc\",1989],[\"1f481-1f3fd\",1990],[\"1f481-1f3fe\",1991],[\"1f481-1f3ff\",1992],[\"1f481-1f3fb-200d-2640-fe0f\",1993],[\"1f481-1f3fc-200d-2640-fe0f\",1994],[\"1f481-1f3fd-200d-2640-fe0f\",1995],[\"1f481-1f3fe-200d-2640-fe0f\",1996],[\"1f481-1f3ff-200d-2640-fe0f\",1997],[\"1f481-1f3fb-200d-2642-fe0f\",1998],[\"1f481-1f3fc-200d-2642-fe0f\",1999],[\"1f481-1f3fd-200d-2642-fe0f\",2000],[\"1f481-1f3fe-200d-2642-fe0f\",2001],[\"1f481-1f3ff-200d-2642-fe0f\",2002],[\"1f645-1f3fb\",2003],[\"1f645-1f3fc\",2004],[\"1f645-1f3fd\",2005],[\"1f645-1f3fe\",2006],[\"1f645-1f3ff\",2007],[\"1f645-1f3fb-200d-2640-fe0f\",2008],[\"1f645-1f3fc-200d-2640-fe0f\",2009],[\"1f645-1f3fd-200d-2640-fe0f\",2010],[\"1f645-1f3fe-200d-2640-fe0f\",2011],[\"1f645-1f3ff-200d-2640-fe0f\",2012],[\"1f645-1f3fb-200d-2642-fe0f\",2013],[\"1f645-1f3fc-200d-2642-fe0f\",2014],[\"1f645-1f3fd-200d-2642-fe0f\",2015],[\"1f645-1f3fe-200d-2642-fe0f\",2016],[\"1f645-1f3ff-200d-2642-fe0f\",2017],[\"1f646-1f3fb\",2018],[\"1f646-1f3fc\",2019],[\"1f646-1f3fd\",2020],[\"1f646-1f3fe\",2021],[\"1f646-1f3ff\",2022],[\"1f646-1f3fb-200d-2640-fe0f\",2023],[\"1f646-1f3fc-200d-2640-fe0f\",2024],[\"1f646-1f3fd-200d-2640-fe0f\",2025],[\"1f646-1f3fe-200d-2640-fe0f\",2026],[\"1f646-1f3ff-200d-2640-fe0f\",2027],[\"1f646-1f3fb-200d-2642-fe0f\",2028],[\"1f646-1f3fc-200d-2642-fe0f\",2029],[\"1f646-1f3fd-200d-2642-fe0f\",2030],[\"1f646-1f3fe-200d-2642-fe0f\",2031],[\"1f646-1f3ff-200d-2642-fe0f\",2032],[\"1f64b-1f3fb\",2033],[\"1f64b-1f3fc\",2034],[\"1f64b-1f3fd\",2035],[\"1f64b-1f3fe\",2036],[\"1f64b-1f3ff\",2037],[\"1f64b-1f3fb-200d-2640-fe0f\",2038],[\"1f64b-1f3fc-200d-2640-fe0f\",2039],[\"1f64b-1f3fd-200d-2640-fe0f\",2040],[\"1f64b-1f3fe-200d-2640-fe0f\",2041],[\"1f64b-1f3ff-200d-2640-fe0f\",2042],[\"1f64b-1f3fb-200d-2642-fe0f\",2043],[\"1f64b-1f3fc-200d-2642-fe0f\",2044],[\"1f64b-1f3fd-200d-2642-fe0f\",2045],[\"1f64b-1f3fe-200d-2642-fe0f\",2046],[\"1f64b-1f3ff-200d-2642-fe0f\",2047],[\"1f926-1f3fb\",2048],[\"1f926-1f3fc\",2049],[\"1f926-1f3fd\",2050],[\"1f926-1f3fe\",2051],[\"1f926-1f3ff\",2052],[\"1f926-1f3fb-200d-2640-fe0f\",2053],[\"1f926-1f3fc-200d-2640-fe0f\",2054],[\"1f926-1f3fd-200d-2640-fe0f\",2055],[\"1f926-1f3fe-200d-2640-fe0f\",2056],[\"1f926-1f3ff-200d-2640-fe0f\",2057],[\"1f926-1f3fb-200d-2642-fe0f\",2058],[\"1f926-1f3fc-200d-2642-fe0f\",2059],[\"1f926-1f3fd-200d-2642-fe0f\",2060],[\"1f926-1f3fe-200d-2642-fe0f\",2061],[\"1f926-1f3ff-200d-2642-fe0f\",2062],[\"1f937-1f3fb\",2063],[\"1f937-1f3fc\",2064],[\"1f937-1f3fd\",2065],[\"1f937-1f3fe\",2066],[\"1f937-1f3ff\",2067],[\"1f937-1f3fb-200d-2640-fe0f\",2068],[\"1f937-1f3fc-200d-2640-fe0f\",2069],[\"1f937-1f3fd-200d-2640-fe0f\",2070],[\"1f937-1f3fe-200d-2640-fe0f\",2071],[\"1f937-1f3ff-200d-2640-fe0f\",2072],[\"1f937-1f3fb-200d-2642-fe0f\",2073],[\"1f937-1f3fc-200d-2642-fe0f\",2074],[\"1f937-1f3fd-200d-2642-fe0f\",2075],[\"1f937-1f3fe-200d-2642-fe0f\",2076],[\"1f937-1f3ff-200d-2642-fe0f\",2077],[\"1f64e-1f3fb\",2078],[\"1f64e-1f3fc\",2079],[\"1f64e-1f3fd\",2080],[\"1f64e-1f3fe\",2081],[\"1f64e-1f3ff\",2082],[\"1f64e-1f3fb-200d-2640-fe0f\",2083],[\"1f64e-1f3fc-200d-2640-fe0f\",2084],[\"1f64e-1f3fd-200d-2640-fe0f\",2085],[\"1f64e-1f3fe-200d-2640-fe0f\",2086],[\"1f64e-1f3ff-200d-2640-fe0f\",2087],[\"1f64e-1f3fb-200d-2642-fe0f\",2088],[\"1f64e-1f3fc-200d-2642-fe0f\",2089],[\"1f64e-1f3fd-200d-2642-fe0f\",2090],[\"1f64e-1f3fe-200d-2642-fe0f\",2091],[\"1f64e-1f3ff-200d-2642-fe0f\",2092],[\"1f64d-1f3fb\",2093],[\"1f64d-1f3fc\",2094],[\"1f64d-1f3fd\",2095],[\"1f64d-1f3fe\",2096],[\"1f64d-1f3ff\",2097],[\"1f64d-1f3fb-200d-2640-fe0f\",2098],[\"1f64d-1f3fc-200d-2640-fe0f\",2099],[\"1f64d-1f3fd-200d-2640-fe0f\",2100],[\"1f64d-1f3fe-200d-2640-fe0f\",2101],[\"1f64d-1f3ff-200d-2640-fe0f\",2102],[\"1f64d-1f3fb-200d-2642-fe0f\",2103],[\"1f64d-1f3fc-200d-2642-fe0f\",2104],[\"1f64d-1f3fd-200d-2642-fe0f\",2105],[\"1f64d-1f3fe-200d-2642-fe0f\",2106],[\"1f64d-1f3ff-200d-2642-fe0f\",2107],[\"1f487-1f3fb\",2108],[\"1f487-1f3fc\",2109],[\"1f487-1f3fd\",2110],[\"1f487-1f3fe\",2111],[\"1f487-1f3ff\",2112],[\"1f487-1f3fb-200d-2640-fe0f\",2113],[\"1f487-1f3fc-200d-2640-fe0f\",2114],[\"1f487-1f3fd-200d-2640-fe0f\",2115],[\"1f487-1f3fe-200d-2640-fe0f\",2116],[\"1f487-1f3ff-200d-2640-fe0f\",2117],[\"1f487-1f3fb-200d-2642-fe0f\",2118],[\"1f487-1f3fc-200d-2642-fe0f\",2119],[\"1f487-1f3fd-200d-2642-fe0f\",2120],[\"1f487-1f3fe-200d-2642-fe0f\",2121],[\"1f487-1f3ff-200d-2642-fe0f\",2122],[\"1f486-1f3fb\",2123],[\"1f486-1f3fc\",2124],[\"1f486-1f3fd\",2125],[\"1f486-1f3fe\",2126],[\"1f486-1f3ff\",2127],[\"1f486-1f3fb-200d-2640-fe0f\",2128],[\"1f486-1f3fc-200d-2640-fe0f\",2129],[\"1f486-1f3fd-200d-2640-fe0f\",2130],[\"1f486-1f3fe-200d-2640-fe0f\",2131],[\"1f486-1f3ff-200d-2640-fe0f\",2132],[\"1f486-1f3fb-200d-2642-fe0f\",2133],[\"1f486-1f3fc-200d-2642-fe0f\",2134],[\"1f486-1f3fd-200d-2642-fe0f\",2135],[\"1f486-1f3fe-200d-2642-fe0f\",2136],[\"1f486-1f3ff-200d-2642-fe0f\",2137],[\"1f574-1f3fb\",2138],[\"1f574-1f3fc\",2139],[\"1f574-1f3fd\",2140],[\"1f574-1f3fe\",2141],[\"1f574-1f3ff\",2142],[\"1f483-1f3fb\",2143],[\"1f483-1f3fc\",2144],[\"1f483-1f3fd\",2145],[\"1f483-1f3fe\",2146],[\"1f483-1f3ff\",2147],[\"1f57a-1f3fb\",2148],[\"1f57a-1f3fc\",2149],[\"1f57a-1f3fd\",2150],[\"1f57a-1f3fe\",2151],[\"1f57a-1f3ff\",2152],[\"1f6b6-1f3fb\",2153],[\"1f6b6-1f3fc\",2154],[\"1f6b6-1f3fd\",2155],[\"1f6b6-1f3fe\",2156],[\"1f6b6-1f3ff\",2157],[\"1f6b6-1f3fb-200d-2640-fe0f\",2158],[\"1f6b6-1f3fc-200d-2640-fe0f\",2159],[\"1f6b6-1f3fd-200d-2640-fe0f\",2160],[\"1f6b6-1f3fe-200d-2640-fe0f\",2161],[\"1f6b6-1f3ff-200d-2640-fe0f\",2162],[\"1f6b6-1f3fb\",2163],[\"1f6b6-1f3fc\",2164],[\"1f6b6-1f3fd\",2165],[\"1f6b6-1f3fe\",2166],[\"1f6b6-1f3ff\",2167],[\"1f6b6-1f3fb-200d-2640-fe0f\",2168],[\"1f6b6-1f3fc-200d-2640-fe0f\",2169],[\"1f6b6-1f3fd-200d-2640-fe0f\",2170],[\"1f6b6-1f3fe-200d-2640-fe0f\",2171],[\"1f6b6-1f3ff-200d-2640-fe0f\",2172],[\"1f3c3-1f3fb\",2173],[\"1f3c3-1f3fc\",2174],[\"1f3c3-1f3fd\",2175],[\"1f3c3-1f3fe\",2176],[\"1f3c3-1f3ff\",2177],[\"1f3c3-1f3fb-200d-2640-fe0f\",2178],[\"1f3c3-1f3fc-200d-2640-fe0f\",2179],[\"1f3c3-1f3fd-200d-2640-fe0f\",2180],[\"1f3c3-1f3fe-200d-2640-fe0f\",2181],[\"1f3c3-1f3ff-200d-2640-fe0f\",2182],[\"1f3c3-1f3fb\",2183],[\"1f3c3-1f3fc\",2184],[\"1f3c3-1f3fd\",2185],[\"1f3c3-1f3fe\",2186],[\"1f3c3-1f3ff\",2187],[\"1f3c3-1f3fb-200d-2640-fe0f\",2188],[\"1f3c3-1f3fc-200d-2640-fe0f\",2189],[\"1f3c3-1f3fd-200d-2640-fe0f\",2190],[\"1f3c3-1f3fe-200d-2640-fe0f\",2191],[\"1f3c3-1f3ff-200d-2640-fe0f\",2192],[\"1f469-1f3fb\",2193],[\"1f469-1f3fc\",2194],[\"1f469-1f3fd\",2195],[\"1f469-1f3fe\",2196],[\"1f469-1f3ff\",2197],[\"1f468-1f3fb\",2198],[\"1f468-1f3fc\",2199],[\"1f468-1f3fd\",2200],[\"1f468-1f3fe\",2201],[\"1f468-1f3ff\",2202],[\"1f469-1f3fb\",2203],[\"1f469-1f3fc\",2204],[\"1f469-1f3fd\",2205],[\"1f469-1f3fe\",2206],[\"1f469-1f3ff\",2207],[\"1f468-1f3fb\",2208],[\"1f468-1f3fc\",2209],[\"1f468-1f3fd\",2210],[\"1f468-1f3fe\",2211],[\"1f468-1f3ff\",2212],[\"1f468-1f3fb\",2213],[\"1f468-1f3fc\",2214],[\"1f468-1f3fd\",2215],[\"1f468-1f3fe\",2216],[\"1f468-1f3ff\",2217],[\"1f468-1f3fb\",2218],[\"1f468-1f3fc\",2219],[\"1f468-1f3fd\",2220],[\"1f468-1f3fe\",2221],[\"1f468-1f3ff\",2222],[\"1f468-1f3fb\",2223],[\"1f468-1f3fc\",2224],[\"1f468-1f3fd\",2225],[\"1f468-1f3fe\",2226],[\"1f468-1f3ff\",2227],[\"1f468-1f3fb\",2228],[\"1f468-1f3fc\",2229],[\"1f468-1f3fd\",2230],[\"1f468-1f3fe\",2231],[\"1f468-1f3ff\",2232],[\"1f469-1f3fb\",2233],[\"1f469-1f3fc\",2234],[\"1f469-1f3fd\",2235],[\"1f469-1f3fe\",2236],[\"1f469-1f3ff\",2237],[\"1f469-1f3fb\",2238],[\"1f469-1f3fc\",2239],[\"1f469-1f3fd\",2240],[\"1f469-1f3fe\",2241],[\"1f469-1f3ff\",2242],[\"1f469-1f3fb\",2243],[\"1f469-1f3fc\",2244],[\"1f469-1f3fd\",2245],[\"1f469-1f3fe\",2246],[\"1f469-1f3ff\",2247],[\"1f469-1f3fb\",2248],[\"1f469-1f3fc\",2249],[\"1f469-1f3fd\",2250],[\"1f469-1f3fe\",2251],[\"1f469-1f3ff\",2252],[\"1f469-1f3fb\",2253],[\"1f469-1f3fc\",2254],[\"1f469-1f3fd\",2255],[\"1f469-1f3fe\",2256],[\"1f469-1f3ff\",2257],[\"1f468-1f3fb\",2258],[\"1f468-1f3fc\",2259],[\"1f468-1f3fd\",2260],[\"1f468-1f3fe\",2261],[\"1f468-1f3ff\",2262],[\"1f468-1f3fb\",2263],[\"1f468-1f3fc\",2264],[\"1f468-1f3fd\",2265],[\"1f468-1f3fe\",2266],[\"1f468-1f3ff\",2267],[\"1f468-1f3fb\",2268],[\"1f468-1f3fc\",2269],[\"1f468-1f3fd\",2270],[\"1f468-1f3fe\",2271],[\"1f468-1f3ff\",2272],[\"1f468-1f3fb\",2273],[\"1f468-1f3fc\",2274],[\"1f468-1f3fd\",2275],[\"1f468-1f3fe\",2276],[\"1f468-1f3ff\",2277],[\"1f468-1f3fb\",2278],[\"1f468-1f3fc\",2279],[\"1f468-1f3fd\",2280],[\"1f468-1f3fe\",2281],[\"1f468-1f3ff\",2282],[\"1f469-1f3fb\",2283],[\"1f469-1f3fc\",2284],[\"1f469-1f3fd\",2285],[\"1f469-1f3fe\",2286],[\"1f469-1f3ff\",2287],[\"1f469-1f3fb\",2288],[\"1f469-1f3fc\",2289],[\"1f469-1f3fd\",2290],[\"1f469-1f3fe\",2291],[\"1f469-1f3ff\",2292],[\"1f469-1f3fb\",2293],[\"1f469-1f3fc\",2294],[\"1f469-1f3fd\",2295],[\"1f469-1f3fe\",2296],[\"1f469-1f3ff\",2297],[\"1f469-1f3fb\",2298],[\"1f469-1f3fc\",2299],[\"1f469-1f3fd\",2300],[\"1f469-1f3fe\",2301],[\"1f469-1f3ff\",2302],[\"1f469-1f3fb\",2303],[\"1f469-1f3fc\",2304],[\"1f469-1f3fd\",2305],[\"1f469-1f3fe\",2306],[\"1f469-1f3ff\",2307],[\"1f468-1f3fb\",2308],[\"1f468-1f3fc\",2309],[\"1f468-1f3fd\",2310],[\"1f468-1f3fe\",2311],[\"1f468-1f3ff\",2312],[\"1f468-1f3fb\",2313],[\"1f468-1f3fc\",2314],[\"1f468-1f3fd\",2315],[\"1f468-1f3fe\",2316],[\"1f468-1f3ff\",2317],[\"1f468-1f3fb\",2318],[\"1f468-1f3fc\",2319],[\"1f468-1f3fd\",2320],[\"1f468-1f3fe\",2321],[\"1f468-1f3ff\",2322],[\"1f468-1f3fb\",2323],[\"1f468-1f3fc\",2324],[\"1f468-1f3fd\",2325],[\"1f468-1f3fe\",2326],[\"1f468-1f3ff\",2327],[\"1f468-1f3fb\",2328],[\"1f468-1f3fc\",2329],[\"1f468-1f3fd\",2330],[\"1f468-1f3fe\",2331],[\"1f468-1f3ff\",2332],[\"1f3cb-1f3fb\",2333],[\"1f3cb-1f3fc\",2334],[\"1f3cb-1f3fd\",2335],[\"1f3cb-1f3fe\",2336],[\"1f3cb-1f3ff\",2337],[\"1f3cb-1f3fb-200d-2640-fe0f\",2338],[\"1f3cb-1f3fc-200d-2640-fe0f\",2339],[\"1f3cb-1f3fd-200d-2640-fe0f\",2340],[\"1f3cb-1f3fe-200d-2640-fe0f\",2341],[\"1f3cb-1f3ff-200d-2640-fe0f\",2342],[\"1f3cb-1f3fb\",2343],[\"1f3cb-1f3fc\",2344],[\"1f3cb-1f3fd\",2345],[\"1f3cb-1f3fe\",2346],[\"1f3cb-1f3ff\",2347],[\"1f3cb-1f3fb-200d-2640-fe0f\",2348],[\"1f3cb-1f3fc-200d-2640-fe0f\",2349],[\"1f3cb-1f3fd-200d-2640-fe0f\",2350],[\"1f3cb-1f3fe-200d-2640-fe0f\",2351],[\"1f3cb-1f3ff-200d-2640-fe0f\",2352],[\"1f938-1f3fb\",2353],[\"1f938-1f3fc\",2354],[\"1f938-1f3fd\",2355],[\"1f938-1f3fe\",2356],[\"1f938-1f3ff\",2357],[\"1f938-1f3fb-200d-2640-fe0f\",2358],[\"1f938-1f3fc-200d-2640-fe0f\",2359],[\"1f938-1f3fd-200d-2640-fe0f\",2360],[\"1f938-1f3fe-200d-2640-fe0f\",2361],[\"1f938-1f3ff-200d-2640-fe0f\",2362],[\"1f938-1f3fb-200d-2642-fe0f\",2363],[\"1f938-1f3fc-200d-2642-fe0f\",2364],[\"1f938-1f3fd-200d-2642-fe0f\",2365],[\"1f938-1f3fe-200d-2642-fe0f\",2366],[\"1f938-1f3ff-200d-2642-fe0f\",2367],[\"26f9-1f3fb\",2368],[\"26f9-1f3fc\",2369],[\"26f9-1f3fd\",2370],[\"26f9-1f3fe\",2371],[\"26f9-1f3ff\",2372],[\"26f9-1f3fb-200d-2640-fe0f\",2373],[\"26f9-1f3fc-200d-2640-fe0f\",2374],[\"26f9-1f3fd-200d-2640-fe0f\",2375],[\"26f9-1f3fe-200d-2640-fe0f\",2376],[\"26f9-1f3ff-200d-2640-fe0f\",2377],[\"26f9-1f3fb\",2378],[\"26f9-1f3fc\",2379],[\"26f9-1f3fd\",2380],[\"26f9-1f3fe\",2381],[\"26f9-1f3ff\",2382],[\"26f9-1f3fb-200d-2640-fe0f\",2383],[\"26f9-1f3fc-200d-2640-fe0f\",2384],[\"26f9-1f3fd-200d-2640-fe0f\",2385],[\"26f9-1f3fe-200d-2640-fe0f\",2386],[\"26f9-1f3ff-200d-2640-fe0f\",2387],[\"1f93e-1f3fb\",2388],[\"1f93e-1f3fc\",2389],[\"1f93e-1f3fd\",2390],[\"1f93e-1f3fe\",2391],[\"1f93e-1f3ff\",2392],[\"1f93e-1f3fb-200d-2640-fe0f\",2393],[\"1f93e-1f3fc-200d-2640-fe0f\",2394],[\"1f93e-1f3fd-200d-2640-fe0f\",2395],[\"1f93e-1f3fe-200d-2640-fe0f\",2396],[\"1f93e-1f3ff-200d-2640-fe0f\",2397],[\"1f93e-1f3fb-200d-2642-fe0f\",2398],[\"1f93e-1f3fc-200d-2642-fe0f\",2399],[\"1f93e-1f3fd-200d-2642-fe0f\",2400],[\"1f93e-1f3fe-200d-2642-fe0f\",2401],[\"1f93e-1f3ff-200d-2642-fe0f\",2402],[\"1f3cc-1f3fb\",2403],[\"1f3cc-1f3fc\",2404],[\"1f3cc-1f3fd\",2405],[\"1f3cc-1f3fe\",2406],[\"1f3cc-1f3ff\",2407],[\"1f3cc-1f3fb-200d-2640-fe0f\",2408],[\"1f3cc-1f3fc-200d-2640-fe0f\",2409],[\"1f3cc-1f3fd-200d-2640-fe0f\",2410],[\"1f3cc-1f3fe-200d-2640-fe0f\",2411],[\"1f3cc-1f3ff-200d-2640-fe0f\",2412],[\"1f3cc-1f3fb\",2413],[\"1f3cc-1f3fc\",2414],[\"1f3cc-1f3fd\",2415],[\"1f3cc-1f3fe\",2416],[\"1f3cc-1f3ff\",2417],[\"1f3cc-1f3fb-200d-2640-fe0f\",2418],[\"1f3cc-1f3fc-200d-2640-fe0f\",2419],[\"1f3cc-1f3fd-200d-2640-fe0f\",2420],[\"1f3cc-1f3fe-200d-2640-fe0f\",2421],[\"1f3cc-1f3ff-200d-2640-fe0f\",2422],[\"1f3c4-1f3fb\",2423],[\"1f3c4-1f3fc\",2424],[\"1f3c4-1f3fd\",2425],[\"1f3c4-1f3fe\",2426],[\"1f3c4-1f3ff\",2427],[\"1f3c4-1f3fb-200d-2640-fe0f\",2428],[\"1f3c4-1f3fc-200d-2640-fe0f\",2429],[\"1f3c4-1f3fd-200d-2640-fe0f\",2430],[\"1f3c4-1f3fe-200d-2640-fe0f\",2431],[\"1f3c4-1f3ff-200d-2640-fe0f\",2432],[\"1f3c4-1f3fb\",2433],[\"1f3c4-1f3fc\",2434],[\"1f3c4-1f3fd\",2435],[\"1f3c4-1f3fe\",2436],[\"1f3c4-1f3ff\",2437],[\"1f3c4-1f3fb-200d-2640-fe0f\",2438],[\"1f3c4-1f3fc-200d-2640-fe0f\",2439],[\"1f3c4-1f3fd-200d-2640-fe0f\",2440],[\"1f3c4-1f3fe-200d-2640-fe0f\",2441],[\"1f3c4-1f3ff-200d-2640-fe0f\",2442],[\"1f3ca-1f3fb\",2443],[\"1f3ca-1f3fc\",2444],[\"1f3ca-1f3fd\",2445],[\"1f3ca-1f3fe\",2446],[\"1f3ca-1f3ff\",2447],[\"1f3ca-1f3fb-200d-2640-fe0f\",2448],[\"1f3ca-1f3fc-200d-2640-fe0f\",2449],[\"1f3ca-1f3fd-200d-2640-fe0f\",2450],[\"1f3ca-1f3fe-200d-2640-fe0f\",2451],[\"1f3ca-1f3ff-200d-2640-fe0f\",2452],[\"1f3ca-1f3fb\",2453],[\"1f3ca-1f3fc\",2454],[\"1f3ca-1f3fd\",2455],[\"1f3ca-1f3fe\",2456],[\"1f3ca-1f3ff\",2457],[\"1f3ca-1f3fb-200d-2640-fe0f\",2458],[\"1f3ca-1f3fc-200d-2640-fe0f\",2459],[\"1f3ca-1f3fd-200d-2640-fe0f\",2460],[\"1f3ca-1f3fe-200d-2640-fe0f\",2461],[\"1f3ca-1f3ff-200d-2640-fe0f\",2462],[\"1f93d-1f3fb\",2463],[\"1f93d-1f3fc\",2464],[\"1f93d-1f3fd\",2465],[\"1f93d-1f3fe\",2466],[\"1f93d-1f3ff\",2467],[\"1f93d-1f3fb-200d-2640-fe0f\",2468],[\"1f93d-1f3fc-200d-2640-fe0f\",2469],[\"1f93d-1f3fd-200d-2640-fe0f\",2470],[\"1f93d-1f3fe-200d-2640-fe0f\",2471],[\"1f93d-1f3ff-200d-2640-fe0f\",2472],[\"1f93d-1f3fb-200d-2642-fe0f\",2473],[\"1f93d-1f3fc-200d-2642-fe0f\",2474],[\"1f93d-1f3fd-200d-2642-fe0f\",2475],[\"1f93d-1f3fe-200d-2642-fe0f\",2476],[\"1f93d-1f3ff-200d-2642-fe0f\",2477],[\"1f6a3-1f3fb\",2478],[\"1f6a3-1f3fc\",2479],[\"1f6a3-1f3fd\",2480],[\"1f6a3-1f3fe\",2481],[\"1f6a3-1f3ff\",2482],[\"1f6a3-1f3fb-200d-2640-fe0f\",2483],[\"1f6a3-1f3fc-200d-2640-fe0f\",2484],[\"1f6a3-1f3fd-200d-2640-fe0f\",2485],[\"1f6a3-1f3fe-200d-2640-fe0f\",2486],[\"1f6a3-1f3ff-200d-2640-fe0f\",2487],[\"1f6a3-1f3fb\",2488],[\"1f6a3-1f3fc\",2489],[\"1f6a3-1f3fd\",2490],[\"1f6a3-1f3fe\",2491],[\"1f6a3-1f3ff\",2492],[\"1f6a3-1f3fb-200d-2640-fe0f\",2493],[\"1f6a3-1f3fc-200d-2640-fe0f\",2494],[\"1f6a3-1f3fd-200d-2640-fe0f\",2495],[\"1f6a3-1f3fe-200d-2640-fe0f\",2496],[\"1f6a3-1f3ff-200d-2640-fe0f\",2497],[\"1f3c7-1f3fb\",2498],[\"1f3c7-1f3fc\",2499],[\"1f3c7-1f3fd\",2500],[\"1f3c7-1f3fe\",2501],[\"1f3c7-1f3ff\",2502],[\"1f6b4-1f3fb\",2503],[\"1f6b4-1f3fc\",2504],[\"1f6b4-1f3fd\",2505],[\"1f6b4-1f3fe\",2506],[\"1f6b4-1f3ff\",2507],[\"1f6b4-1f3fb-200d-2640-fe0f\",2508],[\"1f6b4-1f3fc-200d-2640-fe0f\",2509],[\"1f6b4-1f3fd-200d-2640-fe0f\",2510],[\"1f6b4-1f3fe-200d-2640-fe0f\",2511],[\"1f6b4-1f3ff-200d-2640-fe0f\",2512],[\"1f6b4-1f3fb\",2513],[\"1f6b4-1f3fc\",2514],[\"1f6b4-1f3fd\",2515],[\"1f6b4-1f3fe\",2516],[\"1f6b4-1f3ff\",2517],[\"1f6b4-1f3fb-200d-2640-fe0f\",2518],[\"1f6b4-1f3fc-200d-2640-fe0f\",2519],[\"1f6b4-1f3fd-200d-2640-fe0f\",2520],[\"1f6b4-1f3fe-200d-2640-fe0f\",2521],[\"1f6b4-1f3ff-200d-2640-fe0f\",2522],[\"1f6b5-1f3fb\",2523],[\"1f6b5-1f3fc\",2524],[\"1f6b5-1f3fd\",2525],[\"1f6b5-1f3fe\",2526],[\"1f6b5-1f3ff\",2527],[\"1f6b5-1f3fb-200d-2640-fe0f\",2528],[\"1f6b5-1f3fc-200d-2640-fe0f\",2529],[\"1f6b5-1f3fd-200d-2640-fe0f\",2530],[\"1f6b5-1f3fe-200d-2640-fe0f\",2531],[\"1f6b5-1f3ff-200d-2640-fe0f\",2532],[\"1f6b5-1f3fb\",2533],[\"1f6b5-1f3fc\",2534],[\"1f6b5-1f3fd\",2535],[\"1f6b5-1f3fe\",2536],[\"1f6b5-1f3ff\",2537],[\"1f6b5-1f3fb-200d-2640-fe0f\",2538],[\"1f6b5-1f3fc-200d-2640-fe0f\",2539],[\"1f6b5-1f3fd-200d-2640-fe0f\",2540],[\"1f6b5-1f3fe-200d-2640-fe0f\",2541],[\"1f6b5-1f3ff-200d-2640-fe0f\",2542],[\"1f939-1f3fb\",2543],[\"1f939-1f3fc\",2544],[\"1f939-1f3fd\",2545],[\"1f939-1f3fe\",2546],[\"1f939-1f3ff\",2547],[\"1f939-1f3fb-200d-2640-fe0f\",2548],[\"1f939-1f3fc-200d-2640-fe0f\",2549],[\"1f939-1f3fd-200d-2640-fe0f\",2550],[\"1f939-1f3fe-200d-2640-fe0f\",2551],[\"1f939-1f3ff-200d-2640-fe0f\",2552],[\"1f939-1f3fb-200d-2642-fe0f\",2553],[\"1f939-1f3fc-200d-2642-fe0f\",2554],[\"1f939-1f3fd-200d-2642-fe0f\",2555],[\"1f939-1f3fe-200d-2642-fe0f\",2556],[\"1f939-1f3ff-200d-2642-fe0f\",2557],[\"1f6c0-1f3fb\",2558],[\"1f6c0-1f3fc\",2559],[\"1f6c0-1f3fd\",2560],[\"1f6c0-1f3fe\",2561],[\"1f6c0-1f3ff\",2562]]);\n\nexport const CategoryNames = [\"people\",\"nature\",\"foods\",\"activity\",\"places\",\"objects\",\"symbols\",\"flags\",\"custom\",\"skintone\"];\n\nexport const EmojiIndicesByCategory = new Map([[\"people\",[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290]],[\"nature\",[291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449]],[\"foods\",[450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535]],[\"activity\",[536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615]],[\"places\",[616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734]],[\"objects\",[735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907]],[\"symbols\",[908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178]],[\"flags\",[1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1328,1329,1330,1331,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362,1363,1364,1365,1366,1367,1368,1369,1370,1371,1372,1373,1374,1375,1376,1377,1378,1379,1380,1381,1382,1383,1384,1385,1386,1387,1388,1389,1390,1391,1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406,1407,1408,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429,1430,1431]],[\"custom\",[1432,1433,1434,1435,1436,1437,1438,1439,1440,1441,1442,1443,1444,1445,1446,1447]],[\"skintone\",[1448,1449,1450,1451,1452,1453,1454,1455,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1476,1477,1478,1479,1480,1481,1482,1483,1484,1485,1486,1487,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,1515,1516,1517,1518,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1549,1550,1551,1552,1553,1554,1555,1556,1557,1558,1559,1560,1561,1562,1563,1564,1565,1566,1567,1568,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,1595,1596,1597,1598,1599,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,1619,1620,1621,1622,1623,1624,1625,1626,1627,1628,1629,1630,1631,1632,1633,1634,1635,1636,1637,1638,1639,1640,1641,1642,1643,1644,1645,1646,1647,1648,1649,1650,1651,1652,1653,1654,1655,1656,1657,1658,1659,1660,1661,1662,1663,1664,1665,1666,1667,1668,1669,1670,1671,1672,1673,1674,1675,1676,1677,1678,1679,1680,1681,1682,1683,1684,1685,1686,1687,1688,1689,1690,1691,1692,1693,1694,1695,1696,1697,1698,1699,1700,1701,1702,1703,1704,1705,1706,1707,1708,1709,1710,1711,1712,1713,1714,1715,1716,1717,1718,1719,1720,1721,1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740,1741,1742,1743,1744,1745,1746,1747,1748,1749,1750,1751,1752,1753,1754,1755,1756,1757,1758,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1769,1770,1771,1772,1773,1774,1775,1776,1777,1778,1779,1780,1781,1782,1783,1784,1785,1786,1787,1788,1789,1790,1791,1792,1793,1794,1795,1796,1797,1798,1799,1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,2118,2119,2120,2121,2122,2123,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134,2135,2136,2137,2138,2139,2140,2141,2142,2143,2144,2145,2146,2147,2148,2149,2150,2151,2152,2153,2154,2155,2156,2157,2158,2159,2160,2161,2162,2163,2164,2165,2166,2167,2168,2169,2170,2171,2172,2173,2174,2175,2176,2177,2178,2179,2180,2181,2182,2183,2184,2185,2186,2187,2188,2189,2190,2191,2192,2193,2194,2195,2196,2197,2198,2199,2200,2201,2202,2203,2204,2205,2206,2207,2208,2209,2210,2211,2212,2213,2214,2215,2216,2217,2218,2219,2220,2221,2222,2223,2224,2225,2226,2227,2228,2229,2230,2231,2232,2233,2234,2235,2236,2237,2238,2239,2240,2241,2242,2243,2244,2245,2246,2247,2248,2249,2250,2251,2252,2253,2254,2255,2256,2257,2258,2259,2260,2261,2262,2263,2264,2265,2266,2267,2268,2269,2270,2271,2272,2273,2274,2275,2276,2277,2278,2279,2280,2281,2282,2283,2284,2285,2286,2287,2288,2289,2290,2291,2292,2293,2294,2295,2296,2297,2298,2299,2300,2301,2302,2303,2304,2305,2306,2307,2308,2309,2310,2311,2312,2313,2314,2315,2316,2317,2318,2319,2320,2321,2322,2323,2324,2325,2326,2327,2328,2329,2330,2331,2332,2333,2334,2335,2336,2337,2338,2339,2340,2341,2342,2343,2344,2345,2346,2347,2348,2349,2350,2351,2352,2353,2354,2355,2356,2357,2358,2359,2360,2361,2362,2363,2364,2365,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2384,2385,2386,2387,2388,2389,2390,2391,2392,2393,2394,2395,2396,2397,2398,2399,2400,2401,2402,2403,2404,2405,2406,2407,2408,2409,2410,2411,2412,2413,2414,2415,2416,2417,2418,2419,2420,2421,2422,2423,2424,2425,2426,2427,2428,2429,2430,2431,2432,2433,2434,2435,2436,2437,2438,2439,2440,2441,2442,2443,2444,2445,2446,2447,2448,2449,2450,2451,2452,2453,2454,2455,2456,2457,2458,2459,2460,2461,2462,2463,2464,2465,2466,2467,2468,2469,2470,2471,2472,2473,2474,2475,2476,2477,2478,2479,2480,2481,2482,2483,2484,2485,2486,2487,2488,2489,2490,2491,2492,2493,2494,2495,2496,2497,2498,2499,2500,2501,2502,2503,2504,2505,2506,2507,2508,2509,2510,2511,2512,2513,2514,2515,2516,2517,2518,2519,2520,2521,2522,2523,2524,2525,2526,2527,2528,2529,2530,2531,2532,2533,2534,2535,2536,2537,2538,2539,2540,2541,2542,2543,2544,2545,2546,2547,2548,2549,2550,2551,2552,2553,2554,2555,2556,2557,2558,2559,2560,2561,2562]]]);\n\n/* eslint-enable */","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport * as EmojiActions from 'mattermost-redux/actions/emojis';\n\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport store from 'stores/redux_store.jsx';\nimport {setGlobalItem} from 'actions/storage';\nimport {getEmojiMap, getRecentEmojis} from 'selectors/emojis';\n\nimport {ActionTypes, Constants} from 'utils/constants.jsx';\n\nexport async function addEmoji(emoji, image, success, error) {\n    const {data, error: err} = await EmojiActions.createCustomEmoji(emoji, image)(store.dispatch, store.getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function deleteEmoji(emojiId, success, error) {\n    const {data, error: err} = await EmojiActions.deleteCustomEmoji(emojiId)(store.dispatch, store.getState);\n    if (data) {\n        // Needed to remove recently used emoji\n        AppDispatcher.handleServerAction({\n            type: ActionTypes.REMOVED_CUSTOM_EMOJI,\n            id: emojiId,\n        });\n\n        if (success) {\n            success(data);\n        }\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport function loadRecentlyUsedCustomEmojis() {\n    return async (dispatch, getState) => {\n        if (getState().entities.general.config.EnableCustomEmoji !== 'true') {\n            return {data: true};\n        }\n\n        const recentEmojis = getRecentEmojis(getState());\n        const emojiMap = getEmojiMap(getState());\n        const missingEmojis = recentEmojis.filter((name) => !emojiMap.has(name));\n\n        missingEmojis.forEach((name) => {\n            EmojiActions.getCustomEmojiByName(name)(dispatch, getState);\n        });\n\n        return {data: true};\n    };\n}\n\nexport function incrementEmojiPickerPage() {\n    return async (dispatch) => {\n        dispatch({\n            type: ActionTypes.INCREMENT_EMOJI_PICKER_PAGE,\n        });\n\n        return {data: true};\n    };\n}\n\nconst MAXIMUM_RECENT_EMOJI = 27;\n\nexport function addRecentEmoji(alias) {\n    return (dispatch, getState) => {\n        const recentEmojis = getRecentEmojis(getState());\n        const emojiMap = getEmojiMap(getState());\n\n        let name;\n        const emoji = emojiMap.get(alias);\n        if (!emoji) {\n            return;\n        } else if (emoji.name) {\n            name = emoji.name;\n        } else {\n            name = emoji.aliases[0];\n        }\n\n        const index = recentEmojis.indexOf(name);\n        if (index !== -1) {\n            recentEmojis.splice(index, 1);\n        }\n\n        recentEmojis.push(name);\n\n        if (recentEmojis.length > MAXIMUM_RECENT_EMOJI) {\n            recentEmojis.splice(0, recentEmojis.length - MAXIMUM_RECENT_EMOJI);\n        }\n\n        dispatch(setGlobalItem(Constants.RECENT_EMOJI_KEY, JSON.stringify(recentEmojis)));\n    };\n}","module.exports = __webpack_public_path__ + \"files/2fa6596aad29c297fc7429aac6f17073.png\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {ActionTypes} from 'utils/constants.jsx';\n\nexport const toggle = () => (dispatch) => dispatch({\n    type: ActionTypes.TOGGLE_LHS,\n});\n\nexport const open = () => (dispatch) => dispatch({\n    type: ActionTypes.OPEN_LHS,\n});\n\nexport const close = () => (dispatch) => dispatch({\n    type: ActionTypes.CLOSE_LHS,\n});\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {Constants} from 'utils/constants.jsx';\n\nconst getPreviousTeamIdKey = (userId) => ['user_prev_team', userId].join(':');\nconst getPreviousChannelNameKey = (userId, teamId) => ['user_team_prev_channel', userId, teamId].join(':');\nconst getPenultimateChannelNameKey = (userId, teamId) => ['user_team_penultimate_channel', userId, teamId].join(':');\n\n// LocalStorageStore exposes an interface for accessing entries in the localStorage.\n//\n// Note that this excludes keys managed by redux-persist. The latter cannot currently be used for\n// key/value storage that persists beyond logout. Ideally, we could purge all but certain parts\n// of the Redux store so as to allow them to be used on re-login.\nclass LocalStorageStoreClass {\n    getPreviousChannelName(userId, teamId) {\n        return localStorage.getItem(getPreviousChannelNameKey(userId, teamId)) || Constants.DEFAULT_CHANNEL;\n    }\n\n    setPreviousChannelName(userId, teamId, channelName) {\n        localStorage.setItem(getPreviousChannelNameKey(userId, teamId), channelName);\n    }\n\n    getPenultimateChannelName(userId, teamId) {\n        return localStorage.getItem(getPenultimateChannelNameKey(userId, teamId)) || Constants.DEFAULT_CHANNEL;\n    }\n\n    setPenultimateChannelName(userId, teamId, channelName) {\n        localStorage.setItem(getPenultimateChannelNameKey(userId, teamId), channelName);\n    }\n\n    getPreviousTeamId(userId) {\n        return localStorage.getItem(getPreviousTeamIdKey(userId));\n    }\n\n    setPreviousTeamId(userId, teamId) {\n        localStorage.setItem(getPreviousTeamIdKey(userId), teamId);\n    }\n\n    setWasLoggedIn(wasLoggedIn) {\n        if (wasLoggedIn) {\n            localStorage.setItem('was_logged_in', 'true');\n        } else {\n            localStorage.setItem('was_logged_in', 'false');\n        }\n    }\n\n    getWasLoggedIn() {\n        return localStorage.getItem('was_logged_in') === 'true';\n    }\n}\n\nconst LocalStorageStore = new LocalStorageStoreClass();\n\nexport default LocalStorageStore;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\n// Use when sorting multiple teams by their `display_name` field\nfunction compareTeamsByDisplayName(locale, a, b) {\n    if (a.display_name !== b.display_name) {\n        return a.display_name.localeCompare(b.display_name, locale, {numeric: true});\n    }\n\n    return a.name.localeCompare(b.name, locale, {numeric: true});\n}\n\n// Use to filter out teams that are deleted and without display_name, then sort by their `display_name` field\nexport function filterAndSortTeamsByDisplayName(teams, locale) {\n    if (!teams) {\n        return [];\n    }\n\n    return teams.filter((team) => {\n        return team && !team.delete_at > 0 && team.display_name != null;\n    }).sort((a, b) => {\n        return compareTeamsByDisplayName(locale, a, b);\n    });\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nexport function getNavigationBlocked(state) {\n    return state.views.admin.navigationBlock.blocked;\n}\n\nexport function showNavigationPrompt(state) {\n    return state.views.admin.navigationBlock.showNavigationPrompt;\n}\n\nexport function getOnNavigationConfirmed(state) {\n    return state.views.admin.navigationBlock.onNavigationConfirmed;\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class ModalToggleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.show = this.show.bind(this);\n        this.hide = this.hide.bind(this);\n\n        this.state = {\n            show: false,\n        };\n    }\n\n    show(e) {\n        if (e) {\n            e.preventDefault();\n        }\n        this.setState({show: true});\n    }\n\n    hide() {\n        this.setState({show: false});\n    }\n\n    render() {\n        const {children, dialogType, dialogProps, onClick, ...props} = this.props;\n\n        // allow callers to provide an onClick which will be called before the modal is shown\n        let clickHandler = this.show;\n        if (onClick) {\n            clickHandler = (e) => {\n                onClick();\n\n                this.show(e);\n            };\n        }\n\n        let dialog;\n        if (this.state.show) {\n            // this assumes that all modals will have an onHide event and will show when mounted\n            dialog = React.createElement(dialogType, Object.assign({}, dialogProps, {\n                onHide: () => {\n                    this.hide();\n\n                    if (dialogProps.onHide) {\n                        dialogProps.onHide();\n                    }\n                },\n            }));\n        }\n\n        // nesting the dialog in the anchor tag looks like it shouldn't work, but it does due to how react-bootstrap\n        // renders modals at the top level of the DOM instead of where you specify in the virtual DOM\n        return (\n            <button\n                {...props}\n                className={'style--none ' + props.className}\n                onClick={clickHandler}\n            >\n                {children}\n                {dialog}\n            </button>\n        );\n    }\n}\n\nModalToggleButton.propTypes = {\n    children: PropTypes.node.isRequired,\n    dialogType: PropTypes.func.isRequired,\n    dialogProps: PropTypes.object,\n    onClick: PropTypes.func,\n    className: PropTypes.string,\n};\n\nModalToggleButton.defaultProps = {\n    dialogProps: {},\n    className: '',\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class LatexBlock extends React.Component {\n    static propTypes = {\n        content: PropTypes.string.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            katex: null,\n        };\n    }\n\n    componentDidMount() {\n        import('katex').then((katex) => {\n            this.setState({katex});\n        });\n    }\n\n    render() {\n        if (this.state.katex == null) {\n            return (\n                <div\n                    className='post-body--code tex'\n                >\n                    {this.props.content}\n                </div>\n            );\n        }\n\n        try {\n            const html = this.state.katex.renderToString(this.props.content, {throwOnError: false, displayMode: true});\n\n            return (\n                <div\n                    className='post-body--code tex'\n                    dangerouslySetInnerHTML={{__html: html}}\n                />\n            );\n        } catch (e) {\n            return (\n                <div\n                    className='post-body--code tex'\n                >\n                    <FormattedMessage\n                        id='katex.error'\n                        defaultMessage=\"Couldn't compile your Latex code. Please review the syntax and try again.\"\n                    />\n                </div>\n            );\n        }\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst WAIT_FOR_HEIGHT_TIMEOUT = 100;\n\nexport default class MarkdownImage extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * The href of the image to be loaded\n         */\n        href: PropTypes.string,\n\n        /*\n         * A callback that is called as soon as the image component has a height value\n         */\n        onHeightReceived: PropTypes.func,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.heightTimeout = 0;\n    }\n\n    componentDidMount() {\n        this.waitForHeight();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.href !== prevProps.href) {\n            this.waitForHeight();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopWaitingForHeight();\n    }\n\n    waitForHeight = () => {\n        if (this.refs.image.height) {\n            if (this.props.onHeightReceived) {\n                this.props.onHeightReceived(this.refs.image.height);\n            }\n\n            this.heightTimeout = 0;\n        } else {\n            this.heightTimeout = setTimeout(this.waitForHeight, WAIT_FOR_HEIGHT_TIMEOUT);\n        }\n    }\n\n    stopWaitingForHeight = () => {\n        if (this.heightTimeout !== 0) {\n            clearTimeout(this.heightTimeout);\n            this.heightTimeout = 0;\n\n            return true;\n        }\n\n        return false;\n    }\n\n    handleLoad = () => {\n        const wasWaiting = this.stopWaitingForHeight();\n\n        // The image loaded before we caught its layout event, so we still need to notify that its height changed\n        if (wasWaiting && this.props.onHeightReceived) {\n            this.props.onHeightReceived(this.refs.image.height);\n        }\n    };\n\n    handleError = () => {\n        this.stopWaitingForHeight();\n    };\n\n    render() {\n        const props = {...this.props};\n        Reflect.deleteProperty(props, 'onHeightReceived');\n\n        return (\n            <img\n                ref='image'\n                {...props}\n                onLoad={this.handleLoad}\n                onError={this.handleError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class PostEmoji extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Emoji name.\n         */\n        name: PropTypes.string.isRequired,\n\n        /*\n         * Emoji image URL.\n         */\n        imageUrl: PropTypes.string.isRequired,\n\n        /*\n         * Set to display the emoji text instead of the image.\n         */\n        displayTextOnly: PropTypes.bool.isRequired,\n    };\n\n    static defaultProps = {\n        name: '',\n        imageUrl: '',\n        displayTextOnly: false,\n    }\n\n    render() {\n        const emojiText = ':' + this.props.name + ':';\n\n        if (this.props.displayTextOnly) {\n            return emojiText;\n        }\n\n        return (\n            <span\n                alt={emojiText}\n                className='emoticon'\n                title={emojiText}\n                style={{backgroundImage: 'url(' + this.props.imageUrl + ')'}}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getEmojiImageUrl} from 'mattermost-redux/utils/emoji_utils';\n\nimport {getEmojiMap} from 'selectors/emojis';\n\nimport PostEmoji from './post_emoji.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const emojiMap = getEmojiMap(state);\n    const emoji = emojiMap.get(ownProps.name);\n\n    let imageUrl = '';\n    let displayTextOnly = false;\n    if (emoji) {\n        imageUrl = getEmojiImageUrl(emoji);\n    } else {\n        displayTextOnly = state.entities.emojis.nonExistentEmoji.has(ownProps.name) ||\n            getConfig(state).EnableCustomEmoji !== 'true' ||\n            getCurrentUserId(state) === '';\n    }\n\n    return {\n        imageUrl,\n        displayTextOnly,\n    };\n}\n\nexport default connect(mapStateToProps)(PostEmoji);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Parser, ProcessNodeDefinitions} from 'html-to-react';\n\nimport AtMention from 'components/at_mention';\nimport LatexBlock from 'components/latex_block';\nimport MarkdownImage from 'components/markdown_image';\nimport PostEmoji from 'components/post_emoji';\n\n/*\n * Converts HTML to React components using html-to-react.\n * The following options can be specified:\n * - mentions - If specified, mentions are replaced with the AtMention component. Defaults to true.\n * - emoji - If specified, emoji text is replaced with the PostEmoji component. Defaults to true.\n * - images - If specified, markdown images are replaced with the MarkdownImage component. Defaults to true.\n * - imageProps - If specified, any extra props that should be passed into the MarkdownImage component.\n * - latex - If specified, latex is replaced with the LatexBlock component. Defaults to true.\n */\nexport function messageHtmlToComponent(html, isRHS, options = {}) {\n    if (!html) {\n        return null;\n    }\n\n    const parser = new Parser();\n    const processNodeDefinitions = new ProcessNodeDefinitions(React);\n\n    function isValidNode() {\n        return true;\n    }\n\n    const processingInstructions = [];\n    if (!('mentions' in options) || options.mentions) {\n        const mentionAttrib = 'data-mention';\n        processingInstructions.push({\n            replaceChildren: true,\n            shouldProcessNode: (node) => node.attribs && node.attribs[mentionAttrib],\n            processNode: (node, children) => {\n                const mentionName = node.attribs[mentionAttrib];\n                const callAtMention = (\n                    <AtMention\n                        mentionName={mentionName}\n                        isRHS={isRHS}\n                        hasMention={true}\n                    >\n                        {children}\n                    </AtMention>\n                );\n                return callAtMention;\n            },\n        });\n    }\n\n    if (!('emoji' in options) || options.emoji) {\n        const emojiAttrib = 'data-emoticon';\n        processingInstructions.push({\n            replaceChildren: true,\n            shouldProcessNode: (node) => node.attribs && node.attribs[emojiAttrib],\n            processNode: (node) => {\n                const emojiName = node.attribs[emojiAttrib];\n                const callPostEmoji = (\n                    <PostEmoji\n                        name={emojiName}\n                    />\n                );\n                return callPostEmoji;\n            },\n        });\n    }\n\n    if (!('images' in options) || options.images) {\n        processingInstructions.push({\n            shouldProcessNode: (node) => node.type === 'tag' && node.name === 'img',\n            processNode: (node) => {\n                const {\n                    class: className,\n                    ...attribs\n                } = node.attribs;\n\n                const callMarkdownImage = (\n                    <MarkdownImage\n                        className={className}\n                        {...attribs}\n                        {...options.imageProps}\n                    />\n                );\n                return callMarkdownImage;\n            },\n        });\n    }\n\n    if (!('latex' in options) || options.latex) {\n        processingInstructions.push({\n            shouldProcessNode: (node) => node.attribs && node.attribs['data-latex'],\n            processNode: (node) => {\n                return (\n                    <LatexBlock content={node.attribs['data-latex']}/>\n                );\n            },\n        });\n    }\n\n    processingInstructions.push({\n        shouldProcessNode: () => true,\n        processNode: processNodeDefinitions.processDefaultNode,\n    });\n\n    return parser.parseWithInstructions(html, isValidNode, processingInstructions);\n}\n\nexport default messageHtmlToComponent;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class FileInfoPreview extends React.PureComponent {\n    static propTypes = {\n        fileInfo: PropTypes.object.isRequired,\n        fileUrl: PropTypes.string.isRequired,\n        canDownloadFiles: PropTypes.bool.isRequired,\n    };\n\n    render() {\n        const fileInfo = this.props.fileInfo;\n        const fileUrl = this.props.fileUrl;\n\n        // non-image files include a section providing details about the file\n        const infoParts = [];\n\n        if (fileInfo.extension !== '') {\n            infoParts.push(Utils.localizeMessage('file_info_preview.type', 'File type ') + fileInfo.extension.toUpperCase());\n        }\n\n        infoParts.push(Utils.localizeMessage('file_info_preview.size', 'Size ') + Utils.fileSizeToString(fileInfo.size));\n\n        const infoString = infoParts.join(', ');\n\n        let preview = null;\n        if (this.props.canDownloadFiles) {\n            preview = (\n                <a\n                    className='file-details__preview'\n                    href={fileUrl}\n                    target='_blank'\n                    rel='noopener noreferrer'\n                >\n                    <span className='file-details__preview-helper'/>\n                    <img src={Utils.getFileIconPath(fileInfo)}/>\n                </a>\n            );\n        } else {\n            preview = (\n                <span className='file-details__preview'>\n                    <span className='file-details__preview-helper'/>\n                    <img src={Utils.getFileIconPath(fileInfo)}/>\n                </span>\n            );\n        }\n\n        return (\n            <div className='file-details__container'>\n                {preview}\n                <div className='file-details'>\n                    <div className='file-details__name'>{fileInfo.name}</div>\n                    <div className='file-details__info'>{infoString}</div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {canDownloadFiles} from 'utils/file_utils.jsx';\n\nimport FileInfoPreview from './file_info_preview.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    return {\n        canDownloadFiles: canDownloadFiles(config),\n    };\n}\n\nexport default connect(mapStateToProps)(FileInfoPreview);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport ReactDOM from 'react-dom';\nimport {defineMessages, FormattedMessage, injectIntl, intlShape} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\nimport ConfirmModal from '../../confirm_modal.jsx';\nimport {AsyncComponent} from 'components/async_load';\n\nimport loadUserSettings from 'bundle-loader?lazy!components/user_settings';\nimport loadSettingsSidebar from 'bundle-loader?lazy!../../settings_sidebar.jsx';\n\nconst holders = defineMessages({\n    general: {\n        id: t('user.settings.modal.general'),\n        defaultMessage: 'General',\n    },\n    security: {\n        id: t('user.settings.modal.security'),\n        defaultMessage: 'Security',\n    },\n    notifications: {\n        id: t('user.settings.modal.notifications'),\n        defaultMessage: 'Notifications',\n    },\n    display: {\n        id: t('user.settings.modal.display'),\n        defaultMessage: 'Display',\n    },\n    sidebar: {\n        id: t('user.settings.modal.sidebar'),\n        defaultMessage: 'Sidebar',\n    },\n    advanced: {\n        id: t('user.settings.modal.advanced'),\n        defaultMessage: 'Advanced',\n    },\n    checkEmail: {\n        id: 'user.settings.general.checkEmail',\n        defaultMessage: 'Check your email at {email} to verify the address. Cannot find the email?',\n    },\n    confirmTitle: {\n        id: t('user.settings.modal.confirmTitle'),\n        defaultMessage: 'Discard Changes?',\n    },\n    confirmMsg: {\n        id: t('user.settings.modal.confirmMsg'),\n        defaultMessage: 'You have unsaved changes, are you sure you want to discard them?',\n    },\n    confirmBtns: {\n        id: t('user.settings.modal.confirmBtns'),\n        defaultMessage: 'Yes, Discard',\n    },\n});\n\nclass UserSettingsModal extends React.Component {\n    static propTypes = {\n        currentUser: PropTypes.object.isRequired,\n        onHide: PropTypes.func.isRequired,\n        intl: intlShape.isRequired,\n        actions: PropTypes.shape({\n            sendVerificationEmail: PropTypes.func.isRequred,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            active_tab: 'general',\n            active_section: '',\n            prev_active_section: '',\n            showConfirmModal: false,\n            enforceFocus: true,\n            show: true,\n        };\n\n        this.requireConfirm = false;\n\n        // Used when settings want to override the default confirm modal with their own\n        // If set by a child, it will be called in place of showing the regular confirm\n        // modal. It will be passed a function to call on modal confirm\n        this.customConfirmAction = null;\n    }\n\n    handleResend = (email) => {\n        this.setState({resendStatus: 'sending'});\n\n        this.props.actions.sendVerificationEmail(email).then(({data, error: err}) => {\n            if (data) {\n                this.setState({resendStatus: 'success'});\n            } else if (err) {\n                this.setState({resendStatus: 'failure'});\n            }\n        });\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyDown);\n    }\n\n    componentDidUpdate() {\n        if (!Utils.isMobile()) {\n            $('.settings-content .minimize-settings').perfectScrollbar('update');\n        }\n    }\n\n    handleKeyDown = (e) => {\n        if (Utils.cmdOrCtrlPressed(e) && e.shiftKey && Utils.isKeyPressed(e, Constants.KeyCodes.A)) {\n            this.handleHide();\n        }\n    }\n\n    // Called when the close button is pressed on the main modal\n    handleHide = () => {\n        if (this.requireConfirm) {\n            this.showConfirmModal(() => this.handleHide());\n            return;\n        }\n\n        this.setState({\n            show: false,\n        });\n    }\n\n    // called after the dialog is fully hidden and faded out\n    handleHidden = () => {\n        this.setState({\n            active_tab: 'general',\n            active_section: '',\n            prev_active_section: '',\n        });\n        this.props.onHide();\n    }\n\n    // Called to hide the settings pane when on mobile\n    handleCollapse = () => {\n        $(ReactDOM.findDOMNode(this.refs.modalBody)).closest('.modal-dialog').removeClass('display--content');\n\n        this.setState({\n            active_tab: '',\n            active_section: '',\n            prev_active_section: '',\n        });\n    }\n\n    handleConfirm = () => {\n        this.setState({\n            showConfirmModal: false,\n            enforceFocus: true,\n        });\n\n        this.requireConfirm = false;\n        this.customConfirmAction = null;\n\n        if (this.afterConfirm) {\n            this.afterConfirm();\n            this.afterConfirm = null;\n        }\n    }\n\n    handleCancelConfirmation = () => {\n        this.setState({\n            showConfirmModal: false,\n            enforceFocus: true,\n        });\n\n        this.afterConfirm = null;\n    }\n\n    showConfirmModal = (afterConfirm) => {\n        if (afterConfirm) {\n            this.afterConfirm = afterConfirm;\n        }\n\n        if (this.customConfirmAction) {\n            this.customConfirmAction(this.handleConfirm);\n            return;\n        }\n\n        this.setState({\n            showConfirmModal: true,\n            enforceFocus: false,\n        });\n    }\n\n    // Called by settings tabs when their close button is pressed\n    closeModal = () => {\n        if (this.requireConfirm) {\n            this.showConfirmModal(this.closeModal);\n        } else {\n            this.handleHide();\n        }\n    }\n\n    // Called by settings tabs when their back button is pressed\n    collapseModal = () => {\n        if (this.requireConfirm) {\n            this.showConfirmModal(this.collapseModal);\n        } else {\n            this.handleCollapse();\n        }\n    }\n\n    updateTab = (tab, skipConfirm) => {\n        if (!skipConfirm && this.requireConfirm) {\n            this.showConfirmModal(() => this.updateTab(tab, true));\n        } else {\n            this.setState({\n                active_tab: tab,\n                active_section: '',\n                prev_active_section: '',\n            });\n        }\n    }\n\n    updateSection = (section, skipConfirm) => {\n        if (!skipConfirm && this.requireConfirm) {\n            this.showConfirmModal(() => this.updateSection(section, true));\n        } else {\n            this.setState({\n                prev_active_section: section ? '' : this.state.active_section,\n                active_section: section,\n            });\n        }\n    }\n\n    render() {\n        const {formatMessage} = this.props.intl;\n        if (this.props.currentUser == null) {\n            return (<div/>);\n        }\n        var tabs = [];\n\n        tabs.push({name: 'general', uiName: formatMessage(holders.general), icon: 'icon fa fa-gear', iconTitle: Utils.localizeMessage('user.settings.general.icon', 'General Settings Icon')});\n        tabs.push({name: 'security', uiName: formatMessage(holders.security), icon: 'icon fa fa-lock', iconTitle: Utils.localizeMessage('user.settings.security.icon', 'Security Settings Icon')});\n        tabs.push({name: 'notifications', uiName: formatMessage(holders.notifications), icon: 'icon fa fa-exclamation-circle', iconTitle: Utils.localizeMessage('user.settings.notifications.icon', 'Notification Settings Icon')});\n        tabs.push({name: 'display', uiName: formatMessage(holders.display), icon: 'icon fa fa-eye', iconTitle: Utils.localizeMessage('user.settings.display.icon', 'Display Settings Icon')});\n        tabs.push({name: 'sidebar', uiName: formatMessage(holders.sidebar), icon: 'icon fa fa-columns', iconTitle: Utils.localizeMessage('user.settings.sidebar.icon', 'Sidebar Settings Icon')});\n        tabs.push({name: 'advanced', uiName: formatMessage(holders.advanced), icon: 'icon fa fa-list-alt', iconTitle: Utils.localizeMessage('user.settings.advance.icon', 'Advanced Settings Icon')});\n\n        return (\n            <Modal\n                id='accountSettingsModal'\n                dialogClassName='settings-modal'\n                show={this.state.show}\n                onHide={this.handleHide}\n                onExited={this.handleHidden}\n                enforceFocus={this.state.enforceFocus}\n            >\n                <Modal.Header\n                    id='accountSettingsHeader'\n                    closeButton={true}\n                >\n                    <Modal.Title id='accountSettingsTitle'>\n                        <FormattedMessage\n                            id='user.settings.modal.title'\n                            defaultMessage='Account Settings'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body ref='modalBody'>\n                    <div className='settings-table'>\n                        <div className='settings-links'>\n                            <AsyncComponent\n                                doLoad={loadSettingsSidebar}\n                                tabs={tabs}\n                                activeTab={this.state.active_tab}\n                                updateTab={this.updateTab}\n                            />\n                        </div>\n                        <div className='settings-content minimize-settings'>\n                            <AsyncComponent\n                                doLoad={loadUserSettings}\n                                ref='userSettings'\n                                activeTab={this.state.active_tab}\n                                activeSection={this.state.active_section}\n                                prevActiveSection={this.state.prev_active_section}\n                                updateSection={this.updateSection}\n                                updateTab={this.updateTab}\n                                closeModal={this.closeModal}\n                                collapseModal={this.collapseModal}\n                                setEnforceFocus={(enforceFocus) => this.setState({enforceFocus})}\n                                setRequireConfirm={\n                                    (requireConfirm, customConfirmAction) => {\n                                        this.requireConfirm = requireConfirm;\n                                        this.customConfirmAction = customConfirmAction;\n                                    }\n                                }\n                            />\n                        </div>\n                    </div>\n                </Modal.Body>\n                <ConfirmModal\n                    title={formatMessage(holders.confirmTitle)}\n                    message={formatMessage(holders.confirmMsg)}\n                    confirmButtonText={formatMessage(holders.confirmBtns)}\n                    show={this.state.showConfirmModal}\n                    onConfirm={this.handleConfirm}\n                    onCancel={this.handleCancelConfirmation}\n                />\n            </Modal>\n        );\n    }\n}\n\nexport default injectIntl(UserSettingsModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {sendVerificationEmail} from 'mattermost-redux/actions/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\n\nimport UserSettingsModal from './user_settings_modal.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    const closeUnusedDirectMessages = config.CloseUnusedDirectMessages === 'true';\n    const experimentalGroupUnreadChannels = config.ExperimentalGroupUnreadChannels;\n    const sendEmailNotifications = config.SendEmailNotifications === 'true';\n    const requireEmailVerification = config.RequireEmailVerification === 'true';\n\n    return {\n        currentUser: getCurrentUser(state),\n        closeUnusedDirectMessages,\n        experimentalGroupUnreadChannels,\n        sendEmailNotifications,\n        requireEmailVerification,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            sendVerificationEmail,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserSettingsModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants.jsx';\nimport {cmdOrCtrlPressed} from 'utils/utils.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\nconst KeyCodes = Constants.KeyCodes;\n\nexport default class MultiSelectList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.defaultOptionRenderer = this.defaultOptionRenderer.bind(this);\n        this.handleArrowPress = this.handleArrowPress.bind(this);\n        this.setSelected = this.setSelected.bind(this);\n\n        this.toSelect = -1;\n\n        this.state = {\n            selected: -1,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleArrowPress);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleArrowPress);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        this.setState({selected: this.toSelect});\n\n        const options = nextProps.options;\n\n        if (options && options.length > 0 && this.toSelect >= 0) {\n            this.props.onSelect(options[this.toSelect]);\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.refs.list && this.refs.selected) {\n            const elemTop = this.refs.selected.getBoundingClientRect().top;\n            const elemBottom = this.refs.selected.getBoundingClientRect().bottom;\n            const listTop = this.refs.list.getBoundingClientRect().top;\n            const listBottom = this.refs.list.getBoundingClientRect().bottom;\n            if (elemBottom > listBottom) {\n                this.refs.selected.scrollIntoView(false);\n            } else if (elemTop < listTop) {\n                this.refs.selected.scrollIntoView(true);\n            }\n        }\n    }\n\n    setSelected(selected) {\n        this.toSelect = selected;\n    }\n\n    handleArrowPress(e) {\n        if (cmdOrCtrlPressed(e) && e.shiftKey) {\n            return;\n        }\n\n        const options = this.props.options;\n        if (options.length === 0) {\n            return;\n        }\n\n        let selected;\n        switch (e.key) {\n        case KeyCodes.DOWN[0]:\n            if (this.state.selected === -1) {\n                selected = 0;\n                break;\n            }\n            selected = Math.min(this.state.selected + 1, options.length - 1);\n            break;\n        case KeyCodes.UP[0]:\n            if (this.state.selected === -1) {\n                selected = 0;\n                break;\n            }\n            selected = Math.max(this.state.selected - 1, 0);\n            break;\n        default:\n            return;\n        }\n\n        e.preventDefault();\n        this.setState({selected});\n        this.props.onSelect(options[selected]);\n    }\n\n    defaultOptionRenderer(option, isSelected, onAdd) {\n        var rowSelected = '';\n        if (isSelected) {\n            rowSelected = 'more-modal__row--selected';\n        }\n\n        return (\n            <div\n                ref={isSelected ? 'selected' : option.value}\n                className={rowSelected}\n                key={'multiselectoption' + option.value}\n                onClick={() => onAdd(option)}\n            >\n                {option.label}\n            </div>\n        );\n    }\n\n    render() {\n        const options = this.props.options;\n        if (this.props.loading) {\n            return (\n                <div>\n                    <LoadingScreen\n                        position='absolute'\n                        key='loading'\n                    />\n                </div>\n            );\n        }\n        if (options == null || options.length === 0) {\n            return (\n                <div\n                    key='no-users-found'\n                    className='no-channel-message'\n                >\n                    <p className='primary-message'>\n                        <FormattedMessage\n                            id='multiselect.list.notFound'\n                            defaultMessage='No items found'\n                        />\n                    </p>\n                </div>\n            );\n        }\n\n        let renderer;\n        if (this.props.optionRenderer) {\n            renderer = this.props.optionRenderer;\n        } else {\n            renderer = this.defaultOptionRenderer;\n        }\n\n        const optionControls = options.map((o, i) => renderer(o, this.state.selected === i, this.props.onAdd));\n\n        return (\n            <div className='more-modal__list'>\n                <div\n                    ref='list'\n                >\n                    {optionControls}\n                </div>\n            </div>\n        );\n    }\n}\n\nMultiSelectList.defaultProps = {\n    options: [],\n    perPage: 50,\n    onAction: () => null,\n};\n\nMultiSelectList.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.object),\n    optionRenderer: PropTypes.func,\n    page: PropTypes.number,\n    perPage: PropTypes.number,\n    onPageChange: PropTypes.func,\n    onAdd: PropTypes.func,\n    onSelect: PropTypes.func,\n    loading: PropTypes.bool,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport ReactSelect from 'react-select';\n\nimport {Constants} from 'utils/constants.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport SaveButton from 'components/save_button.jsx';\n\nimport MultiSelectList from './multiselect_list.jsx';\n\nconst KeyCodes = Constants.KeyCodes;\n\nexport default class MultiSelect extends React.Component {\n    static propTypes = {\n        users: PropTypes.arrayOf(PropTypes.object),\n        totalCount: PropTypes.number,\n        options: PropTypes.arrayOf(PropTypes.object),\n        optionRenderer: PropTypes.func,\n        values: PropTypes.arrayOf(PropTypes.object),\n        valueKey: PropTypes.string,\n        valueRenderer: PropTypes.func,\n        handleInput: PropTypes.func,\n        handleDelete: PropTypes.func,\n        perPage: PropTypes.number,\n        handlePageChange: PropTypes.func,\n        handleAdd: PropTypes.func,\n        handleSubmit: PropTypes.func,\n        noteText: PropTypes.node,\n        maxValues: PropTypes.number,\n        numRemainingText: PropTypes.node,\n        buttonSubmitText: PropTypes.node,\n        buttonSubmitLoadingText: PropTypes.node,\n        submitImmediatelyOn: PropTypes.func,\n        saving: PropTypes.bool,\n        loading: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.selected = null;\n\n        this.state = {\n            page: 0,\n            input: '',\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleEnterPress);\n        if (this.refs.reactSelect) {\n            this.refs.reactSelect.focus();\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleEnterPress);\n    }\n\n    nextPage = () => {\n        if (this.props.handlePageChange) {\n            this.props.handlePageChange(this.state.page + 1, this.state.page);\n        }\n        if (this.refs.list) {\n            this.refs.list.setSelected(0);\n        }\n        this.setState({page: this.state.page + 1});\n    }\n\n    prevPage = () => {\n        if (this.state.page === 0) {\n            return;\n        }\n\n        if (this.props.handlePageChange) {\n            this.props.handlePageChange(this.state.page - 1, this.state.page);\n        }\n        this.refs.list.setSelected(0);\n        this.setState({page: this.state.page - 1});\n    }\n\n    resetPaging = () => {\n        this.setState({page: 0});\n    }\n\n    onSelect = (selected) => {\n        this.selected = selected;\n    }\n\n    onAdd = (value) => {\n        if (this.props.maxValues && this.props.values.length >= this.props.maxValues) {\n            return;\n        }\n\n        for (let i = 0; i < this.props.values.length; i++) {\n            if (this.props.values[i].id === value.id) {\n                return;\n            }\n        }\n\n        this.props.handleAdd(value);\n        this.selected = null;\n\n        this.refs.reactSelect.select.handleInputChange({currentTarget: {value: ''}});\n        this.onInput('');\n        this.refs.reactSelect.focus();\n\n        const submitImmediatelyOn = this.props.submitImmediatelyOn;\n        if (submitImmediatelyOn && submitImmediatelyOn(value)) {\n            this.props.handleSubmit([value]);\n        }\n    }\n\n    onInput = (input, change = {}) => {\n        if (change.action === 'input-blur' || change.action === 'menu-close') {\n            return;\n        }\n\n        this.setState({input});\n\n        if (input === '') {\n            this.refs.list.setSelected(-1);\n        } else {\n            this.refs.list.setSelected(0);\n        }\n        this.selected = null;\n\n        this.props.handleInput(input);\n    }\n\n    onInputKeyDown = (e) => {\n        switch (e.key) {\n        case KeyCodes.ENTER[0]:\n            e.preventDefault();\n            break;\n        }\n    }\n\n    handleEnterPress = (e) => {\n        switch (e.key) {\n        case KeyCodes.ENTER[0]:\n            if (this.selected == null) {\n                this.props.handleSubmit();\n                return;\n            }\n            this.onAdd(this.selected);\n            break;\n        }\n    }\n\n    handleOnClick = (e) => {\n        e.preventDefault();\n        this.props.handleSubmit();\n    }\n\n    onChange = (_, change) => {\n        if (change.action !== 'remove-value' && change.action !== 'pop-value') {\n            return;\n        }\n\n        const valueKey = this.props.valueKey;\n        const values = [...this.props.values];\n        for (let i = 0; i < values.length; i++) {\n            if (values[i][valueKey] === change.removedValue[valueKey]) {\n                values.splice(i, 1);\n                break;\n            }\n        }\n\n        this.props.handleDelete(values);\n    }\n\n    render() {\n        const options = Object.assign([], this.props.options);\n        const {totalCount, users, values} = this.props;\n\n        let numRemainingText;\n        if (this.props.numRemainingText) {\n            numRemainingText = this.props.numRemainingText;\n        } else if (this.props.maxValues != null) {\n            numRemainingText = (\n                <FormattedMessage\n                    id='multiselect.numRemaining'\n                    defaultMessage='You can add {num, number} more. '\n                    values={{\n                        num: this.props.maxValues - this.props.values.length,\n                    }}\n                />\n            );\n        }\n\n        let buttonSubmitText;\n        if (this.props.buttonSubmitText) {\n            buttonSubmitText = this.props.buttonSubmitText;\n        } else if (this.props.maxValues != null) {\n            buttonSubmitText = (\n                <FormattedMessage\n                    id='multiselect.go'\n                    defaultMessage='Go'\n                />\n            );\n        }\n\n        let optionsToDisplay = [];\n        let nextButton;\n        let previousButton;\n        let noteTextContainer;\n\n        if (this.props.noteText) {\n            noteTextContainer = (\n                <div className='multi-select__note'>\n                    <div className='note__icon'>\n                        <span\n                            className='fa fa-info'\n                            title={localizeMessage('generic_icons.info', 'Info Icon')}\n                        />\n                    </div>\n                    <div>{this.props.noteText}</div>\n                </div>\n            );\n        }\n\n        const valueMap = {};\n        for (let i = 0; i < values.length; i++) {\n            valueMap[values[i].id] = true;\n        }\n\n        for (let i = options.length - 1; i >= 0; i--) {\n            if (valueMap[options[i].id]) {\n                options.splice(i, 1);\n            }\n        }\n\n        if (options && options.length > this.props.perPage) {\n            const pageStart = this.state.page * this.props.perPage;\n            const pageEnd = pageStart + this.props.perPage;\n            optionsToDisplay = options.slice(pageStart, pageEnd);\n            if (!this.props.loading) {\n                if (options.length > pageEnd) {\n                    nextButton = (\n                        <button\n                            className='btn btn-default filter-control filter-control__next'\n                            onClick={this.nextPage}\n                        >\n                            <FormattedMessage\n                                id='filtered_user_list.next'\n                                defaultMessage='Next'\n                            />\n                        </button>\n                    );\n                }\n\n                if (this.state.page > 0) {\n                    previousButton = (\n                        <button\n                            className='btn btn-default filter-control filter-control__prev'\n                            onClick={this.prevPage}\n                        >\n                            <FormattedMessage\n                                id='filtered_user_list.prev'\n                                defaultMessage='Previous'\n                            />\n                        </button>\n                    );\n                }\n            }\n        } else {\n            optionsToDisplay = options;\n        }\n\n        let memberCount;\n        if (users && users.length && totalCount) {\n            memberCount = (\n                <FormattedMessage\n                    id='multiselect.numMembers'\n                    defaultMessage='{memberOptions, number} of {totalCount, number} members'\n                    values={{\n                        memberOptions: optionsToDisplay.length,\n                        totalCount: this.props.totalCount,\n                    }}\n                />\n            );\n        }\n\n        return (\n            <div className='filtered-user-list'>\n                <div className='filter-row filter-row--full'>\n                    <div className='multi-select__container'>\n                        <ReactSelect\n                            ref='reactSelect'\n                            isMulti={true}\n                            options={this.props.options}\n                            styles={styles}\n                            components={{\n                                Menu: nullComponent,\n                                IndicatorsContainer: nullComponent,\n                                MultiValueLabel: paddedComponent(this.props.valueRenderer),\n                            }}\n                            isClearable={false}\n                            openMenuOnFocus={false}\n                            onInputChange={this.onInput}\n                            onKeyDown={this.onInputKeyDown}\n                            onChange={this.onChange}\n                            value={this.props.values}\n                            placeholder={localizeMessage('multiselect.placeholder', 'Search and add members')}\n                            inputValue={this.state.input}\n                        />\n                        <SaveButton\n                            saving={this.props.saving}\n                            disabled={this.props.saving}\n                            onClick={this.handleOnClick}\n                            defaultMessage={buttonSubmitText}\n                            savingMessage={this.props.buttonSubmitLoadingText}\n                        />\n                    </div>\n                    <div className='multi-select__help'>\n                        {numRemainingText}\n                        {memberCount}\n                    </div>\n                    <div className='multi-select__help'>\n                        {noteTextContainer}\n                    </div>\n                </div>\n                <MultiSelectList\n                    ref='list'\n                    options={optionsToDisplay}\n                    optionRenderer={this.props.optionRenderer}\n                    page={this.state.page}\n                    perPage={this.props.perPage}\n                    onPageChange={this.props.handlePageChange}\n                    onAdd={this.onAdd}\n                    onSelect={this.onSelect}\n                    loading={this.props.loading}\n                />\n                <div className='filter-controls'>\n                    {previousButton}\n                    {nextButton}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst nullComponent = () => null;\n\nconst paddedComponent = (WrappedComponent) => {\n    return (props) => {\n        return (\n            <div style={{paddingRight: '5px', paddingLeft: '5px', borderRight: '1px solid rgba(0, 126, 255, 0.24)'}}>\n                <WrappedComponent {...props}/>\n            </div>\n        );\n    };\n};\n\nconst styles = {\n    container: () => {\n        return {\n            display: 'table-cell',\n            paddingRight: '15px',\n            verticalAlign: 'top',\n            width: '100%',\n        };\n    },\n    control: (base) => {\n        return {\n            ...base,\n            borderRadius: '1px',\n            borderColor: 'hsl(0,0%,80%)',\n            minHeight: '36px',\n            '&:hover': {},\n            boxShadow: '',\n            backgroundColor: 'hsl(0,0%,100%)',\n        };\n    },\n    multiValue: (base) => {\n        return {\n            ...base,\n            whiteSpace: 'nowrap',\n            border: '1px solid rgba(0, 126, 255, 0.24)',\n            backgroundColor: 'rgba(0, 126, 255, 0.08)',\n            color: '#007eff',\n        };\n    },\n    multiValueRemove: (base) => {\n        return {\n            ...base,\n            ':hover': {\n                backgroundColor: 'rgba(0, 126, 255, 0.15)',\n            },\n        };\n    },\n};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nexport const emoticonPatterns = {\n    slightly_smiling_face: /(^|\\s)(:-?\\))(?=$|\\s)/g, // :)\n    wink: /(^|\\s)(;-?\\))(?=$|\\s)/g, // ;)\n    open_mouth: /(^|\\s)(:o)(?=$|\\s)/gi, // :o\n    scream: /(^|\\s)(:-o)(?=$|\\s)/gi, // :-o\n    smirk: /(^|\\s)(:-?])(?=$|\\s)/g, // :]\n    smile: /(^|\\s)(:-?d)(?=$|\\s)/gi, // :D\n    stuck_out_tongue_closed_eyes: /(^|\\s)(x-d)(?=$|\\s)/gi, // x-d\n    stuck_out_tongue: /(^|\\s)(:-?p)(?=$|\\s)/gi, // :p\n    rage: /(^|\\s)(:-?[[@])(?=$|\\s)/g, // :@\n    slightly_frowning_face: /(^|\\s)(:-?\\()(?=$|\\s)/g, // :(\n    cry: /(^|\\s)(:['’]-?\\(|:&#x27;\\(|:&#39;\\()(?=$|\\s)/g, // :`(\n    confused: /(^|\\s)(:-?\\/)(?=$|\\s)/g, // :/\n    confounded: /(^|\\s)(:-?s)(?=$|\\s)/gi, // :s\n    neutral_face: /(^|\\s)(:-?\\|)(?=$|\\s)/g, // :|\n    flushed: /(^|\\s)(:-?\\$)(?=$|\\s)/g, // :$\n    mask: /(^|\\s)(:-x)(?=$|\\s)/gi, // :-x\n    heart: /(^|\\s)(<3|&lt;3)(?=$|\\s)/g, // <3\n    broken_heart: /(^|\\s)(<\\/3|&lt;&#x2F;3)(?=$|\\s)/g, // </3\n    thumbsup: /(^|\\s)(:\\+1:)(?=$|\\s)/g, // :+1:\n    thumbsdown: /(^|\\s)(:-1:)(?=$|\\s)/g, // :-1:\n};\n\nexport const EMOJI_PATTERN = /(:([a-zA-Z0-9_-]+):)/g;\n\nexport function handleEmoticons(text, tokens) {\n    let output = text;\n\n    function replaceEmoticonWithToken(fullMatch, prefix, matchText, name) {\n        const index = tokens.size;\n        const alias = `$MM_EMOTICON${index}$`;\n\n        tokens.set(alias, {\n            value: `<span data-emoticon=\"${name}\">${matchText}</span>`,\n            originalText: fullMatch,\n        });\n\n        return prefix + alias;\n    }\n\n    // match named emoticons like :goat:\n    output = output.replace(EMOJI_PATTERN, (fullMatch, matchText, name) => replaceEmoticonWithToken(fullMatch, '', matchText, name));\n\n    // match text smilies like :D\n    for (const name of Object.keys(emoticonPatterns)) {\n        const pattern = emoticonPatterns[name];\n\n        // this might look a bit funny, but since the name isn't contained in the actual match\n        // like with the named emoticons, we need to add it in manually\n        output = output.replace(pattern, (fullMatch, prefix, matchText) => replaceEmoticonWithToken(fullMatch, prefix, matchText, name));\n    }\n\n    return output;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport keyMirror from 'key-mirror';\n\nexport default keyMirror({\n    POST_LIST_SCROLL_CHANGE: null,\n});\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport EventEmitter from 'events';\n\nimport store from 'stores/redux_store.jsx';\n\nconst CHANGE_EVENT = 'change';\n\nclass AnalyticsStoreClass extends EventEmitter {\n    constructor() {\n        super();\n\n        this.entities = {};\n\n        store.subscribe(() => {\n            const newEntities = store.getState().entities.admin;\n\n            const entities = this.entities;\n            this.entities = newEntities;\n\n            const analyticsChanged = newEntities.analytics !== entities.analytics;\n            const teamAnalyticsChanged = newEntities.teamAnalytics !== entities.teamAnalytics;\n\n            if (analyticsChanged || teamAnalyticsChanged) {\n                this.emitChange();\n            }\n        });\n    }\n\n    emitChange() {\n        this.emit(CHANGE_EVENT);\n    }\n\n    addChangeListener(callback) {\n        this.on(CHANGE_EVENT, callback);\n    }\n\n    removeChangeListener(callback) {\n        this.removeListener(CHANGE_EVENT, callback);\n    }\n\n    getAllSystem() {\n        return JSON.parse(JSON.stringify(store.getState().entities.admin.analytics));\n    }\n\n    getAllTeam(id) {\n        const teamStats = store.getState().entities.admin.teamAnalytics[id];\n        if (teamStats) {\n            return JSON.parse(JSON.stringify(teamStats));\n        }\n\n        return {};\n    }\n}\n\nvar AnalyticsStore = new AnalyticsStoreClass();\nexport default AnalyticsStore;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class MattermostLogo extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    version='1.1'\n                    id='Layer_1'\n                    x='0px'\n                    y='0px'\n                    viewBox='0 0 500 500'\n                    style={style.background}\n                    role='icon'\n                    aria-label={localizeMessage('generic_icons.mattermost', 'Mattermost Logo')}\n                >\n                    <g id='XMLID_1_'>\n                        <g id='XMLID_3_'>\n                            <path\n                                id='XMLID_4_'\n                                style={style.st0}\n                                d='M396.9,47.7l2.6,53.1c43,47.5,60,114.8,38.6,178.1c-32,94.4-137.4,144.1-235.4,110.9 S51.1,253.1,83,158.7C104.5,95.2,159.2,52,222.5,40.5l34.2-40.4C150-2.8,49.3,63.4,13.3,169.9C-31,300.6,39.1,442.5,169.9,486.7 s272.6-25.8,316.9-156.6C522.7,223.9,483.1,110.3,396.9,47.7z'\n                            />\n                        </g>\n                        <path\n                            id='XMLID_2_'\n                            style={style.st0}\n                            d='M335.6,204.3l-1.8-74.2l-1.5-42.7l-1-37c0,0,0.2-17.8-0.4-22c-0.1-0.9-0.4-1.6-0.7-2.2 c0-0.1-0.1-0.2-0.1-0.3c0-0.1-0.1-0.2-0.1-0.2c-0.7-1.2-1.8-2.1-3.1-2.6c-1.4-0.5-2.9-0.4-4.2,0.2c0,0-0.1,0-0.1,0 c-0.2,0.1-0.3,0.1-0.4,0.2c-0.6,0.3-1.2,0.7-1.8,1.3c-3,3-13.7,17.2-13.7,17.2l-23.2,28.8l-27.1,33l-46.5,57.8 c0,0-21.3,26.6-16.6,59.4s29.1,48.7,48,55.1c18.9,6.4,48,8.5,71.6-14.7C336.4,238.4,335.6,204.3,335.6,204.3z'\n                        />\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n\nconst style = {\n    background: {\n        enableBackground: 'new 0 0 500 500',\n    },\n    st0: {\n        fillRule: 'evenodd',\n        clipRule: 'evenodd',\n    },\n};\n","module.exports = __webpack_public_path__ + \"files/325472601571f31e1bf00674c368d335.gif\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\n// A component that can be used to make controlled inputs that function properly in certain\n// environments (ie. IE11) where typing quickly would sometimes miss inputs\nexport default class QuickInput extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Whether to delay updating the value of the textbox from props. Should only be used\n         * on textboxes that to properly compose CJK characters as the user types.\n         */\n        delayInputUpdate: PropTypes.bool,\n\n        /**\n         * An optional React component that will be used instead of an HTML input when rendering\n         */\n        inputComponent: PropTypes.func,\n\n        /**\n         * The string value displayed in this input\n         */\n        value: PropTypes.string.isRequired,\n    };\n\n    static defaultProps = {\n        delayInputUpdate: false,\n        value: '',\n    };\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.value !== this.props.value) {\n            if (this.props.delayInputUpdate) {\n                requestAnimationFrame(this.updateInputFromProps);\n            } else {\n                this.updateInputFromProps();\n            }\n        }\n    }\n\n    updateInputFromProps = () => {\n        if (!this.input || this.input.value === this.props.value) {\n            return;\n        }\n\n        this.input.value = this.props.value;\n    }\n\n    get value() {\n        return this.input.value;\n    }\n\n    set value(value) {\n        this.input.value = value;\n    }\n\n    focus() {\n        this.input.focus();\n    }\n\n    blur() {\n        this.input.blur();\n    }\n\n    getInput = () => {\n        return this.input;\n    };\n\n    setInput = (input) => {\n        this.input = input;\n    }\n\n    render() {\n        const {value, inputComponent, ...props} = this.props;\n\n        Reflect.deleteProperty(props, 'delayInputUpdate');\n\n        return React.createElement(\n            inputComponent || 'input',\n            {\n                ...props,\n                ref: this.setInput,\n                defaultValue: value, // Only set the defaultValue since the real one will be updated using componentDidUpdate\n            }\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class MenuIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='16px'\n                    height='10px'\n                    viewBox='0 0 16 10'\n                    version='1.1'\n                    role='icon'\n                    title={localizeMessage('generic_icons.menu', 'Menu Icon')}\n                >\n                    <g\n                        stroke='none'\n                        strokeWidth='1'\n                        fill='inherit'\n                        fillRule='evenodd'\n                    >\n                        <g\n                            transform='translate(-188.000000, -38.000000)'\n                            fillRule='nonzero'\n                            fill='inherit'\n                        >\n                            <g>\n                                <g>\n                                    <g transform='translate(188.000000, 38.000000)'>\n                                        <path d='M15.5,0 C15.776,0 16,0.224 16,0.5 L16,1.5 C16,1.776 15.776,2 15.5,2 L0.5,2 C0.224,2 0,1.776 0,1.5 L0,0.5 C0,0.224 0.224,0 0.5,0 L15.5,0 Z M15.5,4 C15.776,4 16,4.224 16,4.5 L16,5.5 C16,5.776 15.776,6 15.5,6 L0.5,6 C0.224,6 0,5.776 0,5.5 L0,4.5 C0,4.224 0.224,4 0.5,4 L15.5,4 Z M15.5,8 C15.776,8 16,8.224 16,8.5 L16,9.5 C16,9.776 15.776,10 15.5,10 L0.5,10 C0.224,10 0,9.776 0,9.5 L0,8.5 C0,8.224 0.224,8 0.5,8 L15.5,8 Z'/>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {ActionTypes} from 'utils/constants';\n\nexport function dismissNotice(type) {\n    return (dispatch) => {\n        dispatch({\n            type: ActionTypes.DISMISS_NOTICE,\n            data: type,\n        });\n\n        return {data: true};\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport mattermostIcon from 'images/icon50x50.png';\n\n// Notices are objects with the following fields:\n//  - name - string identifier\n//  - adminOnly - set to true if only system admins should see this message\n//  - icon - the image to display for the notice icon\n//  - title - JSX node to display for the notice title\n//  - body - JSX node to display for the notice body\n//  - allowForget - boolean to allow forget the notice\n//  - show - function that check if we need to show the notice\n//\n// Order is important! The notices at the top are shown first.\nexport default [\n    {\n        name: 'apiv3_deprecation',\n        adminOnly: true,\n        title: (\n            <FormattedMarkdownMessage\n                id='system_notice.title'\n                defaultMessage='**Notice**\\nfrom Mattermost'\n            />\n        ),\n        icon: mattermostIcon,\n        body: (\n            <FormattedMarkdownMessage\n                id='system_notice.body.api3'\n                defaultMessage='If you’ve created or installed integrations in the last two years, find out how [recent changes](!https://about.mattermost.com/default-apiv3-deprecation-guide) may have affected them.'\n            />\n        ),\n        allowForget: true,\n        show: (serverVersion, config) => {\n            if (config.InstallationDate >= new Date(2018, 5, 16, 0, 0, 0, 0).getTime()) {\n                return false;\n            }\n            return true;\n        },\n    },\n    {\n        name: 'advanced_permissions',\n        adminOnly: true,\n        title: (\n            <FormattedMarkdownMessage\n                id='system_notice.title'\n                defaultMessage='**Notice**\\nfrom Mattermost'\n            />\n        ),\n        icon: mattermostIcon,\n        body: (\n            <FormattedMarkdownMessage\n                id='system_notice.body.permissions'\n                defaultMessage='Some policy and permission System Console settings have moved with the release of [advanced permissions](!https://about.mattermost.com/default-advanced-permissions) in Enterprise E10 and E20.'\n            />\n        ),\n        allowForget: true,\n        show: (serverVersion, config, license) => {\n            if (license.IsLicensed === 'false') {\n                return false;\n            }\n            if (config.InstallationDate > new Date(2018, 5, 16, 0, 0, 0, 0).getTime()) {\n                return false;\n            }\n            if (license.IsLicensed === 'true' && license.IssuedAt > new Date(2018, 5, 16, 0, 0, 0, 0).getTime()) {\n                return false;\n            }\n            return true;\n        },\n    },\n    {\n        name: 'ee_upgrade_advice',\n        adminOnly: true,\n        title: (\n            <FormattedMarkdownMessage\n                id='system_notice.title'\n                defaultMessage='**Notice**\\nfrom Mattermost'\n            />\n        ),\n        icon: mattermostIcon,\n        body: (\n            <FormattedMarkdownMessage\n                id='system_notice.body.ee_upgrade_advice'\n                defaultMessage='Enterprise Edition is recommended to ensure optimal operation and reliability. [Learn more](!https://mattermost.com/performance).'\n            />\n        ),\n        allowForget: false,\n        show: (serverVersion, config, license, analytics) => {\n            const USERS_THRESHOLD = 10000;\n\n            // If we don't have the analytics yet, don't show\n            if (!analytics.hasOwnProperty('TOTAL_USERS')) {\n                return false;\n            }\n\n            if (analytics.TOTAL_USERS < USERS_THRESHOLD) {\n                return false;\n            }\n\n            if (license.IsLicensed === 'true' && license.Cluster === 'true') {\n                return false;\n            }\n\n            return true;\n        },\n    },\n];\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Preferences} from 'utils/constants.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport MattermostLogo from 'components/svg/mattermost_logo';\n\nexport default class SystemNotice extends React.PureComponent {\n    static propTypes = {\n        currentUserId: PropTypes.string.isRequired,\n        notices: PropTypes.arrayOf(PropTypes.object).isRequired,\n        preferences: PropTypes.object.isRequired,\n        dismissedNotices: PropTypes.object.isRequired,\n        isSystemAdmin: PropTypes.bool,\n        serverVersion: PropTypes.string.isRequired,\n        config: PropTypes.object.isRequired,\n        license: PropTypes.object.isRequired,\n        analytics: PropTypes.object,\n        actions: PropTypes.shape({\n            savePreferences: PropTypes.func.isRequired,\n            dismissNotice: PropTypes.func.isRequired,\n            getStandardAnalytics: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    componentDidMount() {\n        if (this.props.isSystemAdmin) {\n            this.props.actions.getStandardAnalytics();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.isSystemAdmin !== this.props.isSystemAdmin && this.props.isSystemAdmin) {\n            this.props.actions.getStandardAnalytics();\n        }\n    }\n\n    getCurrentNotice = () => {\n        for (const notice of this.props.notices) {\n            // Skip if dismissed previously this session\n            if (this.props.dismissedNotices[notice.name]) {\n                continue;\n            }\n\n            // Skip if dismissed forever\n            if (this.props.preferences[notice.name]) {\n                continue;\n            }\n\n            if (notice.adminOnly && !this.props.isSystemAdmin) {\n                continue;\n            }\n\n            if (!notice.show(this.props.serverVersion, this.props.config, this.props.license, this.props.analytics)) {\n                continue;\n            }\n\n            return notice;\n        }\n        return null;\n    }\n\n    hide = (remind = false) => {\n        const notice = this.getCurrentNotice();\n        if (!notice) {\n            return;\n        }\n\n        if (!remind) {\n            this.props.actions.savePreferences(this.props.currentUserId, [{\n                user_id: this.props.currentUserId,\n                category: Preferences.CATEGORY_SYSTEM_NOTICE,\n                name: notice.name,\n                value: 'dismissed',\n            }]);\n        }\n\n        this.props.actions.dismissNotice(notice.name);\n    }\n\n    hideAndRemind = () => {\n        this.hide(true);\n    }\n\n    hideAndForget = () => {\n        this.hide(false);\n    }\n\n    render() {\n        const notice = this.getCurrentNotice();\n\n        if (notice == null) {\n            return null;\n        }\n\n        let visibleMessage;\n        if (notice.adminOnly) {\n            visibleMessage = (\n                <div className='system-notice__info'>\n                    <i\n                        className='fa fa-eye'\n                        title={localizeMessage('system_notice.adminVisible.icon', 'Only visible to System Admins Icon')}\n                    />\n                    <FormattedMessage\n                        id='system_notice.adminVisible'\n                        defaultMessage='Only visible to System Admins'\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div\n                className='system-notice bg--white shadow--2'\n            >\n                <div className='system-notice__header'>\n                    <div className='system-notice__logo'>\n                        <MattermostLogo/>\n                    </div>\n                    <div className='system-notice__title'>\n                        {notice.title}\n                    </div>\n                </div>\n                <div className='system-notice__body'>\n                    {notice.body}\n                </div>\n                {visibleMessage}\n                <div className='system-notice__footer'>\n                    <button\n                        id='systemnotice_remindme'\n                        className='btn btn-transparent'\n                        onClick={this.hideAndRemind}\n                    >\n                        <FormattedMessage\n                            id='system_notice.remind_me'\n                            defaultMessage='Remind me later'\n                        />\n                    </button>\n                    {notice.allowForget &&\n                        <button\n                            id='systemnotice_dontshow'\n                            className='btn btn-transparent'\n                            onClick={this.hideAndForget}\n                        >\n                            <FormattedMessage\n                                id='system_notice.dont_show'\n                                defaultMessage=\"Don't show again\"\n                            />\n                        </button>}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {createSelector} from 'reselect';\nimport {bindActionCreators} from 'redux';\nimport {makeGetCategory} from 'mattermost-redux/selectors/entities/preferences';\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\nimport {haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {savePreferences} from 'mattermost-redux/actions/preferences';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getStandardAnalytics} from 'mattermost-redux/actions/admin';\n\nimport {dismissNotice} from 'actions/views/notice';\nimport {Preferences} from 'utils/constants.jsx';\n\nimport Notices from './notices.jsx';\nimport SystemNotice from './system_notice.jsx';\n\nfunction makeMapStateToProps() {\n    const getCategory = makeGetCategory();\n\n    const getPreferenceNameMap = createSelector(\n        getCategory,\n        (preferences) => {\n            const nameMap = {};\n            preferences.forEach((p) => {\n                nameMap[p.name] = p;\n            });\n            return nameMap;\n        }\n    );\n\n    return function mapStateToProps(state) {\n        const license = getLicense(state);\n        const config = getConfig(state);\n        const serverVersion = state.entities.general.serverVersion;\n        const analytics = state.entities.admin.analytics;\n\n        return {\n            currentUserId: state.entities.users.currentUserId,\n            preferences: getPreferenceNameMap(state, Preferences.CATEGORY_SYSTEM_NOTICE),\n            dismissedNotices: state.views.notice.hasBeenDismissed,\n            isSystemAdmin: haveISystemPermission(state, {permission: Permissions.MANAGE_SYSTEM}),\n            notices: Notices,\n            config,\n            license,\n            serverVersion,\n            analytics,\n        };\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            savePreferences,\n            dismissNotice,\n            getStandardAnalytics,\n        }, dispatch),\n    };\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(SystemNotice);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {OverlayTrigger, Popover, Tooltip} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport LocalDateTime from 'components/local_date_time';\nimport UserSettingsModal from 'components/user_settings/modal';\nimport {browserHistory} from 'utils/browser_history';\nimport {openDirectChannelToUser} from 'actions/channel_actions.jsx';\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport Constants, {ModalIdentifiers} from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport Pluggable from 'plugins/pluggable';\n\n/**\n * The profile popover, or hovercard, that appears with user information when clicking\n * on the username or profile picture of a user.\n */\nclass ProfilePopover extends React.Component {\n    static getComponentName() {\n        return 'ProfilePopover';\n    }\n\n    static propTypes = {\n\n        /**\n         * Source URL from the image to display in the popover\n         */\n        src: PropTypes.string.isRequired,\n\n        /**\n         * User the popover is being opened for\n         */\n        user: PropTypes.object.isRequired,\n\n        /**\n         * Status for the user, either 'offline', 'away', 'dnd' or 'online'\n         */\n        status: PropTypes.string,\n\n        /**\n         * Function to call to hide the popover\n         */\n        hide: PropTypes.func,\n\n        /**\n         * Set to true if the popover was opened from the right-hand\n         * sidebar (comment thread, search results, etc.)\n         */\n        isRHS: PropTypes.bool,\n\n        /**\n         * @internal\n         */\n        hasMention: PropTypes.bool,\n\n        currentUserId: PropTypes.string.isRequired,\n        teamUrl: PropTypes.string.isRequired,\n\n        ...Popover.propTypes,\n\n        actions: PropTypes.shape({\n            openModal: PropTypes.func.isRequred,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        isRHS: false,\n        hasMention: false,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleShowDirectChannel = this.handleShowDirectChannel.bind(this);\n        this.handleMentionKeyClick = this.handleMentionKeyClick.bind(this);\n        this.handleEditAccountSettings = this.handleEditAccountSettings.bind(this);\n        this.state = {\n            loadingDMChannel: -1,\n        };\n    }\n    shouldComponentUpdate(nextProps) {\n        if (!Utils.areObjectsEqual(nextProps.user, this.props.user)) {\n            return true;\n        }\n\n        if (nextProps.src !== this.props.src) {\n            return true;\n        }\n\n        if (nextProps.status !== this.props.status) {\n            return true;\n        }\n\n        if (nextProps.isBusy !== this.props.isBusy) {\n            return true;\n        }\n\n        // React-Bootstrap Forwarded Props from OverlayTrigger to Popover\n        if (nextProps.arrowOffsetLeft !== this.props.arrowOffsetLeft) {\n            return true;\n        }\n\n        if (nextProps.arrowOffsetTop !== this.props.arrowOffsetTop) {\n            return true;\n        }\n\n        if (nextProps.positionLeft !== this.props.positionLeft) {\n            return true;\n        }\n\n        if (nextProps.positionTop !== this.props.positionTop) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleShowDirectChannel(e) {\n        e.preventDefault();\n\n        if (!this.props.user) {\n            return;\n        }\n\n        const user = this.props.user;\n\n        if (this.state.loadingDMChannel !== -1) {\n            return;\n        }\n\n        this.setState({loadingDMChannel: user.id});\n\n        openDirectChannelToUser(\n            user.id,\n            () => {\n                if (Utils.isMobile()) {\n                    GlobalActions.emitCloseRightHandSide();\n                }\n                this.setState({loadingDMChannel: -1});\n                if (this.props.hide) {\n                    this.props.hide();\n                }\n                browserHistory.push(`${this.props.teamUrl}/messages/@${user.username}`);\n            }\n        );\n    }\n\n    handleMentionKeyClick(e) {\n        e.preventDefault();\n\n        if (!this.props.user) {\n            return;\n        }\n        if (this.props.hide) {\n            this.props.hide();\n        }\n        GlobalActions.emitPopoverMentionKeyClick(this.props.isRHS, this.props.user.username);\n    }\n\n    handleEditAccountSettings(e) {\n        e.preventDefault();\n\n        if (!this.props.user) {\n            return;\n        }\n        if (this.props.hide) {\n            this.props.hide();\n        }\n        this.props.actions.openModal({ModalId: ModalIdentifiers.USER_SETTINGS, dialogType: UserSettingsModal});\n    }\n\n    render() {\n        const popoverProps = Object.assign({}, this.props);\n        delete popoverProps.user;\n        delete popoverProps.src;\n        delete popoverProps.status;\n        delete popoverProps.isBusy;\n        delete popoverProps.hide;\n        delete popoverProps.isRHS;\n        delete popoverProps.hasMention;\n        delete popoverProps.dispatch;\n        delete popoverProps.enableTimezone;\n        delete popoverProps.currentUserId;\n        delete popoverProps.teamUrl;\n        delete popoverProps.actions;\n\n        var dataContent = [];\n        dataContent.push(\n            <img\n                className='user-popover__image'\n                alt={`${this.props.user.username || 'user'} profile image`}\n                src={this.props.src}\n                height='128'\n                width='128'\n                key='user-popover-image'\n            />\n        );\n\n        const fullname = Utils.getFullName(this.props.user);\n        if (fullname) {\n            dataContent.push(\n                <OverlayTrigger\n                    delayShow={Constants.OVERLAY_TIME_DELAY}\n                    placement='top'\n                    overlay={<Tooltip id='fullNameTooltip'>{fullname}</Tooltip>}\n                    key='user-popover-fullname'\n                >\n                    <div\n                        className='overflow--ellipsis text-nowrap padding-top'\n                    >\n                        <strong>{fullname}</strong>\n                    </div>\n                </OverlayTrigger>\n            );\n        }\n\n        if (this.props.user.position) {\n            const position = this.props.user.position.substring(0, Constants.MAX_POSITION_LENGTH);\n            dataContent.push(\n                <OverlayTrigger\n                    delayShow={Constants.OVERLAY_TIME_DELAY}\n                    placement='top'\n                    overlay={<Tooltip id='positionTooltip'>{position}</Tooltip>}\n                    key='user-popover-position'\n                >\n                    <div\n                        className='overflow--ellipsis text-nowrap padding-bottom half'\n                    >\n                        {position}\n                    </div>\n                </OverlayTrigger>\n            );\n        }\n\n        const email = this.props.user.email;\n        if (email) {\n            dataContent.push(\n                <hr\n                    key='user-popover-hr'\n                    className='divider divider--expanded'\n                />\n            );\n\n            dataContent.push(\n                <div\n                    data-toggle='tooltip'\n                    title={email}\n                    key='user-popover-email'\n                >\n                    <a\n                        href={'mailto:' + email}\n                        className='text-nowrap text-lowercase user-popover__email padding-bottom half'\n                    >\n                        {email}\n                    </a>\n                </div>\n            );\n        }\n\n        dataContent.push(\n            <Pluggable\n                key='profilePopoverPluggable2'\n                pluggableName='PopoverUserAttributes'\n                user={this.props.user}\n                status={this.props.status}\n            />\n        );\n\n        if (this.props.enableTimezone && this.props.user.timezone) {\n            dataContent.push(\n                <div\n                    key='user-popover-local-time'\n                    className='padding-bottom half'\n                >\n                    <FormattedMessage\n                        id='user_profile.account.localTime'\n                        defaultMessage='Local Time: '\n                    />\n                    <LocalDateTime userTimezone={this.props.user.timezone}/>\n                </div>\n            );\n        }\n\n        if (this.props.user.id === this.props.currentUserId) {\n            dataContent.push(\n                <div\n                    data-toggle='tooltip'\n                    key='user-popover-settings'\n                    className='popover__row first'\n                >\n                    <a\n                        href='#'\n                        onClick={this.handleEditAccountSettings}\n                    >\n                        <i\n                            className='fa fa-pencil-square-o'\n                            title={Utils.localizeMessage('generic_icons.edit', 'Edit Icon')}\n                        />\n                        <FormattedMessage\n                            id='user_profile.account.editSettings'\n                            defaultMessage='Edit Account Settings'\n                        />\n                    </a>\n                </div>\n            );\n        }\n\n        if (this.props.user.id !== this.props.currentUserId) {\n            dataContent.push(\n                <div\n                    data-toggle='tooltip'\n                    key='user-popover-dm'\n                    className='popover__row first'\n                >\n                    <a\n                        href='#'\n                        className='text-nowrap user-popover__email'\n                        onClick={this.handleShowDirectChannel}\n                    >\n                        <i\n                            className='fa fa-paper-plane'\n                            title={Utils.localizeMessage('user_profile.send.dm.icon', 'Send Message Icon')}\n                        />\n                        <FormattedMessage\n                            id='user_profile.send.dm'\n                            defaultMessage='Send Message'\n                        />\n                    </a>\n                </div>\n            );\n        }\n\n        dataContent.push(\n            <Pluggable\n                key='profilePopoverPluggable3'\n                pluggableName='PopoverUserActions'\n                user={this.props.user}\n                status={this.props.status}\n            />\n        );\n\n        let title = `@${this.props.user.username}`;\n        if (this.props.hasMention) {\n            title = <a onClick={this.handleMentionKeyClick}>{title}</a>;\n        }\n\n        return (\n            <Popover\n                {...popoverProps}\n                title={title}\n                id='user-profile-popover'\n            >\n                {dataContent}\n            </Popover>\n        );\n    }\n}\n\ndelete ProfilePopover.propTypes.id;\n\nexport default ProfilePopover;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {openModal} from 'actions/views/modals';\nimport {areTimezonesEnabledAndSupported} from 'selectors/general';\n\nimport ProfilePopover from './profile_popover.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        enableTimezone: areTimezonesEnabledAndSupported(state),\n        currentUserId: getCurrentUserId(state),\n        teamUrl: '/' + getCurrentTeam(state).name,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            openModal,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePopover);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport MattermostLogo from 'components/svg/mattermost_logo';\n\nexport default class AboutBuildModal extends React.PureComponent {\n    static defaultProps = {\n        show: false,\n    };\n\n    static propTypes = {\n\n        /**\n         * Determines whether modal is shown or not\n         */\n        show: PropTypes.bool.isRequired,\n\n        /**\n         * Function that is called when the modal is dismissed\n         */\n        onModalDismissed: PropTypes.func.isRequired,\n\n        /**\n         * Global config object\n         */\n        config: PropTypes.object.isRequired,\n\n        /**\n         * Global license object\n         */\n        license: PropTypes.object.isRequired,\n\n        /**\n         * Webapp build hash override. By default, webpack sets this (so it must be overridden in tests).\n         */\n        webappBuildHash: PropTypes.string,\n    };\n\n    constructor(props) {\n        super(props);\n        this.doHide = this.doHide.bind(this);\n    }\n\n    doHide() {\n        this.props.onModalDismissed();\n    }\n\n    render() {\n        const config = this.props.config;\n        const license = this.props.license;\n\n        let title = (\n            <FormattedMessage\n                id='about.teamEditiont0'\n                defaultMessage='Team Edition'\n            />\n        );\n\n        let subTitle = (\n            <FormattedMessage\n                id='about.teamEditionSt'\n                defaultMessage='All your team communication in one place, instantly searchable and accessible anywhere.'\n            />\n        );\n\n        let learnMore = (\n            <div>\n                <FormattedMessage\n                    id='about.teamEditionLearn'\n                    defaultMessage='Join the Mattermost community at '\n                />\n                <a\n                    target='_blank'\n                    rel='noopener noreferrer'\n                    href='http://www.mattermost.org/'\n                >\n                    {'mattermost.org'}\n                </a>\n            </div>\n        );\n\n        let licensee;\n        if (config.BuildEnterpriseReady === 'true') {\n            title = (\n                <FormattedMessage\n                    id='about.teamEditiont1'\n                    defaultMessage='Enterprise Edition'\n                />\n            );\n\n            subTitle = (\n                <FormattedMessage\n                    id='about.enterpriseEditionSt'\n                    defaultMessage='Modern communication from behind your firewall.'\n                />\n            );\n\n            learnMore = (\n                <div>\n                    <FormattedMessage\n                        id='about.enterpriseEditionLearn'\n                        defaultMessage='Learn more about Enterprise Edition at '\n                    />\n                    <a\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        href='http://about.mattermost.com/'\n                    >\n                        {'about.mattermost.com'}\n                    </a>\n                </div>\n            );\n\n            if (license.IsLicensed === 'true') {\n                title = (\n                    <FormattedMessage\n                        id='about.enterpriseEditione1'\n                        defaultMessage='Enterprise Edition'\n                    />\n                );\n                licensee = (\n                    <div className='form-group'>\n                        <FormattedMessage\n                            id='about.licensed'\n                            defaultMessage='Licensed to:'\n                        />\n                        &nbsp;{license.Company}\n                    </div>\n                );\n            }\n        }\n\n        // Only show build number if it's a number (so only builds from Jenkins)\n        let buildnumber = (\n            <div>\n                <FormattedMessage\n                    id='about.buildnumber'\n                    defaultMessage='Build Number:'\n                />\n                <span id='buildnumberString'>{'\\u00a0' + config.BuildNumber}</span>\n            </div>\n        );\n        if (isNaN(config.BuildNumber)) {\n            buildnumber = null;\n        }\n\n        let mmversion = config.BuildNumber;\n        if (!isNaN(config.BuildNumber)) {\n            mmversion = 'ci';\n        }\n\n        return (\n            <Modal\n                dialogClassName='about-modal'\n                show={this.props.show}\n                onHide={this.doHide}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title>\n                        <FormattedMessage\n                            id='about.title'\n                            defaultMessage='About Mattermost'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className='about-modal__content'>\n                        <div className='about-modal__logo'>\n                            <MattermostLogo/>\n                        </div>\n                        <div>\n                            <h3 className='about-modal__title'>{'Mattermost'} {title}</h3>\n                            <p className='about-modal__subtitle padding-bottom'>{subTitle}</p>\n                            <div className='form-group less'>\n                                <div>\n                                    <FormattedMessage\n                                        id='about.version'\n                                        defaultMessage='Mattermost Version:'\n                                    />\n                                    <span id='versionString'>{'\\u00a0' + mmversion}</span>\n                                </div>\n                                <div>\n                                    <FormattedMessage\n                                        id='about.dbversion'\n                                        defaultMessage='Database Schema Version:'\n                                    />\n                                    <span id='dbversionString'>{'\\u00a0' + config.Version}</span>\n                                </div>\n                                {buildnumber}\n                                <div>\n                                    <FormattedMessage\n                                        id='about.database'\n                                        defaultMessage='Database:'\n                                    />\n                                    {'\\u00a0' + config.SQLDriverName}\n                                </div>\n                            </div>\n                            {licensee}\n                        </div>\n                    </div>\n                    <div className='about-modal__footer'>\n                        {learnMore}\n                        <div className='form-group about-modal__copyright'>\n                            <FormattedMessage\n                                id='about.copyright'\n                                defaultMessage='Copyright 2015 - {currentYear} Mattermost, Inc. All rights reserved'\n                                values={{\n                                    currentYear: new Date().getFullYear(),\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <div className='about-modal__notice form-group padding-top x2'>\n                        <p>\n                            <FormattedMarkdownMessage\n                                id='about.notice'\n                                defaultMessage='Mattermost is made possible by the open source software used in our [server](!https://about.mattermost.com/platform-notice-txt/), [desktop](!https://about.mattermost.com/desktop-notice-txt/) and [mobile](!https://about.mattermost.com/mobile-notice-txt/) apps.'\n                            />\n                        </p>\n                    </div>\n                    <div className='about-modal__hash'>\n                        <p>\n                            <FormattedMessage\n                                id='about.hash'\n                                defaultMessage='Build Hash:'\n                            />\n                            &nbsp;{config.BuildHash}\n                            <br/>\n                            <FormattedMessage\n                                id='about.hashee'\n                                defaultMessage='EE Build Hash:'\n                            />\n                            &nbsp;{config.BuildHashEnterprise}\n                            <br/>\n                            <FormattedMessage\n                                id='about.hashwebapp'\n                                defaultMessage='Webapp Build Hash:'\n                            />\n                            &nbsp;{/* global COMMIT_HASH */ this.props.webappBuildHash || (typeof COMMIT_HASH === 'undefined' ? '' : COMMIT_HASH)}\n                        </p>\n                        <p>\n                            <FormattedMessage\n                                id='about.date'\n                                defaultMessage='Build Date:'\n                            />\n                            &nbsp;{config.BuildDate}\n                        </p>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport AboutBuildModal from './about_build_modal.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        config: getConfig(state),\n        license: getLicense(state),\n    };\n}\n\nexport default connect(mapStateToProps)(AboutBuildModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {getClientConfig, getLicenseConfig} from 'mattermost-redux/actions/general';\nimport * as UserActions from 'mattermost-redux/actions/users';\nimport {Client4} from 'mattermost-redux/client';\n\nimport {ActionTypes} from 'utils/constants';\n\nexport function loadMeAndConfig() {\n    return (dispatch) => {\n        // if any new promise needs to be added please be mindful of the order as it is used in root.jsx for redirection\n        const promises = [\n            dispatch(getClientConfig()),\n            dispatch(getLicenseConfig()),\n        ];\n\n        if (document.cookie.indexOf('MMUSERID=') > -1) {\n            promises.push(dispatch(UserActions.loadMe()));\n        }\n\n        return Promise.all(promises);\n    };\n}\n\nexport function loadTranslations(locale, url) {\n    return (dispatch) => {\n        Client4.getTranslations(url).then((translations) => {\n            dispatch({\n                type: ActionTypes.RECEIVED_TRANSLATIONS,\n                data: {\n                    locale,\n                    translations,\n                },\n            });\n        }).catch(() => {}); // eslint-disable-line no-empty-function\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport * as Emoji from 'utils/emoji.jsx';\n\n// Wrap the contents of the store so that we don't need to construct an ES6 map where most of the content\n// (the system emojis) will never change. It provides the get/has functions of a map and an iterator so\n// that it can be used in for..of loops\nexport default class EmojiMap {\n    constructor(customEmojis) {\n        this.customEmojis = customEmojis;\n\n        // Store customEmojis to an array so we can iterate it more easily\n        this.customEmojisArray = [...customEmojis];\n    }\n\n    has(name) {\n        return Emoji.EmojiIndicesByAlias.has(name) || this.customEmojis.has(name);\n    }\n\n    hasSystemEmoji(name) {\n        return Emoji.EmojiIndicesByAlias.has(name);\n    }\n\n    hasUnicode(codepoint) {\n        return Emoji.EmojiIndicesByUnicode.has(codepoint);\n    }\n\n    get(name) {\n        if (Emoji.EmojiIndicesByAlias.has(name)) {\n            return Emoji.Emojis[Emoji.EmojiIndicesByAlias.get(name)];\n        }\n\n        return this.customEmojis.get(name);\n    }\n\n    getUnicode(codepoint) {\n        return Emoji.Emojis[Emoji.EmojiIndicesByUnicode.get(codepoint)];\n    }\n\n    [Symbol.iterator]() {\n        const customEmojisArray = this.customEmojisArray;\n\n        return {\n            systemIndex: 0,\n            customIndex: 0,\n            next() {\n                if (this.systemIndex < Emoji.Emojis.length) {\n                    const emoji = Emoji.Emojis[this.systemIndex];\n\n                    this.systemIndex += 1;\n\n                    return {value: [emoji.aliases[0], emoji]};\n                }\n\n                if (this.customIndex < customEmojisArray.length) {\n                    const emoji = customEmojisArray[this.customIndex][1];\n\n                    this.customIndex += 1;\n\n                    return {value: [emoji.name, emoji]};\n                }\n\n                return {done: true};\n            },\n        };\n    }\n}"],"sourceRoot":""}