{"version":3,"sources":["webpack:///./components/mfa/setup/setup.jsx","webpack:///./components/mfa/setup/index.js","webpack:///./components/mfa/confirm.jsx","webpack:///./components/mfa/mfa_controller/mfa_controller.jsx","webpack:///./components/mfa/mfa_controller/index.js","webpack:///./components/common/back_button.jsx","webpack:///./images/logo.png"],"names":["Setup","props","_this","_classCallCheck","this","_defineProperty","_assertThisInitialized","_possibleConstructorReturn","_getPrototypeOf","call","e","preventDefault","code","refs","value","replace","length","setState","error","activateMfa","history","push","err","id","message","Utils","state","secret","qrCode","React","Component","_this2","user","currentUser","mfa_active","generateMfaSecret","data","qr_code","serverError","errorContent","mfaRequired","formClass","react_default","a","createElement","className","enforceMultifactorAuthentication","formatted_markdown_message","defaultMessage","values","siteName","onSubmit","submit","style","src","index_es","ref","placeholder","autoFocus","type","PropTypes","object","string","bool","isRequired","maxHeight","connect","config","getConfig","SiteName","EnforceMultifactorAuthentication","getCurrentUser","KeyCodes","Constants","Confirm","isKeyPressed","ENTER","document","body","addEventListener","onKeyPress","removeEventListener","MFAController","emitUserLoggedOutEvent","classList","add","getElementById","mfa","enableMultifactorAuthentication","remove","backButton","onClick","handleOnClick","title","localizeMessage","back_button","logoImage","Switch","Route","path","concat","match","url","render","setup","Object","assign","updateParent","confirm_Confirm","propTypes","location","children","node","shape","license","getLicense","MFA","EnableMultifactorAuthentication","BackButton","PureComponent","react__WEBPACK_IMPORTED_MODULE_3___default","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","to","react_intl__WEBPACK_IMPORTED_MODULE_4__","func","module","exports","__webpack_require__","p"],"mappings":"goCAYqBA,cAOjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,GAAAK,EAAAC,IACfJ,uEAAAK,CAAAH,KAAAI,EAAAR,GAAAS,KAAAL,KAAMH,MADS,SAmBV,SAACS,GACNA,EAAEC,iBACF,IAAMC,EAAOV,EAAKW,KAAKD,KAAKE,MAAMC,QAAQ,MAAO,IAC5CH,GAAwB,IAAhBA,EAAKI,QAKlBd,EAAKe,UAAUC,MAAO,OAEtBC,YACIP,EACA,WACIV,EAAKD,MAAMmB,QAAQC,KAAK,iBAE5B,SAACC,GACkB,4CAAXA,EAAIC,GAIRrB,EAAKe,UAAUC,MAAOI,EAAIE,UAHtBtB,EAAKe,UAAUC,MAAOO,kBAAsB,oBAAqB,iFAbzEvB,EAAKe,UAAUC,MAAOO,kBAAsB,sBAAuB,wDApBvEvB,EAAKwB,OAASC,OAAQ,GAAIC,OAAQ,IAHnB1B,8OAPY2B,IAAMC,uGAajB,IAAAC,EAAA3B,KACV4B,EAAO5B,KAAKH,MAAMgC,YACnBD,IAAQA,EAAKE,WAKlBC,YACI,SAACC,GAAD,OAAUL,EAAKd,UAAUU,OAAQS,EAAKT,OAAQC,OAAQQ,EAAKC,WAC3D,SAACf,GAAD,OAASS,EAAKd,UAAUqB,YAAahB,EAAIE,YANzCpB,KAAKH,MAAMmB,QAAQC,KAAK,sCAoC5B,IACIkB,EAMAC,EAPAC,EAAY,aAsBhB,OApBIrC,KAAKsB,MAAMR,QACXqB,EAAeG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAAuBH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iBAAiBzC,KAAKsB,MAAMR,QAClGuB,GAAa,cAIbrC,KAAKH,MAAM6C,mCACXN,EACIE,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACG,EAAA,GACGxB,GAAG,qBACHyB,eAAe,6DACfC,QACIC,SAAU9C,KAAKH,MAAMiD,cAQrCR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QACIO,SAAU/C,KAAKgD,OACfP,UAAWJ,GAEVD,EACDE,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACG,EAAA,GACGxB,GAAG,kBACHyB,eAAe,mQAGvBN,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACG,EAAA,GACGxB,GAAG,kBACHyB,eAAe,mGAGvBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OACIS,MAAOA,EAAMzB,OACb0B,IAAK,yBAA2BlD,KAAKsB,MAAME,WAIvDc,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aACTH,EAAAC,EAAAC,cAACW,EAAA,GACGhC,GAAG,mBACHyB,eAAe,mBACfC,QACItB,OAAQvB,KAAKsB,MAAMC,YAKnCe,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACG,EAAA,GACGxB,GAAG,kBACHyB,eAAe,kEAGvBN,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,SACIY,IAAI,OACJX,UAAU,eACVY,YAAahC,kBAAsB,iBAAkB,YACrDiC,WAAW,KAGlBnB,EACDG,EAAAC,EAAAC,cAAA,UACIe,KAAK,SACLd,UAAU,mBAEVH,EAAAC,EAAAC,cAACW,EAAA,GACGhC,GAAG,iBACHyB,eAAe,uBAtItBhD,eAEbiC,YAAa2B,IAAUC,OACvBX,SAAUU,IAAUE,OACpBhB,iCAAkCc,IAAUG,KAAKC,aA2IzD,IAAMX,GACFzB,QAASqC,UAAW,MCtITC,wBAbf,SAAyBxC,GACrB,IAAMyC,EAASC,oBAAU1C,GAEnBwB,EAAWiB,EAAOE,SAClBvB,EAA+E,SAA5CqB,EAAOG,iCAEhD,OACIrC,YAAasC,yBAAe7C,GAC5BwB,WACAJ,qCAIOoB,CAAyBlE,81BCXxC,IAAMwE,OAAWC,EAAUD,SAENE,+VASR,SAAChE,GACNA,EAAEC,iBAEFT,EAAKD,MAAMmB,QAAQC,KAAK,8BAGf,SAACX,GACNiE,uBAAajE,EAAG8D,EAASI,QACzB1E,EAAKkD,OAAO1C,mPAjBamB,IAAMC,uGAEnC+C,SAASC,KAAKC,iBAAiB,UAAW3E,KAAK4E,2DAI/CH,SAASC,KAAKG,oBAAoB,UAAW7E,KAAK4E,6CAgBlD,OACItC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QACIO,SAAU/C,KAAKgD,OACf4B,WAAY5E,KAAK4E,WACjBnC,UAAU,cAEVH,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACG,EAAA,GACGxB,GAAG,uBACHyB,eAAe,0BAGvBN,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACW,EAAA,GACGhC,GAAG,qBACHyB,eAAe,2IAGvBN,EAAAC,EAAAC,cAAA,UACIe,KAAK,SACLd,UAAU,mBAEVH,EAAAC,EAAAC,cAACW,EAAA,GACGhC,GAAG,mBACHyB,eAAe,4vBC5CtBkC,kdAeD,SAACxE,GACbA,EAAEC,iBACFwE,YAAuB,0PAjBYtD,IAAMC,uGAEzC+C,SAASC,KAAKM,UAAUC,IAAI,UAC5BR,SAASS,eAAe,QAAQF,UAAUC,IAAI,mBAEzCjF,KAAKH,MAAMsF,KAAQnF,KAAKH,MAAMuF,iCAC/BpF,KAAKH,MAAMmB,QAAQC,KAAK,oDAK5BwD,SAASC,KAAKM,UAAUK,OAAO,UAC/BZ,SAASS,eAAe,QAAQF,UAAUK,OAAO,oDAQ5C,IACDC,EADC3D,EAAA3B,KAwBL,OArBIsF,EADAtF,KAAKH,MAAM6C,iCAEPJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,0BACV8C,QAASvF,KAAKwF,eAEdlD,EAAAC,EAAAC,cAAA,QACIC,UAAU,qBACVgD,MAAOC,0BAAgB,uBAAwB,iBAEnDpD,EAAAC,EAAAC,cAACW,EAAA,GACGhC,GAAG,oBACHyB,eAAe,aAMjBN,EAAAC,EAAAC,cAACmD,EAAA,EAAD,MAIdrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,WACK8C,EACDhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACW,EAAA,GACGhC,GAAG,iBACHyB,eAAe,uCAGvBN,EAAAC,EAAAC,cAAA,OACIC,UAAU,mBACVS,IAAK0C,MAETtD,EAAAC,EAAAC,cAAA,OAAKrB,GAAG,OACJmB,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACIvD,EAAAC,EAAAC,cAACsD,EAAA,GACGC,KAAI,GAAAC,OAAKhG,KAAKH,MAAMoG,MAAMC,IAAtB,UACJC,OAAQ,SAACtG,GAAD,OACJyC,EAAAC,EAAAC,cAAC4D,EAADC,OAAAC,QACIhF,MAAOK,EAAKL,MACZiF,aAAc5E,EAAK4E,cACf1G,OAIhByC,EAAAC,EAAAC,cAACsD,EAAA,GACGC,KAAI,GAAAC,OAAKhG,KAAKH,MAAMoG,MAAMC,IAAtB,YACJC,OAAQ,SAACtG,GAAD,OACJyC,EAAAC,EAAAC,cAACgE,EAADH,OAAAC,QACIhF,MAAOK,EAAKL,MACZiF,aAAc5E,EAAK4E,cACf1G,uBAexDiF,EAAc2B,WACVC,SAAUlD,IAAUC,OAAOG,WAC3B+C,SAAUnD,IAAUoD,KACpBzB,IAAK3B,IAAUG,KAAKC,WACpBwB,gCAAiC5B,IAAUG,KAAKC,WAChDlB,iCAAkCc,IAAUG,KAAKC,WAKjDqC,MAAOzC,IAAUqD,OACbX,IAAK1C,IAAUE,OAAOE,aACvBA,YCnGQE,4BAff,SAAyBxC,GACrB,IAAMwF,EAAUC,qBAAWzF,GACrByC,EAASC,oBAAU1C,GAMzB,OACI6D,IALwB,SAAhB2B,EAAQE,IAMhB5B,gCAL+E,SAA3CrB,EAAOkD,gCAM3CvE,iCALiF,SAA5CqB,EAAOG,mCASrCJ,CAAyBgB,qjCCbnBoC,sZAAmBzF,IAAM0F,gGAmBtC,OACIC,EAAA7E,EAAAC,cAAA,OAAKC,UAAU,iBACX2E,EAAA7E,EAAAC,cAAC6E,EAAA,GACG9B,QAASvF,KAAKH,MAAM0F,QACpB+B,GAAItH,KAAKH,MAAMqG,KAEfkB,EAAA7E,EAAAC,cAAA,QACIC,UAAU,qBACVgD,MAAOC,0BAAgB,qBAAsB,eAEjD0B,EAAA7E,EAAAC,cAAC+E,EAAA,GACGpG,GAAG,kBACHyB,eAAe,sBA/BlBsE,eAMbhB,IAAK1C,IAAUE,OAKf6B,QAAS/B,IAAUgE,SAXNN,kBAebhB,IAAK,2BCzBbuB,EAAAC,QAAiBC,EAAAC,EAAuB","file":"28.626f1b8b8d906e691009.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport {activateMfa, generateMfaSecret} from 'actions/user_actions.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nexport default class Setup extends React.Component {\n    static propTypes = {\n        currentUser: PropTypes.object,\n        siteName: PropTypes.string,\n        enforceMultifactorAuthentication: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {secret: '', qrCode: ''};\n    }\n\n    componentDidMount() {\n        const user = this.props.currentUser;\n        if (!user || user.mfa_active) {\n            this.props.history.push('/');\n            return;\n        }\n\n        generateMfaSecret(\n            (data) => this.setState({secret: data.secret, qrCode: data.qr_code}),\n            (err) => this.setState({serverError: err.message})\n        );\n    }\n\n    submit = (e) => {\n        e.preventDefault();\n        const code = this.refs.code.value.replace(/\\s/g, '');\n        if (!code || code.length === 0) {\n            this.setState({error: Utils.localizeMessage('mfa.setup.codeError', 'Please enter the code from Google Authenticator.')});\n            return;\n        }\n\n        this.setState({error: null});\n\n        activateMfa(\n            code,\n            () => {\n                this.props.history.push('/mfa/confirm');\n            },\n            (err) => {\n                if (err.id === 'ent.mfa.activate.authenticate.app_error') {\n                    this.setState({error: Utils.localizeMessage('mfa.setup.badCode', 'Invalid code. If this issue persists, contact your System Administrator.')});\n                    return;\n                }\n                this.setState({error: err.message});\n            }\n        );\n    }\n\n    render() {\n        let formClass = 'form-group';\n        let errorContent;\n        if (this.state.error) {\n            errorContent = <div className='form-group has-error'><label className='control-label'>{this.state.error}</label></div>;\n            formClass += ' has-error';\n        }\n\n        let mfaRequired;\n        if (this.props.enforceMultifactorAuthentication) {\n            mfaRequired = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='mfa.setup.required'\n                        defaultMessage='**Multi-factor authentication is required on {siteName}.**'\n                        values={{\n                            siteName: this.props.siteName,\n                        }}\n                    />\n                </p>\n            );\n        }\n\n        return (\n            <div>\n                <form\n                    onSubmit={this.submit}\n                    className={formClass}\n                >\n                    {mfaRequired}\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='mfa.setup.step1'\n                            defaultMessage=\"**Step 1: **On your phone, download Google Authenticator from [iTunes](!https://itunes.apple.com/us/app/google-authenticator/id388497605?mt=8') or [Google Play](!https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&hl=en)\"\n                        />\n                    </p>\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='mfa.setup.step2'\n                            defaultMessage='**Step 2: **Use Google Authenticator to scan this QR code, or manually type in the secret key'\n                        />\n                    </p>\n                    <div className='form-group'>\n                        <div className='col-sm-12'>\n                            <img\n                                style={style.qrCode}\n                                src={'data:image/png;base64,' + this.state.qrCode}\n                            />\n                        </div>\n                    </div>\n                    <br/>\n                    <div className='form-group'>\n                        <p className='col-sm-12'>\n                            <FormattedMessage\n                                id='mfa.setup.secret'\n                                defaultMessage='Secret: {secret}'\n                                values={{\n                                    secret: this.state.secret,\n                                }}\n                            />\n                        </p>\n                    </div>\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='mfa.setup.step3'\n                            defaultMessage='**Step 3: **Enter the code generated by Google Authenticator'\n                        />\n                    </p>\n                    <p>\n                        <input\n                            ref='code'\n                            className='form-control'\n                            placeholder={Utils.localizeMessage('mfa.setup.code', 'MFA Code')}\n                            autoFocus={true}\n                        />\n                    </p>\n                    {errorContent}\n                    <button\n                        type='submit'\n                        className='btn btn-primary'\n                    >\n                        <FormattedMessage\n                            id='mfa.setup.save'\n                            defaultMessage='Save'\n                        />\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    qrCode: {maxHeight: 170},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\n\nimport Setup from './setup.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    const siteName = config.SiteName;\n    const enforceMultifactorAuthentication = config.EnforceMultifactorAuthentication === 'true';\n\n    return {\n        currentUser: getCurrentUser(state),\n        siteName,\n        enforceMultifactorAuthentication,\n    };\n}\n\nexport default connect(mapStateToProps)(Setup);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants.jsx';\nimport {isKeyPressed} from 'utils/utils.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nconst KeyCodes = Constants.KeyCodes;\n\nexport default class Confirm extends React.Component {\n    componentDidMount() {\n        document.body.addEventListener('keydown', this.onKeyPress);\n    }\n\n    componentWillUnmount() {\n        document.body.removeEventListener('keydown', this.onKeyPress);\n    }\n\n    submit = (e) => {\n        e.preventDefault();\n\n        this.props.history.push('/');\n    }\n\n    onKeyPress = (e) => {\n        if (isKeyPressed(e, KeyCodes.ENTER)) {\n            this.submit(e);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <form\n                    onSubmit={this.submit}\n                    onKeyPress={this.onKeyPress}\n                    className='form-group'\n                >\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='mfa.confirm.complete'\n                            defaultMessage='**Set up complete!**'\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='mfa.confirm.secure'\n                            defaultMessage='Your account is now secure. Next time you sign in, you will be asked to enter a code from the Google Authenticator app on your phone.'\n                        />\n                    </p>\n                    <button\n                        type='submit'\n                        className='btn btn-primary'\n                    >\n                        <FormattedMessage\n                            id='mfa.confirm.okay'\n                            defaultMessage='Okay'\n                        />\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Route, Switch} from 'react-router-dom';\n\nimport {emitUserLoggedOutEvent} from 'actions/global_actions.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport logoImage from 'images/logo.png';\nimport BackButton from 'components/common/back_button.jsx';\n\nimport Setup from '../setup';\nimport Confirm from '../confirm';\n\nexport default class MFAController extends React.Component {\n    componentDidMount() {\n        document.body.classList.add('sticky');\n        document.getElementById('root').classList.add('container-fluid');\n\n        if (!this.props.mfa || !this.props.enableMultifactorAuthentication) {\n            this.props.history.push('/');\n        }\n    }\n\n    componentWillUnmount() {\n        document.body.classList.remove('sticky');\n        document.getElementById('root').classList.remove('container-fluid');\n    }\n\n    handleOnClick = (e) => {\n        e.preventDefault();\n        emitUserLoggedOutEvent('/login');\n    }\n\n    render() {\n        let backButton;\n        if (this.props.enforceMultifactorAuthentication) {\n            backButton = (\n                <div className='signup-header'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.handleOnClick}\n                    >\n                        <span\n                            className='fa fa-chevron-left'\n                            title={localizeMessage('generic_icons.logout', 'Logout Icon')}\n                        />\n                        <FormattedMessage\n                            id='web.header.logout'\n                            defaultMessage='Logout'\n                        />\n                    </button>\n                </div>\n            );\n        } else {\n            backButton = (<BackButton/>);\n        }\n\n        return (\n            <div className='inner-wrap'>\n                <div className='row content'>\n                    <div>\n                        {backButton}\n                        <div className='col-sm-12'>\n                            <div className='signup-team__container'>\n                                <h3>\n                                    <FormattedMessage\n                                        id='mfa.setupTitle'\n                                        defaultMessage='Multi-factor Authentication Setup'\n                                    />\n                                </h3>\n                                <img\n                                    className='signup-team-logo'\n                                    src={logoImage}\n                                />\n                                <div id='mfa'>\n                                    <Switch>\n                                        <Route\n                                            path={`${this.props.match.url}/setup`}\n                                            render={(props) => (\n                                                <Setup\n                                                    state={this.state}\n                                                    updateParent={this.updateParent}\n                                                    {...props}\n                                                />\n                                            )}\n                                        />\n                                        <Route\n                                            path={`${this.props.match.url}/confirm`}\n                                            render={(props) => (\n                                                <Confirm\n                                                    state={this.state}\n                                                    updateParent={this.updateParent}\n                                                    {...props}\n                                                />\n                                            )}\n                                        />\n                                    </Switch>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMFAController.propTypes = {\n    location: PropTypes.object.isRequired,\n    children: PropTypes.node,\n    mfa: PropTypes.bool.isRequired,\n    enableMultifactorAuthentication: PropTypes.bool.isRequired,\n    enforceMultifactorAuthentication: PropTypes.bool.isRequired,\n\n    /*\n     * Object from react-router\n     */\n    match: PropTypes.shape({\n        url: PropTypes.string.isRequired,\n    }).isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport MFAController from './mfa_controller.jsx';\n\nfunction mapStateToProps(state) {\n    const license = getLicense(state);\n    const config = getConfig(state);\n\n    const mfa = license.MFA === 'true';\n    const enableMultifactorAuthentication = config.EnableMultifactorAuthentication === 'true';\n    const enforceMultifactorAuthentication = config.EnforceMultifactorAuthentication === 'true';\n\n    return {\n        mfa,\n        enableMultifactorAuthentication,\n        enforceMultifactorAuthentication,\n    };\n}\n\nexport default connect(mapStateToProps)(MFAController);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class BackButton extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * URL to return to\n         */\n        url: PropTypes.string,\n\n        /**\n         * An optional click handler that will trigger when the user clicks on the back button\n         */\n        onClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        url: '/',\n    };\n\n    render() {\n        return (\n            <div className='signup-header'>\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <span\n                        className='fa fa-chevron-left'\n                        title={localizeMessage('generic_icons.back', 'Back Icon')}\n                    />\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/dab14c86297d09799009bbaba4112d0e.png\";"],"sourceRoot":""}