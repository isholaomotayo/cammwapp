{"version":3,"sources":["webpack:///./components/create_team/components/display_name.jsx","webpack:///./components/create_team/components/team_url/team_url.jsx","webpack:///./components/create_team/components/team_url/index.js","webpack:///./components/create_team/create_team.jsx","webpack:///./components/create_team/index.js","webpack:///./components/common/back_button.jsx","webpack:///./images/logo.png","webpack:///./components/common/site_name_and_description.jsx"],"names":["TeamSignupDisplayNamePage","props","_this","_classCallCheck","this","_defineProperty","_assertThisInitialized","_possibleConstructorReturn","_getPrototypeOf","call","e","preventDefault","displayName","ReactDOM","findDOMNode","refs","name","value","trim","length","Constants","MIN_TEAMNAME_LENGTH","MAX_TEAMNAME_LENGTH","setState","nameError","react_default","a","createElement","index_es","id","defaultMessage","values","min","max","newState","state","wizard","team","display_name","cleanUpUrlable","updateParent","currentTarget","select","React","PureComponent","trackEvent","nameDivClass","className","src","logoImage","type","ref","placeholder","maxLength","defaultValue","autoFocus","onFocus","handleFocus","spellCheck","onClick","submitNext","title","localizeMessage","PropTypes","object","func","TeamUrl","team_url_classCallCheck","team_url_defineProperty","team_url_assertThisInitialized","team_url_possibleConstructorReturn","team_url_getPrototypeOf","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","cleanedName","urlRegex","_this$props$actions","checkIfTeamExists","createTeam","index","teamSignup","_ref2","_ref3","data","error","wrap","_context","prev","next","URL","actions","abrupt","test","RESERVED_TEAM_NAMES","indexOf","formatted_markdown_message","isLoading","JSON","parse","stringify","sent","exists","history","push","message","stop","_x","apply","arguments","concat","urlTooltip","Tooltip","finishMessage","OverlayTrigger","trigger","delayShow","OVERLAY_TIME_DELAY","placement","overlay","Button","bsStyle","disabled","href","submitBack","shape","isRequired","connect","dispatch","bindActionCreators","CreateTeam","create_team_classCallCheck","create_team_defineProperty","create_team_assertThisInitialized","create_team_possibleConstructorReturn","create_team_getPrototypeOf","_this2","_this$props","currentChannel","currentTeam","customDescriptionText","match","siteName","url","announcement_bar","back_button","site_name_and_description","Switch","Route","path","render","display_name_TeamSignupDisplayNamePage","Object","assign","team_url","Redirect","to","string","config","getConfig","getCurrentChannel","getCurrentTeam","CustomDescriptionText","SiteName","BackButton","react__WEBPACK_IMPORTED_MODULE_3___default","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","react_intl__WEBPACK_IMPORTED_MODULE_4__","module","exports","__webpack_require__","p","SiteNameAndDescription","description","Fragment"],"mappings":"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","file":"27.e5ff838a377bf6a2cad7.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport {cleanUpUrlable} from 'utils/url.jsx';\nimport logoImage from 'images/logo.png';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class TeamSignupDisplayNamePage extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Object containing team's display_name and name\n         */\n        state: PropTypes.object,\n\n        /*\n         * Function that updates parent component with state props\n         */\n        updateParent: PropTypes.func,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n        trackEvent('signup', 'signup_team_01_name');\n    }\n\n    submitNext = (e) => {\n        e.preventDefault();\n\n        var displayName = ReactDOM.findDOMNode(this.refs.name).value.trim();\n        if (!displayName) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.display_name.required'\n                    defaultMessage='This field is required'\n                />),\n            });\n            return;\n        } else if (displayName.length < Constants.MIN_TEAMNAME_LENGTH || displayName.length > Constants.MAX_TEAMNAME_LENGTH) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.display_name.charLength'\n                    defaultMessage='Name must be {min} or more characters up to a maximum of {max}. You can add a longer team description later.'\n                    values={{\n                        min: Constants.MIN_TEAMNAME_LENGTH,\n                        max: Constants.MAX_TEAMNAME_LENGTH,\n                    }}\n                />),\n            });\n            return;\n        }\n\n        const newState = this.props.state;\n        newState.wizard = 'team_url';\n        newState.team.display_name = displayName;\n        newState.team.name = cleanUpUrlable(displayName);\n        this.props.updateParent(newState);\n    }\n\n    handleFocus = (e) => {\n        e.preventDefault();\n        e.currentTarget.select();\n    }\n\n    render() {\n        var nameError = null;\n        var nameDivClass = 'form-group';\n        if (this.state.nameError) {\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\n            nameDivClass += ' has-error';\n        }\n\n        return (\n            <div>\n                <form>\n                    <img\n                        className='signup-team-logo'\n                        src={logoImage}\n                    />\n                    <h2>\n                        <FormattedMessage\n                            id='create_team.display_name.teamName'\n                            defaultMessage='Team Name'\n                        />\n                    </h2>\n                    <div className={nameDivClass}>\n                        <div className='row'>\n                            <div className='col-sm-9'>\n                                <input\n                                    type='text'\n                                    ref='name'\n                                    className='form-control'\n                                    placeholder=''\n                                    maxLength='128'\n                                    defaultValue={this.props.state.team.display_name}\n                                    autoFocus={true}\n                                    onFocus={this.handleFocus}\n                                    spellCheck='false'\n                                />\n                            </div>\n                        </div>\n                        {nameError}\n                    </div>\n                    <div>\n                        <FormattedMessage\n                            id='create_team.display_name.nameHelp'\n                            defaultMessage='Name your team in any language. Your team name shows in menus and headings.'\n                        />\n                    </div>\n                    <button\n                        type='submit'\n                        className='btn btn-primary margin--extra'\n                        onClick={this.submitNext}\n                    >\n                        <FormattedMessage\n                            id='create_team.display_name.next'\n                            defaultMessage='Next'\n                        />\n                        <i\n                            className='fa fa-chevron-right'\n                            title={localizeMessage('generic_icons.next', 'Next Icon')}\n                        />\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Button, OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as URL from 'utils/url.jsx';\nimport logoImage from 'images/logo.png';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nexport default class TeamUrl extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Object containing team's display_name and name\n         */\n        state: PropTypes.object,\n\n        /*\n         * Function that updates parent component with state props\n         */\n        updateParent: PropTypes.func,\n\n        /*\n         * Object with redux action creators\n         */\n        actions: PropTypes.shape({\n\n            /*\n             * Action creator to check if a team already exists\n             */\n            checkIfTeamExists: PropTypes.func.isRequired,\n\n            /*\n             * Action creator to create a new team\n             */\n            createTeam: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nameError: '',\n            isLoading: false,\n        };\n    }\n\n    componentDidMount() {\n        trackEvent('signup', 'signup_team_02_url');\n    }\n\n    submitBack = (e) => {\n        e.preventDefault();\n        const newState = this.props.state;\n        newState.wizard = 'display_name';\n        this.props.updateParent(newState);\n    }\n\n    submitNext = async (e) => {\n        e.preventDefault();\n\n        const name = ReactDOM.findDOMNode(this.refs.name).value.trim();\n        const cleanedName = URL.cleanUpUrlable(name);\n        const urlRegex = /^[a-z]+([a-z\\-0-9]+|(__)?)[a-z0-9]+$/g;\n        const {actions: {checkIfTeamExists, createTeam}} = this.props;\n\n        if (!name) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.required'\n                    defaultMessage='This field is required'\n                />),\n            });\n            return;\n        }\n\n        if (cleanedName.length < Constants.MIN_TEAMNAME_LENGTH || cleanedName.length > Constants.MAX_TEAMNAME_LENGTH) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.charLength'\n                    defaultMessage='Name must be {min} or more characters up to a maximum of {max}'\n                    values={{\n                        min: Constants.MIN_TEAMNAME_LENGTH,\n                        max: Constants.MAX_TEAMNAME_LENGTH,\n                    }}\n                />),\n            });\n            return;\n        }\n\n        if (cleanedName !== name || !urlRegex.test(name)) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.regex'\n                    defaultMessage=\"Use only lower case letters, numbers and dashes. Must start with a letter and can't end in a dash.\"\n                />),\n            });\n            return;\n        }\n\n        for (let index = 0; index < Constants.RESERVED_TEAM_NAMES.length; index++) {\n            if (cleanedName.indexOf(Constants.RESERVED_TEAM_NAMES[index]) === 0) {\n                this.setState({nameError: (\n                    <FormattedMarkdownMessage\n                        id='create_team.team_url.taken'\n                        defaultMessage='This URL [starts with a reserved word](!https://docs.mattermost.com/help/getting-started/creating-teams.html#team-url) or is unavailable. Please try another.'\n                    />),\n                });\n                return;\n            }\n        }\n\n        this.setState({isLoading: true});\n        var teamSignup = JSON.parse(JSON.stringify(this.props.state));\n        teamSignup.team.type = 'O';\n        teamSignup.team.name = name;\n\n        const {exists} = await checkIfTeamExists(name);\n\n        if (exists) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.unavailable'\n                    defaultMessage='This URL is taken or unavailable. Please try another.'\n                />),\n            });\n            this.setState({isLoading: false});\n            return;\n        }\n\n        const {data, error} = await createTeam(teamSignup.team);\n\n        if (data) {\n            this.props.history.push('/' + data.name + '/channels/town-square');\n            trackEvent('signup', 'signup_team_03_complete');\n        } else if (error) {\n            this.setState({nameError: error.message});\n            this.setState({isLoading: false});\n        }\n    }\n\n    handleFocus = (e) => {\n        e.preventDefault();\n        e.currentTarget.select();\n    }\n\n    render() {\n        let nameError = null;\n        let nameDivClass = 'form-group';\n        if (this.state.nameError) {\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\n            nameDivClass += ' has-error';\n        }\n\n        const title = `${URL.getSiteURL()}/`;\n        const urlTooltip = (\n            <Tooltip id='urlTooltip'>{title}</Tooltip>\n        );\n\n        let finishMessage = (\n            <FormattedMessage\n                id='create_team.team_url.finish'\n                defaultMessage='Finish'\n            />\n        );\n\n        if (this.state.isLoading) {\n            finishMessage = (\n                <FormattedMessage\n                    id='create_team.team_url.creatingTeam'\n                    defaultMessage='Creating team...'\n                />\n            );\n        }\n\n        return (\n            <div>\n                <form>\n                    <img\n                        className='signup-team-logo'\n                        src={logoImage}\n                    />\n                    <h2>\n                        <FormattedMessage\n                            id='create_team.team_url.teamUrl'\n                            defaultMessage='Team URL'\n                        />\n                    </h2>\n                    <div className={nameDivClass}>\n                        <div className='row'>\n                            <div className='col-sm-11'>\n                                <div className='input-group input-group--limit'>\n                                    <OverlayTrigger\n                                        trigger={['hover', 'focus']}\n                                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                                        placement='top'\n                                        overlay={urlTooltip}\n                                    >\n                                        <span className='input-group-addon'>\n                                            {title}\n                                        </span>\n                                    </OverlayTrigger>\n                                    <input\n                                        type='text'\n                                        ref='name'\n                                        className='form-control'\n                                        placeholder=''\n                                        maxLength='128'\n                                        defaultValue={this.props.state.team.name}\n                                        autoFocus={true}\n                                        onFocus={this.handleFocus}\n                                        spellCheck='false'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {nameError}\n                    </div>\n                    <p>\n                        <FormattedMessage\n                            id='create_team.team_url.webAddress'\n                            defaultMessage='Choose the web address of your new team:'\n                        />\n                    </p>\n                    <ul className='color--light'>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint1'\n                                defaultMessage='Short and memorable is best'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint2'\n                                defaultMessage='Use lowercase letters, numbers and dashes'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint3'\n                                defaultMessage=\"Must start with a letter and can't end in a dash\"\n                            />\n                        </li>\n                    </ul>\n                    <div className='margin--extra'>\n                        <Button\n                            type='submit'\n                            bsStyle='primary'\n                            disabled={this.state.isLoading}\n                            onClick={this.submitNext}\n                        >\n                            {finishMessage}\n                        </Button>\n                    </div>\n                    <div className='margin--extra'>\n                        <a\n                            href='#'\n                            onClick={this.submitBack}\n                        >\n                            <FormattedMessage\n                                id='create_team.team_url.back'\n                                defaultMessage='Back to previous step'\n                            />\n                        </a>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {checkIfTeamExists, createTeam} from 'mattermost-redux/actions/teams';\n\nimport TeamUrl from './team_url';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            checkIfTeamExists,\n            createTeam,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(TeamUrl);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport AnnouncementBar from 'components/announcement_bar';\nimport BackButton from 'components/common/back_button.jsx';\nimport DisplayName from 'components/create_team/components/display_name';\nimport SiteNameAndDescription from 'components/common/site_name_and_description';\nimport TeamUrl from 'components/create_team/components/team_url';\n\nexport default class CreateTeam extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Object containing information on the current team, used to define BackButton's url\n         */\n        currentTeam: PropTypes.object,\n\n        /*\n         * Object containing information on the current selected channel, used to define BackButton's url\n         */\n        currentChannel: PropTypes.object,\n\n        /*\n         * String containing the custom branding's text\n         */\n        customDescriptionText: PropTypes.string,\n\n        /*\n         * String containing the custom branding's Site Name\n         */\n        siteName: PropTypes.string,\n\n        /*\n         * Object from react-router\n         */\n        match: PropTypes.shape({\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        const state = {};\n        state.team = {};\n        state.wizard = 'display_name';\n        this.state = state;\n    }\n\n    updateParent = (state) => {\n        this.setState(state);\n        this.props.history.push('/create_team/' + state.wizard);\n    }\n\n    render() {\n        const {\n            currentChannel,\n            currentTeam,\n            customDescriptionText,\n            match,\n            siteName,\n        } = this.props;\n\n        let url = '/select_team';\n        if (currentTeam) {\n            url = `/${currentTeam.name}`;\n            if (currentChannel) {\n                url += `/channels/${currentChannel.name}`;\n            }\n        }\n\n        return (\n            <div>\n                <AnnouncementBar/>\n                <BackButton url={url}/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <SiteNameAndDescription\n                            customDescriptionText={customDescriptionText}\n                            siteName={siteName}\n                        />\n                        <div className='signup__content'>\n                            <Switch>\n                                <Route\n                                    path={`${this.props.match.url}/display_name`}\n                                    render={(props) => (\n                                        <DisplayName\n                                            state={this.state}\n                                            updateParent={this.updateParent}\n                                            {...props}\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path={`${this.props.match.url}/team_url`}\n                                    render={(props) => (\n                                        <TeamUrl\n                                            state={this.state}\n                                            updateParent={this.updateParent}\n                                            {...props}\n                                        />\n                                    )}\n                                />\n                                <Redirect to={`${match.url}/display_name`}/>\n                            </Switch>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport CreateTeam from './create_team';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const currentChannel = getCurrentChannel(state);\n    const currentTeam = getCurrentTeam(state);\n\n    const customDescriptionText = config.CustomDescriptionText;\n    const siteName = config.SiteName;\n\n    return {\n        currentChannel,\n        currentTeam,\n        customDescriptionText,\n        siteName,\n    };\n}\n\nexport default connect(mapStateToProps)(CreateTeam);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class BackButton extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * URL to return to\n         */\n        url: PropTypes.string,\n\n        /**\n         * An optional click handler that will trigger when the user clicks on the back button\n         */\n        onClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        url: '/',\n    };\n\n    render() {\n        return (\n            <div className='signup-header'>\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <span\n                        className='fa fa-chevron-left'\n                        title={localizeMessage('generic_icons.back', 'Back Icon')}\n                    />\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/b4b638e8c6672039f00a5f07cfed24d4.png\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class SiteNameAndDescription extends React.PureComponent {\n    static propTypes = {\n        customDescriptionText: PropTypes.string,\n        siteName: PropTypes.string,\n    };\n\n    static defaultProps = {\n        siteName: 'Mattermost',\n    };\n\n    render() {\n        const {\n            customDescriptionText,\n            siteName,\n        } = this.props;\n        let description = null;\n        if (customDescriptionText) {\n            description = customDescriptionText;\n        } else {\n            description = (\n                <FormattedMessage\n                    id='web.root.signup_info'\n                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\n                />\n            );\n        }\n\n        return (\n            <React.Fragment>\n                <h1>{siteName}</h1>\n                <h4 className='color--light'>\n                    {description}\n                </h4>\n            </React.Fragment>\n        );\n    }\n}\n"],"sourceRoot":""}